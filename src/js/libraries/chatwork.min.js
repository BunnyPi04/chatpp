/**
 * Modules in this bundle
 * @license
 *
 * array-includes:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband <ljharb@gmail.com>
 *   maintainers: ljharb <ljharb@gmail.com>
 *   contributors: Jordan Harband <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/array-includes#readme
 *   version: 3.0.2
 *
 * array.from:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Mathias Bynens
 *   maintainers: ljharb <ljharb@gmail.com>, mathias <mathias@qiwi.be>
 *   contributors: Mathias Bynens, Jordan Harband <ljharb@gmail.com>
 *   homepage: https://mths.be/array-from
 *   version: 1.0.3
 *
 * array.prototype.find:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Paul Miller <http://paulmillr.com>
 *   maintainers: ljharb <ljharb@gmail.com>, paulmillr <paul@paulmillr.com>
 *   contributors: Duncan Hall <himself@duncanhall.net>
 *   homepage: https://github.com/paulmillr/Array.prototype.find#readme
 *   version: 2.0.4
 *
 * classnames:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jed Watson
 *   maintainers: jedwatson <jed.watson@me.com>
 *   homepage: https://github.com/JedWatson/classnames#readme
 *   version: 2.2.5
 *
 * clipboard:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   maintainers: zenorocha <zno.rocha@gmail.com>
 *   homepage: https://github.com/zenorocha/clipboard.js#readme
 *   version: 1.6.1
 *
 * cookies-js:
 *   license: Public Domain
 *   author: Scott Hamper
 *   maintainers: scotthamper <Scott.Hamper@gmail.com>
 *   homepage: http://github.com/ScottHamper/Cookies
 *   version: 1.2.3
 *
 * debug:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: TJ Holowaychuk <tj@vision-media.ca>
 *   maintainers: tjholowaychuk <tj@vision-media.ca>, tootallnate <nathan@tootallnate.net>
 *   contributors: Nathan Rajlich <nathan@tootallnate.net>
 *   homepage: https://github.com/visionmedia/debug
 *   version: 2.1.3
 *
 * define-properties:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband
 *   maintainers: ljharb <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/define-properties#readme
 *   version: 1.1.2
 *
 * delegate:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   maintainers: zenorocha <zno.rocha@gmail.com>
 *   homepage: https://github.com/zenorocha/delegate#readme
 *   version: 3.1.2
 *
 * domready:
 *   author: Dustin Diaz <dustin@dustindiaz.com>
 *   maintainers: ded <polvero@gmail.com>, fat <jacobthornton@gmail.com>
 *   homepage: https://github.com/ded/domready
 *   version: 0.3.0
 *
 * element-closest:
 *   license: CC0-1.0 (http://creativecommons.org/publicdomain/zero/1.0/)
 *   author: Jonathan Neal <jonathantneal@hotmail.com>
 *   maintainers: jonathantneal <jonathantneal@hotmail.com>, trysound <trysound@yandex.ru>
 *   homepage: https://github.com/jonathantneal/closest#readme
 *   version: 2.0.2
 *
 * es-abstract:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband <ljharb@gmail.com>
 *   maintainers: ljharb <ljharb@gmail.com>
 *   contributors: Jordan Harband <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/es-abstract#readme
 *   version: 1.7.0
 *
 * es-to-primitive:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband
 *   maintainers: ljharb <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/es-to-primitive#readme
 *   version: 1.1.1
 *
 * es6-promise:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Yehuda Katz, Tom Dale, Stefan Penner and contributors
 *   maintainers: jaffathecake <jaffathecake@gmail.com>, stefanpenner <stefan.penner@gmail.com>
 *   homepage: https://github.com/stefanpenner/es6-promise#readme
 *   version: 4.1.0
 *
 * eventemitter2:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: hij1nx <paolo@async.ly>
 *   maintainers: hij1nx <paolo@async.ly>, rangermauve <rangermauve@hotmail.com>
 *   contributors: Eric Elliott, Charlie Robbins <charlie@nodejitsu.com>, Jameson Lee <jameson@nodejitsu.com>, Jeroen van Duffelen <jvduf@nodejitsu.com>, Fedor Indutny <fedor.indutny@gmail.com>
 *   homepage: https://github.com/hij1nx/EventEmitter2#readme
 *   version: 4.1.0
 *
 * events:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Irakli Gozalishvili <rfobic@gmail.com>
 *   maintainers: gozala <rfobic@gmail.com>, defunctzombie <shtylman@gmail.com>
 *   homepage: https://github.com/Gozala/events#readme
 *   version: 1.1.1
 *
 * fbjs:
 *   license: BSD-3-Clause (http://opensource.org/licenses/BSD-3-Clause)
 *   maintainers: fb <opensource+npm@fb.com>, josephsavona <joesavona@fb.com>, spicyj <ben@benalpert.com>, steveluscher <steveluscher@fb.com>, wincent <greg@hurrell.net>, yungsters <yungsters@gmail.com>, yuzhi <yuzhi.z@gmail.com>, zpao <paul@oshannessy.com>
 *   homepage: https://github.com/facebook/fbjs#readme
 *   version: 0.8.12
 *
 * foreach:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Manuel Stofer <manuel@takimata.ch>
 *   maintainers: manuelstofer <manuel@takimata.ch>
 *   contributors: Manuel Stofer, Jordan Harband
 *   homepage: https://github.com/manuelstofer/foreach
 *   version: 2.0.5
 *
 * function-bind:
 *   licenses: MIT (http://opensource.org/licenses/MIT)
 *   author: Raynos <raynos2@gmail.com>
 *   maintainers: raynos <raynos2@gmail.com>, ljharb <ljharb@gmail.com>
 *   contributors: Raynos, Jordan Harband
 *   homepage: https://github.com/Raynos/function-bind
 *   version: 1.1.0
 *
 * global:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Raynos <raynos2@gmail.com>
 *   maintainers: raynos <raynos2@gmail.com>, mattesch <matt@mattesch.info>, jerrysievert <code@legitimatesounding.com>
 *   contributors: Raynos
 *   homepage: https://github.com/Raynos/global
 *   version: 4.3.1
 *
 * good-listener:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   maintainers: zenorocha <zno.rocha@gmail.com>
 *   homepage: https://github.com/zenorocha/good-listener#readme
 *   version: 1.2.2
 *
 * has:
 *   licenses: MIT (http://opensource.org/licenses/MIT)
 *   author: Thiago de Arruda <tpadilha84@gmail.com>
 *   maintainers: tarruda <tpadilha84@gmail.com>
 *   homepage: https://github.com/tarruda/has
 *   version: 1.0.1
 *
 * is-callable:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband <ljharb@gmail.com>
 *   maintainers: ljharb <ljharb@gmail.com>
 *   contributors: Jordan Harband <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/is-callable#readme
 *   version: 1.1.3
 *
 * is-date-object:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband
 *   maintainers: ljharb <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/is-date-object#readme
 *   version: 1.0.1
 *
 * is-regex:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband
 *   maintainers: ljharb <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/is-regex
 *   version: 1.0.4
 *
 * is-symbol:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband
 *   maintainers: ljharb <ljharb@gmail.com>
 *   homepage: https://github.com/ljharb/is-symbol
 *   version: 1.0.1
 *
 * js-cookie:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Klaus Hartl
 *   maintainers: fagner <gravatar@fagnermartins.com>, carhartl <klaus.hartl@gmail.com>
 *   homepage: https://github.com/js-cookie/js-cookie#readme
 *   version: 2.1.4
 *
 * json3:
 *   licenses: MIT (http://opensource.org/licenses/MIT)
 *   author: Kit Cambridge <github@kitcambridge.be>
 *   maintainers: kitcambridge <kitcambridge@me.com>, d10 <demoneaux@gmail.com>
 *   contributors: Mangled Deutz <olivier@webitup.fr>, Øyvind Sean Kinsey <oyvind@kinsey.no>, Oskar Schöldström <public@oxy.fi>, Kiryl Yermakou <rma4ok@gmail.com>
 *   homepage: http://bestiejs.github.io/json3
 *   version: 3.3.2
 *
 * jsonp:
 *   maintainers: rauchg <rauchg@gmail.com>, feross <feross@feross.org>
 *   homepage: https://github.com/LearnBoost/jsonp
 *   version: 0.2.0
 *
 * locale-compare-polyfill:
 *   license: BSD-2-Clause (http://opensource.org/licenses/BSD-2-Clause)
 *   author: Jeppe Burchardt
 *   maintainers: kosmobot <jeppe@burchardt.com>
 *   homepage: https://github.com/kosmobot/locale-compare-polyfill#readme
 *   version: 0.0.2
 *
 * lodash-compat:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: John-David Dalton <john.david.dalton@gmail.com>
 *   maintainers: jdalton <john.david.dalton@gmail.com>, mathias <mathias@qiwi.be>, phated <blaine@iceddev.com>
 *   contributors: John-David Dalton <john.david.dalton@gmail.com>, Benjamin Tan <demoneaux@gmail.com>, Blaine Bublitz <blaine@iceddev.com>, Kit Cambridge <github@kitcambridge.be>, Mathias Bynens <mathias@qiwi.be>
 *   homepage: https://lodash.com/
 *   version: 3.10.2
 *
 * lodash.escape:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: John-David Dalton <john.david.dalton@gmail.com>
 *   maintainers: jdalton <john.david.dalton@gmail.com>, mathias <mathias@qiwi.be>, phated <blaine@iceddev.com>
 *   contributors: John-David Dalton <john.david.dalton@gmail.com>, Blaine Bublitz <blaine.bublitz@gmail.com>, Mathias Bynens <mathias@qiwi.be>
 *   homepage: https://lodash.com/
 *   version: 4.0.1
 *
 * lodash.range:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: John-David Dalton <john.david.dalton@gmail.com>
 *   maintainers: jdalton <john.david.dalton@gmail.com>, mathias <mathias@qiwi.be>, phated <blaine@iceddev.com>
 *   contributors: John-David Dalton <john.david.dalton@gmail.com>, Blaine Bublitz <blaine.bublitz@gmail.com>, Mathias Bynens <mathias@qiwi.be>
 *   homepage: https://lodash.com/
 *   version: 3.2.0
 *
 * monapt:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jiawei Li
 *   maintainers: jiaweihli <jiawei.h.li@gmail.com>
 *   homepage: https://github.com/jiaweihli/monapt
 *   version: 0.7.1
 *
 * ms:
 *   maintainers: rauchg <rauchg@gmail.com>
 *   homepage: https://github.com/guille/ms.js
 *   version: 0.7.0
 *
 * number-to-locale-string:
 *   license: Public Domain
 *   author: Phillip Wills <phil@phillipwills.com>
 *   maintainers: willsp <phil@phillipwills.com>
 *   homepage: https://github.com/willsp/polyfill-Number.toLocaleString-with-Locales
 *   version: 1.0.1
 *
 * object-assign:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Sindre Sorhus <sindresorhus@gmail.com>
 *   maintainers: gaearon <dan.abramov@gmail.com>, sindresorhus <sindresorhus@gmail.com>, spicyj <ben@benalpert.com>
 *   homepage: https://github.com/sindresorhus/object-assign#readme
 *   version: 4.1.1
 *
 * object-keys:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Jordan Harband <ljharb@gmail.com>
 *   maintainers: ljharb <ljharb@gmail.com>
 *   contributors: Jordan Harband <ljharb@gmail.com>, Raynos <raynos2@gmail.com>, Nathan Rajlich <nathan@tootallnate.net>, Ivan Starkov <istarkov@gmail.com>, Gary Katsevman <git@gkatsev.com>
 *   homepage: https://github.com/ljharb/object-keys#readme
 *   version: 1.0.11
 *
 * process:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Roman Shtylman <shtylman@gmail.com>
 *   maintainers: coolaj86 <coolaj86@gmail.com>, cwmma <calvin.metcalf@gmail.com>, defunctzombie <shtylman@gmail.com>
 *   homepage: https://github.com/shtylman/node-process#readme
 *   version: 0.11.9
 *
 * prop-types:
 *   license: BSD-3-Clause (http://opensource.org/licenses/BSD-3-Clause)
 *   maintainers: acdlite <acdlite@me.com>, brianvaughn <briandavidvaughn@gmail.com>, flarnie <flarnie.npm@gmail.com>, gaearon <dan.abramov@gmail.com>, sebmarkbage <sebastian@calyptus.eu>, spicyj <ben@benalpert.com>, theron <theron17@gmail.com>, tomocchino <tomocchino@gmail.com>, trueadm <dg@domgan.com>
 *   homepage: https://facebook.github.io/react/
 *   version: 15.5.6
 *
 * react:
 *   license: BSD-3-Clause (http://opensource.org/licenses/BSD-3-Clause)
 *   maintainers: acdlite <acdlite@me.com>, brianvaughn <briandavidvaughn@gmail.com>, fb <opensource+npm@fb.com>, gaearon <dan.abramov@gmail.com>, jeffmo <lbljeffmo@gmail.com>, sebmarkbage <sebastian@calyptus.eu>, spicyj <ben@benalpert.com>, tomocchino <tomocchino@gmail.com>, trueadm <dg@domgan.com>, zpao <paul@oshannessy.com>
 *   homepage: https://facebook.github.io/react/
 *   version: 15.5.3
 *
 * react-dom:
 *   license: BSD-3-Clause (http://opensource.org/licenses/BSD-3-Clause)
 *   maintainers: acdlite <acdlite@me.com>, brianvaughn <briandavidvaughn@gmail.com>, fb <opensource+npm@fb.com>, gaearon <dan.abramov@gmail.com>, sebmarkbage <sebastian@calyptus.eu>, spicyj <ben@benalpert.com>, tomocchino <tomocchino@gmail.com>, trueadm <dg@domgan.com>, zpao <paul@oshannessy.com>
 *   homepage: https://facebook.github.io/react/
 *   version: 15.5.3
 *
 * select:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   maintainers: zenorocha <zno.rocha@gmail.com>
 *   homepage: https://github.com/zenorocha/select#readme
 *   version: 1.1.2
 *
 * string:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: JP Richardson <jprichardson@gmail.com>
 *   maintainers: jprichardson <jprichardson@gmail.com>, az7arul <az7arul@gmail.com>
 *   homepage: http://stringjs.com
 *   version: 3.3.3
 *
 * string.prototype.includes:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Mathias Bynens
 *   maintainers: mathias <mathias@qiwi.be>
 *   homepage: https://mths.be/includes
 *   version: 1.0.0
 *
 * td-js-sdk:
 *   license: Apache-2.0 (http://opensource.org/licenses/Apache-2.0)
 *   author: Cesar Andreu <cesar@treasure-data.com>
 *   maintainers: cesarandreu <cesarandreu@gmail.com>, dzannotti <d.zannotti@me.com>, mcaramello <michele.caramello@gmail.com>
 *   homepage: https://github.com/treasure-data/td-js-sdk#readme
 *   version: 1.7.2
 *
 * tiny-emitter:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Scott Corgan
 *   maintainers: scottcorgan <scottcorgan@gmail.com>
 *   homepage: https://github.com/scottcorgan/tiny-emitter#readme
 *   version: 1.1.0
 *
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
! function e(t, n, r) {
    function s(o, u) {
        if (!n[o]) {
            if (!t[o]) {
                var a = "function" == typeof require && require;
                if (!u && a) return a(o, !0);
                if (i) return i(o, !0);
                var f = new Error("Cannot find module '" + o + "'");
                throw f.code = "MODULE_NOT_FOUND", f
            }
            var l = n[o] = {
                exports: {}
            };
            t[o][0].call(l.exports, function(e) {
                var n = t[o][1][e];
                return s(n || e)
            }, l, l.exports, e, t, n, r)
        }
        return n[o].exports
    }
    for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) s(r[o]);
    return s
}({
    1: [function(require, module, exports) {
        (function(global) {
            "use strict";
            var ES = require("es-abstract/es6"),
                $isNaN = Number.isNaN || function(a) {
                        return a !== a
                    },
                $isFinite = Number.isFinite || function(n) {
                        return "number" == typeof n && global.isFinite(n)
                    },
                indexOf = Array.prototype.indexOf;
            module.exports = function(searchElement) {
                var fromIndex = arguments.length > 1 ? ES.ToInteger(arguments[1]) : 0;
                if (indexOf && !$isNaN(searchElement) && $isFinite(fromIndex) && void 0 !== searchElement) return indexOf.apply(this, arguments) > -1;
                var O = ES.ToObject(this),
                    length = ES.ToLength(O.length);
                if (0 === length) return !1;
                for (var k = fromIndex >= 0 ? fromIndex : Math.max(0, length + fromIndex); k < length;) {
                    if (ES.SameValueZero(searchElement, O[k])) return !0;
                    k += 1
                }
                return !1
            }
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {
        "es-abstract/es6": 31
    }],
    2: [function(require, module, exports) {
        "use strict";
        var define = require("define-properties"),
            ES = require("es-abstract/es6"),
            implementation = require("./implementation"),
            getPolyfill = require("./polyfill"),
            polyfill = getPolyfill(),
            shim = require("./shim"),
            slice = Array.prototype.slice,
            boundIncludesShim = function(array, searchElement) {
                return ES.RequireObjectCoercible(array), polyfill.apply(array, slice.call(arguments, 1))
            };
        define(boundIncludesShim, {
            implementation: implementation,
            getPolyfill: getPolyfill,
            shim: shim
        }), module.exports = boundIncludesShim
    }, {
        "./implementation": 1,
        "./polyfill": 3,
        "./shim": 4,
        "define-properties": 25,
        "es-abstract/es6": 31
    }],
    3: [function(require, module, exports) {
        "use strict";
        var implementation = require("./implementation");
        module.exports = function() {
            return Array.prototype.includes || implementation
        }
    }, {
        "./implementation": 1
    }],
    4: [function(require, module, exports) {
        "use strict";
        var define = require("define-properties"),
            getPolyfill = require("./polyfill");
        module.exports = function() {
            var polyfill = getPolyfill();
            return Array.prototype.includes !== polyfill && define(Array.prototype, {
                includes: polyfill
            }), polyfill
        }
    }, {
        "./polyfill": 3,
        "define-properties": 25
    }],
    5: [function(require, module, exports) {
        "use strict";
        var ES = require("es-abstract/es6"),
            supportsDescriptors = require("define-properties").supportsDescriptors; /*! https://mths.be/array-from v0.2.0 by @mathias */
        module.exports = function(arrayLike) {
            var defineProperty = supportsDescriptors ? Object.defineProperty : function(object, key, descriptor) {
                    object[key] = descriptor.value
                },
                C = this;
            if (null === arrayLike || void 0 === arrayLike) throw new TypeError("`Array.from` requires an array-like object, not `null` or `undefined`");
            var mapFn, T, items = ES.ToObject(arrayLike);
            if (void 0 !== arguments[1]) {
                if (mapFn = arguments[1], !ES.IsCallable(mapFn)) throw new TypeError("When provided, the second argument to `Array.from` must be a function");
                arguments.length > 2 && (T = arguments[2])
            }
            for (var kValue, mappedValue, len = ES.ToLength(items.length), A = ES.IsCallable(C) ? ES.ToObject(new C(len)) : new Array(len), k = 0; k < len;) kValue = items[k], mappedValue = mapFn ? void 0 === T ? mapFn(kValue, k) : ES.Call(mapFn, T, [kValue, k]) : kValue, defineProperty(A, k, {
                configurable: !0,
                enumerable: !0,
                value: mappedValue,
                writable: !0
            }), k += 1;
            return A.length = len, A
        }
    }, {
        "define-properties": 25,
        "es-abstract/es6": 31
    }],
    6: [function(require, module, exports) {
        "use strict";
        var define = require("define-properties"),
            implementation = require("./implementation"),
            getPolyfill = require("./polyfill"),
            shim = require("./shim"),
            boundFromShim = function(array) {
                return implementation.apply(this || Array, arguments)
            };
        define(boundFromShim, {
            getPolyfill: getPolyfill,
            implementation: implementation,
            shim: shim
        }), module.exports = boundFromShim
    }, {
        "./implementation": 5,
        "./polyfill": 7,
        "./shim": 8,
        "define-properties": 25
    }],
    7: [function(require, module, exports) {
        "use strict";
        var ES = require("es-abstract/es6"),
            implementation = require("./implementation"),
            tryCall = function(fn) {
                try {
                    return fn(), !0
                } catch (e) {
                    return !1
                }
            };
        module.exports = function() {
            return ES.IsCallable(Array.from) && tryCall(function() {
                Array.from({
                    length: -1 / 0
                })
            }) && !tryCall(function() {
                Array.from([], void 0)
            }) ? Array.from : implementation
        }
    }, {
        "./implementation": 5,
        "es-abstract/es6": 31
    }],
    8: [function(require, module, exports) {
        "use strict";
        var define = require("define-properties"),
            getPolyfill = require("./polyfill");
        module.exports = function() {
            var polyfill = getPolyfill();
            return define(Array, {
                from: polyfill
            }, {
                from: function() {
                    return Array.from !== polyfill
                }
            }), polyfill
        }
    }, {
        "./polyfill": 7,
        "define-properties": 25
    }],
    9: [function(require, module, exports) {
        "use strict";
        var ES = require("es-abstract/es6");
        module.exports = function(predicate) {
            var list = ES.ToObject(this),
                length = ES.ToInteger(ES.ToLength(list.length));
            if (!ES.IsCallable(predicate)) throw new TypeError("Array#find: predicate must be a function");
            if (0 !== length)
                for (var value, thisArg = arguments[1], i = 0; i < length; i++)
                    if (value = list[i], ES.Call(predicate, thisArg, [value, i, list])) return value
        }
    }, {
        "es-abstract/es6": 31
    }],
    10: [function(require, module, exports) {
        "use strict";
        var define = require("define-properties"),
            ES = require("es-abstract/es6"),
            implementation = require("./implementation"),
            getPolyfill = require("./polyfill"),
            shim = require("./shim"),
            slice = Array.prototype.slice,
            polyfill = getPolyfill(),
            boundFindShim = function(array, predicate) {
                ES.RequireObjectCoercible(array);
                var args = slice.call(arguments, 1);
                return polyfill.apply(array, args)
            };
        define(boundFindShim, {
            getPolyfill: getPolyfill,
            implementation: implementation,
            shim: shim
        }), module.exports = boundFindShim
    }, {
        "./implementation": 9,
        "./polyfill": 11,
        "./shim": 12,
        "define-properties": 25,
        "es-abstract/es6": 31
    }],
    11: [function(require, module, exports) {
        "use strict";
        module.exports = function() {
            return Array.prototype.find && 1 !== [, 1].find(function() {
                return !0
            }) ? Array.prototype.find : require("./implementation")
        }
    }, {
        "./implementation": 9
    }],
    12: [function(require, module, exports) {
        "use strict";
        var define = require("define-properties"),
            getPolyfill = require("./polyfill");
        module.exports = function() {
            var polyfill = getPolyfill();
            return define(Array.prototype, {
                find: polyfill
            }, {
                find: function() {
                    return Array.prototype.find !== polyfill
                }
            }), polyfill
        }
    }, {
        "./polyfill": 11,
        "define-properties": 25
    }],
    13: [function(require, module, exports) {
        function defaultSetTimout() {
            throw new Error("setTimeout has not been defined")
        }

        function defaultClearTimeout() {
            throw new Error("clearTimeout has not been defined")
        }

        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) return setTimeout(fun, 0);
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) return cachedSetTimeout = setTimeout, setTimeout(fun, 0);
            try {
                return cachedSetTimeout(fun, 0)
            } catch (e) {
                try {
                    return cachedSetTimeout.call(null, fun, 0)
                } catch (e) {
                    return cachedSetTimeout.call(this, fun, 0)
                }
            }
        }

        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) return clearTimeout(marker);
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) return cachedClearTimeout = clearTimeout, clearTimeout(marker);
            try {
                return cachedClearTimeout(marker)
            } catch (e) {
                try {
                    return cachedClearTimeout.call(null, marker)
                } catch (e) {
                    return cachedClearTimeout.call(this, marker)
                }
            }
        }

        function cleanUpNextTick() {
            draining && currentQueue && (draining = !1, currentQueue.length ? queue = currentQueue.concat(queue) : queueIndex = -1, queue.length && drainQueue())
        }

        function drainQueue() {
            if (!draining) {
                var timeout = runTimeout(cleanUpNextTick);
                draining = !0;
                for (var len = queue.length; len;) {
                    for (currentQueue = queue, queue = []; ++queueIndex < len;) currentQueue && currentQueue[queueIndex].run();
                    queueIndex = -1, len = queue.length
                }
                currentQueue = null, draining = !1, runClearTimeout(timeout)
            }
        }

        function Item(fun, array) {
            this.fun = fun, this.array = array
        }

        function noop() {}
        var cachedSetTimeout, cachedClearTimeout, process = module.exports = {};
        ! function() {
            try {
                cachedSetTimeout = "function" == typeof setTimeout ? setTimeout : defaultSetTimout
            } catch (e) {
                cachedSetTimeout = defaultSetTimout
            }
            try {
                cachedClearTimeout = "function" == typeof clearTimeout ? clearTimeout : defaultClearTimeout
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout
            }
        }();
        var currentQueue, queue = [],
            draining = !1,
            queueIndex = -1;
        process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var i = 1; i < arguments.length; i++) args[i - 1] = arguments[i];
            queue.push(new Item(fun, args)), 1 !== queue.length || draining || runTimeout(drainQueue)
        }, Item.prototype.run = function() {
            this.fun.apply(null, this.array)
        }, process.title = "browser", process.browser = !0, process.env = {}, process.argv = [], process.version = "", process.versions = {}, process.on = noop, process.addListener = noop, process.once = noop, process.off = noop, process.removeListener = noop, process.removeAllListeners = noop, process.emit = noop, process.binding = function(name) {
            throw new Error("process.binding is not supported")
        }, process.cwd = function() {
            return "/"
        }, process.chdir = function(dir) {
            throw new Error("process.chdir is not supported")
        }, process.umask = function() {
            return 0
        }
    }, {}],
    14: [function(require, module, exports) {
        "use strict";

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }

        function _toArray(arr) {
            return Array.isArray(arr) ? arr : Array.from(arr)
        }

        function chopParser(text, content, regexp) {
            return [text.replace(regexp, function(all) {
                return content.push({
                    type: "message",
                    value: all
                }), ""
            }), content]
        }

        function blockParser(text, content, type) {
            var match = text.match(/^\[(\w+%\d+%)/);
            if (!match) return chopParser(text, content, /^\[\w+/);
            var tag = match.pop();
            if (-1 === text.indexOf("[/" + tag + "]")) return ["", content.concat(illigalBlockContent(tag, text))];
            var replacedText = text.replace(/^\[(\w+%\d+%):(\w+)\]/, "[$1 id=$2]");
            if (!replacedText.match(/^\[(\w+%\d+%)(\s+\w+=["']?\S+["']?)*?\]/)) return ["", content.concat(illigalBlockContent(tag, text))];
            if ("code" === type) {
                return [replacedText.replace(/^\[(code%\d+%)([\s\S]*?)\]([\s\S]*?)\[\/\1\]\n?/, function(all, type_, attrs, innerText) {
                    return content.push({
                        type: "code",
                        attributes: _Utils2.default.parseAttribute(attrs),
                        content: innerText ? [{
                            type: "message",
                            value: innerText
                        }] : []
                    }), ""
                }), content]
            }
            var replaceFunction = function(all, type_, attrs, innerText) {
                return content.push({
                    type: type,
                    attributes: _Utils2.default.parseAttribute(attrs),
                    content: (0, _index.parse_)(innerText)
                }), ""
            };
            if ("qt" === type) {
                return [replacedText.replace(/^\[(qt%\d+%)([\s\S]*?)\]([\s\S]*?)\[\/\1\]\n?/, replaceFunction), content]
            }
            var next = replacedText.replace(/^\[(\w+%\d+%)([\s\S]*?)\]([\s\S]*?)\[\/\1\]/, replaceFunction);
            return next === replacedText ? ["", content.concat((0, _MessageTokenizer2.default)(text))] : [next, content]
        }

        function illigalBlockContent(tag, text) {
            var tagToken = {
                    type: "message",
                    value: "[" + tag
                },
                tokens = (0, _index.parse_)(text.replace(/^\[(\w+%\d+%)/, ""));
            return tokens.length ? "message" !== tokens[0].type ? [tagToken].concat(tokens) : (tokens[0].value = "" + tagToken.value + tokens[0].value, tokens) : [tagToken]
        }

        function inlineParser(text, content, type) {
            var _text$split = text.split(/]/),
                _text$split2 = _toArray(_text$split),
                before = _text$split2[0],
                afters = _text$split2.slice(1);
            if (!afters.length) return ["", content.concat((0, _MessageTokenizer2.default)(before))];
            var after = afters.join("]");
            if (before += "]", before.match(/.\[/)) {
                var _match = before.match(/^(\[.+?)(\[.*)/);
                return [_match[2] + after, content.concat((0, _MessageTokenizer2.default)(_match[1]))]
            }
            var match = before.match(/\[\w+([\s\S]*?)\]/);
            if (!match) return ["", content.concat((0, _MessageTokenizer2.default)(before))];
            var attr = match.pop(),
                id = attr.match(/^:(\w+)/);
            if (id) return [after, content.concat({
                type: type,
                attributes: {
                    id: id.pop()
                }
            })];
            if (attr && !attr.match(/\s[\s\S]*?=/)) return [after, content.concat((0, _MessageTokenizer2.default)(before))];
            var attributes = _Utils2.default.parseAttribute(attr);
            return [after, content.concat({
                type: type,
                attributes: attributes
            })]
        }

        function parse(text) {
            var content = [],
                match = text.match(/^\[(\w+)/);
            if (!match) {
                var _chopParser = chopParser(text, content, /\[/),
                    _chopParser2 = _slicedToArray(_chopParser, 2);
                return text = _chopParser2[0], content = _chopParser2[1], content.concat((0, _index.parseToken)(text))
            }
            var type = match.pop().toLowerCase();
            if (_BlockTypes2.default.isBlock(type)) {
                var _blockParser = blockParser(text, content, type),
                    _blockParser2 = _slicedToArray(_blockParser, 2);
                text = _blockParser2[0], content = _blockParser2[1]
            } else if (_BlockTypes2.default.isInline(type)) {
                var _inlineParser = inlineParser(text, content, type),
                    _inlineParser2 = _slicedToArray(_inlineParser, 2);
                text = _inlineParser2[0], content = _inlineParser2[1]
            } else {
                var _chopParser3 = chopParser(text, content, /\[\w+/),
                    _chopParser4 = _slicedToArray(_chopParser3, 2);
                text = _chopParser4[0], content = _chopParser4[1]
            }
            return text ? content.concat((0, _index.parse_)(text)) : content
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _slicedToArray = function() {
            function sliceIterator(arr, i) {
                var _arr = [],
                    _n = !0,
                    _d = !1,
                    _e = void 0;
                try {
                    for (var _s, _i = arr[Symbol.iterator](); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !i || _arr.length !== i); _n = !0);
                } catch (err) {
                    _d = !0, _e = err
                } finally {
                    try {
                        !_n && _i.return && _i.return()
                    } finally {
                        if (_d) throw _e
                    }
                }
                return _arr
            }
            return function(arr, i) {
                if (Array.isArray(arr)) return arr;
                if (Symbol.iterator in Object(arr)) return sliceIterator(arr, i);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }();
        exports.chopParser = chopParser, exports.blockParser = blockParser, exports.inlineParser = inlineParser, exports.default = parse;
        var _BlockTypes = require("../Types/BlockTypes"),
            _BlockTypes2 = _interopRequireDefault(_BlockTypes),
            _index = require("../index"),
            _MessageTokenizer = require("./MessageTokenizer"),
            _MessageTokenizer2 = _interopRequireDefault(_MessageTokenizer),
            _Utils = require("./Utils"),
            _Utils2 = _interopRequireDefault(_Utils)
    }, {
        "../Types/BlockTypes": 17,
        "../index": 18,
        "./MessageTokenizer": 15,
        "./Utils": 16
    }],
    15: [function(require, module, exports) {
        "use strict";

        function setEmoticonRegexp(regexp) {
            emoticonRegexp = regexp
        }

        function emoticonParser(text) {
            var content = [];
            return _Utils2.default.tictac(text.split(emoticonRegexp), function(target) {
                target && content.push({
                    type: "message",
                    value: target
                })
            }, function(target) {
                content.push({
                    type: "emoticon",
                    value: target
                })
            }), content
        }

        function urlParser(text) {
            var urls = text.split(/(https?:\/\/[-.!~*';?:@&=+$,%#{}()\w]+[-.!~*';?:@&=+$,%#{}()\w\/]+)/i);
            return parseUrls(urls)
        }

        function parse(text) {
            return urlParser(text)
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.setEmoticonRegexp = setEmoticonRegexp, exports.emoticonParser = emoticonParser, exports.urlParser = urlParser, exports.default = parse;
        var _Utils = require("./Utils"),
            _Utils2 = function(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                }
            }(_Utils),
            emoticonRegexp = void 0,
            parseUrls = function parseUrls(urls) {
                if (1 === urls.length) return emoticonParser(urls.join(""));
                var content = emoticonParser(urls.shift()),
                    url = urls.shift(),
                    count = (url.match(/\(/g) || []).length,
                    url_parts = url.split(/\)/),
                    main_url = url_parts.splice(0, count + 1).join(")");
                return url_parts.length && (urls[0] = "" + [""].concat(url_parts).join(")") + urls[0]), content.push({
                    type: "url",
                    value: main_url
                }), content.concat(parseUrls(urls))
            }
    }, {
        "./Utils": 16
    }],
    16: [function(require, module, exports) {
        "use strict";

        function _toArray(arr) {
            return Array.isArray(arr) ? arr : Array.from(arr)
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.default = {
            parseAttribute: function(text) {
                return text.split(/\s+/).filter(function(_) {
                    return !!_
                }).reduce(function(base, attr) {
                    var _attr$split = attr.split("="),
                        _attr$split2 = _toArray(_attr$split),
                        key = _attr$split2[0],
                        val = _attr$split2.slice(1);
                    return base[key] = val.join("="), base
                }, {})
            },
            tictac: function(array, tic, tac) {
                array.forEach(function(cur, index) {
                    index % 2 ? tac(cur, index) : tic(cur, index)
                })
            }
        }
    }, {}],
    17: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var types = {
                hr: "inline",
                code: "block",
                pname: "inline",
                picon: "inline",
                piconname: "inline",
                info: "block",
                title: "block",
                to: "inline",
                rp: "inline",
                qtmeta: "inline",
                qt: "block",
                live: "inline",
                task: "block",
                dtext: "inline",
                date: "inline",
                download: "block",
                preview: "inline"
            },
            names = Object.keys(types).filter(function(key) {
                return "block" === types[key]
            }).reduce(function(base, key) {
                return base.push(key), base
            }, []);
        exports.default = {
            preNameRegExp: new RegExp("\\[/?(" + names.join("|") + ")(\\W)", "gi"),
            postNameRegExp: new RegExp("(\\[/?" + names.join("|") + ")%\\d+%", "gi"),
            isBlock: function(type) {
                return "block" === types[type]
            },
            isInline: function(type) {
                return "inline" === types[type]
            }
        }
    }, {}],
    18: [function(require, module, exports) {
        "use strict";

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }

        function setEmoticons(emoticons) {
            (0, _MessageTokenizer.setEmoticonRegexp)(new RegExp("(" + emoticons.map(function(_) {
                    return _.replace(/\W/g, "\\$&")
                }).join("|") + ")"))
        }

        function parseToken(text) {
            var resultContent = [],
                texts = text.split(/\[/),
                before = texts.shift();
            return before && (resultContent = resultContent.concat((0, _MessageTokenizer2.default)(before))), texts.length ? resultContent.concat((0, _BlockTokenizer2.default)("[" + texts.join("["))) : resultContent
        }

        function preProc(text) {
            text = text.replace(/%/g, "%_%").replace(/(\[code[\s\S]*?\])([\s\S]*?)(\[\/code\])/gi, function(all, open, code, close) {
                return open + code.replace(/\W/g, function(_) {
                        return "%" + _.charCodeAt(0) + "%"
                    }) + close
            });
            var blockCounter = {};
            return text = text.replace(_BlockTypes2.default.preNameRegExp, function(all, type, term) {
                type = type.toLowerCase(), blockCounter[type] = blockCounter[type] || 0, all = all.replace(new RegExp(term.replace(/\W/g, "\\$&") + "$"), ""), all.match(/\//) || blockCounter[type]++;
                var block = all + "%" + blockCounter[type] + "%" + term;
                return all.match(/\//) && blockCounter[type]--, block
            })
        }

        function postProc(contents) {
            for (var i = 0; i < contents.length; i++) {
                var content = contents[i];
                "code" === content.type && content.content && content.content.length && (content.content[0].value = content.content[0].value.replace(/%(\d+)%/g, function(all, charCode) {
                    return String.fromCharCode(charCode)
                }).replace(/%_%/g, "%")), "message" !== content.type && "url" !== content.type || (content.value = content.value.replace(_BlockTypes2.default.postNameRegExp, "$1").replace(/%_%/g, "%"))
            }
            return contents
        }

        function mergeMessage(contents) {
            var results = [];
            return contents.forEach(function(content) {
                if (!results.length) return results.push(content);
                if ("message" !== content.type) return results.push(content);
                var lastContent = results[results.length - 1];
                if ("message" !== lastContent.type) return results.push(content);
                lastContent.value += content.value
            }), results
        }

        function parse_(text) {
            return mergeMessage(postProc(parseToken(text)))
        }

        function parse(text) {
            return text ? "[deleted]" === text ? [{
                type: "deleted",
                attributes: {}
            }] : parse_(preProc(text)) : []
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.setEmoticons = setEmoticons, exports.parseToken = parseToken, exports.preProc = preProc, exports.postProc = postProc, exports.mergeMessage = mergeMessage, exports.parse_ = parse_, exports.default = parse;
        var _BlockTypes = require("./Types/BlockTypes"),
            _BlockTypes2 = _interopRequireDefault(_BlockTypes),
            _MessageTokenizer = require("./Tokenizer/MessageTokenizer"),
            _MessageTokenizer2 = _interopRequireDefault(_MessageTokenizer),
            _BlockTokenizer = require("./Tokenizer/BlockTokenizer"),
            _BlockTokenizer2 = _interopRequireDefault(_BlockTokenizer)
    }, {
        "./Tokenizer/BlockTokenizer": 14,
        "./Tokenizer/MessageTokenizer": 15,
        "./Types/BlockTypes": 17
    }],
    19: [function(require, module, exports) {
        /*!
         Copyright (c) 2016 Jed Watson.
         Licensed under the MIT License (MIT), see
         http://jedwatson.github.io/classnames
         */
        ! function() {
            "use strict";

            function classNames() {
                for (var classes = [], i = 0; i < arguments.length; i++) {
                    var arg = arguments[i];
                    if (arg) {
                        var argType = typeof arg;
                        if ("string" === argType || "number" === argType) classes.push(arg);
                        else if (Array.isArray(arg)) classes.push(classNames.apply(null, arg));
                        else if ("object" === argType)
                            for (var key in arg) hasOwn.call(arg, key) && arg[key] && classes.push(key)
                    }
                }
                return classes.join(" ")
            }
            var hasOwn = {}.hasOwnProperty;
            void 0 !== module && module.exports ? module.exports = classNames : "function" == typeof define && "object" == typeof define.amd && define.amd ? define("classnames", [], function() {
                return classNames
            }) : window.classNames = classNames
        }()
    }, {}],
    20: [function(require, module, exports) {
        ! function(global, factory) {
            if ("function" == typeof define && define.amd) define(["module", "select"], factory);
            else if (void 0 !== exports) factory(module, require("select"));
            else {
                var mod = {
                    exports: {}
                };
                factory(mod, global.select), global.clipboardAction = mod.exports
            }
        }(this, function(module, _select) {
            "use strict";

            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function")
            }
            var _select2 = function(obj) {
                    return obj && obj.__esModule ? obj : {
                        default: obj
                    }
                }(_select),
                _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
                    return typeof obj
                } : function(obj) {
                    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
                },
                _createClass = function() {
                    function defineProperties(target, props) {
                        for (var i = 0; i < props.length; i++) {
                            var descriptor = props[i];
                            descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor)
                        }
                    }
                    return function(Constructor, protoProps, staticProps) {
                        return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor
                    }
                }(),
                ClipboardAction = function() {
                    function ClipboardAction(options) {
                        _classCallCheck(this, ClipboardAction), this.resolveOptions(options), this.initSelection()
                    }
                    return _createClass(ClipboardAction, [{
                        key: "resolveOptions",
                        value: function() {
                            var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            this.action = options.action, this.emitter = options.emitter, this.target = options.target, this.text = options.text, this.trigger = options.trigger, this.selectedText = ""
                        }
                    }, {
                        key: "initSelection",
                        value: function() {
                            this.text ? this.selectFake() : this.target && this.selectTarget()
                        }
                    }, {
                        key: "selectFake",
                        value: function() {
                            var _this = this,
                                isRTL = "rtl" == document.documentElement.getAttribute("dir");
                            this.removeFake(), this.fakeHandlerCallback = function() {
                                return _this.removeFake()
                            }, this.fakeHandler = document.body.addEventListener("click", this.fakeHandlerCallback) || !0, this.fakeElem = document.createElement("textarea"), this.fakeElem.style.fontSize = "12pt", this.fakeElem.style.border = "0", this.fakeElem.style.padding = "0", this.fakeElem.style.margin = "0", this.fakeElem.style.position = "absolute", this.fakeElem.style[isRTL ? "right" : "left"] = "-9999px";
                            var yPosition = window.pageYOffset || document.documentElement.scrollTop;
                            this.fakeElem.style.top = yPosition + "px", this.fakeElem.setAttribute("readonly", ""), this.fakeElem.value = this.text, document.body.appendChild(this.fakeElem), this.selectedText = (0, _select2.default)(this.fakeElem), this.copyText()
                        }
                    }, {
                        key: "removeFake",
                        value: function() {
                            this.fakeHandler && (document.body.removeEventListener("click", this.fakeHandlerCallback), this.fakeHandler = null, this.fakeHandlerCallback = null), this.fakeElem && (document.body.removeChild(this.fakeElem), this.fakeElem = null)
                        }
                    }, {
                        key: "selectTarget",
                        value: function() {
                            this.selectedText = (0, _select2.default)(this.target), this.copyText()
                        }
                    }, {
                        key: "copyText",
                        value: function() {
                            var succeeded = void 0;
                            try {
                                succeeded = document.execCommand(this.action)
                            } catch (err) {
                                succeeded = !1
                            }
                            this.handleResult(succeeded)
                        }
                    }, {
                        key: "handleResult",
                        value: function(succeeded) {
                            this.emitter.emit(succeeded ? "success" : "error", {
                                action: this.action,
                                text: this.selectedText,
                                trigger: this.trigger,
                                clearSelection: this.clearSelection.bind(this)
                            })
                        }
                    }, {
                        key: "clearSelection",
                        value: function() {
                            this.target && this.target.blur(), window.getSelection().removeAllRanges()
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this.removeFake()
                        }
                    }, {
                        key: "action",
                        set: function() {
                            var action = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "copy";
                            if (this._action = action, "copy" !== this._action && "cut" !== this._action) throw new Error('Invalid "action" value, use either "copy" or "cut"')
                        },
                        get: function() {
                            return this._action
                        }
                    }, {
                        key: "target",
                        set: function(target) {
                            if (void 0 !== target) {
                                if (!target || "object" !== (void 0 === target ? "undefined" : _typeof(target)) || 1 !== target.nodeType) throw new Error('Invalid "target" value, use a valid Element');
                                if ("copy" === this.action && target.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                                if ("cut" === this.action && (target.hasAttribute("readonly") || target.hasAttribute("disabled"))) throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                                this._target = target
                            }
                        },
                        get: function() {
                            return this._target
                        }
                    }]), ClipboardAction
                }();
            module.exports = ClipboardAction
        })
    }, {
        select: 285
    }],
    21: [function(require, module, exports) {
        ! function(global, factory) {
            if ("function" == typeof define && define.amd) define(["module", "./clipboard-action", "tiny-emitter", "good-listener"], factory);
            else if (void 0 !== exports) factory(module, require("./clipboard-action"), require("tiny-emitter"), require("good-listener"));
            else {
                var mod = {
                    exports: {}
                };
                factory(mod, global.clipboardAction, global.tinyEmitter, global.goodListener), global.clipboard = mod.exports
            }
        }(this, function(module, _clipboardAction, _tinyEmitter, _goodListener) {
            "use strict";

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                }
            }

            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function")
            }

            function _possibleConstructorReturn(self, call) {
                if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !call || "object" != typeof call && "function" != typeof call ? self : call
            }

            function _inherits(subClass, superClass) {
                if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass)
            }

            function getAttributeValue(suffix, element) {
                var attribute = "data-clipboard-" + suffix;
                if (element.hasAttribute(attribute)) return element.getAttribute(attribute)
            }
            var _clipboardAction2 = _interopRequireDefault(_clipboardAction),
                _tinyEmitter2 = _interopRequireDefault(_tinyEmitter),
                _goodListener2 = _interopRequireDefault(_goodListener),
                _createClass = function() {
                    function defineProperties(target, props) {
                        for (var i = 0; i < props.length; i++) {
                            var descriptor = props[i];
                            descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor)
                        }
                    }
                    return function(Constructor, protoProps, staticProps) {
                        return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor
                    }
                }(),
                Clipboard = function(_Emitter) {
                    function Clipboard(trigger, options) {
                        _classCallCheck(this, Clipboard);
                        var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));
                        return _this.resolveOptions(options), _this.listenClick(trigger), _this
                    }
                    return _inherits(Clipboard, _Emitter), _createClass(Clipboard, [{
                        key: "resolveOptions",
                        value: function() {
                            var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            this.action = "function" == typeof options.action ? options.action : this.defaultAction, this.target = "function" == typeof options.target ? options.target : this.defaultTarget, this.text = "function" == typeof options.text ? options.text : this.defaultText
                        }
                    }, {
                        key: "listenClick",
                        value: function(trigger) {
                            var _this2 = this;
                            this.listener = (0, _goodListener2.default)(trigger, "click", function(e) {
                                return _this2.onClick(e)
                            })
                        }
                    }, {
                        key: "onClick",
                        value: function(e) {
                            var trigger = e.delegateTarget || e.currentTarget;
                            this.clipboardAction && (this.clipboardAction = null), this.clipboardAction = new _clipboardAction2.default({
                                action: this.action(trigger),
                                target: this.target(trigger),
                                text: this.text(trigger),
                                trigger: trigger,
                                emitter: this
                            })
                        }
                    }, {
                        key: "defaultAction",
                        value: function(trigger) {
                            return getAttributeValue("action", trigger)
                        }
                    }, {
                        key: "defaultTarget",
                        value: function(trigger) {
                            var selector = getAttributeValue("target", trigger);
                            if (selector) return document.querySelector(selector)
                        }
                    }, {
                        key: "defaultText",
                        value: function(trigger) {
                            return getAttributeValue("text", trigger)
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this.listener.destroy(), this.clipboardAction && (this.clipboardAction.destroy(), this.clipboardAction = null)
                        }
                    }], [{
                        key: "isSupported",
                        value: function() {
                            var action = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"],
                                actions = "string" == typeof action ? [action] : action,
                                support = !!document.queryCommandSupported;
                            return actions.forEach(function(action) {
                                support = support && !!document.queryCommandSupported(action)
                            }), support
                        }
                    }]), Clipboard
                }(_tinyEmitter2.default);
            module.exports = Clipboard
        })
    }, {
        "./clipboard-action": 20,
        "good-listener": 72,
        "tiny-emitter": 304
    }],
    22: [function(require, module, exports) {
        ! function(global, undefined) {
            "use strict";
            var factory = function(window) {
                    if ("object" != typeof window.document) throw new Error("Cookies.js requires a `window` with a `document` object");
                    var Cookies = function(key, value, options) {
                        return 1 === arguments.length ? Cookies.get(key) : Cookies.set(key, value, options)
                    };
                    return Cookies._document = window.document, Cookies._cacheKeyPrefix = "cookey.", Cookies._maxExpireDate = new Date("Fri, 31 Dec 9999 23:59:59 UTC"), Cookies.defaults = {
                        path: "/",
                        secure: !1
                    }, Cookies.get = function(key) {
                        Cookies._cachedDocumentCookie !== Cookies._document.cookie && Cookies._renewCache();
                        var value = Cookies._cache[Cookies._cacheKeyPrefix + key];
                        return void 0 === value ? void 0 : decodeURIComponent(value)
                    }, Cookies.set = function(key, value, options) {
                        return options = Cookies._getExtendedOptions(options), options.expires = Cookies._getExpiresDate(void 0 === value ? -1 : options.expires), Cookies._document.cookie = Cookies._generateCookieString(key, value, options), Cookies
                    }, Cookies.expire = function(key, options) {
                        return Cookies.set(key, void 0, options)
                    }, Cookies._getExtendedOptions = function(options) {
                        return {
                            path: options && options.path || Cookies.defaults.path,
                            domain: options && options.domain || Cookies.defaults.domain,
                            expires: options && options.expires || Cookies.defaults.expires,
                            secure: options && void 0 !== options.secure ? options.secure : Cookies.defaults.secure
                        }
                    }, Cookies._isValidDate = function(date) {
                        return "[object Date]" === Object.prototype.toString.call(date) && !isNaN(date.getTime())
                    }, Cookies._getExpiresDate = function(expires, now) {
                        if (now = now || new Date, "number" == typeof expires ? expires = expires === 1 / 0 ? Cookies._maxExpireDate : new Date(now.getTime() + 1e3 * expires) : "string" == typeof expires && (expires = new Date(expires)), expires && !Cookies._isValidDate(expires)) throw new Error("`expires` parameter cannot be converted to a valid Date instance");
                        return expires
                    }, Cookies._generateCookieString = function(key, value, options) {
                        key = key.replace(/[^#$&+\^`|]/g, encodeURIComponent), key = key.replace(/\(/g, "%28").replace(/\)/g, "%29"), value = (value + "").replace(/[^!#$&-+\--:<-\[\]-~]/g, encodeURIComponent), options = options || {};
                        var cookieString = key + "=" + value;
                        return cookieString += options.path ? ";path=" + options.path : "", cookieString += options.domain ? ";domain=" + options.domain : "", cookieString += options.expires ? ";expires=" + options.expires.toUTCString() : "", cookieString += options.secure ? ";secure" : ""
                    }, Cookies._getCacheFromString = function(documentCookie) {
                        for (var cookieCache = {}, cookiesArray = documentCookie ? documentCookie.split("; ") : [], i = 0; i < cookiesArray.length; i++) {
                            var cookieKvp = Cookies._getKeyValuePairFromCookieString(cookiesArray[i]);
                            void 0 === cookieCache[Cookies._cacheKeyPrefix + cookieKvp.key] && (cookieCache[Cookies._cacheKeyPrefix + cookieKvp.key] = cookieKvp.value)
                        }
                        return cookieCache
                    }, Cookies._getKeyValuePairFromCookieString = function(cookieString) {
                        var separatorIndex = cookieString.indexOf("=");
                        separatorIndex = separatorIndex < 0 ? cookieString.length : separatorIndex;
                        var decodedKey, key = cookieString.substr(0, separatorIndex);
                        try {
                            decodedKey = decodeURIComponent(key)
                        } catch (e) {
                            console && console.error
                        }
                        return {
                            key: decodedKey,
                            value: cookieString.substr(separatorIndex + 1)
                        }
                    }, Cookies._renewCache = function() {
                        Cookies._cache = Cookies._getCacheFromString(Cookies._document.cookie), Cookies._cachedDocumentCookie = Cookies._document.cookie
                    }, Cookies._areEnabled = function() {
                        var areEnabled = "1" === Cookies.set("cookies.js", 1).get("cookies.js");
                        return Cookies.expire("cookies.js"), areEnabled
                    }, Cookies.enabled = Cookies._areEnabled(), Cookies
                },
                cookiesExport = global && "object" == typeof global.document ? factory(global) : factory;
            "function" == typeof define && define.amd ? define(function() {
                return cookiesExport
            }) : "object" == typeof exports ? ("object" == typeof module && "object" == typeof module.exports && (exports = module.exports = cookiesExport), exports.Cookies = cookiesExport) : global.Cookies = cookiesExport
        }("undefined" == typeof window ? this : window)
    }, {}],
    23: [function(require, module, exports) {
        function useColors() {
            return "WebkitAppearance" in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31
        }

        function formatArgs() {
            var args = arguments,
                useColors = this.useColors;
            if (args[0] = (useColors ? "%c" : "") + this.namespace + (useColors ? " %c" : " ") + args[0] + (useColors ? "%c " : " ") + "+" + exports.humanize(this.diff), !useColors) return args;
            var c = "color: " + this.color;
            args = [args[0], c, "color: inherit"].concat(Array.prototype.slice.call(args, 1));
            var index = 0,
                lastC = 0;
            return args[0].replace(/%[a-z%]/g, function(match) {
                "%%" !== match && (index++, "%c" === match && (lastC = index))
            }), args.splice(lastC, 0, c), args
        }

        function log() {
            return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments)
        }

        function save(namespaces) {
            try {
                null == namespaces ? storage.removeItem("debug") : storage.debug = namespaces
            } catch (e) {}
        }

        function load() {
            var r;
            try {
                r = storage.debug
            } catch (e) {}
            return r
        }
        exports = module.exports = require("./debug"), exports.log = log, exports.formatArgs = formatArgs, exports.save = save, exports.load = load, exports.useColors = useColors;
        var storage;
        storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : function() {
            try {
                return window.localStorage
            } catch (e) {}
        }(), exports.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"], exports.formatters.j = function(v) {
            return JSON.stringify(v)
        }, exports.enable(load())
    }, {
        "./debug": 24
    }],
    24: [function(require, module, exports) {
        function selectColor() {
            return exports.colors[prevColor++ % exports.colors.length]
        }

        function debug(namespace) {
            function disabled() {}

            function enabled() {
                var self = enabled,
                    curr = +new Date,
                    ms = curr - (prevTime || curr);
                self.diff = ms, self.prev = prevTime, self.curr = curr, prevTime = curr, null == self.useColors && (self.useColors = exports.useColors()), null == self.color && self.useColors && (self.color = selectColor());
                var args = Array.prototype.slice.call(arguments);
                args[0] = exports.coerce(args[0]), "string" != typeof args[0] && (args = ["%o"].concat(args));
                var index = 0;
                args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {
                    if ("%%" === match) return match;
                    index++;
                    var formatter = exports.formatters[format];
                    if ("function" == typeof formatter) {
                        var val = args[index];
                        match = formatter.call(self, val), args.splice(index, 1), index--
                    }
                    return match
                }), "function" == typeof exports.formatArgs && (args = exports.formatArgs.apply(self, args)), (enabled.log || exports.log || void 0).apply(self, args)
            }
            disabled.enabled = !1, enabled.enabled = !0;
            var fn = exports.enabled(namespace) ? enabled : disabled;
            return fn.namespace = namespace, fn
        }

        function enable(namespaces) {
            exports.save(namespaces);
            for (var split = (namespaces || "").split(/[\s,]+/), len = split.length, i = 0; i < len; i++) split[i] && (namespaces = split[i].replace(/\*/g, ".*?"), "-" === namespaces[0] ? exports.skips.push(new RegExp("^" + namespaces.substr(1) + "$")) : exports.names.push(new RegExp("^" + namespaces + "$")))
        }

        function disable() {
            exports.enable("")
        }

        function enabled(name) {
            var i, len;
            for (i = 0, len = exports.skips.length; i < len; i++)
                if (exports.skips[i].test(name)) return !1;
            for (i = 0, len = exports.names.length; i < len; i++)
                if (exports.names[i].test(name)) return !0;
            return !1
        }

        function coerce(val) {
            return val instanceof Error ? val.stack || val.message : val
        }
        exports = module.exports = debug, exports.coerce = coerce, exports.disable = disable, exports.enable = enable, exports.enabled = enabled, exports.humanize = require("ms"), exports.names = [], exports.skips = [], exports.formatters = {};
        var prevTime, prevColor = 0
    }, {
        ms: 125
    }],
    25: [function(require, module, exports) {
        "use strict";
        var keys = require("object-keys"),
            foreach = require("foreach"),
            hasSymbols = "function" == typeof Symbol && "symbol" == typeof Symbol(),
            toStr = Object.prototype.toString,
            isFunction = function(fn) {
                return "function" == typeof fn && "[object Function]" === toStr.call(fn)
            },
            supportsDescriptors = Object.defineProperty && function() {
                    var obj = {};
                    try {
                        Object.defineProperty(obj, "x", {
                            enumerable: !1,
                            value: obj
                        });
                        for (var _ in obj) return !1;
                        return obj.x === obj
                    } catch (e) {
                        return !1
                    }
                }(),
            defineProperty = function(object, name, value, predicate) {
                (!(name in object) || isFunction(predicate) && predicate()) && (supportsDescriptors ? Object.defineProperty(object, name, {
                    configurable: !0,
                    enumerable: !1,
                    value: value,
                    writable: !0
                }) : object[name] = value)
            },
            defineProperties = function(object, map) {
                var predicates = arguments.length > 2 ? arguments[2] : {},
                    props = keys(map);
                hasSymbols && (props = props.concat(Object.getOwnPropertySymbols(map))), foreach(props, function(name) {
                    defineProperty(object, name, map[name], predicates[name])
                })
            };
        defineProperties.supportsDescriptors = !!supportsDescriptors, module.exports = defineProperties
    }, {
        foreach: 67,
        "object-keys": 128
    }],
    26: [function(require, module, exports) {
        function closest(element, selector) {
            for (; element && element.nodeType !== DOCUMENT_NODE_TYPE;) {
                if (element.matches(selector)) return element;
                element = element.parentNode
            }
        }
        var DOCUMENT_NODE_TYPE = 9;
        if ("undefined" != typeof Element && !Element.prototype.matches) {
            var proto = Element.prototype;
            proto.matches = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector
        }
        module.exports = closest
    }, {}],
    27: [function(require, module, exports) {
        function delegate(element, selector, type, callback, useCapture) {
            var listenerFn = listener.apply(this, arguments);
            return element.addEventListener(type, listenerFn, useCapture), {
                destroy: function() {
                    element.removeEventListener(type, listenerFn, useCapture)
                }
            }
        }

        function listener(element, selector, type, callback) {
            return function(e) {
                e.delegateTarget = closest(e.target, selector), e.delegateTarget && callback.call(element, e)
            }
        }
        var closest = require("./closest");
        module.exports = delegate
    }, {
        "./closest": 26
    }],
    28: [function(require, module, exports) {
        /*!
         * domready (c) Dustin Diaz 2012 - License MIT
         */
        ! function(name, definition) {
            void 0 !== module ? module.exports = definition() : "function" == typeof define && "object" == typeof define.amd ? define(definition) : this.domready = definition()
        }(0, function(ready) {
            function flush(f) {
                for (loaded = 1; f = fns.shift();) f()
            }
            var fn, fns = [],
                doc = document,
                testEl = doc.documentElement,
                hack = testEl.doScroll,
                loadedRgx = hack ? /^loaded|^c/ : /^loaded|c/,
                loaded = loadedRgx.test(doc.readyState);
            return doc.addEventListener && doc.addEventListener("DOMContentLoaded", fn = function() {
                doc.removeEventListener("DOMContentLoaded", fn, !1), flush()
            }, !1), hack && doc.attachEvent("onreadystatechange", fn = function() {
                /^c/.test(doc.readyState) && (doc.detachEvent("onreadystatechange", fn), flush())
            }), ready = hack ? function(fn) {
                self != top ? loaded ? fn() : fns.push(fn) : function() {
                    try {
                        testEl.doScroll("left")
                    } catch (e) {
                        return setTimeout(function() {
                            ready(fn)
                        }, 50)
                    }
                    fn()
                }()
            } : function(fn) {
                loaded ? fn() : fns.push(fn)
            }
        })
    }, {}],
    29: [function(require, module, exports) {
        ! function(ElementProto) {
            "function" != typeof ElementProto.matches && (ElementProto.matches = ElementProto.msMatchesSelector || ElementProto.mozMatchesSelector || ElementProto.webkitMatchesSelector || function(selector) {
                    for (var element = this, elements = (element.document || element.ownerDocument).querySelectorAll(selector), index = 0; elements[index] && elements[index] !== element;) ++index;
                    return Boolean(elements[index])
                }), "function" != typeof ElementProto.closest && (ElementProto.closest = function(selector) {
                for (var element = this; element && 1 === element.nodeType;) {
                    if (element.matches(selector)) return element;
                    element = element.parentNode
                }
                return null
            })
        }(window.Element.prototype)
    }, {}],
    30: [function(require, module, exports) {
        "use strict";
        var $isNaN = require("./helpers/isNaN"),
            $isFinite = require("./helpers/isFinite"),
            sign = require("./helpers/sign"),
            mod = require("./helpers/mod"),
            IsCallable = require("is-callable"),
            toPrimitive = require("es-to-primitive/es5"),
            ES5 = {
                ToPrimitive: toPrimitive,
                ToBoolean: function(value) {
                    return Boolean(value)
                },
                ToNumber: function(value) {
                    return Number(value)
                },
                ToInteger: function(value) {
                    var number = this.ToNumber(value);
                    return $isNaN(number) ? 0 : 0 !== number && $isFinite(number) ? sign(number) * Math.floor(Math.abs(number)) : number
                },
                ToInt32: function(x) {
                    return this.ToNumber(x) >> 0
                },
                ToUint32: function(x) {
                    return this.ToNumber(x) >>> 0
                },
                ToUint16: function(value) {
                    var number = this.ToNumber(value);
                    if ($isNaN(number) || 0 === number || !$isFinite(number)) return 0;
                    var posInt = sign(number) * Math.floor(Math.abs(number));
                    return mod(posInt, 65536)
                },
                ToString: function(value) {
                    return String(value)
                },
                ToObject: function(value) {
                    return this.CheckObjectCoercible(value), Object(value)
                },
                CheckObjectCoercible: function(value, optMessage) {
                    if (null == value) throw new TypeError(optMessage || "Cannot call method on " + value);
                    return value
                },
                IsCallable: IsCallable,
                SameValue: function(x, y) {
                    return x === y ? 0 !== x || 1 / x == 1 / y : $isNaN(x) && $isNaN(y)
                },
                Type: function(x) {
                    return null === x ? "Null" : void 0 === x ? "Undefined" : "function" == typeof x || "object" == typeof x ? "Object" : "number" == typeof x ? "Number" : "boolean" == typeof x ? "Boolean" : "string" == typeof x ? "String" : void 0
                }
            };
        module.exports = ES5
    }, {
        "./helpers/isFinite": 33,
        "./helpers/isNaN": 34,
        "./helpers/mod": 36,
        "./helpers/sign": 37,
        "es-to-primitive/es5": 38,
        "is-callable": 74
    }],
    31: [function(require, module, exports) {
        "use strict";
        var toStr = Object.prototype.toString,
            hasSymbols = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator,
            symbolToStr = hasSymbols ? Symbol.prototype.toString : toStr,
            $isNaN = require("./helpers/isNaN"),
            $isFinite = require("./helpers/isFinite"),
            MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1,
            assign = require("./helpers/assign"),
            sign = require("./helpers/sign"),
            mod = require("./helpers/mod"),
            isPrimitive = require("./helpers/isPrimitive"),
            toPrimitive = require("es-to-primitive/es6"),
            parseInteger = parseInt,
            bind = require("function-bind"),
            strSlice = bind.call(Function.call, String.prototype.slice),
            isBinary = bind.call(Function.call, RegExp.prototype.test, /^0b[01]+$/i),
            isOctal = bind.call(Function.call, RegExp.prototype.test, /^0o[0-7]+$/i),
            nonWS = ["", "​", "￾"].join(""),
            nonWSregex = new RegExp("[" + nonWS + "]", "g"),
            hasNonWS = bind.call(Function.call, RegExp.prototype.test, nonWSregex),
            isInvalidHexLiteral = bind.call(Function.call, RegExp.prototype.test, /^[-+]0x[0-9a-f]+$/i),
            ws = ["\t\n\v\f\r   ᠎    ", "         　\u2028", "\u2029\ufeff"].join(""),
            trimRegex = new RegExp("(^[" + ws + "]+)|([" + ws + "]+$)", "g"),
            replace = bind.call(Function.call, String.prototype.replace),
            trim = function(value) {
                return replace(value, trimRegex, "")
            },
            ES5 = require("./es5"),
            hasRegExpMatcher = require("is-regex"),
            ES6 = assign(assign({}, ES5), {
                Call: function(F, V) {
                    var args = arguments.length > 2 ? arguments[2] : [];
                    if (!this.IsCallable(F)) throw new TypeError(F + " is not a function");
                    return F.apply(V, args)
                },
                ToPrimitive: toPrimitive,
                ToNumber: function(argument) {
                    var value = isPrimitive(argument) ? argument : toPrimitive(argument, "number");
                    if ("symbol" == typeof value) throw new TypeError("Cannot convert a Symbol value to a number");
                    if ("string" == typeof value) {
                        if (isBinary(value)) return this.ToNumber(parseInteger(strSlice(value, 2), 2));
                        if (isOctal(value)) return this.ToNumber(parseInteger(strSlice(value, 2), 8));
                        if (hasNonWS(value) || isInvalidHexLiteral(value)) return NaN;
                        var trimmed = trim(value);
                        if (trimmed !== value) return this.ToNumber(trimmed)
                    }
                    return Number(value)
                },
                ToInt16: function(argument) {
                    var int16bit = this.ToUint16(argument);
                    return int16bit >= 32768 ? int16bit - 65536 : int16bit
                },
                ToInt8: function(argument) {
                    var int8bit = this.ToUint8(argument);
                    return int8bit >= 128 ? int8bit - 256 : int8bit
                },
                ToUint8: function(argument) {
                    var number = this.ToNumber(argument);
                    if ($isNaN(number) || 0 === number || !$isFinite(number)) return 0;
                    var posInt = sign(number) * Math.floor(Math.abs(number));
                    return mod(posInt, 256)
                },
                ToUint8Clamp: function(argument) {
                    var number = this.ToNumber(argument);
                    if ($isNaN(number) || number <= 0) return 0;
                    if (number >= 255) return 255;
                    var f = Math.floor(argument);
                    return f + .5 < number ? f + 1 : number < f + .5 ? f : f % 2 != 0 ? f + 1 : f
                },
                ToString: function(argument) {
                    if ("symbol" == typeof argument) throw new TypeError("Cannot convert a Symbol value to a string");
                    return String(argument)
                },
                ToObject: function(value) {
                    return this.RequireObjectCoercible(value), Object(value)
                },
                ToPropertyKey: function(argument) {
                    var key = this.ToPrimitive(argument, String);
                    return "symbol" == typeof key ? symbolToStr.call(key) : this.ToString(key)
                },
                ToLength: function(argument) {
                    var len = this.ToInteger(argument);
                    return len <= 0 ? 0 : len > MAX_SAFE_INTEGER ? MAX_SAFE_INTEGER : len
                },
                CanonicalNumericIndexString: function(argument) {
                    if ("[object String]" !== toStr.call(argument)) throw new TypeError("must be a string");
                    if ("-0" === argument) return -0;
                    var n = this.ToNumber(argument);
                    return this.SameValue(this.ToString(n), argument) ? n : void 0
                },
                RequireObjectCoercible: ES5.CheckObjectCoercible,
                IsArray: Array.isArray || function(argument) {
                    return "[object Array]" === toStr.call(argument)
                },
                IsConstructor: function(argument) {
                    return "function" == typeof argument && !!argument.prototype
                },
                IsExtensible: function(obj) {
                    return !Object.preventExtensions || !isPrimitive(obj) && Object.isExtensible(obj)
                },
                IsInteger: function(argument) {
                    if ("number" != typeof argument || $isNaN(argument) || !$isFinite(argument)) return !1;
                    var abs = Math.abs(argument);
                    return Math.floor(abs) === abs
                },
                IsPropertyKey: function(argument) {
                    return "string" == typeof argument || "symbol" == typeof argument
                },
                IsRegExp: function(argument) {
                    if (!argument || "object" != typeof argument) return !1;
                    if (hasSymbols) {
                        var isRegExp = argument[Symbol.match];
                        if (void 0 !== isRegExp) return ES5.ToBoolean(isRegExp)
                    }
                    return hasRegExpMatcher(argument)
                },
                SameValueZero: function(x, y) {
                    return x === y || $isNaN(x) && $isNaN(y)
                },
                GetV: function(V, P) {
                    if (!this.IsPropertyKey(P)) throw new TypeError("Assertion failed: IsPropertyKey(P) is not true");
                    return this.ToObject(V)[P]
                },
                GetMethod: function(O, P) {
                    if (!this.IsPropertyKey(P)) throw new TypeError("Assertion failed: IsPropertyKey(P) is not true");
                    var func = this.GetV(O, P);
                    if (null != func) {
                        if (!this.IsCallable(func)) throw new TypeError(P + "is not a function");
                        return func
                    }
                },
                Get: function(O, P) {
                    if ("Object" !== this.Type(O)) throw new TypeError("Assertion failed: Type(O) is not Object");
                    if (!this.IsPropertyKey(P)) throw new TypeError("Assertion failed: IsPropertyKey(P) is not true");
                    return O[P]
                },
                Type: function(x) {
                    return "symbol" == typeof x ? "Symbol" : ES5.Type(x)
                },
                SpeciesConstructor: function(O, defaultConstructor) {
                    if ("Object" !== this.Type(O)) throw new TypeError("Assertion failed: Type(O) is not Object");
                    var C = O.constructor;
                    if (void 0 === C) return defaultConstructor;
                    if ("Object" !== this.Type(C)) throw new TypeError("O.constructor is not an Object");
                    var S = hasSymbols && Symbol.species ? C[Symbol.species] : void 0;
                    if (null == S) return defaultConstructor;
                    if (this.IsConstructor(S)) return S;
                    throw new TypeError("no constructor found")
                }
            });
        delete ES6.CheckObjectCoercible, module.exports = ES6
    }, {
        "./es5": 30,
        "./helpers/assign": 32,
        "./helpers/isFinite": 33,
        "./helpers/isNaN": 34,
        "./helpers/isPrimitive": 35,
        "./helpers/mod": 36,
        "./helpers/sign": 37,
        "es-to-primitive/es6": 39,
        "function-bind": 69,
        "is-regex": 76
    }],
    32: [function(require, module, exports) {
        var has = Object.prototype.hasOwnProperty;
        module.exports = Object.assign || function(target, source) {
                for (var key in source) has.call(source, key) && (target[key] = source[key]);
                return target
            }
    }, {}],
    33: [function(require, module, exports) {
        var $isNaN = Number.isNaN || function(a) {
                return a !== a
            };
        module.exports = Number.isFinite || function(x) {
                return "number" == typeof x && !$isNaN(x) && x !== 1 / 0 && x !== -1 / 0
            }
    }, {}],
    34: [function(require, module, exports) {
        module.exports = Number.isNaN || function(a) {
                return a !== a
            }
    }, {}],
    35: [function(require, module, exports) {
        module.exports = function(value) {
            return null === value || "function" != typeof value && "object" != typeof value
        }
    }, {}],
    36: [function(require, module, exports) {
        module.exports = function(number, modulo) {
            var remain = number % modulo;
            return Math.floor(remain >= 0 ? remain : remain + modulo)
        }
    }, {}],
    37: [function(require, module, exports) {
        module.exports = function(number) {
            return number >= 0 ? 1 : -1
        }
    }, {}],
    38: [function(require, module, exports) {
        "use strict";
        var toStr = Object.prototype.toString,
            isPrimitive = require("./helpers/isPrimitive"),
            isCallable = require("is-callable"),
            ES5internalSlots = {
                "[[DefaultValue]]": function(O, hint) {
                    var actualHint = hint || ("[object Date]" === toStr.call(O) ? String : Number);
                    if (actualHint === String || actualHint === Number) {
                        var value, i, methods = actualHint === String ? ["toString", "valueOf"] : ["valueOf", "toString"];
                        for (i = 0; i < methods.length; ++i)
                            if (isCallable(O[methods[i]]) && (value = O[methods[i]](), isPrimitive(value))) return value;
                        throw new TypeError("No default value")
                    }
                    throw new TypeError("invalid [[DefaultValue]] hint supplied")
                }
            };
        module.exports = function(input, PreferredType) {
            return isPrimitive(input) ? input : ES5internalSlots["[[DefaultValue]]"](input, PreferredType)
        }
    }, {
        "./helpers/isPrimitive": 40,
        "is-callable": 74
    }],
    39: [function(require, module, exports) {
        "use strict";
        var hasSymbols = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator,
            isPrimitive = require("./helpers/isPrimitive"),
            isCallable = require("is-callable"),
            isDate = require("is-date-object"),
            isSymbol = require("is-symbol"),
            ordinaryToPrimitive = function(O, hint) {
                if (void 0 === O || null === O) throw new TypeError("Cannot call method on " + O);
                if ("string" != typeof hint || "number" !== hint && "string" !== hint) throw new TypeError('hint must be "string" or "number"');
                var method, result, i, methodNames = "string" === hint ? ["toString", "valueOf"] : ["valueOf", "toString"];
                for (i = 0; i < methodNames.length; ++i)
                    if (method = O[methodNames[i]], isCallable(method) && (result = method.call(O), isPrimitive(result))) return result;
                throw new TypeError("No default value")
            },
            GetMethod = function(O, P) {
                var func = O[P];
                if (null !== func && void 0 !== func) {
                    if (!isCallable(func)) throw new TypeError(func + " returned for property " + P + " of object " + O + " is not a function");
                    return func
                }
            };
        module.exports = function(input, PreferredType) {
            if (isPrimitive(input)) return input;
            var hint = "default";
            arguments.length > 1 && (PreferredType === String ? hint = "string" : PreferredType === Number && (hint = "number"));
            var exoticToPrim;
            if (hasSymbols && (Symbol.toPrimitive ? exoticToPrim = GetMethod(input, Symbol.toPrimitive) : isSymbol(input) && (exoticToPrim = Symbol.prototype.valueOf)), void 0 !== exoticToPrim) {
                var result = exoticToPrim.call(input, hint);
                if (isPrimitive(result)) return result;
                throw new TypeError("unable to convert exotic object to primitive")
            }
            return "default" === hint && (isDate(input) || isSymbol(input)) && (hint = "string"), ordinaryToPrimitive(input, "default" === hint ? "number" : hint)
        }
    }, {
        "./helpers/isPrimitive": 40,
        "is-callable": 74,
        "is-date-object": 75,
        "is-symbol": 77
    }],
    40: [function(require, module, exports) {
        arguments[4][35][0].apply(exports, arguments)
    }, {
        dup: 35
    }],
    41: [function(require, module, exports) {
        (function(process, global) {
            /*!
             * @overview es6-promise - a tiny implementation of Promises/A+.
             * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
             * @license   Licensed under MIT license
             *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
             * @version   4.1.0
             */
            ! function(global, factory) {
                "object" == typeof exports && void 0 !== module ? module.exports = factory() : "function" == typeof define && define.amd ? define(factory) : global.ES6Promise = factory()
            }(this, function() {
                "use strict";

                function objectOrFunction(x) {
                    return "function" == typeof x || "object" == typeof x && null !== x
                }

                function isFunction(x) {
                    return "function" == typeof x
                }

                function setScheduler(scheduleFn) {
                    customSchedulerFn = scheduleFn
                }

                function setAsap(asapFn) {
                    asap = asapFn
                }

                function useVertxTimer() {
                    return void 0 !== vertxNext ? function() {
                        vertxNext(flush)
                    } : useSetTimeout()
                }

                function useSetTimeout() {
                    var globalSetTimeout = setTimeout;
                    return function() {
                        return globalSetTimeout(flush, 1)
                    }
                }

                function flush() {
                    for (var i = 0; i < len; i += 2) {
                        (0, queue[i])(queue[i + 1]), queue[i] = void 0, queue[i + 1] = void 0
                    }
                    len = 0
                }

                function then(onFulfillment, onRejection) {
                    var _arguments = arguments,
                        parent = this,
                        child = new this.constructor(noop);
                    void 0 === child[PROMISE_ID] && makePromise(child);
                    var _state = parent._state;
                    return _state ? function() {
                        var callback = _arguments[_state - 1];
                        asap(function() {
                            return invokeCallback(_state, child, callback, parent._result)
                        })
                    }() : subscribe(parent, child, onFulfillment, onRejection), child
                }

                function resolve(object) {
                    var Constructor = this;
                    if (object && "object" == typeof object && object.constructor === Constructor) return object;
                    var promise = new Constructor(noop);
                    return _resolve(promise, object), promise
                }

                function noop() {}

                function selfFulfillment() {
                    return new TypeError("You cannot resolve a promise with itself")
                }

                function cannotReturnOwn() {
                    return new TypeError("A promises callback cannot return that same promise.")
                }

                function getThen(promise) {
                    try {
                        return promise.then
                    } catch (error) {
                        return GET_THEN_ERROR.error = error, GET_THEN_ERROR
                    }
                }

                function tryThen(then, value, fulfillmentHandler, rejectionHandler) {
                    try {
                        then.call(value, fulfillmentHandler, rejectionHandler)
                    } catch (e) {
                        return e
                    }
                }

                function handleForeignThenable(promise, thenable, then) {
                    asap(function(promise) {
                        var sealed = !1,
                            error = tryThen(then, thenable, function(value) {
                                sealed || (sealed = !0, thenable !== value ? _resolve(promise, value) : fulfill(promise, value))
                            }, function(reason) {
                                sealed || (sealed = !0, _reject(promise, reason))
                            }, "Settle: " + (promise._label || " unknown promise"));
                        !sealed && error && (sealed = !0, _reject(promise, error))
                    }, promise)
                }

                function handleOwnThenable(promise, thenable) {
                    thenable._state === FULFILLED ? fulfill(promise, thenable._result) : thenable._state === REJECTED ? _reject(promise, thenable._result) : subscribe(thenable, void 0, function(value) {
                        return _resolve(promise, value)
                    }, function(reason) {
                        return _reject(promise, reason)
                    })
                }

                function handleMaybeThenable(promise, maybeThenable, then$$) {
                    maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve ? handleOwnThenable(promise, maybeThenable) : then$$ === GET_THEN_ERROR ? (_reject(promise, GET_THEN_ERROR.error), GET_THEN_ERROR.error = null) : void 0 === then$$ ? fulfill(promise, maybeThenable) : isFunction(then$$) ? handleForeignThenable(promise, maybeThenable, then$$) : fulfill(promise, maybeThenable)
                }

                function _resolve(promise, value) {
                    promise === value ? _reject(promise, selfFulfillment()) : objectOrFunction(value) ? handleMaybeThenable(promise, value, getThen(value)) : fulfill(promise, value)
                }

                function publishRejection(promise) {
                    promise._onerror && promise._onerror(promise._result), publish(promise)
                }

                function fulfill(promise, value) {
                    promise._state === PENDING && (promise._result = value, promise._state = FULFILLED, 0 !== promise._subscribers.length && asap(publish, promise))
                }

                function _reject(promise, reason) {
                    promise._state === PENDING && (promise._state = REJECTED, promise._result = reason, asap(publishRejection, promise))
                }

                function subscribe(parent, child, onFulfillment, onRejection) {
                    var _subscribers = parent._subscribers,
                        length = _subscribers.length;
                    parent._onerror = null, _subscribers[length] = child, _subscribers[length + FULFILLED] = onFulfillment, _subscribers[length + REJECTED] = onRejection, 0 === length && parent._state && asap(publish, parent)
                }

                function publish(promise) {
                    var subscribers = promise._subscribers,
                        settled = promise._state;
                    if (0 !== subscribers.length) {
                        for (var child = void 0, callback = void 0, detail = promise._result, i = 0; i < subscribers.length; i += 3) child = subscribers[i], callback = subscribers[i + settled], child ? invokeCallback(settled, child, callback, detail) : callback(detail);
                        promise._subscribers.length = 0
                    }
                }

                function ErrorObject() {
                    this.error = null
                }

                function tryCatch(callback, detail) {
                    try {
                        return callback(detail)
                    } catch (e) {
                        return TRY_CATCH_ERROR.error = e, TRY_CATCH_ERROR
                    }
                }

                function invokeCallback(settled, promise, callback, detail) {
                    var hasCallback = isFunction(callback),
                        value = void 0,
                        error = void 0,
                        succeeded = void 0,
                        failed = void 0;
                    if (hasCallback) {
                        if (value = tryCatch(callback, detail), value === TRY_CATCH_ERROR ? (failed = !0, error = value.error, value.error = null) : succeeded = !0, promise === value) return void _reject(promise, cannotReturnOwn())
                    } else value = detail, succeeded = !0;
                    promise._state !== PENDING || (hasCallback && succeeded ? _resolve(promise, value) : failed ? _reject(promise, error) : settled === FULFILLED ? fulfill(promise, value) : settled === REJECTED && _reject(promise, value))
                }

                function initializePromise(promise, resolver) {
                    try {
                        resolver(function(value) {
                            _resolve(promise, value)
                        }, function(reason) {
                            _reject(promise, reason)
                        })
                    } catch (e) {
                        _reject(promise, e)
                    }
                }

                function nextId() {
                    return id++
                }

                function makePromise(promise) {
                    promise[PROMISE_ID] = id++, promise._state = void 0, promise._result = void 0, promise._subscribers = []
                }

                function Enumerator(Constructor, input) {
                    this._instanceConstructor = Constructor, this.promise = new Constructor(noop), this.promise[PROMISE_ID] || makePromise(this.promise), isArray(input) ? (this._input = input, this.length = input.length, this._remaining = input.length, this._result = new Array(this.length), 0 === this.length ? fulfill(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && fulfill(this.promise, this._result))) : _reject(this.promise, validationError())
                }

                function validationError() {
                    return new Error("Array Methods must be provided an Array")
                }

                function all(entries) {
                    return new Enumerator(this, entries).promise
                }

                function race(entries) {
                    var Constructor = this;
                    return new Constructor(isArray(entries) ? function(resolve, reject) {
                        for (var length = entries.length, i = 0; i < length; i++) Constructor.resolve(entries[i]).then(resolve, reject)
                    } : function(_, reject) {
                        return reject(new TypeError("You must pass an array to race."))
                    })
                }

                function reject(reason) {
                    var Constructor = this,
                        promise = new Constructor(noop);
                    return _reject(promise, reason), promise
                }

                function needsResolver() {
                    throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
                }

                function needsNew() {
                    throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
                }

                function Promise(resolver) {
                    this[PROMISE_ID] = nextId(), this._result = this._state = void 0, this._subscribers = [], noop !== resolver && ("function" != typeof resolver && needsResolver(), this instanceof Promise ? initializePromise(this, resolver) : needsNew())
                }

                function polyfill() {
                    var local = void 0;
                    if (void 0 !== global) local = global;
                    else if ("undefined" != typeof self) local = self;
                    else try {
                            local = Function("return this")()
                        } catch (e) {
                            throw new Error("polyfill failed because global object is unavailable in this environment")
                        }
                    var P = local.Promise;
                    if (P) {
                        var promiseToString = null;
                        try {
                            promiseToString = Object.prototype.toString.call(P.resolve())
                        } catch (e) {}
                        if ("[object Promise]" === promiseToString && !P.cast) return
                    }
                    local.Promise = Promise
                }
                var _isArray = void 0;
                _isArray = Array.isArray ? Array.isArray : function(x) {
                    return "[object Array]" === Object.prototype.toString.call(x)
                };
                var isArray = _isArray,
                    len = 0,
                    vertxNext = void 0,
                    customSchedulerFn = void 0,
                    asap = function(callback, arg) {
                        queue[len] = callback, queue[len + 1] = arg, 2 === (len += 2) && (customSchedulerFn ? customSchedulerFn(flush) : scheduleFlush())
                    },
                    browserWindow = "undefined" != typeof window ? window : void 0,
                    browserGlobal = browserWindow || {},
                    BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver,
                    isNode = "undefined" == typeof self && void 0 !== process && "[object process]" === {}.toString.call(process),
                    isWorker = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,
                    queue = new Array(1e3),
                    scheduleFlush = void 0;
                scheduleFlush = isNode ? function() {
                    return function() {
                        return process.nextTick(flush)
                    }
                }() : BrowserMutationObserver ? function() {
                    var iterations = 0,
                        observer = new BrowserMutationObserver(flush),
                        node = document.createTextNode("");
                    return observer.observe(node, {
                        characterData: !0
                    }),
                        function() {
                            node.data = iterations = ++iterations % 2
                        }
                }() : isWorker ? function() {
                    var channel = new MessageChannel;
                    return channel.port1.onmessage = flush,
                        function() {
                            return channel.port2.postMessage(0)
                        }
                }() : void 0 === browserWindow && "function" == typeof require ? function() {
                    try {
                        var r = require,
                            vertx = r("vertx");
                        return vertxNext = vertx.runOnLoop || vertx.runOnContext, useVertxTimer()
                    } catch (e) {
                        return useSetTimeout()
                    }
                }() : useSetTimeout();
                var PROMISE_ID = Math.random().toString(36).substring(16),
                    PENDING = void 0,
                    FULFILLED = 1,
                    REJECTED = 2,
                    GET_THEN_ERROR = new ErrorObject,
                    TRY_CATCH_ERROR = new ErrorObject,
                    id = 0;
                return Enumerator.prototype._enumerate = function() {
                    for (var length = this.length, _input = this._input, i = 0; this._state === PENDING && i < length; i++) this._eachEntry(_input[i], i)
                }, Enumerator.prototype._eachEntry = function(entry, i) {
                    var c = this._instanceConstructor,
                        resolve$$ = c.resolve;
                    if (resolve$$ === resolve) {
                        var _then = getThen(entry);
                        if (_then === then && entry._state !== PENDING) this._settledAt(entry._state, i, entry._result);
                        else if ("function" != typeof _then) this._remaining--, this._result[i] = entry;
                        else if (c === Promise) {
                            var promise = new c(noop);
                            handleMaybeThenable(promise, entry, _then), this._willSettleAt(promise, i)
                        } else this._willSettleAt(new c(function(resolve$$) {
                            return resolve$$(entry)
                        }), i)
                    } else this._willSettleAt(resolve$$(entry), i)
                }, Enumerator.prototype._settledAt = function(state, i, value) {
                    var promise = this.promise;
                    promise._state === PENDING && (this._remaining--, state === REJECTED ? _reject(promise, value) : this._result[i] = value), 0 === this._remaining && fulfill(promise, this._result)
                }, Enumerator.prototype._willSettleAt = function(promise, i) {
                    var enumerator = this;
                    subscribe(promise, void 0, function(value) {
                        return enumerator._settledAt(FULFILLED, i, value)
                    }, function(reason) {
                        return enumerator._settledAt(REJECTED, i, reason)
                    })
                }, Promise.all = all, Promise.race = race, Promise.resolve = resolve, Promise.reject = reject, Promise._setScheduler = setScheduler, Promise._setAsap = setAsap, Promise._asap = asap, Promise.prototype = {
                    constructor: Promise,
                    then: then,
                    catch: function(onRejection) {
                        return this.then(null, onRejection)
                    }
                }, Promise.polyfill = polyfill, Promise.Promise = Promise, Promise
            })
        }).call(this, require("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {
        _process: 13
    }],
    42: [function(require, module, exports) {
        (function(process) {
            ! function(undefined) {
                function init() {
                    this._events = {}, this._conf && configure.call(this, this._conf)
                }

                function configure(conf) {
                    conf ? (this._conf = conf, conf.delimiter && (this.delimiter = conf.delimiter), this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners, conf.wildcard && (this.wildcard = conf.wildcard), conf.newListener && (this.newListener = conf.newListener), conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak), this.wildcard && (this.listenerTree = {})) : this._maxListeners = defaultMaxListeners
                }

                function logPossibleMemoryLeak(count, eventName) {
                    var errorMsg = "(node) warning: possible EventEmitter memory leak detected. " + count + " listeners added. Use emitter.setMaxListeners() to increase limit.";
                    if (this.verboseMemoryLeak && (errorMsg += " Event name: " + eventName + "."), void 0 !== process && process.emitWarning) {
                        var e = new Error(errorMsg);
                        e.name = "MaxListenersExceededWarning", e.emitter = this, e.count = count, process.emitWarning(e)
                    } else console.trace
                }

                function EventEmitter(conf) {
                    this._events = {}, this.newListener = !1, this.verboseMemoryLeak = !1, configure.call(this, conf)
                }

                function searchListenerTree(handlers, type, tree, i) {
                    if (!tree) return [];
                    var leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, listeners = [],
                        typeLength = type.length,
                        currentType = type[i],
                        nextType = type[i + 1];
                    if (i === typeLength && tree._listeners) {
                        if ("function" == typeof tree._listeners) return handlers && handlers.push(tree._listeners), [tree];
                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) handlers && handlers.push(tree._listeners[leaf]);
                        return [tree]
                    }
                    if ("*" === currentType || "**" === currentType || tree[currentType]) {
                        if ("*" === currentType) {
                            for (branch in tree) "_listeners" !== branch && tree.hasOwnProperty(branch) && (listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1)));
                            return listeners
                        }
                        if ("**" === currentType) {
                            endReached = i + 1 === typeLength || i + 2 === typeLength && "*" === nextType, endReached && tree._listeners && (listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength)));
                            for (branch in tree) "_listeners" !== branch && tree.hasOwnProperty(branch) && ("*" === branch || "**" === branch ? (tree[branch]._listeners && !endReached && (listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength))), listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i))) : listeners = branch === nextType ? listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2)) : listeners.concat(searchListenerTree(handlers, type, tree[branch], i)));
                            return listeners
                        }
                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1))
                    }
                    if (xTree = tree["*"], xTree && searchListenerTree(handlers, type, xTree, i + 1), xxTree = tree["**"])
                        if (i < typeLength) {
                            xxTree._listeners && searchListenerTree(handlers, type, xxTree, typeLength);
                            for (branch in xxTree) "_listeners" !== branch && xxTree.hasOwnProperty(branch) && (branch === nextType ? searchListenerTree(handlers, type, xxTree[branch], i + 2) : branch === currentType ? searchListenerTree(handlers, type, xxTree[branch], i + 1) : (isolatedBranch = {}, isolatedBranch[branch] = xxTree[branch], searchListenerTree(handlers, type, {
                                "**": isolatedBranch
                            }, i + 1)))
                        } else xxTree._listeners ? searchListenerTree(handlers, type, xxTree, typeLength) : xxTree["*"] && xxTree["*"]._listeners && searchListenerTree(handlers, type, xxTree["*"], typeLength);
                    return listeners
                }

                function growListenerTree(type, listener) {
                    type = "string" == typeof type ? type.split(this.delimiter) : type.slice();
                    for (var i = 0, len = type.length; i + 1 < len; i++)
                        if ("**" === type[i] && "**" === type[i + 1]) return;
                    for (var tree = this.listenerTree, name = type.shift(); name !== undefined;) {
                        if (tree[name] || (tree[name] = {}), tree = tree[name], 0 === type.length) return tree._listeners ? ("function" == typeof tree._listeners && (tree._listeners = [tree._listeners]), tree._listeners.push(listener), !tree._listeners.warned && this._maxListeners > 0 && tree._listeners.length > this._maxListeners && (tree._listeners.warned = !0, logPossibleMemoryLeak.call(this, tree._listeners.length, name))) : tree._listeners = listener, !0;
                        name = type.shift()
                    }
                    return !0
                }
                var isArray = Array.isArray ? Array.isArray : function(obj) {
                        return "[object Array]" === Object.prototype.toString.call(obj)
                    },
                    defaultMaxListeners = 10;
                EventEmitter.EventEmitter2 = EventEmitter, EventEmitter.prototype.delimiter = ".", EventEmitter.prototype.setMaxListeners = function(n) {
                    n !== undefined && (this._maxListeners = n, this._conf || (this._conf = {}), this._conf.maxListeners = n)
                }, EventEmitter.prototype.event = "", EventEmitter.prototype.once = function(event, fn) {
                    return this._once(event, fn, !1)
                }, EventEmitter.prototype.prependOnceListener = function(event, fn) {
                    return this._once(event, fn, !0)
                }, EventEmitter.prototype._once = function(event, fn, prepend) {
                    return this._many(event, 1, fn, prepend), this
                }, EventEmitter.prototype.many = function(event, ttl, fn) {
                    return this._many(event, ttl, fn, !1)
                }, EventEmitter.prototype.prependMany = function(event, ttl, fn) {
                    return this._many(event, ttl, fn, !0)
                }, EventEmitter.prototype._many = function(event, ttl, fn, prepend) {
                    function listener() {
                        return 0 == --ttl && self.off(event, listener), fn.apply(this, arguments)
                    }
                    var self = this;
                    if ("function" != typeof fn) throw new Error("many only accepts instances of Function");
                    return listener._origin = fn, this._on(event, listener, prepend), self
                }, EventEmitter.prototype.emit = function() {
                    this._events || init.call(this);
                    var type = arguments[0];
                    if ("newListener" === type && !this.newListener && !this._events.newListener) return !1;
                    var args, l, i, j, handler, al = arguments.length;
                    if (this._all && this._all.length) {
                        if (handler = this._all.slice(), al > 3)
                            for (args = new Array(al), j = 0; j < al; j++) args[j] = arguments[j];
                        for (i = 0, l = handler.length; i < l; i++) switch (this.event = type, al) {
                            case 1:
                                handler[i].call(this, type);
                                break;
                            case 2:
                                handler[i].call(this, type, arguments[1]);
                                break;
                            case 3:
                                handler[i].call(this, type, arguments[1], arguments[2]);
                                break;
                            default:
                                handler[i].apply(this, args)
                        }
                    }
                    if (this.wildcard) {
                        handler = [];
                        var ns = "string" == typeof type ? type.split(this.delimiter) : type.slice();
                        searchListenerTree.call(this, handler, ns, this.listenerTree, 0)
                    } else {
                        if ("function" == typeof(handler = this._events[type])) {
                            switch (this.event = type, al) {
                                case 1:
                                    handler.call(this);
                                    break;
                                case 2:
                                    handler.call(this, arguments[1]);
                                    break;
                                case 3:
                                    handler.call(this, arguments[1], arguments[2]);
                                    break;
                                default:
                                    for (args = new Array(al - 1), j = 1; j < al; j++) args[j - 1] = arguments[j];
                                    handler.apply(this, args)
                            }
                            return !0
                        }
                        handler && (handler = handler.slice())
                    }
                    if (handler && handler.length) {
                        if (al > 3)
                            for (args = new Array(al - 1), j = 1; j < al; j++) args[j - 1] = arguments[j];
                        for (i = 0, l = handler.length; i < l; i++) switch (this.event = type, al) {
                            case 1:
                                handler[i].call(this);
                                break;
                            case 2:
                                handler[i].call(this, arguments[1]);
                                break;
                            case 3:
                                handler[i].call(this, arguments[1], arguments[2]);
                                break;
                            default:
                                handler[i].apply(this, args)
                        }
                        return !0
                    }
                    if (!this._all && "error" === type) throw arguments[1] instanceof Error ? arguments[1] : new Error("Uncaught, unspecified 'error' event.");
                    return !!this._all
                }, EventEmitter.prototype.emitAsync = function() {
                    this._events || init.call(this);
                    var type = arguments[0];
                    if ("newListener" === type && !this.newListener && !this._events.newListener) return Promise.resolve([!1]);
                    var args, l, i, j, handler, promises = [],
                        al = arguments.length;
                    if (this._all) {
                        if (al > 3)
                            for (args = new Array(al), j = 1; j < al; j++) args[j] = arguments[j];
                        for (i = 0, l = this._all.length; i < l; i++) switch (this.event = type, al) {
                            case 1:
                                promises.push(this._all[i].call(this, type));
                                break;
                            case 2:
                                promises.push(this._all[i].call(this, type, arguments[1]));
                                break;
                            case 3:
                                promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));
                                break;
                            default:
                                promises.push(this._all[i].apply(this, args))
                        }
                    }
                    if (this.wildcard) {
                        handler = [];
                        var ns = "string" == typeof type ? type.split(this.delimiter) : type.slice();
                        searchListenerTree.call(this, handler, ns, this.listenerTree, 0)
                    } else handler = this._events[type];
                    if ("function" == typeof handler) switch (this.event = type, al) {
                        case 1:
                            promises.push(handler.call(this));
                            break;
                        case 2:
                            promises.push(handler.call(this, arguments[1]));
                            break;
                        case 3:
                            promises.push(handler.call(this, arguments[1], arguments[2]));
                            break;
                        default:
                            for (args = new Array(al - 1), j = 1; j < al; j++) args[j - 1] = arguments[j];
                            promises.push(handler.apply(this, args))
                    } else if (handler && handler.length) {
                        if (handler = handler.slice(), al > 3)
                            for (args = new Array(al - 1), j = 1; j < al; j++) args[j - 1] = arguments[j];
                        for (i = 0, l = handler.length; i < l; i++) switch (this.event = type, al) {
                            case 1:
                                promises.push(handler[i].call(this));
                                break;
                            case 2:
                                promises.push(handler[i].call(this, arguments[1]));
                                break;
                            case 3:
                                promises.push(handler[i].call(this, arguments[1], arguments[2]));
                                break;
                            default:
                                promises.push(handler[i].apply(this, args))
                        }
                    } else if (!this._all && "error" === type) return arguments[1] instanceof Error ? Promise.reject(arguments[1]) : Promise.reject("Uncaught, unspecified 'error' event.");
                    return Promise.all(promises)
                }, EventEmitter.prototype.on = function(type, listener) {
                    return this._on(type, listener, !1)
                }, EventEmitter.prototype.prependListener = function(type, listener) {
                    return this._on(type, listener, !0)
                }, EventEmitter.prototype.onAny = function(fn) {
                    return this._onAny(fn, !1)
                }, EventEmitter.prototype.prependAny = function(fn) {
                    return this._onAny(fn, !0)
                }, EventEmitter.prototype.addListener = EventEmitter.prototype.on, EventEmitter.prototype._onAny = function(fn, prepend) {
                    if ("function" != typeof fn) throw new Error("onAny only accepts instances of Function");
                    return this._all || (this._all = []), prepend ? this._all.unshift(fn) : this._all.push(fn), this
                }, EventEmitter.prototype._on = function(type, listener, prepend) {
                    if ("function" == typeof type) return this._onAny(type, listener), this;
                    if ("function" != typeof listener) throw new Error("on only accepts instances of Function");
                    return this._events || init.call(this), this.emit("newListener", type, listener), this.wildcard ? (growListenerTree.call(this, type, listener), this) : (this._events[type] ? ("function" == typeof this._events[type] && (this._events[type] = [this._events[type]]), prepend ? this._events[type].unshift(listener) : this._events[type].push(listener), !this._events[type].warned && this._maxListeners > 0 && this._events[type].length > this._maxListeners && (this._events[type].warned = !0, logPossibleMemoryLeak.call(this, this._events[type].length, type))) : this._events[type] = listener, this)
                }, EventEmitter.prototype.off = function(type, listener) {
                    function recursivelyGarbageCollect(root) {
                        if (root !== undefined) {
                            var keys = Object.keys(root);
                            for (var i in keys) {
                                var key = keys[i],
                                    obj = root[key];
                                obj instanceof Function || "object" != typeof obj || null === obj || (Object.keys(obj).length > 0 && recursivelyGarbageCollect(root[key]), 0 === Object.keys(obj).length && delete root[key])
                            }
                        }
                    }
                    if ("function" != typeof listener) throw new Error("removeListener only takes instances of Function");
                    var handlers, leafs = [];
                    if (this.wildcard) {
                        var ns = "string" == typeof type ? type.split(this.delimiter) : type.slice();
                        leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0)
                    } else {
                        if (!this._events[type]) return this;
                        handlers = this._events[type], leafs.push({
                            _listeners: handlers
                        })
                    }
                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {
                        var leaf = leafs[iLeaf];
                        if (handlers = leaf._listeners, isArray(handlers)) {
                            for (var position = -1, i = 0, length = handlers.length; i < length; i++)
                                if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {
                                    position = i;
                                    break
                                }
                            if (position < 0) continue;
                            return this.wildcard ? leaf._listeners.splice(position, 1) : this._events[type].splice(position, 1), 0 === handlers.length && (this.wildcard ? delete leaf._listeners : delete this._events[type]), this.emit("removeListener", type, listener), this
                        }(handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) && (this.wildcard ? delete leaf._listeners : delete this._events[type], this.emit("removeListener", type, listener))
                    }
                    return recursivelyGarbageCollect(this.listenerTree), this
                }, EventEmitter.prototype.offAny = function(fn) {
                    var fns, i = 0,
                        l = 0;
                    if (fn && this._all && this._all.length > 0) {
                        for (fns = this._all, i = 0, l = fns.length; i < l; i++)
                            if (fn === fns[i]) return fns.splice(i, 1), this.emit("removeListenerAny", fn), this
                    } else {
                        for (fns = this._all, i = 0, l = fns.length; i < l; i++) this.emit("removeListenerAny", fns[i]);
                        this._all = []
                    }
                    return this
                }, EventEmitter.prototype.removeListener = EventEmitter.prototype.off, EventEmitter.prototype.removeAllListeners = function(type) {
                    if (0 === arguments.length) return !this._events || init.call(this), this;
                    if (this.wildcard)
                        for (var ns = "string" == typeof type ? type.split(this.delimiter) : type.slice(), leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0), iLeaf = 0; iLeaf < leafs.length; iLeaf++) {
                            var leaf = leafs[iLeaf];
                            leaf._listeners = null
                        } else this._events && (this._events[type] = null);
                    return this
                }, EventEmitter.prototype.listeners = function(type) {
                    if (this.wildcard) {
                        var handlers = [],
                            ns = "string" == typeof type ? type.split(this.delimiter) : type.slice();
                        return searchListenerTree.call(this, handlers, ns, this.listenerTree, 0), handlers
                    }
                    return this._events || init.call(this), this._events[type] || (this._events[type] = []), isArray(this._events[type]) || (this._events[type] = [this._events[type]]), this._events[type]
                }, EventEmitter.prototype.eventNames = function() {
                    return Object.keys(this._events)
                }, EventEmitter.prototype.listenerCount = function(type) {
                    return this.listeners(type).length
                }, EventEmitter.prototype.listenersAny = function() {
                    return this._all ? this._all : []
                }, "function" == typeof define && define.amd ? define(function() {
                    return EventEmitter
                }) : "object" == typeof exports ? module.exports = EventEmitter : window.EventEmitter2 = EventEmitter
            }()
        }).call(this, require("_process"))
    }, {
        _process: 13
    }],
    43: [function(require, module, exports) {
        function EventEmitter() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0
        }

        function isFunction(arg) {
            return "function" == typeof arg
        }

        function isNumber(arg) {
            return "number" == typeof arg
        }

        function isObject(arg) {
            return "object" == typeof arg && null !== arg
        }

        function isUndefined(arg) {
            return void 0 === arg
        }
        module.exports = EventEmitter, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._maxListeners = void 0, EventEmitter.defaultMaxListeners = 10, EventEmitter.prototype.setMaxListeners = function(n) {
            if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError("n must be a positive number");
            return this._maxListeners = n, this
        }, EventEmitter.prototype.emit = function(type) {
            var er, handler, len, args, i, listeners;
            if (this._events || (this._events = {}), "error" === type && (!this._events.error || isObject(this._events.error) && !this._events.error.length)) {
                if ((er = arguments[1]) instanceof Error) throw er;
                var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
                throw err.context = er, err
            }
            if (handler = this._events[type], isUndefined(handler)) return !1;
            if (isFunction(handler)) switch (arguments.length) {
                case 1:
                    handler.call(this);
                    break;
                case 2:
                    handler.call(this, arguments[1]);
                    break;
                case 3:
                    handler.call(this, arguments[1], arguments[2]);
                    break;
                default:
                    args = Array.prototype.slice.call(arguments, 1), handler.apply(this, args)
            } else if (isObject(handler))
                for (args = Array.prototype.slice.call(arguments, 1), listeners = handler.slice(), len = listeners.length, i = 0; i < len; i++) listeners[i].apply(this, args);
            return !0
        }, EventEmitter.prototype.addListener = function(type, listener) {
            var m;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", type, isFunction(listener.listener) ? listener.listener : listener), this._events[type] ? isObject(this._events[type]) ? this._events[type].push(listener) : this._events[type] = [this._events[type], listener] : this._events[type] = listener, isObject(this._events[type]) && !this._events[type].warned && (m = isUndefined(this._maxListeners) ? EventEmitter.defaultMaxListeners : this._maxListeners) && m > 0 && this._events[type].length > m && (this._events[type].warned = !0, console.trace), this
        }, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.once = function(type, listener) {
            function g() {
                this.removeListener(type, g), fired || (fired = !0, listener.apply(this, arguments))
            }
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            var fired = !1;
            return g.listener = listener, this.on(type, g), this
        }, EventEmitter.prototype.removeListener = function(type, listener) {
            var list, position, length, i;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[type]) return this;
            if (list = this._events[type], length = list.length, position = -1, list === listener || isFunction(list.listener) && list.listener === listener) delete this._events[type], this._events.removeListener && this.emit("removeListener", type, listener);
            else if (isObject(list)) {
                for (i = length; i-- > 0;)
                    if (list[i] === listener || list[i].listener && list[i].listener === listener) {
                        position = i;
                        break
                    }
                if (position < 0) return this;
                1 === list.length ? (list.length = 0, delete this._events[type]) : list.splice(position, 1), this._events.removeListener && this.emit("removeListener", type, listener)
            }
            return this
        }, EventEmitter.prototype.removeAllListeners = function(type) {
            var key, listeners;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[type] && delete this._events[type], this;
            if (0 === arguments.length) {
                for (key in this._events) "removeListener" !== key && this.removeAllListeners(key);
                return this.removeAllListeners("removeListener"), this._events = {}, this
            }
            if (listeners = this._events[type], isFunction(listeners)) this.removeListener(type, listeners);
            else if (listeners)
                for (; listeners.length;) this.removeListener(type, listeners[listeners.length - 1]);
            return delete this._events[type], this
        }, EventEmitter.prototype.listeners = function(type) {
            return this._events && this._events[type] ? isFunction(this._events[type]) ? [this._events[type]] : this._events[type].slice() : []
        }, EventEmitter.prototype.listenerCount = function(type) {
            if (this._events) {
                var evlistener = this._events[type];
                if (isFunction(evlistener)) return 1;
                if (evlistener) return evlistener.length
            }
            return 0
        }, EventEmitter.listenerCount = function(emitter, type) {
            return emitter.listenerCount(type)
        }
    }, {}],
    44: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var emptyFunction = require("./emptyFunction"),
                EventListener = {
                    listen: function(target, eventType, callback) {
                        return target.addEventListener ? (target.addEventListener(eventType, callback, !1), {
                            remove: function() {
                                target.removeEventListener(eventType, callback, !1)
                            }
                        }) : target.attachEvent ? (target.attachEvent("on" + eventType, callback), {
                            remove: function() {
                                target.detachEvent("on" + eventType, callback)
                            }
                        }) : void 0
                    },
                    capture: function(target, eventType, callback) {
                        return target.addEventListener ? (target.addEventListener(eventType, callback, !0), {
                            remove: function() {
                                target.removeEventListener(eventType, callback, !0)
                            }
                        }) : (process.env.NODE_ENV, {
                            remove: emptyFunction
                        })
                    },
                    registerDefault: function() {}
                };
            module.exports = EventListener
        }).call(this, require("_process"))
    }, {
        "./emptyFunction": 51,
        _process: 13
    }],
    45: [function(require, module, exports) {
        "use strict";
        var canUseDOM = !("undefined" == typeof window || !window.document || !window.document.createElement),
            ExecutionEnvironment = {
                canUseDOM: canUseDOM,
                canUseWorkers: "undefined" != typeof Worker,
                canUseEventListeners: canUseDOM && !(!window.addEventListener && !window.attachEvent),
                canUseViewport: canUseDOM && !!window.screen,
                isInWorker: !canUseDOM
            };
        module.exports = ExecutionEnvironment
    }, {}],
    46: [function(require, module, exports) {
        "use strict";

        function camelize(string) {
            return string.replace(_hyphenPattern, function(_, character) {
                return character.toUpperCase()
            })
        }
        var _hyphenPattern = /-(.)/g;
        module.exports = camelize
    }, {}],
    47: [function(require, module, exports) {
        "use strict";

        function camelizeStyleName(string) {
            return camelize(string.replace(msPattern, "ms-"))
        }
        var camelize = require("./camelize"),
            msPattern = /^-ms-/;
        module.exports = camelizeStyleName
    }, {
        "./camelize": 46
    }],
    48: [function(require, module, exports) {
        "use strict";

        function containsNode(outerNode, innerNode) {
            return !(!outerNode || !innerNode) && (outerNode === innerNode || !isTextNode(outerNode) && (isTextNode(innerNode) ? containsNode(outerNode, innerNode.parentNode) : "contains" in outerNode ? outerNode.contains(innerNode) : !!outerNode.compareDocumentPosition && !!(16 & outerNode.compareDocumentPosition(innerNode))))
        }
        var isTextNode = require("./isTextNode");
        module.exports = containsNode
    }, {
        "./isTextNode": 61
    }],
    49: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function toArray(obj) {
                var length = obj.length;
                if ((Array.isArray(obj) || "object" != typeof obj && "function" != typeof obj) && ("production" !== process.env.NODE_ENV ? invariant(!1, "toArray: Array-like object expected") : invariant(!1)), "number" != typeof length && ("production" !== process.env.NODE_ENV ? invariant(!1, "toArray: Object needs a length property") : invariant(!1)), 0 === length || length - 1 in obj || ("production" !== process.env.NODE_ENV ? invariant(!1, "toArray: Object should have keys for indices") : invariant(!1)), "function" == typeof obj.callee && ("production" !== process.env.NODE_ENV ? invariant(!1, "toArray: Object can't be `arguments`. Use rest params (function(...args) {}) or Array.from() instead.") : invariant(!1)), obj.hasOwnProperty) try {
                    return Array.prototype.slice.call(obj)
                } catch (e) {}
                for (var ret = Array(length), ii = 0; ii < length; ii++) ret[ii] = obj[ii];
                return ret
            }

            function hasArrayNature(obj) {
                return !!obj && ("object" == typeof obj || "function" == typeof obj) && "length" in obj && !("setInterval" in obj) && "number" != typeof obj.nodeType && (Array.isArray(obj) || "callee" in obj || "item" in obj)
            }

            function createArrayFromMixed(obj) {
                return hasArrayNature(obj) ? Array.isArray(obj) ? obj.slice() : toArray(obj) : [obj]
            }
            var invariant = require("./invariant");
            module.exports = createArrayFromMixed
        }).call(this, require("_process"))
    }, {
        "./invariant": 59,
        _process: 13
    }],
    50: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getNodeName(markup) {
                var nodeNameMatch = markup.match(nodeNamePattern);
                return nodeNameMatch && nodeNameMatch[1].toLowerCase()
            }

            function createNodesFromMarkup(markup, handleScript) {
                var node = dummyNode;
                dummyNode || ("production" !== process.env.NODE_ENV ? invariant(!1, "createNodesFromMarkup dummy not initialized") : invariant(!1));
                var nodeName = getNodeName(markup),
                    wrap = nodeName && getMarkupWrap(nodeName);
                if (wrap) {
                    node.innerHTML = wrap[1] + markup + wrap[2];
                    for (var wrapDepth = wrap[0]; wrapDepth--;) node = node.lastChild
                } else node.innerHTML = markup;
                var scripts = node.getElementsByTagName("script");
                scripts.length && (handleScript || ("production" !== process.env.NODE_ENV ? invariant(!1, "createNodesFromMarkup(...): Unexpected <script> element rendered.") : invariant(!1)), createArrayFromMixed(scripts).forEach(handleScript));
                for (var nodes = Array.from(node.childNodes); node.lastChild;) node.removeChild(node.lastChild);
                return nodes
            }
            var ExecutionEnvironment = require("./ExecutionEnvironment"),
                createArrayFromMixed = require("./createArrayFromMixed"),
                getMarkupWrap = require("./getMarkupWrap"),
                invariant = require("./invariant"),
                dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement("div") : null,
                nodeNamePattern = /^\s*<(\w+)/;
            module.exports = createNodesFromMarkup
        }).call(this, require("_process"))
    }, {
        "./ExecutionEnvironment": 45,
        "./createArrayFromMixed": 49,
        "./getMarkupWrap": 55,
        "./invariant": 59,
        _process: 13
    }],
    51: [function(require, module, exports) {
        "use strict";

        function makeEmptyFunction(arg) {
            return function() {
                return arg
            }
        }
        var emptyFunction = function() {};
        emptyFunction.thatReturns = makeEmptyFunction, emptyFunction.thatReturnsFalse = makeEmptyFunction(!1), emptyFunction.thatReturnsTrue = makeEmptyFunction(!0), emptyFunction.thatReturnsNull = makeEmptyFunction(null), emptyFunction.thatReturnsThis = function() {
            return this
        }, emptyFunction.thatReturnsArgument = function(arg) {
            return arg
        }, module.exports = emptyFunction
    }, {}],
    52: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var emptyObject = {};
            "production" !== process.env.NODE_ENV && Object.freeze(emptyObject), module.exports = emptyObject
        }).call(this, require("_process"))
    }, {
        _process: 13
    }],
    53: [function(require, module, exports) {
        "use strict";

        function focusNode(node) {
            try {
                node.focus()
            } catch (e) {}
        }
        module.exports = focusNode
    }, {}],
    54: [function(require, module, exports) {
        "use strict";

        function getActiveElement(doc) {
            if (void 0 === (doc = doc || ("undefined" != typeof document ? document : void 0))) return null;
            try {
                return doc.activeElement || doc.body
            } catch (e) {
                return doc.body
            }
        }
        module.exports = getActiveElement
    }, {}],
    55: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getMarkupWrap(nodeName) {
                return dummyNode || ("production" !== process.env.NODE_ENV ? invariant(!1, "Markup wrapping node not initialized") : invariant(!1)), markupWrap.hasOwnProperty(nodeName) || (nodeName = "*"), shouldWrap.hasOwnProperty(nodeName) || (dummyNode.innerHTML = "*" === nodeName ? "<link />" : "<" + nodeName + "></" + nodeName + ">", shouldWrap[nodeName] = !dummyNode.firstChild), shouldWrap[nodeName] ? markupWrap[nodeName] : null
            }
            var ExecutionEnvironment = require("./ExecutionEnvironment"),
                invariant = require("./invariant"),
                dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement("div") : null,
                shouldWrap = {},
                selectWrap = [1, '<select multiple="true">', "</select>"],
                tableWrap = [1, "<table>", "</table>"],
                trWrap = [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', "</svg>"],
                markupWrap = {
                    "*": [1, "?<div>", "</div>"],
                    area: [1, "<map>", "</map>"],
                    col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                    legend: [1, "<fieldset>", "</fieldset>"],
                    param: [1, "<object>", "</object>"],
                    tr: [2, "<table><tbody>", "</tbody></table>"],
                    optgroup: selectWrap,
                    option: selectWrap,
                    caption: tableWrap,
                    colgroup: tableWrap,
                    tbody: tableWrap,
                    tfoot: tableWrap,
                    thead: tableWrap,
                    td: trWrap,
                    th: trWrap
                };
            ["circle", "clipPath", "defs", "ellipse", "g", "image", "line", "linearGradient", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "text", "tspan"].forEach(function(nodeName) {
                markupWrap[nodeName] = svgWrap, shouldWrap[nodeName] = !0
            }), module.exports = getMarkupWrap
        }).call(this, require("_process"))
    }, {
        "./ExecutionEnvironment": 45,
        "./invariant": 59,
        _process: 13
    }],
    56: [function(require, module, exports) {
        "use strict";

        function getUnboundedScrollPosition(scrollable) {
            return scrollable.Window && scrollable instanceof scrollable.Window ? {
                x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
                y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
            } : {
                x: scrollable.scrollLeft,
                y: scrollable.scrollTop
            }
        }
        module.exports = getUnboundedScrollPosition
    }, {}],
    57: [function(require, module, exports) {
        "use strict";

        function hyphenate(string) {
            return string.replace(_uppercasePattern, "-$1").toLowerCase()
        }
        var _uppercasePattern = /([A-Z])/g;
        module.exports = hyphenate
    }, {}],
    58: [function(require, module, exports) {
        "use strict";

        function hyphenateStyleName(string) {
            return hyphenate(string).replace(msPattern, "-ms-")
        }
        var hyphenate = require("./hyphenate"),
            msPattern = /^ms-/;
        module.exports = hyphenateStyleName
    }, {
        "./hyphenate": 57
    }],
    59: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function invariant(condition, format, a, b, c, d, e, f) {
                if (validateFormat(format), !condition) {
                    var error;
                    if (void 0 === format) error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                    else {
                        var args = [a, b, c, d, e, f],
                            argIndex = 0;
                        error = new Error(format.replace(/%s/g, function() {
                            return args[argIndex++]
                        })), error.name = "Invariant Violation"
                    }
                    throw error.framesToPop = 1, error
                }
            }
            var validateFormat = function(format) {};
            "production" !== process.env.NODE_ENV && (validateFormat = function(format) {
                if (void 0 === format) throw new Error("invariant requires an error message argument")
            }), module.exports = invariant
        }).call(this, require("_process"))
    }, {
        _process: 13
    }],
    60: [function(require, module, exports) {
        "use strict";

        function isNode(object) {
            var doc = object ? object.ownerDocument || object : document,
                defaultView = doc.defaultView || window;
            return !(!object || !("function" == typeof defaultView.Node ? object instanceof defaultView.Node : "object" == typeof object && "number" == typeof object.nodeType && "string" == typeof object.nodeName))
        }
        module.exports = isNode
    }, {}],
    61: [function(require, module, exports) {
        "use strict";

        function isTextNode(object) {
            return isNode(object) && 3 == object.nodeType
        }
        var isNode = require("./isNode");
        module.exports = isTextNode
    }, {
        "./isNode": 60
    }],
    62: [function(require, module, exports) {
        "use strict";

        function memoizeStringOnly(callback) {
            var cache = {};
            return function(string) {
                return cache.hasOwnProperty(string) || (cache[string] = callback.call(this, string)), cache[string]
            }
        }
        module.exports = memoizeStringOnly
    }, {}],
    63: [function(require, module, exports) {
        "use strict";
        var performance, ExecutionEnvironment = require("./ExecutionEnvironment");
        ExecutionEnvironment.canUseDOM && (performance = window.performance || window.msPerformance || window.webkitPerformance), module.exports = performance || {}
    }, {
        "./ExecutionEnvironment": 45
    }],
    64: [function(require, module, exports) {
        "use strict";
        var performanceNow, performance = require("./performance");
        performanceNow = performance.now ? function() {
            return performance.now()
        } : function() {
            return Date.now()
        }, module.exports = performanceNow
    }, {
        "./performance": 63
    }],
    65: [function(require, module, exports) {
        "use strict";

        function is(x, y) {
            return x === y ? 0 !== x || 0 !== y || 1 / x == 1 / y : x !== x && y !== y
        }

        function shallowEqual(objA, objB) {
            if (is(objA, objB)) return !0;
            if ("object" != typeof objA || null === objA || "object" != typeof objB || null === objB) return !1;
            var keysA = Object.keys(objA),
                keysB = Object.keys(objB);
            if (keysA.length !== keysB.length) return !1;
            for (var i = 0; i < keysA.length; i++)
                if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) return !1;
            return !0
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        module.exports = shallowEqual
    }, {}],
    66: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var emptyFunction = require("./emptyFunction"),
                warning = emptyFunction;
            "production" !== process.env.NODE_ENV && function() {
                var printWarning = function(format) {
                    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) args[_key - 1] = arguments[_key];
                    var argIndex = 0,
                        message = "Warning: " + format.replace(/%s/g, function() {
                                return args[argIndex++]
                            });
                    try {
                        throw new Error(message)
                    } catch (x) {}
                };
                warning = function(condition, format) {
                    if (void 0 === format) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
                    if (0 !== format.indexOf("Failed Composite propType: ") && !condition) {
                        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) args[_key2 - 2] = arguments[_key2];
                        printWarning.apply(void 0, [format].concat(args))
                    }
                }
            }(), module.exports = warning
        }).call(this, require("_process"))
    }, {
        "./emptyFunction": 51,
        _process: 13
    }],
    67: [function(require, module, exports) {
        var hasOwn = Object.prototype.hasOwnProperty,
            toString = Object.prototype.toString;
        module.exports = function(obj, fn, ctx) {
            if ("[object Function]" !== toString.call(fn)) throw new TypeError("iterator must be a function");
            var l = obj.length;
            if (l === +l)
                for (var i = 0; i < l; i++) fn.call(ctx, obj[i], i, obj);
            else
                for (var k in obj) hasOwn.call(obj, k) && fn.call(ctx, obj[k], k, obj)
        }
    }, {}],
    68: [function(require, module, exports) {
        var slice = Array.prototype.slice,
            toStr = Object.prototype.toString;
        module.exports = function(that) {
            var target = this;
            if ("function" != typeof target || "[object Function]" !== toStr.call(target)) throw new TypeError("Function.prototype.bind called on incompatible " + target);
            for (var bound, args = slice.call(arguments, 1), binder = function() {
                if (this instanceof bound) {
                    var result = target.apply(this, args.concat(slice.call(arguments)));
                    return Object(result) === result ? result : this
                }
                return target.apply(that, args.concat(slice.call(arguments)))
            }, boundLength = Math.max(0, target.length - args.length), boundArgs = [], i = 0; i < boundLength; i++) boundArgs.push("$" + i);
            if (bound = Function("binder", "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }")(binder), target.prototype) {
                var Empty = function() {};
                Empty.prototype = target.prototype, bound.prototype = new Empty, Empty.prototype = null
            }
            return bound
        }
    }, {}],
    69: [function(require, module, exports) {
        var implementation = require("./implementation");
        module.exports = Function.prototype.bind || implementation
    }, {
        "./implementation": 68
    }],
    70: [function(require, module, exports) {
        (function(global) {
            "undefined" != typeof window ? module.exports = window : void 0 !== global ? module.exports = global : "undefined" != typeof self ? module.exports = self : module.exports = {}
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}],
    71: [function(require, module, exports) {
        exports.node = function(value) {
            return void 0 !== value && value instanceof HTMLElement && 1 === value.nodeType
        }, exports.nodeList = function(value) {
            var type = Object.prototype.toString.call(value);
            return void 0 !== value && ("[object NodeList]" === type || "[object HTMLCollection]" === type) && "length" in value && (0 === value.length || exports.node(value[0]))
        }, exports.string = function(value) {
            return "string" == typeof value || value instanceof String
        }, exports.fn = function(value) {
            return "[object Function]" === Object.prototype.toString.call(value)
        }
    }, {}],
    72: [function(require, module, exports) {
        function listen(target, type, callback) {
            if (!target && !type && !callback) throw new Error("Missing required arguments");
            if (!is.string(type)) throw new TypeError("Second argument must be a String");
            if (!is.fn(callback)) throw new TypeError("Third argument must be a Function");
            if (is.node(target)) return listenNode(target, type, callback);
            if (is.nodeList(target)) return listenNodeList(target, type, callback);
            if (is.string(target)) return listenSelector(target, type, callback);
            throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")
        }

        function listenNode(node, type, callback) {
            return node.addEventListener(type, callback), {
                destroy: function() {
                    node.removeEventListener(type, callback)
                }
            }
        }

        function listenNodeList(nodeList, type, callback) {
            return Array.prototype.forEach.call(nodeList, function(node) {
                node.addEventListener(type, callback)
            }), {
                destroy: function() {
                    Array.prototype.forEach.call(nodeList, function(node) {
                        node.removeEventListener(type, callback)
                    })
                }
            }
        }

        function listenSelector(selector, type, callback) {
            return delegate(document.body, selector, type, callback)
        }
        var is = require("./is"),
            delegate = require("delegate");
        module.exports = listen
    }, {
        "./is": 71,
        delegate: 27
    }],
    73: [function(require, module, exports) {
        var bind = require("function-bind");
        module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty)
    }, {
        "function-bind": 69
    }],
    74: [function(require, module, exports) {
        "use strict";
        var fnToStr = Function.prototype.toString,
            constructorRegex = /^\s*class /,
            isES6ClassFn = function(value) {
                try {
                    var fnStr = fnToStr.call(value),
                        singleStripped = fnStr.replace(/\/\/.*\n/g, ""),
                        multiStripped = singleStripped.replace(/\/\*[.\s\S]*\*\//g, ""),
                        spaceStripped = multiStripped.replace(/\n/gm, " ").replace(/ {2}/g, " ");
                    return constructorRegex.test(spaceStripped)
                } catch (e) {
                    return !1
                }
            },
            tryFunctionObject = function(value) {
                try {
                    return !isES6ClassFn(value) && (fnToStr.call(value), !0)
                } catch (e) {
                    return !1
                }
            },
            toStr = Object.prototype.toString,
            hasToStringTag = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag;
        module.exports = function(value) {
            if (!value) return !1;
            if ("function" != typeof value && "object" != typeof value) return !1;
            if (hasToStringTag) return tryFunctionObject(value);
            if (isES6ClassFn(value)) return !1;
            var strClass = toStr.call(value);
            return "[object Function]" === strClass || "[object GeneratorFunction]" === strClass
        }
    }, {}],
    75: [function(require, module, exports) {
        "use strict";
        var getDay = Date.prototype.getDay,
            tryDateObject = function(value) {
                try {
                    return getDay.call(value), !0
                } catch (e) {
                    return !1
                }
            },
            toStr = Object.prototype.toString,
            hasToStringTag = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag;
        module.exports = function(value) {
            return "object" == typeof value && null !== value && (hasToStringTag ? tryDateObject(value) : "[object Date]" === toStr.call(value))
        }
    }, {}],
    76: [function(require, module, exports) {
        "use strict";
        var has = require("has"),
            regexExec = RegExp.prototype.exec,
            gOPD = Object.getOwnPropertyDescriptor,
            tryRegexExecCall = function(value) {
                try {
                    var lastIndex = value.lastIndex;
                    return value.lastIndex = 0, regexExec.call(value), !0
                } catch (e) {
                    return !1
                } finally {
                    value.lastIndex = lastIndex
                }
            },
            toStr = Object.prototype.toString,
            hasToStringTag = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag;
        module.exports = function(value) {
            if (!value || "object" != typeof value) return !1;
            if (!hasToStringTag) return "[object RegExp]" === toStr.call(value);
            var descriptor = gOPD(value, "lastIndex");
            return !(!descriptor || !has(descriptor, "value")) && tryRegexExecCall(value)
        }
    }, {
        has: 73
    }],
    77: [function(require, module, exports) {
        "use strict";
        var toStr = Object.prototype.toString;
        if ("function" == typeof Symbol && "symbol" == typeof Symbol()) {
            var symToStr = Symbol.prototype.toString,
                symStringRegex = /^Symbol\(.*\)$/,
                isSymbolObject = function(value) {
                    return "symbol" == typeof value.valueOf() && symStringRegex.test(symToStr.call(value))
                };
            module.exports = function(value) {
                if ("symbol" == typeof value) return !0;
                if ("[object Symbol]" !== toStr.call(value)) return !1;
                try {
                    return isSymbolObject(value)
                } catch (e) {
                    return !1
                }
            }
        } else module.exports = function(value) {
            return !1
        }
    }, {}],
    78: [function(require, module, exports) {
        ! function(factory) {
            var registeredInModuleLoader = !1;
            if ("function" == typeof define && define.amd && (define(factory), registeredInModuleLoader = !0), "object" == typeof exports && (module.exports = factory(), registeredInModuleLoader = !0), !registeredInModuleLoader) {
                var OldCookies = window.Cookies,
                    api = window.Cookies = factory();
                api.noConflict = function() {
                    return window.Cookies = OldCookies, api
                }
            }
        }(function() {
            function extend() {
                for (var i = 0, result = {}; i < arguments.length; i++) {
                    var attributes = arguments[i];
                    for (var key in attributes) result[key] = attributes[key]
                }
                return result
            }

            function init(converter) {
                function api(key, value, attributes) {
                    var result;
                    if ("undefined" != typeof document) {
                        if (arguments.length > 1) {
                            if (attributes = extend({
                                    path: "/"
                                }, api.defaults, attributes), "number" == typeof attributes.expires) {
                                var expires = new Date;
                                expires.setMilliseconds(expires.getMilliseconds() + 864e5 * attributes.expires), attributes.expires = expires
                            }
                            attributes.expires = attributes.expires ? attributes.expires.toUTCString() : "";
                            try {
                                result = JSON.stringify(value), /^[\{\[]/.test(result) && (value = result)
                            } catch (e) {}
                            value = converter.write ? converter.write(value, key) : encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), key = encodeURIComponent(String(key)), key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent), key = key.replace(/[\(\)]/g, escape);
                            var stringifiedAttributes = "";
                            for (var attributeName in attributes) attributes[attributeName] && (stringifiedAttributes += "; " + attributeName, !0 !== attributes[attributeName] && (stringifiedAttributes += "=" + attributes[attributeName]));
                            return document.cookie = key + "=" + value + stringifiedAttributes
                        }
                        key || (result = {});
                        for (var cookies = document.cookie ? document.cookie.split("; ") : [], i = 0; i < cookies.length; i++) {
                            var parts = cookies[i].split("="),
                                cookie = parts.slice(1).join("=");
                            '"' === cookie.charAt(0) && (cookie = cookie.slice(1, -1));
                            try {
                                var name = parts[0].replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
                                if (cookie = converter.read ? converter.read(cookie, name) : converter(cookie, name) || cookie.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent), this.json) try {
                                    cookie = JSON.parse(cookie)
                                } catch (e) {}
                                if (key === name) {
                                    result = cookie;
                                    break
                                }
                                key || (result[name] = cookie)
                            } catch (e) {}
                        }
                        return result
                    }
                }
                return api.set = api, api.get = function(key) {
                    return api.call(api, key)
                }, api.getJSON = function() {
                    return api.apply({
                        json: !0
                    }, [].slice.call(arguments))
                }, api.defaults = {}, api.remove = function(key, attributes) {
                    api(key, "", extend(attributes, {
                        expires: -1
                    }))
                }, api.withConverter = init, api
            }
            return init(function() {})
        })
    }, {}],
    79: [function(require, module, exports) {
        (function(global) {
            (function() {
                function runInContext(context, exports) {
                    function has(name) {
                        if (has[name] !== undef) return has[name];
                        var isSupported;
                        if ("bug-string-char-index" == name) isSupported = "a" != "a" [0];
                        else if ("json" == name) isSupported = has("json-stringify") && has("json-parse");
                        else {
                            var value, serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                            if ("json-stringify" == name) {
                                var stringify = exports.stringify,
                                    stringifySupported = "function" == typeof stringify && isExtended;
                                if (stringifySupported) {
                                    (value = function() {
                                        return 1
                                    }).toJSON = value;
                                    try {
                                        stringifySupported = "0" === stringify(0) && "0" === stringify(new Number) && '""' == stringify(new String) && stringify(getClass) === undef && stringify(undef) === undef && stringify() === undef && "1" === stringify(value) && "[1]" == stringify([value]) && "[null]" == stringify([undef]) && "null" == stringify(null) && "[null,null,null]" == stringify([undef, getClass, null]) && stringify({
                                                a: [value, !0, !1, null, "\0\b\n\f\r\t"]
                                            }) == serialized && "1" === stringify(null, value) && "[\n 1,\n 2\n]" == stringify([1, 2], null, 1) && '"-271821-04-20T00:00:00.000Z"' == stringify(new Date(-864e13)) && '"+275760-09-13T00:00:00.000Z"' == stringify(new Date(864e13)) && '"-000001-01-01T00:00:00.000Z"' == stringify(new Date(-621987552e5)) && '"1969-12-31T23:59:59.999Z"' == stringify(new Date(-1))
                                    } catch (exception) {
                                        stringifySupported = !1
                                    }
                                }
                                isSupported = stringifySupported
                            }
                            if ("json-parse" == name) {
                                var parse = exports.parse;
                                if ("function" == typeof parse) try {
                                    if (0 === parse("0") && !parse(!1)) {
                                        value = parse(serialized);
                                        var parseSupported = 5 == value.a.length && 1 === value.a[0];
                                        if (parseSupported) {
                                            try {
                                                parseSupported = !parse('"\t"')
                                            } catch (exception) {}
                                            if (parseSupported) try {
                                                parseSupported = 1 !== parse("01")
                                            } catch (exception) {}
                                            if (parseSupported) try {
                                                parseSupported = 1 !== parse("1.")
                                            } catch (exception) {}
                                        }
                                    }
                                } catch (exception) {
                                    parseSupported = !1
                                }
                                isSupported = parseSupported
                            }
                        }
                        return has[name] = !!isSupported
                    }
                    context || (context = root.Object()), exports || (exports = root.Object());
                    var Number = context.Number || root.Number,
                        String = context.String || root.String,
                        Object = context.Object || root.Object,
                        Date = context.Date || root.Date,
                        SyntaxError = context.SyntaxError || root.SyntaxError,
                        TypeError = context.TypeError || root.TypeError,
                        Math = context.Math || root.Math,
                        nativeJSON = context.JSON || root.JSON;
                    "object" == typeof nativeJSON && nativeJSON && (exports.stringify = nativeJSON.stringify, exports.parse = nativeJSON.parse);
                    var isProperty, forEach, undef, objectProto = Object.prototype,
                        getClass = objectProto.toString,
                        isExtended = new Date(-0xc782b5b800cec);
                    try {
                        isExtended = -109252 == isExtended.getUTCFullYear() && 0 === isExtended.getUTCMonth() && 1 === isExtended.getUTCDate() && 10 == isExtended.getUTCHours() && 37 == isExtended.getUTCMinutes() && 6 == isExtended.getUTCSeconds() && 708 == isExtended.getUTCMilliseconds()
                    } catch (exception) {}
                    if (!has("json")) {
                        var charIndexBuggy = has("bug-string-char-index");
                        if (!isExtended) var floor = Math.floor,
                            Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
                            getDay = function(year, month) {
                                return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400)
                            };
                        if ((isProperty = objectProto.hasOwnProperty) || (isProperty = function(property) {
                                var constructor, members = {};
                                return (members.__proto__ = null, members.__proto__ = {
                                    toString: 1
                                }, members).toString != getClass ? isProperty = function(property) {
                                    var original = this.__proto__,
                                        result = property in (this.__proto__ = null, this);
                                    return this.__proto__ = original, result
                                } : (constructor = members.constructor, isProperty = function(property) {
                                    var parent = (this.constructor || constructor).prototype;
                                    return property in this && !(property in parent && this[property] === parent[property])
                                }), members = null, isProperty.call(this, property)
                            }), forEach = function(object, callback) {
                                var Properties, members, property, size = 0;
                                (Properties = function() {
                                    this.valueOf = 0
                                }).prototype.valueOf = 0, members = new Properties;
                                for (property in members) isProperty.call(members, property) && size++;
                                return Properties = members = null, size ? forEach = 2 == size ? function(object, callback) {
                                    var property, members = {},
                                        isFunction = "[object Function]" == getClass.call(object);
                                    for (property in object) isFunction && "prototype" == property || isProperty.call(members, property) || !(members[property] = 1) || !isProperty.call(object, property) || callback(property)
                                } : function(object, callback) {
                                    var property, isConstructor, isFunction = "[object Function]" == getClass.call(object);
                                    for (property in object) isFunction && "prototype" == property || !isProperty.call(object, property) || (isConstructor = "constructor" === property) || callback(property);
                                    (isConstructor || isProperty.call(object, property = "constructor")) && callback(property)
                                } : (members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"], forEach = function(object, callback) {
                                    var property, length, isFunction = "[object Function]" == getClass.call(object),
                                        hasProperty = !isFunction && "function" != typeof object.constructor && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;
                                    for (property in object) isFunction && "prototype" == property || !hasProperty.call(object, property) || callback(property);
                                    for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));
                                }), forEach(object, callback)
                            }, !has("json-stringify")) {
                            var Escapes = {
                                    92: "\\\\",
                                    34: '\\"',
                                    8: "\\b",
                                    12: "\\f",
                                    10: "\\n",
                                    13: "\\r",
                                    9: "\\t"
                                },
                                toPaddedString = function(width, value) {
                                    return ("000000" + (value || 0)).slice(-width)
                                },
                                quote = function(value) {
                                    for (var result = '"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10, symbols = useCharIndex && (charIndexBuggy ? value.split("") : value); index < length; index++) {
                                        var charCode = value.charCodeAt(index);
                                        switch (charCode) {
                                            case 8:
                                            case 9:
                                            case 10:
                                            case 12:
                                            case 13:
                                            case 34:
                                            case 92:
                                                result += Escapes[charCode];
                                                break;
                                            default:
                                                if (charCode < 32) {
                                                    result += "\\u00" + toPaddedString(2, charCode.toString(16));
                                                    break
                                                }
                                                result += useCharIndex ? symbols[index] : value.charAt(index)
                                        }
                                    }
                                    return result + '"'
                                },
                                serialize = function(property, object, callback, properties, whitespace, indentation, stack) {
                                    var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;
                                    try {
                                        value = object[property]
                                    } catch (exception) {}
                                    if ("object" == typeof value && value)
                                        if ("[object Date]" != (className = getClass.call(value)) || isProperty.call(value, "toJSON")) "function" == typeof value.toJSON && ("[object Number]" != className && "[object String]" != className && "[object Array]" != className || isProperty.call(value, "toJSON")) && (value = value.toJSON(property));
                                        else if (value > -1 / 0 && value < 1 / 0) {
                                            if (getDay) {
                                                for (date = floor(value / 864e5), year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);
                                                for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);
                                                date = 1 + date - getDay(year, month), time = (value % 864e5 + 864e5) % 864e5, hours = floor(time / 36e5) % 24, minutes = floor(time / 6e4) % 60, seconds = floor(time / 1e3) % 60, milliseconds = time % 1e3
                                            } else year = value.getUTCFullYear(), month = value.getUTCMonth(), date = value.getUTCDate(), hours = value.getUTCHours(), minutes = value.getUTCMinutes(), seconds = value.getUTCSeconds(), milliseconds = value.getUTCMilliseconds();
                                            value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) + "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) + "." + toPaddedString(3, milliseconds) + "Z"
                                        } else value = null;
                                    if (callback && (value = callback.call(object, property, value)), null === value) return "null";
                                    if ("[object Boolean]" == (className = getClass.call(value))) return "" + value;
                                    if ("[object Number]" == className) return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
                                    if ("[object String]" == className) return quote("" + value);
                                    if ("object" == typeof value) {
                                        for (length = stack.length; length--;)
                                            if (stack[length] === value) throw TypeError();
                                        if (stack.push(value), results = [], prefix = indentation, indentation += whitespace, "[object Array]" == className) {
                                            for (index = 0, length = value.length; index < length; index++) element = serialize(index, value, callback, properties, whitespace, indentation, stack), results.push(element === undef ? "null" : element);
                                            result = results.length ? whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : "[" + results.join(",") + "]" : "[]"
                                        } else forEach(properties || value, function(property) {
                                            var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
                                            element !== undef && results.push(quote(property) + ":" + (whitespace ? " " : "") + element)
                                        }), result = results.length ? whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : "{" + results.join(",") + "}" : "{}";
                                        return stack.pop(), result
                                    }
                                };
                            exports.stringify = function(source, filter, width) {
                                var whitespace, callback, properties, className;
                                if (objectTypes[typeof filter] && filter)
                                    if ("[object Function]" == (className = getClass.call(filter))) callback = filter;
                                    else if ("[object Array]" == className) {
                                        properties = {};
                                        for (var value, index = 0, length = filter.length; index < length; value = filter[index++], ("[object String]" == (className = getClass.call(value)) || "[object Number]" == className) && (properties[value] = 1));
                                    }
                                if (width)
                                    if ("[object Number]" == (className = getClass.call(width))) {
                                        if ((width -= width % 1) > 0)
                                            for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ");
                                    } else "[object String]" == className && (whitespace = width.length <= 10 ? width : width.slice(0, 10));
                                return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", [])
                            }
                        }
                        if (!has("json-parse")) {
                            var Index, Source, fromCharCode = String.fromCharCode,
                                Unescapes = {
                                    92: "\\",
                                    34: '"',
                                    47: "/",
                                    98: "\b",
                                    116: "\t",
                                    110: "\n",
                                    102: "\f",
                                    114: "\r"
                                },
                                abort = function() {
                                    throw Index = Source = null, SyntaxError()
                                },
                                lex = function() {
                                    for (var value, begin, position, isSigned, charCode, source = Source, length = source.length; Index < length;) switch (charCode = source.charCodeAt(Index)) {
                                        case 9:
                                        case 10:
                                        case 13:
                                        case 32:
                                            Index++;
                                            break;
                                        case 123:
                                        case 125:
                                        case 91:
                                        case 93:
                                        case 58:
                                        case 44:
                                            return value = charIndexBuggy ? source.charAt(Index) : source[Index], Index++, value;
                                        case 34:
                                            for (value = "@", Index++; Index < length;)
                                                if ((charCode = source.charCodeAt(Index)) < 32) abort();
                                                else if (92 == charCode) switch (charCode = source.charCodeAt(++Index)) {
                                                    case 92:
                                                    case 34:
                                                    case 47:
                                                    case 98:
                                                    case 116:
                                                    case 110:
                                                    case 102:
                                                    case 114:
                                                        value += Unescapes[charCode], Index++;
                                                        break;
                                                    case 117:
                                                        for (begin = ++Index, position = Index + 4; Index < position; Index++)(charCode = source.charCodeAt(Index)) >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70 || abort();
                                                        value += fromCharCode("0x" + source.slice(begin, Index));
                                                        break;
                                                    default:
                                                        abort()
                                                } else {
                                                    if (34 == charCode) break;
                                                    for (charCode = source.charCodeAt(Index), begin = Index; charCode >= 32 && 92 != charCode && 34 != charCode;) charCode = source.charCodeAt(++Index);
                                                    value += source.slice(begin, Index)
                                                }
                                            if (34 == source.charCodeAt(Index)) return Index++, value;
                                            abort();
                                        default:
                                            if (begin = Index, 45 == charCode && (isSigned = !0, charCode = source.charCodeAt(++Index)), charCode >= 48 && charCode <= 57) {
                                                for (48 == charCode && (charCode = source.charCodeAt(Index + 1)) >= 48 && charCode <= 57 && abort(), isSigned = !1; Index < length && (charCode = source.charCodeAt(Index)) >= 48 && charCode <= 57; Index++);
                                                if (46 == source.charCodeAt(Index)) {
                                                    for (position = ++Index; position < length && (charCode = source.charCodeAt(position)) >= 48 && charCode <= 57; position++);
                                                    position == Index && abort(), Index = position
                                                }
                                                if (101 == (charCode = source.charCodeAt(Index)) || 69 == charCode) {
                                                    for (charCode = source.charCodeAt(++Index), 43 != charCode && 45 != charCode || Index++, position = Index; position < length && (charCode = source.charCodeAt(position)) >= 48 && charCode <= 57; position++);
                                                    position == Index && abort(), Index = position
                                                }
                                                return +source.slice(begin, Index)
                                            }
                                            if (isSigned && abort(), "true" == source.slice(Index, Index + 4)) return Index += 4, !0;
                                            if ("false" == source.slice(Index, Index + 5)) return Index += 5, !1;
                                            if ("null" == source.slice(Index, Index + 4)) return Index += 4, null;
                                            abort()
                                    }
                                    return "$"
                                },
                                get = function(value) {
                                    var results, hasMembers;
                                    if ("$" == value && abort(), "string" == typeof value) {
                                        if ("@" == (charIndexBuggy ? value.charAt(0) : value[0])) return value.slice(1);
                                        if ("[" == value) {
                                            for (results = [];
                                                 "]" != (value = lex()); hasMembers || (hasMembers = !0)) hasMembers && ("," == value ? "]" == (value = lex()) && abort() : abort()), "," == value && abort(), results.push(get(value));
                                            return results
                                        }
                                        if ("{" == value) {
                                            for (results = {};
                                                 "}" != (value = lex()); hasMembers || (hasMembers = !0)) hasMembers && ("," == value ? "}" == (value = lex()) && abort() : abort()), "," != value && "string" == typeof value && "@" == (charIndexBuggy ? value.charAt(0) : value[0]) && ":" == lex() || abort(), results[value.slice(1)] = get(lex());
                                            return results
                                        }
                                        abort()
                                    }
                                    return value
                                },
                                update = function(source, property, callback) {
                                    var element = walk(source, property, callback);
                                    element === undef ? delete source[property] : source[property] = element
                                },
                                walk = function(source, property, callback) {
                                    var length, value = source[property];
                                    if ("object" == typeof value && value)
                                        if ("[object Array]" == getClass.call(value))
                                            for (length = value.length; length--;) update(value, length, callback);
                                        else forEach(value, function(property) {
                                            update(value, property, callback)
                                        });
                                    return callback.call(source, property, value)
                                };
                            exports.parse = function(source, callback) {
                                var result, value;
                                return Index = 0, Source = "" + source, result = get(lex()), "$" != lex() && abort(), Index = Source = null, callback && "[object Function]" == getClass.call(callback) ? walk((value = {}, value[""] = result, value), "", callback) : result
                            }
                        }
                    }
                    return exports.runInContext = runInContext, exports
                }
                var isLoader = "function" == typeof define && define.amd,
                    objectTypes = {
                        function: !0,
                        object: !0
                    },
                    freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports,
                    root = objectTypes[typeof window] && window || this,
                    freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && "object" == typeof global && global;
                if (!freeGlobal || freeGlobal.global !== freeGlobal && freeGlobal.window !== freeGlobal && freeGlobal.self !== freeGlobal || (root = freeGlobal), freeExports && !isLoader) runInContext(root, freeExports);
                else {
                    var nativeJSON = root.JSON,
                        previousJSON = root.JSON3,
                        isRestored = !1,
                        JSON3 = runInContext(root, root.JSON3 = {
                            noConflict: function() {
                                return isRestored || (isRestored = !0, root.JSON = nativeJSON, root.JSON3 = previousJSON, nativeJSON = previousJSON = null), JSON3
                            }
                        });
                    root.JSON = {
                        parse: JSON3.parse,
                        stringify: JSON3.stringify
                    }
                }
                isLoader && define(function() {
                    return JSON3
                })
            }).call(this)
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}],
    80: [function(require, module, exports) {
        function noop() {}

        function jsonp(url, opts, fn) {
            function cleanup() {
                script.parentNode && script.parentNode.removeChild(script), window[id] = noop, timer && clearTimeout(timer)
            }

            function cancel() {
                window[id] && cleanup()
            }
            "function" == typeof opts && (fn = opts, opts = {}), opts || (opts = {});
            var script, timer, prefix = opts.prefix || "__jp",
                id = opts.name || prefix + count++,
                param = opts.param || "callback",
                timeout = null != opts.timeout ? opts.timeout : 6e4,
                enc = encodeURIComponent,
                target = document.getElementsByTagName("script")[0] || document.head;
            return timeout && (timer = setTimeout(function() {
                cleanup(), fn && fn(new Error("Timeout"))
            }, timeout)), window[id] = function(data) {
                debug("jsonp got", data), cleanup(), fn && fn(null, data)
            },
                url += (~url.indexOf("?") ? "&" : "?") + param + "=" + enc(id), url = url.replace("?&", "?"), debug('jsonp req "%s"', url), script = document.createElement("script"), script.src = url, target.parentNode.insertBefore(script, target), cancel
        }
        var debug = require("debug")("jsonp");
        module.exports = jsonp;
        var count = 0
    }, {
        debug: 23
    }],
    81: [function(require, module, exports) {
        ! function() {
            "use strict";
            if (!("ø".localeCompare("p", "da-DK") > 0)) {
                var characterMaps = {
                        da: "­  _-,;:!¡?¿.·'\"«»()[]{}§¶@*/&#%`´^¯¨¸°©®+±÷×<=>¬|¦~¤¢$£¥01¹½¼2²3³¾456789AaªÁáÀàÂâÃãBbCcÇçDdÐðEeÉéÈèÊêËëFfGgHhIiÍíÌìÎîÏïJjKkLlMmNnÑñOoºÓóÒòÔôÕõPpQqRrSsßTtÞþUuÚúÙùÛûVvWwXxYyÝýÿÜüZzÆæÄäØøÖöÅåµ",
                        nb: "­  _-,;:!¡?¿.·'\"«»()[]{}§¶@*/&#%`´^¯¨¸°©®+±÷×<=>¬|¦~¤¢$£¥01¹½¼2²3³¾456789aAªáÁàÀâÂãÃbBcCçÇdDðÐeEéÉèÈêÊëËfFgGhHiIíÍìÌîÎïÏjJkKlLmMnNñÑoOºóÓòÒôÔõÕpPqQrRsSßtTþÞuUúÚùÙûÛvVwWxXyYýÝÿüÜzZæÆäÄøØöÖåÅµ",
                        se: "­  _-,;:!¡?¿.·'\"«»()[]{}§¶@*/&#%`´^¯¨¸°©®+±÷×<=>¬|¦~¤¢$£¥01¹½¼2²3³¾456789aAªáÁàÀâÂåÅäÄãÃæÆbBcCçÇdDðÐeEéÉèÈêÊëËfFgGhHiIíÍìÌîÎïÏjJkKlLmMnNñÑoOºóÓòÒôÔöÖõÕøØpPqQrRsSßtTuUúÚùÙûÛüÜvVwWxXyYýÝÿzZþÞµ",
                        fi: "­  _-,;:!¡?¿.·'\"«»()[]{}§¶@*/&#%`´^¯¨¸°©®+±÷×<=>¬|¦~¤¢$£¥01¹½¼2²3³¾456789aAªáÁàÀâÂãÃbBcCçÇdDðÐeEéÉèÈêÊëËfFgGhHiIíÍìÌîÎïÏjJkKlLmMnNñÑoOºóÓòÒôÔõÕpPqQrRsSßtTuUúÚùÙûÛvVwWxXyYýÝÿüÜzZþÞåÅäÄæÆöÖøØµ",
                        de: "­  _-,;:!¡?¿.·'\"«»()[]{}§¶@*/&#%`´^¯¨¸°©®+±÷×<=>¬|¦~¤¢$£¥01¹½¼2²3³¾456789aAªáÁàÀâÂåÅäÄãÃæÆbBcCçÇdDðÐeEéÉèÈêÊëËfFgGhHiIíÍìÌîÎïÏjJkKlLmMnNñÑoOºóÓòÒôÔöÖõÕøØpPqQrRsSßtTuUúÚùÙûÛüÜvVwWxXyYýÝÿzZþÞµ",
                        en: " _-,;:!?.'\"()[]{}@*/&#%`^+<=>|~$0123456789aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ"
                    },
                    original = String.prototype.localeCompare;
                String.prototype.localeCompare = function(other, locale) {
                    if (!locale) return original.apply(this, arguments);
                    for (var lang = locale.split("-")[0], map = characterMaps[lang], charA = null, charB = null, index = 0; charA === charB && index < 100;) charA = this.toString()[index], charB = other[index], index++;
                    return Math.max(-1, Math.min(1, map.indexOf(charA) - map.indexOf(charB)))
                }
            }
        }()
    }, {}],
    82: [function(require, module, exports) {
        var arrayEach = require("../internal/arrayEach"),
            baseEach = require("../internal/baseEach"),
            createForEach = require("../internal/createForEach"),
            forEach = createForEach(arrayEach, baseEach);
        module.exports = forEach
    }, {
        "../internal/arrayEach": 84,
        "../internal/baseEach": 88,
        "../internal/createForEach": 96
    }],
    83: [function(require, module, exports) {
        function restParam(func, start) {
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            return start = nativeMax(void 0 === start ? func.length - 1 : +start || 0, 0),
                function() {
                    for (var args = arguments, index = -1, length = nativeMax(args.length - start, 0), rest = Array(length); ++index < length;) rest[index] = args[start + index];
                    switch (start) {
                        case 0:
                            return func.call(this, rest);
                        case 1:
                            return func.call(this, args[0], rest);
                        case 2:
                            return func.call(this, args[0], args[1], rest)
                    }
                    var otherArgs = Array(start + 1);
                    for (index = -1; ++index < start;) otherArgs[index] = args[index];
                    return otherArgs[start] = rest, func.apply(this, otherArgs)
                }
        }
        var FUNC_ERROR_TEXT = "Expected a function",
            nativeMax = Math.max;
        module.exports = restParam
    }, {}],
    84: [function(require, module, exports) {
        function arrayEach(array, iteratee) {
            for (var index = -1, length = array.length; ++index < length && !1 !== iteratee(array[index], index, array););
            return array
        }
        module.exports = arrayEach
    }, {}],
    85: [function(require, module, exports) {
        function assignWith(object, source, customizer) {
            for (var index = -1, props = keys(source), length = props.length; ++index < length;) {
                var key = props[index],
                    value = object[key],
                    result = customizer(value, source[key], key, object, source);
                (result === result ? result === value : value !== value) && (void 0 !== value || key in object) || (object[key] = result)
            }
            return object
        }
        var keys = require("../object/keys");
        module.exports = assignWith
    }, {
        "../object/keys": 117
    }],
    86: [function(require, module, exports) {
        function baseAssign(object, source) {
            return null == source ? object : baseCopy(source, keys(source), object)
        }
        var baseCopy = require("./baseCopy"),
            keys = require("../object/keys");
        module.exports = baseAssign
    }, {
        "../object/keys": 117,
        "./baseCopy": 87
    }],
    87: [function(require, module, exports) {
        function baseCopy(source, props, object) {
            object || (object = {});
            for (var index = -1, length = props.length; ++index < length;) {
                var key = props[index];
                object[key] = source[key]
            }
            return object
        }
        module.exports = baseCopy
    }, {}],
    88: [function(require, module, exports) {
        var baseForOwn = require("./baseForOwn"),
            createBaseEach = require("./createBaseEach"),
            baseEach = createBaseEach(baseForOwn);
        module.exports = baseEach
    }, {
        "./baseForOwn": 90,
        "./createBaseEach": 94
    }],
    89: [function(require, module, exports) {
        var createBaseFor = require("./createBaseFor"),
            baseFor = createBaseFor();
        module.exports = baseFor
    }, {
        "./createBaseFor": 95
    }],
    90: [function(require, module, exports) {
        function baseForOwn(object, iteratee) {
            return baseFor(object, iteratee, keys)
        }
        var baseFor = require("./baseFor"),
            keys = require("../object/keys");
        module.exports = baseForOwn
    }, {
        "../object/keys": 117,
        "./baseFor": 89
    }],
    91: [function(require, module, exports) {
        function baseProperty(key) {
            return function(object) {
                return null == object ? void 0 : toObject(object)[key]
            }
        }
        var toObject = require("./toObject");
        module.exports = baseProperty
    }, {
        "./toObject": 107
    }],
    92: [function(require, module, exports) {
        function bindCallback(func, thisArg, argCount) {
            if ("function" != typeof func) return identity;
            if (void 0 === thisArg) return func;
            switch (argCount) {
                case 1:
                    return function(value) {
                        return func.call(thisArg, value)
                    };
                case 3:
                    return function(value, index, collection) {
                        return func.call(thisArg, value, index, collection)
                    };
                case 4:
                    return function(accumulator, value, index, collection) {
                        return func.call(thisArg, accumulator, value, index, collection)
                    };
                case 5:
                    return function(value, other, key, object, source) {
                        return func.call(thisArg, value, other, key, object, source)
                    }
            }
            return function() {
                return func.apply(thisArg, arguments)
            }
        }
        var identity = require("../utility/identity");
        module.exports = bindCallback
    }, {
        "../utility/identity": 120
    }],
    93: [function(require, module, exports) {
        function createAssigner(assigner) {
            return restParam(function(object, sources) {
                var index = -1,
                    length = null == object ? 0 : sources.length,
                    customizer = length > 2 ? sources[length - 2] : void 0,
                    guard = length > 2 ? sources[2] : void 0,
                    thisArg = length > 1 ? sources[length - 1] : void 0;
                for ("function" == typeof customizer ? (customizer = bindCallback(customizer, thisArg, 5), length -= 2) : (customizer = "function" == typeof thisArg ? thisArg : void 0, length -= customizer ? 1 : 0), guard && isIterateeCall(sources[0], sources[1], guard) && (customizer = length < 3 ? void 0 : customizer, length = 1); ++index < length;) {
                    var source = sources[index];
                    source && assigner(object, source, customizer)
                }
                return object
            })
        }
        var bindCallback = require("./bindCallback"),
            isIterateeCall = require("./isIterateeCall"),
            restParam = require("../function/restParam");
        module.exports = createAssigner
    }, {
        "../function/restParam": 83,
        "./bindCallback": 92,
        "./isIterateeCall": 103
    }],
    94: [function(require, module, exports) {
        function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
                var length = collection ? getLength(collection) : 0;
                if (!isLength(length)) return eachFunc(collection, iteratee);
                for (var index = fromRight ? length : -1, iterable = toObject(collection);
                     (fromRight ? index-- : ++index < length) && !1 !== iteratee(iterable[index], index, iterable););
                return collection
            }
        }
        var getLength = require("./getLength"),
            isLength = require("./isLength"),
            toObject = require("./toObject");
        module.exports = createBaseEach
    }, {
        "./getLength": 98,
        "./isLength": 104,
        "./toObject": 107
    }],
    95: [function(require, module, exports) {
        function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                for (var iterable = toObject(object), props = keysFunc(object), length = props.length, index = fromRight ? length : -1; fromRight ? index-- : ++index < length;) {
                    var key = props[index];
                    if (!1 === iteratee(iterable[key], key, iterable)) break
                }
                return object
            }
        }
        var toObject = require("./toObject");
        module.exports = createBaseFor
    }, {
        "./toObject": 107
    }],
    96: [function(require, module, exports) {
        function createForEach(arrayFunc, eachFunc) {
            return function(collection, iteratee, thisArg) {
                return "function" == typeof iteratee && void 0 === thisArg && isArray(collection) ? arrayFunc(collection, iteratee) : eachFunc(collection, bindCallback(iteratee, thisArg, 3))
            }
        }
        var bindCallback = require("./bindCallback"),
            isArray = require("../lang/isArray");
        module.exports = createForEach
    }, {
        "../lang/isArray": 109,
        "./bindCallback": 92
    }],
    97: [function(require, module, exports) {
        function createForIn(objectFunc) {
            return function(object, iteratee, thisArg) {
                return "function" == typeof iteratee && void 0 === thisArg || (iteratee = bindCallback(iteratee, thisArg, 3)), objectFunc(object, iteratee, keysIn)
            }
        }
        var bindCallback = require("./bindCallback"),
            keysIn = require("../object/keysIn");
        module.exports = createForIn
    }, {
        "../object/keysIn": 118,
        "./bindCallback": 92
    }],
    98: [function(require, module, exports) {
        var baseProperty = require("./baseProperty"),
            getLength = baseProperty("length");
        module.exports = getLength
    }, {
        "./baseProperty": 91
    }],
    99: [function(require, module, exports) {
        function getNative(object, key) {
            var value = null == object ? void 0 : object[key];
            return isNative(value) ? value : void 0
        }
        var isNative = require("../lang/isNative");
        module.exports = getNative
    }, {
        "../lang/isNative": 111
    }],
    100: [function(require, module, exports) {
        function isArrayLike(value) {
            return null != value && isLength(getLength(value))
        }
        var getLength = require("./getLength"),
            isLength = require("./isLength");
        module.exports = isArrayLike
    }, {
        "./getLength": 98,
        "./isLength": 104
    }],
    101: [function(require, module, exports) {
        var isHostObject = function() {
            try {
                Object({
                        toString: 0
                    } + "")
            } catch (e) {
                return function() {
                    return !1
                }
            }
            return function(value) {
                return "function" != typeof value.toString && "string" == typeof(value + "")
            }
        }();
        module.exports = isHostObject
    }, {}],
    102: [function(require, module, exports) {
        function isIndex(value, length) {
            return value = "number" == typeof value || reIsUint.test(value) ? +value : -1, length = null == length ? MAX_SAFE_INTEGER : length, value > -1 && value % 1 == 0 && value < length
        }
        var reIsUint = /^\d+$/,
            MAX_SAFE_INTEGER = 9007199254740991;
        module.exports = isIndex
    }, {}],
    103: [function(require, module, exports) {
        function isIterateeCall(value, index, object) {
            if (!isObject(object)) return !1;
            var type = typeof index;
            if ("number" == type ? isArrayLike(object) && isIndex(index, object.length) : "string" == type && index in object) {
                var other = object[index];
                return value === value ? value === other : other !== other
            }
            return !1
        }
        var isArrayLike = require("./isArrayLike"),
            isIndex = require("./isIndex"),
            isObject = require("../lang/isObject");
        module.exports = isIterateeCall
    }, {
        "../lang/isObject": 113,
        "./isArrayLike": 100,
        "./isIndex": 102
    }],
    104: [function(require, module, exports) {
        function isLength(value) {
            return "number" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER
        }
        var MAX_SAFE_INTEGER = 9007199254740991;
        module.exports = isLength
    }, {}],
    105: [function(require, module, exports) {
        function isObjectLike(value) {
            return !!value && "object" == typeof value
        }
        module.exports = isObjectLike
    }, {}],
    106: [function(require, module, exports) {
        function shimKeys(object) {
            for (var props = keysIn(object), propsLength = props.length, length = propsLength && object.length, allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object) || isString(object)), index = -1, result = []; ++index < propsLength;) {
                var key = props[index];
                (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) && result.push(key)
            }
            return result
        }
        var isArguments = require("../lang/isArguments"),
            isArray = require("../lang/isArray"),
            isIndex = require("./isIndex"),
            isLength = require("./isLength"),
            isString = require("../lang/isString"),
            keysIn = require("../object/keysIn"),
            objectProto = Object.prototype,
            hasOwnProperty = objectProto.hasOwnProperty;
        module.exports = shimKeys
    }, {
        "../lang/isArguments": 108,
        "../lang/isArray": 109,
        "../lang/isString": 114,
        "../object/keysIn": 118,
        "./isIndex": 102,
        "./isLength": 104
    }],
    107: [function(require, module, exports) {
        function toObject(value) {
            if (support.unindexedChars && isString(value)) {
                for (var index = -1, length = value.length, result = Object(value); ++index < length;) result[index] = value.charAt(index);
                return result
            }
            return isObject(value) ? value : Object(value)
        }
        var isObject = require("../lang/isObject"),
            isString = require("../lang/isString"),
            support = require("../support");
        module.exports = toObject
    }, {
        "../lang/isObject": 113,
        "../lang/isString": 114,
        "../support": 119
    }],
    108: [function(require, module, exports) {
        function isArguments(value) {
            return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee")
        }
        var isArrayLike = require("../internal/isArrayLike"),
            isObjectLike = require("../internal/isObjectLike"),
            objectProto = Object.prototype,
            hasOwnProperty = objectProto.hasOwnProperty,
            propertyIsEnumerable = objectProto.propertyIsEnumerable;
        module.exports = isArguments
    }, {
        "../internal/isArrayLike": 100,
        "../internal/isObjectLike": 105
    }],
    109: [function(require, module, exports) {
        var getNative = require("../internal/getNative"),
            isLength = require("../internal/isLength"),
            isObjectLike = require("../internal/isObjectLike"),
            objectProto = Object.prototype,
            objToString = objectProto.toString,
            nativeIsArray = getNative(Array, "isArray"),
            isArray = nativeIsArray || function(value) {
                    return isObjectLike(value) && isLength(value.length) && "[object Array]" == objToString.call(value)
                };
        module.exports = isArray
    }, {
        "../internal/getNative": 99,
        "../internal/isLength": 104,
        "../internal/isObjectLike": 105
    }],
    110: [function(require, module, exports) {
        function isFunction(value) {
            return isObject(value) && objToString.call(value) == funcTag
        }
        var isObject = require("./isObject"),
            funcTag = "[object Function]",
            objectProto = Object.prototype,
            objToString = objectProto.toString;
        module.exports = isFunction
    }, {
        "./isObject": 113
    }],
    111: [function(require, module, exports) {
        function isNative(value) {
            return null != value && (isFunction(value) ? reIsNative.test(fnToString.call(value)) : isObjectLike(value) && (isHostObject(value) ? reIsNative : reIsHostCtor).test(value))
        }
        var isFunction = require("./isFunction"),
            isHostObject = require("../internal/isHostObject"),
            isObjectLike = require("../internal/isObjectLike"),
            reIsHostCtor = /^\[object .+?Constructor\]$/,
            objectProto = Object.prototype,
            fnToString = Function.prototype.toString,
            hasOwnProperty = objectProto.hasOwnProperty,
            reIsNative = RegExp("^" + fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        module.exports = isNative
    }, {
        "../internal/isHostObject": 101,
        "../internal/isObjectLike": 105,
        "./isFunction": 110
    }],
    112: [function(require, module, exports) {
        function isNumber(value) {
            return "number" == typeof value || isObjectLike(value) && objToString.call(value) == numberTag
        }
        var isObjectLike = require("../internal/isObjectLike"),
            numberTag = "[object Number]",
            objectProto = Object.prototype,
            objToString = objectProto.toString;
        module.exports = isNumber
    }, {
        "../internal/isObjectLike": 105
    }],
    113: [function(require, module, exports) {
        function isObject(value) {
            var type = typeof value;
            return !!value && ("object" == type || "function" == type)
        }
        module.exports = isObject
    }, {}],
    114: [function(require, module, exports) {
        function isString(value) {
            return "string" == typeof value || isObjectLike(value) && objToString.call(value) == stringTag
        }
        var isObjectLike = require("../internal/isObjectLike"),
            stringTag = "[object String]",
            objectProto = Object.prototype,
            objToString = objectProto.toString;
        module.exports = isString
    }, {
        "../internal/isObjectLike": 105
    }],
    115: [function(require, module, exports) {
        var assignWith = require("../internal/assignWith"),
            baseAssign = require("../internal/baseAssign"),
            createAssigner = require("../internal/createAssigner"),
            assign = createAssigner(function(object, source, customizer) {
                return customizer ? assignWith(object, source, customizer) : baseAssign(object, source)
            });
        module.exports = assign
    }, {
        "../internal/assignWith": 85,
        "../internal/baseAssign": 86,
        "../internal/createAssigner": 93
    }],
    116: [function(require, module, exports) {
        var baseFor = require("../internal/baseFor"),
            createForIn = require("../internal/createForIn"),
            forIn = createForIn(baseFor);
        module.exports = forIn
    }, {
        "../internal/baseFor": 89,
        "../internal/createForIn": 97
    }],
    117: [function(require, module, exports) {
        var getNative = require("../internal/getNative"),
            isArrayLike = require("../internal/isArrayLike"),
            isObject = require("../lang/isObject"),
            shimKeys = require("../internal/shimKeys"),
            support = require("../support"),
            nativeKeys = getNative(Object, "keys"),
            keys = nativeKeys ? function(object) {
                var Ctor = null == object ? void 0 : object.constructor;
                return "function" == typeof Ctor && Ctor.prototype === object || ("function" == typeof object ? support.enumPrototypes : isArrayLike(object)) ? shimKeys(object) : isObject(object) ? nativeKeys(object) : []
            } : shimKeys;
        module.exports = keys
    }, {
        "../internal/getNative": 99,
        "../internal/isArrayLike": 100,
        "../internal/shimKeys": 106,
        "../lang/isObject": 113,
        "../support": 119
    }],
    118: [function(require, module, exports) {
        function keysIn(object) {
            if (null == object) return [];
            isObject(object) || (object = Object(object));
            var length = object.length;
            length = length && isLength(length) && (isArray(object) || isArguments(object) || isString(object)) && length || 0;
            for (var Ctor = object.constructor, index = -1, proto = isFunction(Ctor) && Ctor.prototype || objectProto, isProto = proto === object, result = Array(length), skipIndexes = length > 0, skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error), skipProto = support.enumPrototypes && isFunction(object); ++index < length;) result[index] = index + "";
            for (var key in object) skipProto && "prototype" == key || skipErrorProps && ("message" == key || "name" == key) || skipIndexes && isIndex(key, length) || "constructor" == key && (isProto || !hasOwnProperty.call(object, key)) || result.push(key);
            if (support.nonEnumShadows && object !== objectProto) {
                var tag = object === stringProto ? stringTag : object === errorProto ? errorTag : objToString.call(object),
                    nonEnums = nonEnumProps[tag] || nonEnumProps[objectTag];
                for (tag == objectTag && (proto = objectProto), length = shadowProps.length; length--;) {
                    key = shadowProps[length];
                    var nonEnum = nonEnums[key];
                    isProto && nonEnum || (nonEnum ? !hasOwnProperty.call(object, key) : object[key] === proto[key]) || result.push(key)
                }
            }
            return result
        }
        var arrayEach = require("../internal/arrayEach"),
            isArguments = require("../lang/isArguments"),
            isArray = require("../lang/isArray"),
            isFunction = require("../lang/isFunction"),
            isIndex = require("../internal/isIndex"),
            isLength = require("../internal/isLength"),
            isObject = require("../lang/isObject"),
            isString = require("../lang/isString"),
            support = require("../support"),
            errorTag = "[object Error]",
            objectTag = "[object Object]",
            stringTag = "[object String]",
            shadowProps = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"],
            errorProto = Error.prototype,
            objectProto = Object.prototype,
            stringProto = String.prototype,
            hasOwnProperty = objectProto.hasOwnProperty,
            objToString = objectProto.toString,
            nonEnumProps = {};
        nonEnumProps["[object Array]"] = nonEnumProps["[object Date]"] = nonEnumProps["[object Number]"] = {
            constructor: !0,
            toLocaleString: !0,
            toString: !0,
            valueOf: !0
        }, nonEnumProps["[object Boolean]"] = nonEnumProps[stringTag] = {
            constructor: !0,
            toString: !0,
            valueOf: !0
        }, nonEnumProps[errorTag] = nonEnumProps["[object Function]"] = nonEnumProps["[object RegExp]"] = {
            constructor: !0,
            toString: !0
        }, nonEnumProps[objectTag] = {
            constructor: !0
        }, arrayEach(shadowProps, function(key) {
            for (var tag in nonEnumProps)
                if (hasOwnProperty.call(nonEnumProps, tag)) {
                    var props = nonEnumProps[tag];
                    props[key] = hasOwnProperty.call(props, key)
                }
        }), module.exports = keysIn
    }, {
        "../internal/arrayEach": 84,
        "../internal/isIndex": 102,
        "../internal/isLength": 104,
        "../lang/isArguments": 108,
        "../lang/isArray": 109,
        "../lang/isFunction": 110,
        "../lang/isObject": 113,
        "../lang/isString": 114,
        "../support": 119
    }],
    119: [function(require, module, exports) {
        var arrayProto = Array.prototype,
            errorProto = Error.prototype,
            objectProto = Object.prototype,
            propertyIsEnumerable = objectProto.propertyIsEnumerable,
            splice = arrayProto.splice,
            support = {};
        ! function(x) {
            var Ctor = function() {
                    this.x = 1
                },
                object = {
                    0: 1,
                    length: 1
                },
                props = [];
            Ctor.prototype = {
                valueOf: 1,
                y: 1
            };
            for (var key in new Ctor) props.push(key);
            support.enumErrorProps = propertyIsEnumerable.call(errorProto, "message") || propertyIsEnumerable.call(errorProto, "name"), support.enumPrototypes = propertyIsEnumerable.call(Ctor, "prototype"), support.nonEnumShadows = !/valueOf/.test(props), support.ownLast = "x" != props[0], support.spliceObjects = (splice.call(object, 0, 1), !object[0]), support.unindexedChars = "x" [0] + Object("x")[0] != "xx"
        }(), module.exports = support
    }, {}],
    120: [function(require, module, exports) {
        function identity(value) {
            return value
        }
        module.exports = identity
    }, {}],
    121: [function(require, module, exports) {
        function noop() {}
        module.exports = noop
    }, {}],
    122: [function(require, module, exports) {
        (function(global) {
            function baseToString(value) {
                if ("string" == typeof value) return value;
                if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
                var result = value + "";
                return "0" == result && 1 / value == -INFINITY ? "-0" : result
            }

            function isObjectLike(value) {
                return !!value && "object" == typeof value
            }

            function isSymbol(value) {
                return "symbol" == typeof value || isObjectLike(value) && objectToString.call(value) == symbolTag
            }

            function toString(value) {
                return null == value ? "" : baseToString(value)
            }

            function escape(string) {
                return string = toString(string), string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string
            }
            var INFINITY = 1 / 0,
                symbolTag = "[object Symbol]",
                reUnescapedHtml = /[&<>"'`]/g,
                reHasUnescapedHtml = RegExp(reUnescapedHtml.source),
                htmlEscapes = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#39;",
                    "`": "&#96;"
                },
                freeGlobal = "object" == typeof global && global && global.Object === Object && global,
                freeSelf = "object" == typeof self && self && self.Object === Object && self,
                root = freeGlobal || freeSelf || Function("return this")(),
                escapeHtmlChar = function(object) {
                    return function(key) {
                        return null == object ? void 0 : object[key]
                    }
                }(htmlEscapes),
                objectProto = Object.prototype,
                objectToString = objectProto.toString,
                Symbol = root.Symbol,
                symbolProto = Symbol ? Symbol.prototype : void 0,
                symbolToString = symbolProto ? symbolProto.toString : void 0;
            module.exports = escape
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}],
    123: [function(require, module, exports) {
        function baseRange(start, end, step, fromRight) {
            for (var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length); length--;) result[fromRight ? length : ++index] = start, start += step;
            return result
        }

        function isIndex(value, length) {
            return !!(length = null == length ? MAX_SAFE_INTEGER : length) && ("number" == typeof value || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length
        }

        function isIterateeCall(value, index, object) {
            if (!isObject(object)) return !1;
            var type = typeof index;
            return !!("number" == type ? isArrayLike(object) && isIndex(index, object.length) : "string" == type && index in object) && eq(object[index], value)
        }

        function eq(value, other) {
            return value === other || value !== value && other !== other
        }

        function isArrayLike(value) {
            return null != value && isLength(value.length) && !isFunction(value)
        }

        function isFunction(value) {
            var tag = isObject(value) ? objectToString.call(value) : "";
            return tag == funcTag || tag == genTag
        }

        function isLength(value) {
            return "number" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER
        }

        function isObject(value) {
            var type = typeof value;
            return !!value && ("object" == type || "function" == type)
        }

        function isObjectLike(value) {
            return !!value && "object" == typeof value
        }

        function isSymbol(value) {
            return "symbol" == typeof value || isObjectLike(value) && objectToString.call(value) == symbolTag
        }

        function toFinite(value) {
            if (!value) return 0 === value ? value : 0;
            if ((value = toNumber(value)) === INFINITY || value === -INFINITY) {
                return (value < 0 ? -1 : 1) * MAX_INTEGER
            }
            return value === value ? value : 0
        }

        function toNumber(value) {
            if ("number" == typeof value) return value;
            if (isSymbol(value)) return NAN;
            if (isObject(value)) {
                var other = "function" == typeof value.valueOf ? value.valueOf() : value;
                value = isObject(other) ? other + "" : other
            }
            if ("string" != typeof value) return 0 === value ? value : +value;
            value = value.replace(reTrim, "");
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value
        }
        var INFINITY = 1 / 0,
            MAX_SAFE_INTEGER = 9007199254740991,
            MAX_INTEGER = 1.7976931348623157e308,
            NAN = NaN,
            funcTag = "[object Function]",
            genTag = "[object GeneratorFunction]",
            symbolTag = "[object Symbol]",
            reTrim = /^\s+|\s+$/g,
            reIsBadHex = /^[-+]0x[0-9a-f]+$/i,
            reIsBinary = /^0b[01]+$/i,
            reIsOctal = /^0o[0-7]+$/i,
            reIsUint = /^(?:0|[1-9]\d*)$/,
            freeParseInt = parseInt,
            objectProto = Object.prototype,
            objectToString = objectProto.toString,
            nativeCeil = Math.ceil,
            nativeMax = Math.max,
            range = function(fromRight) {
                return function(start, end, step) {
                    return step && "number" != typeof step && isIterateeCall(start, end, step) && (end = step = void 0), start = toFinite(start), void 0 === end ? (end = start, start = 0) : end = toFinite(end), step = void 0 === step ? start < end ? 1 : -1 : toFinite(step), baseRange(start, end, step, fromRight)
                }
            }();
        module.exports = range
    }, {}],
    124: [function(require, module, exports) {
        ! function(root, factory) {
            "function" == typeof define && define.amd ? define([], function() {
                return root.returnExportsGlobal = factory()
            }) : "object" == typeof exports ? module.exports = factory() : root.monapt = factory()
        }(this, function() {
            var monapt, __extends = this && this.__extends || function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                    d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                };
            ! function(monapt) {
                monapt.Tuple1 = function(a) {
                    return {
                        _1: a
                    }
                }, monapt.Tuple2 = function(a, b) {
                    return {
                        _1: a,
                        _2: b
                    }
                }
            }(monapt || (monapt = {}));
            var monapt;
            ! function(monapt) {
                function Option(value) {
                    return void 0 !== value && null !== value ? new Some(value) : monapt.None
                }
                var NoSuchElementError = function(_super) {
                    function NoSuchElementError() {
                        _super.call(this, "No such element."), this.name = "NoSuchElementError", this.message = "No such element.", this.stack = (new Error).stack
                    }
                    return __extends(NoSuchElementError, _super), NoSuchElementError
                }(Error);
                monapt.NoSuchElementError = NoSuchElementError, monapt.Option = Option;
                var Some = function() {
                    function Some(value) {
                        this.value = value, this.isDefined = !0, this.isEmpty = !1
                    }
                    return Some.prototype.get = function() {
                        return this.value
                    }, Some.prototype.getOrElse = function(defaultValue) {
                        return this.value
                    }, Some.prototype.orElse = function(alternative) {
                        return this
                    }, Some.prototype.match = function(matcher) {
                        return matcher.Some(this.value)
                    }, Some.prototype.map = function(f) {
                        return new Some(f(this.get()))
                    }, Some.prototype.flatMap = function(f) {
                        return f(this.get())
                    }, Some.prototype.filter = function(predicate) {
                        return predicate(this.value) ? this : monapt.None
                    }, Some.prototype.reject = function(predicate) {
                        return this.filter(function(v) {
                            return !predicate(v)
                        })
                    }, Some.prototype.foreach = function(f) {
                        f(this.value)
                    }, Some.prototype.equals = function(option) {
                        var _this = this;
                        return option.match({
                            None: function() {
                                return !1
                            },
                            Some: function(value) {
                                return _this.value === value
                            }
                        })
                    }, Some
                }();
                monapt.Some = Some;
                var NoneImpl = function() {
                    function NoneImpl() {
                        this.isDefined = !1, this.isEmpty = !0
                    }
                    return NoneImpl.prototype.get = function() {
                        throw new NoSuchElementError
                    }, NoneImpl.prototype.getOrElse = function(defaultValue) {
                        return defaultValue()
                    }, NoneImpl.prototype.orElse = function(alternative) {
                        return alternative()
                    }, NoneImpl.prototype.match = function(matcher) {
                        return matcher.None()
                    }, NoneImpl.prototype.map = function(f) {
                        return monapt.None
                    }, NoneImpl.prototype.flatMap = function(f) {
                        return monapt.None
                    }, NoneImpl.prototype.filter = function(predicate) {
                        return this
                    }, NoneImpl.prototype.reject = function(predicate) {
                        return this
                    }, NoneImpl.prototype.foreach = function(f) {}, NoneImpl.prototype.equals = function(option) {
                        return option.isEmpty
                    }, NoneImpl
                }();
                monapt.None = new NoneImpl, monapt.flatten = function(options) {
                    for (var ret = [], i = 0, length = options.length; i < length; i++) options[i].isDefined && ret.push(options[i].get());
                    return ret
                }
            }(monapt || (monapt = {}));
            var monapt;
            ! function(monapt) {
                var asInstanceOf = function(v) {
                        return v
                    },
                    Success = function() {
                        function Success(value) {
                            this.value = value, this.isSuccess = !0, this.isFailure = !1
                        }
                        return Success.prototype.get = function() {
                            return this.value
                        }, Success.prototype.getOrElse = function(defaultValue) {
                            return this.get()
                        }, Success.prototype.orElse = function(alternative) {
                            return this
                        }, Success.prototype.match = function(matcher) {
                            return matcher.Success(this.get())
                        }, Success.prototype.map = function(f) {
                            var _this = this;
                            return monapt.Try(function() {
                                return f(_this.value)
                            })
                        }, Success.prototype.flatMap = function(f) {
                            try {
                                return f(this.value)
                            } catch (e) {
                                return new Failure(e)
                            }
                        }, Success.prototype.filter = function(predicate) {
                            try {
                                return predicate(this.value) ? this : new Failure(new Error("Predicate does not hold for " + this.value))
                            } catch (e) {
                                return new Failure(e)
                            }
                        }, Success.prototype.reject = function(predicate) {
                            return this.filter(function(v) {
                                return !predicate(v)
                            })
                        }, Success.prototype.foreach = function(f) {
                            f(this.value)
                        }, Success.prototype.recover = function(fn) {
                            return this
                        }, Success.prototype.recoverWith = function(fn) {
                            return this
                        }, Success.prototype.toOption = function() {
                            return new monapt.Some(this.value)
                        }, Success
                    }();
                monapt.Success = Success;
                var Failure = function() {
                    function Failure(exception) {
                        this.exception = exception, this.isSuccess = !1, this.isFailure = !0
                    }
                    return Failure.prototype.get = function() {
                        throw this.exception
                    }, Failure.prototype.getOrElse = function(defaultValue) {
                        return defaultValue()
                    }, Failure.prototype.orElse = function(alternative) {
                        return alternative()
                    }, Failure.prototype.match = function(matcher) {
                        return matcher.Failure(this.exception)
                    }, Failure.prototype.map = function(f) {
                        return asInstanceOf(this)
                    }, Failure.prototype.flatMap = function(f) {
                        return asInstanceOf(this)
                    }, Failure.prototype.filter = function(predicate) {
                        return this
                    }, Failure.prototype.reject = function(predicate) {
                        return this
                    }, Failure.prototype.foreach = function(f) {}, Failure.prototype.recover = function(fn) {
                        try {
                            return new Success(fn(this.exception))
                        } catch (e) {
                            return new Failure(e)
                        }
                    }, Failure.prototype.recoverWith = function(fn) {
                        try {
                            return fn(this.exception)
                        } catch (e) {
                            return new Failure(this.exception)
                        }
                    }, Failure.prototype.toOption = function() {
                        return monapt.None
                    }, Failure
                }();
                monapt.Failure = Failure, monapt.Try = function(f) {
                    try {
                        return new Success(f())
                    } catch (e) {
                        return new Failure(e)
                    }
                }
            }(monapt || (monapt = {}));
            var monapt;
            ! function(monapt) {
                var Cracker = function() {
                    function Cracker() {
                        this.fired = !1, this.callbacks = new Array
                    }
                    return Cracker.prototype.fire = function(producer) {
                        if (this.producer = producer, this.fired) throw new Error("Dose fired twice, Can call only once.");
                        this.fireAll()
                    }, Cracker.prototype.fireAll = function() {
                        var _this = this;
                        this.fired = !0, this.callbacks.forEach(function(fn) {
                            return _this.producer(fn)
                        })
                    }, Cracker.prototype.add = function(fn) {
                        this.fired ? this.producer(fn) : this.callbacks.push(fn)
                    }, Cracker
                }();
                monapt.Cracker = Cracker
            }(monapt || (monapt = {}));
            var monapt;
            ! function(monapt) {
                function F(target) {
                    var f = function(v) {
                        v instanceof Error ? target.failure(v) : target.success(v)
                    };
                    return f.success = function(v) {
                        return target.success(v)
                    }, f.failure = function(e) {
                        return target.failure(e)
                    }, f
                }
                var Future = function() {
                    function Future(future) {
                        this.cracker = new monapt.Cracker, future(F(this))
                    }
                    return Future.succeed = function(value) {
                        return new Future(function(p) {
                            return p.success(value)
                        })
                    }, Future.failed = function(error) {
                        return new Future(function(p) {
                            return p.failure(error)
                        })
                    }, Future.prototype.success = function(value) {
                        this.cracker.fire(function(fn) {
                            return fn(new monapt.Success(value))
                        })
                    }, Future.prototype.failure = function(error) {
                        this.cracker.fire(function(fn) {
                            return fn(new monapt.Failure(error))
                        })
                    }, Future.prototype.onComplete = function(callback) {
                        this.cracker.add(callback)
                    }, Future.prototype.onSuccess = function(callback) {
                        this.onComplete(function(r) {
                            r.match({
                                Success: function(v) {
                                    return callback(v)
                                },
                                Failure: function() {}
                            })
                        })
                    }, Future.prototype.onFailure = function(callback) {
                        this.onComplete(function(r) {
                            r.match({
                                Success: function() {},
                                Failure: function(error) {
                                    return callback(error)
                                }
                            })
                        })
                    }, Future.prototype.map = function(f) {
                        var promise = new Promise;
                        return this.onComplete(function(r) {
                            r.match({
                                Failure: function(e) {
                                    return promise.failure(e)
                                },
                                Success: function(v) {
                                    try {
                                        var result = f(v);
                                        promise.success(result)
                                    } catch (e) {
                                        promise.failure(e)
                                    }
                                }
                            })
                        }), promise.future()
                    }, Future.prototype.flatMap = function(f) {
                        var promise = new Promise;
                        return this.onComplete(function(r) {
                            r.match({
                                Failure: function(e) {
                                    return promise.failure(e)
                                },
                                Success: function(v) {
                                    f(v).onComplete(function(fr) {
                                        fr.match({
                                            Success: function(v) {
                                                return promise.success(v)
                                            },
                                            Failure: function(e) {
                                                return promise.failure(e)
                                            }
                                        })
                                    })
                                }
                            })
                        }), promise.future()
                    }, Future.prototype.filter = function(predicate) {
                        var promise = new Promise;
                        return this.onComplete(function(r) {
                            r.match({
                                Failure: function(e) {
                                    promise.failure(e)
                                },
                                Success: function(v) {
                                    try {
                                        predicate(v) ? promise.success(v) : promise.failure(new monapt.NoSuchElementError)
                                    } catch (e) {
                                        promise.failure(e)
                                    }
                                }
                            })
                        }), promise.future()
                    }, Future.prototype.reject = function(predicate) {
                        return this.filter(function(v) {
                            return !predicate(v)
                        })
                    }, Future.prototype.recover = function(fn) {
                        var promise = new Promise;
                        return this.onComplete(function(r) {
                            r.match({
                                Failure: function(error) {
                                    try {
                                        promise.success(fn(error))
                                    } catch (e) {
                                        promise.failure(e)
                                    }
                                },
                                Success: function(v) {
                                    return promise.success(v)
                                }
                            })
                        }), promise.future()
                    }, Future.prototype.recoverWith = function(fn) {
                        var promise = new Promise;
                        return this.onComplete(function(r) {
                            return r.match({
                                Failure: function(e) {
                                    fn(e).onComplete(function(fr) {
                                        return fr.match({
                                            Success: function(v) {
                                                return promise.success(v)
                                            },
                                            Failure: function(e) {
                                                return promise.failure(e)
                                            }
                                        })
                                    })
                                },
                                Success: function(v) {
                                    return promise.success(v)
                                }
                            })
                        }), promise.future()
                    }, Future
                }();
                monapt.Future = Future;
                var Promise = function(_super) {
                    function Promise() {
                        _super.call(this, function(p) {}), this.isComplete = !1
                    }
                    return __extends(Promise, _super), Promise.prototype.success = function(value) {
                        this.isComplete = !0, _super.prototype.success.call(this, value)
                    }, Promise.prototype.failure = function(error) {
                        this.isComplete = !0, _super.prototype.failure.call(this, error)
                    }, Promise.prototype.future = function() {
                        return this
                    }, Promise
                }(Future);
                monapt.Promise = Promise, monapt.future = function(f) {
                    var p = new Promise;
                    try {
                        f(F(p))
                    } catch (e) {
                        p.failure(e)
                    }
                    return p.future()
                }
            }(monapt || (monapt = {}));
            var monapt;
            return function(monapt) {
                var Selector;
                ! function(Selector) {
                    var StringSelector = function() {
                        function StringSelector() {
                            this.table = {}
                        }
                        return StringSelector.prototype.register = function(k, index) {
                            this.table[k] = index
                        }, StringSelector.prototype.index = function(k) {
                            return this.table[k] ? new monapt.Some(this.table[k]) : monapt.None
                        }, StringSelector
                    }();
                    Selector.StringSelector = StringSelector;
                    var HashableSelector = function() {
                        function HashableSelector() {
                            this.table = {}
                        }
                        return HashableSelector.prototype.register = function(k, index) {
                            this.table[k.hash()] = index
                        }, HashableSelector.prototype.index = function(k) {
                            var hash = k.hash();
                            return this.table[hash] ? new monapt.Some(this.table[hash]) : monapt.None
                        }, HashableSelector
                    }();
                    Selector.HashableSelector = HashableSelector;
                    var ObjectSelector = function() {
                        function ObjectSelector() {}
                        return ObjectSelector.prototype.register = function(k, index) {}, ObjectSelector.prototype.index = function(k) {
                            return monapt.None
                        }, ObjectSelector
                    }();
                    Selector.ObjectSelector = ObjectSelector
                }(Selector || (Selector = {}));
                var Map = function() {
                    function Map(key, value) {
                        for (var keysAndValues = [], _i = 2; _i < arguments.length; _i++) keysAndValues[_i - 2] = arguments[_i];
                        if (this.real = [], value) {
                            if (0 != keysAndValues.length && keysAndValues.length % 2 != 0) throw new Error(keysAndValues[keysAndValues.length - 1] + " has not value.");
                            this.ensureSelector(key), this.add(key, value);
                            for (var i = 0, l = keysAndValues.length; i < l; i += 2) this.add(keysAndValues[i], keysAndValues[i + 1])
                        } else if (key) {
                            var obj = key;
                            for (var k in obj) this.ensureSelector(k), this.add(k, obj[k])
                        }
                        this.ensureSelector()
                    }
                    return Map.prototype.ensureSelector = function(hint) {
                        void 0 === hint && (hint = null), this.selector || (hint ? "string" == typeof hint ? this.selector = new Selector.StringSelector : hint.hash ? this.selector = new Selector.HashableSelector : this.selector = new Selector.ObjectSelector : this.selector = new Selector.ObjectSelector)
                    }, Map.prototype.add = function(key, value) {
                        this.real.push(monapt.Tuple2(key, value)), this.selector.register(key, this.real.length - 1)
                    }, Map.prototype.foreach = function(f) {
                        this.real.forEach(function(value, index, array) {
                            return f(value._1, value._2)
                        })
                    }, Map.prototype.map = function(f) {
                        var result = new Map;
                        return this.foreach(function(k, v) {
                            var t = f(k, v);
                            result.add(t._1, t._2)
                        }), result
                    }, Map.prototype.flatMap = function(f) {
                        var result = new Map;
                        return this.foreach(function(k, v) {
                            f(k, v).foreach(function(k, v) {
                                return result.add(k, v)
                            })
                        }), result
                    }, Map.prototype.mapValues = function(f) {
                        var result = new Map;
                        return this.foreach(function(k, v) {
                            result.add(k, f(v))
                        }), result
                    }, Map.prototype.filter = function(predicate) {
                        var result = new Map;
                        return this.foreach(function(k, v) {
                            predicate(k, v) && result.add(k, v)
                        }), result
                    }, Map.prototype.reject = function(predicate) {
                        return this.filter(function(k, v) {
                            return !predicate(k, v)
                        })
                    }, Map.prototype.find = function(f) {
                        return this.filter(f).head()
                    }, Map.prototype.get = function(key) {
                        var _this = this;
                        return this.selector.index(key).map(function(index) {
                            return _this.real[index]._2
                        }).orElse(function() {
                            return _this.find(function(k, v) {
                                return k == key
                            }).map(function(tuple) {
                                return tuple._2
                            }).orElse(function() {
                                return monapt.None
                            })
                        })
                    }, Map.prototype.getOrElse = function(key, defaultValue) {
                        return this.get(key).getOrElse(defaultValue)
                    }, Map.prototype.head = function() {
                        return this.real.length > 0 ? new monapt.Some(this.real[0]) : monapt.None
                    }, Map
                }();
                monapt.Map = Map
            }(monapt || (monapt = {})), monapt
        })
    }, {}],
    125: [function(require, module, exports) {
        function parse(str) {
            var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
            if (match) {
                var n = parseFloat(match[1]);
                switch ((match[2] || "ms").toLowerCase()) {
                    case "years":
                    case "year":
                    case "yrs":
                    case "yr":
                    case "y":
                        return n * y;
                    case "days":
                    case "day":
                    case "d":
                        return n * d;
                    case "hours":
                    case "hour":
                    case "hrs":
                    case "hr":
                    case "h":
                        return n * h;
                    case "minutes":
                    case "minute":
                    case "mins":
                    case "min":
                    case "m":
                        return n * m;
                    case "seconds":
                    case "second":
                    case "secs":
                    case "sec":
                    case "s":
                        return n * s;
                    case "milliseconds":
                    case "millisecond":
                    case "msecs":
                    case "msec":
                    case "ms":
                        return n
                }
            }
        }

        function short(ms) {
            return ms >= d ? Math.round(ms / d) + "d" : ms >= h ? Math.round(ms / h) + "h" : ms >= m ? Math.round(ms / m) + "m" : ms >= s ? Math.round(ms / s) + "s" : ms + "ms"
        }

        function long(ms) {
            return plural(ms, d, "day") || plural(ms, h, "hour") || plural(ms, m, "minute") || plural(ms, s, "second") || ms + " ms"
        }

        function plural(ms, n, name) {
            if (!(ms < n)) return ms < 1.5 * n ? Math.floor(ms / n) + " " + name : Math.ceil(ms / n) + " " + name + "s"
        }
        var s = 1e3,
            m = 60 * s,
            h = 60 * m,
            d = 24 * h,
            y = 365.25 * d;
        module.exports = function(val, options) {
            return options = options || {}, "string" == typeof val ? parse(val) : options.long ? long(val) : short(val)
        }
    }, {}],
    126: [function(require, module, exports) {
        ! function() {
            "use strict";
            if (! function() {
                    try {
                        (0).toLocaleString("i")
                    } catch (e) {
                        return "RangeError" === e.name
                    }
                    return !1
                }()) {
                var replaceSeparators = function(sNum, separators) {
                        var sNumParts = sNum.split(".");
                        return separators && separators.thousands && (sNumParts[0] = sNumParts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + separators.thousands)), sNum = sNumParts.join(separators.decimal)
                    },
                    renderFormat = function(template, props) {
                        for (var prop in props) template = template.replace("{{" + prop + "}}", props[prop]);
                        return template
                    },
                    mapMatch = function(map, locale) {
                        var match = locale,
                            language = locale && locale.toLowerCase().match(/^\w+/);
                        return map.hasOwnProperty(locale) || (match = map.hasOwnProperty(language) ? language : "en"), map[match]
                    },
                    dotThousCommaDec = function(sNum) {
                        return replaceSeparators(sNum, {
                            decimal: ",",
                            thousands: "."
                        })
                    },
                    commaThousDotDec = function(sNum) {
                        return replaceSeparators(sNum, {
                            decimal: ".",
                            thousands: ","
                        })
                    },
                    spaceThousCommaDec = function(sNum) {
                        return replaceSeparators(sNum, {
                            decimal: ",",
                            thousands: " "
                        })
                    },
                    apostrophThousDotDec = function(sNum) {
                        return replaceSeparators(sNum, {
                            decimal: ".",
                            thousands: "'"
                        })
                    },
                    transformForLocale = {
                        en: commaThousDotDec,
                        it: dotThousCommaDec,
                        fr: spaceThousCommaDec,
                        de: dotThousCommaDec,
                        "de-DE": dotThousCommaDec,
                        "de-AT": dotThousCommaDec,
                        "de-CH": apostrophThousDotDec,
                        "de-LI": apostrophThousDotDec,
                        "de-BE": dotThousCommaDec,
                        ro: dotThousCommaDec,
                        "ro-RO": dotThousCommaDec,
                        hu: spaceThousCommaDec,
                        "hu-HU": spaceThousCommaDec,
                        "da-DK": dotThousCommaDec,
                        "nb-NO": spaceThousCommaDec
                    },
                    currencyFormatMap = {
                        en: "pre",
                        it: "post",
                        fr: "post",
                        de: "post",
                        "de-DE": "post",
                        "de-AT": "prespace",
                        "de-CH": "prespace",
                        "de-LI": "post",
                        "de-BE": "post",
                        ro: "post",
                        "ro-RO": "post",
                        hu: "post",
                        "hu-HU": "post",
                        "da-DK": "post",
                        "nb-NO": "post"
                    },
                    currencySymbols = {
                        afn: "؋",
                        ars: "$",
                        awg: "ƒ",
                        aud: "$",
                        azn: "₼",
                        bsd: "$",
                        bbd: "$",
                        byr: "p.",
                        bzd: "BZ$",
                        bmd: "$",
                        bob: "Bs.",
                        bam: "KM",
                        bwp: "P",
                        bgn: "лв",
                        brl: "R$",
                        bnd: "$",
                        khr: "៛",
                        cad: "$",
                        kyd: "$",
                        clp: "$",
                        cny: "¥",
                        cop: "$",
                        crc: "₡",
                        hrk: "kn",
                        cup: "₱",
                        czk: "Kč",
                        dkk: "kr",
                        dop: "RD$",
                        xcd: "$",
                        egp: "£",
                        svc: "$",
                        eek: "kr",
                        eur: "€",
                        fkp: "£",
                        fjd: "$",
                        ghc: "¢",
                        gip: "£",
                        gtq: "Q",
                        ggp: "£",
                        gyd: "$",
                        hnl: "L",
                        hkd: "$",
                        huf: "Ft",
                        isk: "kr",
                        inr: "₹",
                        idr: "Rp",
                        irr: "﷼",
                        imp: "£",
                        ils: "₪",
                        jmd: "J$",
                        jpy: "¥",
                        jep: "£",
                        kes: "KSh",
                        kzt: "лв",
                        kpw: "₩",
                        krw: "₩",
                        kgs: "лв",
                        lak: "₭",
                        lvl: "Ls",
                        lbp: "£",
                        lrd: "$",
                        ltl: "Lt",
                        mkd: "ден",
                        myr: "RM",
                        mur: "₨",
                        mxn: "$",
                        mnt: "₮",
                        mzn: "MT",
                        nad: "$",
                        npr: "₨",
                        ang: "ƒ",
                        nzd: "$",
                        nio: "C$",
                        ngn: "₦",
                        nok: "kr",
                        omr: "﷼",
                        pkr: "₨",
                        pab: "B/.",
                        pyg: "Gs",
                        pen: "S/.",
                        php: "₱",
                        pln: "zł",
                        qar: "﷼",
                        ron: "lei",
                        rub: "₽",
                        shp: "£",
                        sar: "﷼",
                        rsd: "Дин.",
                        scr: "₨",
                        sgd: "$",
                        sbd: "$",
                        sos: "S",
                        zar: "R",
                        lkr: "₨",
                        sek: "kr",
                        chf: "CHF",
                        srd: "$",
                        syp: "£",
                        tzs: "TSh",
                        twd: "NT$",
                        thb: "฿",
                        ttd: "TT$",
                        try: "",
                        trl: "₤",
                        tvd: "$",
                        ugx: "USh",
                        uah: "₴",
                        gbp: "£",
                        usd: "$",
                        uyu: "$U",
                        uzs: "лв",
                        vef: "Bs",
                        vnd: "₫",
                        yer: "﷼",
                        zwd: "Z$"
                    },
                    currencyFormats = {
                        pre: "{{code}}{{num}}",
                        post: "{{num}} {{code}}",
                        prespace: "{{code}} {{num}}"
                    };
                Number.prototype.toLocaleString = function(locale, options) {
                    if (locale && locale.length < 2) throw new RangeError("Invalid language tag: " + locale);
                    var sNum;
                    if (sNum = options && options.minimumFractionDigits ? this.toFixed(options.minimumFractionDigits) : this.toString(), sNum = mapMatch(transformForLocale, locale)(sNum, options), options && options.currency && "currency" === options.style) {
                        var format = currencyFormats[mapMatch(currencyFormatMap, locale)];
                        sNum = "code" === options.currencyDisplay ? renderFormat(format, {
                            num: sNum,
                            code: options.currency.toUpperCase()
                        }) : renderFormat(format, {
                            num: sNum,
                            code: currencySymbols[options.currency.toLowerCase()]
                        })
                    }
                    return sNum
                }
            }
        }()
    }, {}],
    127: [function(require, module, exports) {
        /*
         object-assign
         (c) Sindre Sorhus
         @license MIT
         */
        "use strict";

        function toObject(val) {
            if (null === val || void 0 === val) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(val)
        }
        var getOwnPropertySymbols = Object.getOwnPropertySymbols,
            hasOwnProperty = Object.prototype.hasOwnProperty,
            propIsEnumerable = Object.prototype.propertyIsEnumerable;
        module.exports = function() {
            try {
                if (!Object.assign) return !1;
                var test1 = new String("abc");
                if (test1[5] = "de", "5" === Object.getOwnPropertyNames(test1)[0]) return !1;
                for (var test2 = {}, i = 0; i < 10; i++) test2["_" + String.fromCharCode(i)] = i;
                if ("0123456789" !== Object.getOwnPropertyNames(test2).map(function(n) {
                        return test2[n]
                    }).join("")) return !1;
                var test3 = {};
                return "abcdefghijklmnopqrst".split("").forEach(function(letter) {
                    test3[letter] = letter
                }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, test3)).join("")
            } catch (err) {
                return !1
            }
        }() ? Object.assign : function(target, source) {
            for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);
                for (var key in from) hasOwnProperty.call(from, key) && (to[key] = from[key]);
                if (getOwnPropertySymbols) {
                    symbols = getOwnPropertySymbols(from);
                    for (var i = 0; i < symbols.length; i++) propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]])
                }
            }
            return to
        }
    }, {}],
    128: [function(require, module, exports) {
        "use strict";
        var has = Object.prototype.hasOwnProperty,
            toStr = Object.prototype.toString,
            slice = Array.prototype.slice,
            isArgs = require("./isArguments"),
            isEnumerable = Object.prototype.propertyIsEnumerable,
            hasDontEnumBug = !isEnumerable.call({
                toString: null
            }, "toString"),
            hasProtoEnumBug = isEnumerable.call(function() {}, "prototype"),
            dontEnums = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
            equalsConstructorPrototype = function(o) {
                var ctor = o.constructor;
                return ctor && ctor.prototype === o
            },
            excludedKeys = {
                $console: !0,
                $external: !0,
                $frame: !0,
                $frameElement: !0,
                $frames: !0,
                $innerHeight: !0,
                $innerWidth: !0,
                $outerHeight: !0,
                $outerWidth: !0,
                $pageXOffset: !0,
                $pageYOffset: !0,
                $parent: !0,
                $scrollLeft: !0,
                $scrollTop: !0,
                $scrollX: !0,
                $scrollY: !0,
                $self: !0,
                $webkitIndexedDB: !0,
                $webkitStorageInfo: !0,
                $window: !0
            },
            hasAutomationEqualityBug = function() {
                if ("undefined" == typeof window) return !1;
                for (var k in window) try {
                    if (!excludedKeys["$" + k] && has.call(window, k) && null !== window[k] && "object" == typeof window[k]) try {
                        equalsConstructorPrototype(window[k])
                    } catch (e) {
                        return !0
                    }
                } catch (e) {
                    return !0
                }
                return !1
            }(),
            equalsConstructorPrototypeIfNotBuggy = function(o) {
                if ("undefined" == typeof window || !hasAutomationEqualityBug) return equalsConstructorPrototype(o);
                try {
                    return equalsConstructorPrototype(o)
                } catch (e) {
                    return !1
                }
            },
            keysShim = function(object) {
                var isObject = null !== object && "object" == typeof object,
                    isFunction = "[object Function]" === toStr.call(object),
                    isArguments = isArgs(object),
                    isString = isObject && "[object String]" === toStr.call(object),
                    theKeys = [];
                if (!isObject && !isFunction && !isArguments) throw new TypeError("Object.keys called on a non-object");
                var skipProto = hasProtoEnumBug && isFunction;
                if (isString && object.length > 0 && !has.call(object, 0))
                    for (var i = 0; i < object.length; ++i) theKeys.push(String(i));
                if (isArguments && object.length > 0)
                    for (var j = 0; j < object.length; ++j) theKeys.push(String(j));
                else
                    for (var name in object) skipProto && "prototype" === name || !has.call(object, name) || theKeys.push(String(name));
                if (hasDontEnumBug)
                    for (var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object), k = 0; k < dontEnums.length; ++k) skipConstructor && "constructor" === dontEnums[k] || !has.call(object, dontEnums[k]) || theKeys.push(dontEnums[k]);
                return theKeys
            };
        keysShim.shim = function() {
            if (Object.keys) {
                if (! function() {
                        return 2 === (Object.keys(arguments) || "").length
                    }(1, 2)) {
                    var originalKeys = Object.keys;
                    Object.keys = function(object) {
                        return originalKeys(isArgs(object) ? slice.call(object) : object)
                    }
                }
            } else Object.keys = keysShim;
            return Object.keys || keysShim
        }, module.exports = keysShim
    }, {
        "./isArguments": 129
    }],
    129: [function(require, module, exports) {
        "use strict";
        var toStr = Object.prototype.toString;
        module.exports = function(value) {
            var str = toStr.call(value),
                isArgs = "[object Arguments]" === str;
            return isArgs || (isArgs = "[object Array]" !== str && null !== value && "object" == typeof value && "number" == typeof value.length && value.length >= 0 && "[object Function]" === toStr.call(value.callee)), isArgs
        }
    }, {}],
    130: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
                if ("production" !== process.env.NODE_ENV)
                    for (var typeSpecName in typeSpecs)
                        if (typeSpecs.hasOwnProperty(typeSpecName)) {
                            var error;
                            try {
                                invariant("function" == typeof typeSpecs[typeSpecName], "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", componentName || "React class", location, typeSpecName), error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret)
                            } catch (ex) {
                                error = ex
                            }
                            if ("production" !== process.env.NODE_ENV && warning(!error || error instanceof Error, "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error), error instanceof Error && !(error.message in loggedTypeFailures)) {
                                loggedTypeFailures[error.message] = !0;
                                var stack = getStack ? getStack() : "";
                                "production" !== process.env.NODE_ENV && warning(!1, "Failed %s type: %s%s", location, error.message, null != stack ? stack : "")
                            }
                        }
            }
            var invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                ReactPropTypesSecret = require("./lib/ReactPropTypesSecret"),
                loggedTypeFailures = {};
            module.exports = checkPropTypes
        }).call(this, require("_process"))
    }, {
        "./lib/ReactPropTypesSecret": 132,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66
    }],
    131: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var emptyFunction = require("fbjs/lib/emptyFunction"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                ReactPropTypesSecret = require("./lib/ReactPropTypesSecret"),
                checkPropTypes = require("./checkPropTypes");
            module.exports = function(isValidElement) {
                function getIteratorFn(maybeIterable) {
                    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
                    if ("function" == typeof iteratorFn) return iteratorFn
                }

                function is(x, y) {
                    return x === y ? 0 !== x || 1 / x == 1 / y : x !== x && y !== y
                }

                function PropTypeError(message) {
                    this.message = message, this.stack = ""
                }

                function createChainableTypeChecker(validate) {
                    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
                        if (componentName = componentName || ANONYMOUS, propFullName = propFullName || propName, "production" !== process.env.NODE_ENV && secret !== ReactPropTypesSecret && "undefined" != typeof console) {
                            var cacheKey = componentName + ":" + propName;
                            manualPropTypeCallCache[cacheKey] || ("production" !== process.env.NODE_ENV && warning(!1, "You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will not work in production with the next major version. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.", propFullName, componentName), manualPropTypeCallCache[cacheKey] = !0)
                        }
                        return null == props[propName] ? isRequired ? new PropTypeError(null === props[propName] ? "The " + location + " `" + propFullName + "` is marked as required in `" + componentName + "`, but its value is `null`." : "The " + location + " `" + propFullName + "` is marked as required in `" + componentName + "`, but its value is `undefined`.") : null : validate(props, propName, componentName, location, propFullName)
                    }
                    if ("production" !== process.env.NODE_ENV) var manualPropTypeCallCache = {};
                    var chainedCheckType = checkType.bind(null, !1);
                    return chainedCheckType.isRequired = checkType.bind(null, !0), chainedCheckType
                }

                function createPrimitiveTypeChecker(expectedType) {
                    function validate(props, propName, componentName, location, propFullName, secret) {
                        var propValue = props[propName];
                        if (getPropType(propValue) !== expectedType) return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPreciseType(propValue) + "` supplied to `" + componentName + "`, expected `" + expectedType + "`.");
                        return null
                    }
                    return createChainableTypeChecker(validate)
                }

                function createArrayOfTypeChecker(typeChecker) {
                    function validate(props, propName, componentName, location, propFullName) {
                        if ("function" != typeof typeChecker) return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
                        var propValue = props[propName];
                        if (!Array.isArray(propValue)) {
                            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected an array.")
                        }
                        for (var i = 0; i < propValue.length; i++) {
                            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
                            if (error instanceof Error) return error
                        }
                        return null
                    }
                    return createChainableTypeChecker(validate)
                }

                function createInstanceTypeChecker(expectedClass) {
                    function validate(props, propName, componentName, location, propFullName) {
                        if (!(props[propName] instanceof expectedClass)) {
                            var expectedClassName = expectedClass.name || ANONYMOUS;
                            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getClassName(props[propName]) + "` supplied to `" + componentName + "`, expected instance of `" + expectedClassName + "`.")
                        }
                        return null
                    }
                    return createChainableTypeChecker(validate)
                }

                function createEnumTypeChecker(expectedValues) {
                    function validate(props, propName, componentName, location, propFullName) {
                        for (var propValue = props[propName], i = 0; i < expectedValues.length; i++)
                            if (is(propValue, expectedValues[i])) return null;
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + propValue + "` supplied to `" + componentName + "`, expected one of " + JSON.stringify(expectedValues) + ".")
                    }
                    return Array.isArray(expectedValues) ? createChainableTypeChecker(validate) : ("production" !== process.env.NODE_ENV && warning(!1, "Invalid argument supplied to oneOf, expected an instance of array."), emptyFunction.thatReturnsNull)
                }

                function createObjectOfTypeChecker(typeChecker) {
                    function validate(props, propName, componentName, location, propFullName) {
                        if ("function" != typeof typeChecker) return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
                        var propValue = props[propName],
                            propType = getPropType(propValue);
                        if ("object" !== propType) return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected an object.");
                        for (var key in propValue)
                            if (propValue.hasOwnProperty(key)) {
                                var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                                if (error instanceof Error) return error
                            }
                        return null
                    }
                    return createChainableTypeChecker(validate)
                }

                function createUnionTypeChecker(arrayOfTypeCheckers) {
                    function validate(props, propName, componentName, location, propFullName) {
                        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                            if (null == (0, arrayOfTypeCheckers[i])(props, propName, componentName, location, propFullName, ReactPropTypesSecret)) return null
                        }
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to `" + componentName + "`.")
                    }
                    return Array.isArray(arrayOfTypeCheckers) ? createChainableTypeChecker(validate) : ("production" !== process.env.NODE_ENV && warning(!1, "Invalid argument supplied to oneOfType, expected an instance of array."), emptyFunction.thatReturnsNull)
                }

                function createShapeTypeChecker(shapeTypes) {
                    function validate(props, propName, componentName, location, propFullName) {
                        var propValue = props[propName],
                            propType = getPropType(propValue);
                        if ("object" !== propType) return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected `object`.");
                        for (var key in shapeTypes) {
                            var checker = shapeTypes[key];
                            if (checker) {
                                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                                if (error) return error
                            }
                        }
                        return null
                    }
                    return createChainableTypeChecker(validate)
                }

                function isNode(propValue) {
                    switch (typeof propValue) {
                        case "number":
                        case "string":
                        case "undefined":
                            return !0;
                        case "boolean":
                            return !propValue;
                        case "object":
                            if (Array.isArray(propValue)) return propValue.every(isNode);
                            if (null === propValue || isValidElement(propValue)) return !0;
                            var iteratorFn = getIteratorFn(propValue);
                            if (!iteratorFn) return !1;
                            var step, iterator = iteratorFn.call(propValue);
                            if (iteratorFn !== propValue.entries) {
                                for (; !(step = iterator.next()).done;)
                                    if (!isNode(step.value)) return !1
                            } else
                                for (; !(step = iterator.next()).done;) {
                                    var entry = step.value;
                                    if (entry && !isNode(entry[1])) return !1
                                }
                            return !0;
                        default:
                            return !1
                    }
                }

                function isSymbol(propType, propValue) {
                    return "symbol" === propType || ("Symbol" === propValue["@@toStringTag"] || "function" == typeof Symbol && propValue instanceof Symbol)
                }

                function getPropType(propValue) {
                    var propType = typeof propValue;
                    return Array.isArray(propValue) ? "array" : propValue instanceof RegExp ? "object" : isSymbol(propType, propValue) ? "symbol" : propType
                }

                function getPreciseType(propValue) {
                    var propType = getPropType(propValue);
                    if ("object" === propType) {
                        if (propValue instanceof Date) return "date";
                        if (propValue instanceof RegExp) return "regexp"
                    }
                    return propType
                }

                function getClassName(propValue) {
                    return propValue.constructor && propValue.constructor.name ? propValue.constructor.name : ANONYMOUS
                }
                var ReactPropTypes, ITERATOR_SYMBOL = "function" == typeof Symbol && Symbol.iterator,
                    FAUX_ITERATOR_SYMBOL = "@@iterator",
                    ANONYMOUS = "<<anonymous>>";
                if ("production" !== process.env.NODE_ENV) ReactPropTypes = {
                    array: createPrimitiveTypeChecker("array"),
                    bool: createPrimitiveTypeChecker("boolean"),
                    func: createPrimitiveTypeChecker("function"),
                    number: createPrimitiveTypeChecker("number"),
                    object: createPrimitiveTypeChecker("object"),
                    string: createPrimitiveTypeChecker("string"),
                    symbol: createPrimitiveTypeChecker("symbol"),
                    any: function() {
                        return createChainableTypeChecker(emptyFunction.thatReturnsNull)
                    }(),
                    arrayOf: createArrayOfTypeChecker,
                    element: function() {
                        function validate(props, propName, componentName, location, propFullName) {
                            var propValue = props[propName];
                            if (!isValidElement(propValue)) {
                                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected a single ReactElement.")
                            }
                            return null
                        }
                        return createChainableTypeChecker(validate)
                    }(),
                    instanceOf: createInstanceTypeChecker,
                    node: function() {
                        function validate(props, propName, componentName, location, propFullName) {
                            return isNode(props[propName]) ? null : new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to `" + componentName + "`, expected a ReactNode.")
                        }
                        return createChainableTypeChecker(validate)
                    }(),
                    objectOf: createObjectOfTypeChecker,
                    oneOf: createEnumTypeChecker,
                    oneOfType: createUnionTypeChecker,
                    shape: createShapeTypeChecker
                };
                else {
                    var productionTypeChecker = function() {
                        invariant(!1, "React.PropTypes type checking code is stripped in production.")
                    };
                    productionTypeChecker.isRequired = productionTypeChecker;
                    var getProductionTypeChecker = function() {
                        return productionTypeChecker
                    };
                    ReactPropTypes = {
                        array: productionTypeChecker,
                        bool: productionTypeChecker,
                        func: productionTypeChecker,
                        number: productionTypeChecker,
                        object: productionTypeChecker,
                        string: productionTypeChecker,
                        symbol: productionTypeChecker,
                        any: productionTypeChecker,
                        arrayOf: getProductionTypeChecker,
                        element: productionTypeChecker,
                        instanceOf: getProductionTypeChecker,
                        node: productionTypeChecker,
                        objectOf: getProductionTypeChecker,
                        oneOf: getProductionTypeChecker,
                        oneOfType: getProductionTypeChecker,
                        shape: getProductionTypeChecker
                    }
                }
                return PropTypeError.prototype = Error.prototype, ReactPropTypes.checkPropTypes = checkPropTypes, ReactPropTypes.PropTypes = ReactPropTypes, ReactPropTypes
            }
        }).call(this, require("_process"))
    }, {
        "./checkPropTypes": 130,
        "./lib/ReactPropTypesSecret": 132,
        _process: 13,
        "fbjs/lib/emptyFunction": 51,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66
    }],
    132: [function(require, module, exports) {
        "use strict";
        module.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
    }, {}],
    133: [function(require, module, exports) {
        "use strict";
        module.exports = require("./lib/ReactDOM")
    }, {
        "./lib/ReactDOM": 163
    }],
    134: [function(require, module, exports) {
        "use strict";
        var ARIADOMPropertyConfig = {
            Properties: {
                "aria-current": 0,
                "aria-details": 0,
                "aria-disabled": 0,
                "aria-hidden": 0,
                "aria-invalid": 0,
                "aria-keyshortcuts": 0,
                "aria-label": 0,
                "aria-roledescription": 0,
                "aria-autocomplete": 0,
                "aria-checked": 0,
                "aria-expanded": 0,
                "aria-haspopup": 0,
                "aria-level": 0,
                "aria-modal": 0,
                "aria-multiline": 0,
                "aria-multiselectable": 0,
                "aria-orientation": 0,
                "aria-placeholder": 0,
                "aria-pressed": 0,
                "aria-readonly": 0,
                "aria-required": 0,
                "aria-selected": 0,
                "aria-sort": 0,
                "aria-valuemax": 0,
                "aria-valuemin": 0,
                "aria-valuenow": 0,
                "aria-valuetext": 0,
                "aria-atomic": 0,
                "aria-busy": 0,
                "aria-live": 0,
                "aria-relevant": 0,
                "aria-dropeffect": 0,
                "aria-grabbed": 0,
                "aria-activedescendant": 0,
                "aria-colcount": 0,
                "aria-colindex": 0,
                "aria-colspan": 0,
                "aria-controls": 0,
                "aria-describedby": 0,
                "aria-errormessage": 0,
                "aria-flowto": 0,
                "aria-labelledby": 0,
                "aria-owns": 0,
                "aria-posinset": 0,
                "aria-rowcount": 0,
                "aria-rowindex": 0,
                "aria-rowspan": 0,
                "aria-setsize": 0
            },
            DOMAttributeNames: {},
            DOMPropertyNames: {}
        };
        module.exports = ARIADOMPropertyConfig
    }, {}],
    135: [function(require, module, exports) {
        "use strict";
        var ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            focusNode = require("fbjs/lib/focusNode"),
            AutoFocusUtils = {
                focusDOMComponent: function() {
                    focusNode(ReactDOMComponentTree.getNodeFromInstance(this))
                }
            };
        module.exports = AutoFocusUtils
    }, {
        "./ReactDOMComponentTree": 166,
        "fbjs/lib/focusNode": 53
    }],
    136: [function(require, module, exports) {
        "use strict";

        function isKeypressCommand(nativeEvent) {
            return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey)
        }

        function getCompositionEventType(topLevelType) {
            switch (topLevelType) {
                case "topCompositionStart":
                    return eventTypes.compositionStart;
                case "topCompositionEnd":
                    return eventTypes.compositionEnd;
                case "topCompositionUpdate":
                    return eventTypes.compositionUpdate
            }
        }

        function isFallbackCompositionStart(topLevelType, nativeEvent) {
            return "topKeyDown" === topLevelType && nativeEvent.keyCode === START_KEYCODE
        }

        function isFallbackCompositionEnd(topLevelType, nativeEvent) {
            switch (topLevelType) {
                case "topKeyUp":
                    return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);
                case "topKeyDown":
                    return nativeEvent.keyCode !== START_KEYCODE;
                case "topKeyPress":
                case "topMouseDown":
                case "topBlur":
                    return !0;
                default:
                    return !1
            }
        }

        function getDataFromCustomEvent(nativeEvent) {
            var detail = nativeEvent.detail;
            return "object" == typeof detail && "data" in detail ? detail.data : null
        }

        function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var eventType, fallbackData;
            if (canUseCompositionEvent ? eventType = getCompositionEventType(topLevelType) : currentComposition ? isFallbackCompositionEnd(topLevelType, nativeEvent) && (eventType = eventTypes.compositionEnd) : isFallbackCompositionStart(topLevelType, nativeEvent) && (eventType = eventTypes.compositionStart), !eventType) return null;
            useFallbackCompositionData && (currentComposition || eventType !== eventTypes.compositionStart ? eventType === eventTypes.compositionEnd && currentComposition && (fallbackData = currentComposition.getData()) : currentComposition = FallbackCompositionState.getPooled(nativeEventTarget));
            var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
            if (fallbackData) event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                null !== customData && (event.data = customData)
            }
            return EventPropagators.accumulateTwoPhaseDispatches(event), event
        }

        function getNativeBeforeInputChars(topLevelType, nativeEvent) {
            switch (topLevelType) {
                case "topCompositionEnd":
                    return getDataFromCustomEvent(nativeEvent);
                case "topKeyPress":
                    return nativeEvent.which !== SPACEBAR_CODE ? null : (hasSpaceKeypress = !0, SPACEBAR_CHAR);
                case "topTextInput":
                    var chars = nativeEvent.data;
                    return chars === SPACEBAR_CHAR && hasSpaceKeypress ? null : chars;
                default:
                    return null
            }
        }

        function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
            if (currentComposition) {
                if ("topCompositionEnd" === topLevelType || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
                    var chars = currentComposition.getData();
                    return FallbackCompositionState.release(currentComposition), currentComposition = null, chars
                }
                return null
            }
            switch (topLevelType) {
                case "topPaste":
                    return null;
                case "topKeyPress":
                    return nativeEvent.which && !isKeypressCommand(nativeEvent) ? String.fromCharCode(nativeEvent.which) : null;
                case "topCompositionEnd":
                    return useFallbackCompositionData ? null : nativeEvent.data;
                default:
                    return null
            }
        }

        function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var chars;
            if (!(chars = canUseTextInputEvent ? getNativeBeforeInputChars(topLevelType, nativeEvent) : getFallbackBeforeInputChars(topLevelType, nativeEvent))) return null;
            var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
            return event.data = chars, EventPropagators.accumulateTwoPhaseDispatches(event), event
        }
        var EventPropagators = require("./EventPropagators"),
            ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            FallbackCompositionState = require("./FallbackCompositionState"),
            SyntheticCompositionEvent = require("./SyntheticCompositionEvent"),
            SyntheticInputEvent = require("./SyntheticInputEvent"),
            END_KEYCODES = [9, 13, 27, 32],
            START_KEYCODE = 229,
            canUseCompositionEvent = ExecutionEnvironment.canUseDOM && "CompositionEvent" in window,
            documentMode = null;
        ExecutionEnvironment.canUseDOM && "documentMode" in document && (documentMode = document.documentMode);
        var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && "TextEvent" in window && !documentMode && ! function() {
                    var opera = window.opera;
                    return "object" == typeof opera && "function" == typeof opera.version && parseInt(opera.version(), 10) <= 12
                }(),
            useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11),
            SPACEBAR_CODE = 32,
            SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE),
            eventTypes = {
                beforeInput: {
                    phasedRegistrationNames: {
                        bubbled: "onBeforeInput",
                        captured: "onBeforeInputCapture"
                    },
                    dependencies: ["topCompositionEnd", "topKeyPress", "topTextInput", "topPaste"]
                },
                compositionEnd: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionEnd",
                        captured: "onCompositionEndCapture"
                    },
                    dependencies: ["topBlur", "topCompositionEnd", "topKeyDown", "topKeyPress", "topKeyUp", "topMouseDown"]
                },
                compositionStart: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionStart",
                        captured: "onCompositionStartCapture"
                    },
                    dependencies: ["topBlur", "topCompositionStart", "topKeyDown", "topKeyPress", "topKeyUp", "topMouseDown"]
                },
                compositionUpdate: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionUpdate",
                        captured: "onCompositionUpdateCapture"
                    },
                    dependencies: ["topBlur", "topCompositionUpdate", "topKeyDown", "topKeyPress", "topKeyUp", "topMouseDown"]
                }
            },
            hasSpaceKeypress = !1,
            currentComposition = null,
            BeforeInputEventPlugin = {
                eventTypes: eventTypes,
                extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)]
                }
            };
        module.exports = BeforeInputEventPlugin
    }, {
        "./EventPropagators": 152,
        "./FallbackCompositionState": 153,
        "./SyntheticCompositionEvent": 217,
        "./SyntheticInputEvent": 221,
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    137: [function(require, module, exports) {
        "use strict";

        function prefixKey(prefix, key) {
            return prefix + key.charAt(0).toUpperCase() + key.substring(1)
        }
        var isUnitlessNumber = {
                animationIterationCount: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridRow: !0,
                gridColumn: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0
            },
            prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
            prefixes.forEach(function(prefix) {
                isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop]
            })
        });
        var shorthandPropertyExpansions = {
                background: {
                    backgroundAttachment: !0,
                    backgroundColor: !0,
                    backgroundImage: !0,
                    backgroundPositionX: !0,
                    backgroundPositionY: !0,
                    backgroundRepeat: !0
                },
                backgroundPosition: {
                    backgroundPositionX: !0,
                    backgroundPositionY: !0
                },
                border: {
                    borderWidth: !0,
                    borderStyle: !0,
                    borderColor: !0
                },
                borderBottom: {
                    borderBottomWidth: !0,
                    borderBottomStyle: !0,
                    borderBottomColor: !0
                },
                borderLeft: {
                    borderLeftWidth: !0,
                    borderLeftStyle: !0,
                    borderLeftColor: !0
                },
                borderRight: {
                    borderRightWidth: !0,
                    borderRightStyle: !0,
                    borderRightColor: !0
                },
                borderTop: {
                    borderTopWidth: !0,
                    borderTopStyle: !0,
                    borderTopColor: !0
                },
                font: {
                    fontStyle: !0,
                    fontVariant: !0,
                    fontWeight: !0,
                    fontSize: !0,
                    lineHeight: !0,
                    fontFamily: !0
                },
                outline: {
                    outlineWidth: !0,
                    outlineStyle: !0,
                    outlineColor: !0
                }
            },
            CSSProperty = {
                isUnitlessNumber: isUnitlessNumber,
                shorthandPropertyExpansions: shorthandPropertyExpansions
            };
        module.exports = CSSProperty
    }, {}],
    138: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var CSSProperty = require("./CSSProperty"),
                ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                camelizeStyleName = require("fbjs/lib/camelizeStyleName"),
                dangerousStyleValue = require("./dangerousStyleValue"),
                hyphenateStyleName = require("fbjs/lib/hyphenateStyleName"),
                memoizeStringOnly = require("fbjs/lib/memoizeStringOnly"),
                warning = require("fbjs/lib/warning"),
                processStyleName = memoizeStringOnly(function(styleName) {
                    return hyphenateStyleName(styleName)
                }),
                hasShorthandPropertyBug = !1,
                styleFloatAccessor = "cssFloat";
            if (ExecutionEnvironment.canUseDOM) {
                var tempStyle = document.createElement("div").style;
                try {
                    tempStyle.font = ""
                } catch (e) {
                    hasShorthandPropertyBug = !0
                }
                void 0 === document.documentElement.style.cssFloat && (styleFloatAccessor = "styleFloat")
            }
            if ("production" !== process.env.NODE_ENV) var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/,
                badStyleValueWithSemicolonPattern = /;\s*$/,
                warnedStyleNames = {},
                warnedStyleValues = {},
                warnedForNaNValue = !1,
                warnHyphenatedStyleName = function(name, owner) {
                    warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, "production" !== process.env.NODE_ENV && warning(!1, "Unsupported style property %s. Did you mean %s?%s", name, camelizeStyleName(name), checkRenderMessage(owner)))
                },
                warnBadVendoredStyleName = function(name, owner) {
                    warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, "production" !== process.env.NODE_ENV && warning(!1, "Unsupported vendor-prefixed style property %s. Did you mean %s?%s", name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)))
                },
                warnStyleValueWithSemicolon = function(name, value, owner) {
                    warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, "production" !== process.env.NODE_ENV && warning(!1, 'Style property values shouldn\'t contain a semicolon.%s Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, "")))
                },
                warnStyleValueIsNaN = function(name, value, owner) {
                    warnedForNaNValue || (warnedForNaNValue = !0, "production" !== process.env.NODE_ENV && warning(!1, "`NaN` is an invalid value for the `%s` css style property.%s", name, checkRenderMessage(owner)))
                },
                checkRenderMessage = function(owner) {
                    if (owner) {
                        var name = owner.getName();
                        if (name) return " Check the render method of `" + name + "`."
                    }
                    return ""
                },
                warnValidStyle = function(name, value, component) {
                    var owner;
                    component && (owner = component._currentElement._owner), name.indexOf("-") > -1 ? warnHyphenatedStyleName(name, owner) : badVendoredStyleNamePattern.test(name) ? warnBadVendoredStyleName(name, owner) : badStyleValueWithSemicolonPattern.test(value) && warnStyleValueWithSemicolon(name, value, owner), "number" == typeof value && isNaN(value) && warnStyleValueIsNaN(name, 0, owner)
                };
            var CSSPropertyOperations = {
                createMarkupForStyles: function(styles, component) {
                    var serialized = "";
                    for (var styleName in styles)
                        if (styles.hasOwnProperty(styleName)) {
                            var styleValue = styles[styleName];
                            "production" !== process.env.NODE_ENV && warnValidStyle(styleName, styleValue, component), null != styleValue && (serialized += processStyleName(styleName) + ":", serialized += dangerousStyleValue(styleName, styleValue, component) + ";")
                        }
                    return serialized || null
                },
                setValueForStyles: function(node, styles, component) {
                    "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                        instanceID: component._debugID,
                        type: "update styles",
                        payload: styles
                    });
                    var style = node.style;
                    for (var styleName in styles)
                        if (styles.hasOwnProperty(styleName)) {
                            "production" !== process.env.NODE_ENV && warnValidStyle(styleName, styles[styleName], component);
                            var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
                            if ("float" !== styleName && "cssFloat" !== styleName || (styleName = styleFloatAccessor), styleValue) style[styleName] = styleValue;
                            else {
                                var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
                                if (expansion)
                                    for (var individualStyleName in expansion) style[individualStyleName] = "";
                                else style[styleName] = ""
                            }
                        }
                }
            };
            module.exports = CSSPropertyOperations
        }).call(this, require("_process"))
    }, {
        "./CSSProperty": 137,
        "./ReactInstrumentation": 195,
        "./dangerousStyleValue": 234,
        _process: 13,
        "fbjs/lib/ExecutionEnvironment": 45,
        "fbjs/lib/camelizeStyleName": 47,
        "fbjs/lib/hyphenateStyleName": 58,
        "fbjs/lib/memoizeStringOnly": 62,
        "fbjs/lib/warning": 66
    }],
    139: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function")
            }
            var _prodInvariant = require("./reactProdInvariant"),
                PooledClass = require("./PooledClass"),
                invariant = require("fbjs/lib/invariant"),
                CallbackQueue = function() {
                    function CallbackQueue(arg) {
                        _classCallCheck(this, CallbackQueue), this._callbacks = null, this._contexts = null, this._arg = arg
                    }
                    return CallbackQueue.prototype.enqueue = function(callback, context) {
                        this._callbacks = this._callbacks || [], this._callbacks.push(callback), this._contexts = this._contexts || [], this._contexts.push(context)
                    }, CallbackQueue.prototype.notifyAll = function() {
                        var callbacks = this._callbacks,
                            contexts = this._contexts,
                            arg = this._arg;
                        if (callbacks && contexts) {
                            callbacks.length !== contexts.length && ("production" !== process.env.NODE_ENV ? invariant(!1, "Mismatched list of contexts in callback queue") : _prodInvariant("24")), this._callbacks = null, this._contexts = null;
                            for (var i = 0; i < callbacks.length; i++) callbacks[i].call(contexts[i], arg);
                            callbacks.length = 0, contexts.length = 0
                        }
                    }, CallbackQueue.prototype.checkpoint = function() {
                        return this._callbacks ? this._callbacks.length : 0
                    }, CallbackQueue.prototype.rollback = function(len) {
                        this._callbacks && this._contexts && (this._callbacks.length = len, this._contexts.length = len)
                    }, CallbackQueue.prototype.reset = function() {
                        this._callbacks = null, this._contexts = null
                    }, CallbackQueue.prototype.destructor = function() {
                        this.reset()
                    }, CallbackQueue
                }();
            module.exports = PooledClass.addPoolingTo(CallbackQueue)
        }).call(this, require("_process"))
    }, {
        "./PooledClass": 157,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    140: [function(require, module, exports) {
        "use strict";

        function shouldUseChangeEvent(elem) {
            var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
            return "select" === nodeName || "input" === nodeName && "file" === elem.type
        }

        function manualDispatchChangeEvent(nativeEvent) {
            var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
            EventPropagators.accumulateTwoPhaseDispatches(event), ReactUpdates.batchedUpdates(runEventInBatch, event)
        }

        function runEventInBatch(event) {
            EventPluginHub.enqueueEvents(event), EventPluginHub.processEventQueue(!1)
        }

        function startWatchingForChangeEventIE8(target, targetInst) {
            activeElement = target, activeElementInst = targetInst, activeElement.attachEvent("onchange", manualDispatchChangeEvent)
        }

        function stopWatchingForChangeEventIE8() {
            activeElement && (activeElement.detachEvent("onchange", manualDispatchChangeEvent), activeElement = null, activeElementInst = null)
        }

        function getTargetInstForChangeEvent(topLevelType, targetInst) {
            if ("topChange" === topLevelType) return targetInst
        }

        function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
            "topFocus" === topLevelType ? (stopWatchingForChangeEventIE8(), startWatchingForChangeEventIE8(target, targetInst)) : "topBlur" === topLevelType && stopWatchingForChangeEventIE8()
        }

        function startWatchingForValueChange(target, targetInst) {
            activeElement = target, activeElementInst = targetInst, activeElementValue = target.value, activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, "value"), Object.defineProperty(activeElement, "value", newValueProp), activeElement.attachEvent ? activeElement.attachEvent("onpropertychange", handlePropertyChange) : activeElement.addEventListener("propertychange", handlePropertyChange, !1)
        }

        function stopWatchingForValueChange() {
            activeElement && (delete activeElement.value, activeElement.detachEvent ? activeElement.detachEvent("onpropertychange", handlePropertyChange) : activeElement.removeEventListener("propertychange", handlePropertyChange, !1), activeElement = null, activeElementInst = null, activeElementValue = null, activeElementValueProp = null)
        }

        function handlePropertyChange(nativeEvent) {
            if ("value" === nativeEvent.propertyName) {
                var value = nativeEvent.srcElement.value;
                value !== activeElementValue && (activeElementValue = value, manualDispatchChangeEvent(nativeEvent))
            }
        }

        function getTargetInstForInputEvent(topLevelType, targetInst) {
            if ("topInput" === topLevelType) return targetInst
        }

        function handleEventsForInputEventIE(topLevelType, target, targetInst) {
            "topFocus" === topLevelType ? (stopWatchingForValueChange(), startWatchingForValueChange(target, targetInst)) : "topBlur" === topLevelType && stopWatchingForValueChange()
        }

        function getTargetInstForInputEventIE(topLevelType, targetInst) {
            if (("topSelectionChange" === topLevelType || "topKeyUp" === topLevelType || "topKeyDown" === topLevelType) && activeElement && activeElement.value !== activeElementValue) return activeElementValue = activeElement.value, activeElementInst
        }

        function shouldUseClickEvent(elem) {
            return elem.nodeName && "input" === elem.nodeName.toLowerCase() && ("checkbox" === elem.type || "radio" === elem.type)
        }

        function getTargetInstForClickEvent(topLevelType, targetInst) {
            if ("topClick" === topLevelType) return targetInst
        }

        function handleControlledInputBlur(inst, node) {
            if (null != inst) {
                var state = inst._wrapperState || node._wrapperState;
                if (state && state.controlled && "number" === node.type) {
                    var value = "" + node.value;
                    node.getAttribute("value") !== value && node.setAttribute("value", value)
                }
            }
        }
        var EventPluginHub = require("./EventPluginHub"),
            EventPropagators = require("./EventPropagators"),
            ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            ReactUpdates = require("./ReactUpdates"),
            SyntheticEvent = require("./SyntheticEvent"),
            getEventTarget = require("./getEventTarget"),
            isEventSupported = require("./isEventSupported"),
            isTextInputElement = require("./isTextInputElement"),
            eventTypes = {
                change: {
                    phasedRegistrationNames: {
                        bubbled: "onChange",
                        captured: "onChangeCapture"
                    },
                    dependencies: ["topBlur", "topChange", "topClick", "topFocus", "topInput", "topKeyDown", "topKeyUp", "topSelectionChange"]
                }
            },
            activeElement = null,
            activeElementInst = null,
            activeElementValue = null,
            activeElementValueProp = null,
            doesChangeEventBubble = !1;
        ExecutionEnvironment.canUseDOM && (doesChangeEventBubble = isEventSupported("change") && (!document.documentMode || document.documentMode > 8));
        var isInputEventSupported = !1;
        ExecutionEnvironment.canUseDOM && (isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 11));
        var newValueProp = {
                get: function() {
                    return activeElementValueProp.get.call(this)
                },
                set: function(val) {
                    activeElementValue = "" + val, activeElementValueProp.set.call(this, val)
                }
            },
            ChangeEventPlugin = {
                eventTypes: eventTypes,
                extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                    var getTargetInstFunc, handleEventFunc, targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
                    if (shouldUseChangeEvent(targetNode) ? doesChangeEventBubble ? getTargetInstFunc = getTargetInstForChangeEvent : handleEventFunc = handleEventsForChangeEventIE8 : isTextInputElement(targetNode) ? isInputEventSupported ? getTargetInstFunc = getTargetInstForInputEvent : (getTargetInstFunc = getTargetInstForInputEventIE, handleEventFunc = handleEventsForInputEventIE) : shouldUseClickEvent(targetNode) && (getTargetInstFunc = getTargetInstForClickEvent), getTargetInstFunc) {
                        var inst = getTargetInstFunc(topLevelType, targetInst);
                        if (inst) {
                            var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
                            return event.type = "change", EventPropagators.accumulateTwoPhaseDispatches(event), event
                        }
                    }
                    handleEventFunc && handleEventFunc(topLevelType, targetNode, targetInst), "topBlur" === topLevelType && handleControlledInputBlur(targetInst, targetNode)
                }
            };
        module.exports = ChangeEventPlugin
    }, {
        "./EventPluginHub": 149,
        "./EventPropagators": 152,
        "./ReactDOMComponentTree": 166,
        "./ReactUpdates": 210,
        "./SyntheticEvent": 219,
        "./getEventTarget": 242,
        "./isEventSupported": 249,
        "./isTextInputElement": 250,
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    141: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getNodeAfter(parentNode, node) {
                return Array.isArray(node) && (node = node[1]), node ? node.nextSibling : parentNode.firstChild
            }

            function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
                DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode)
            }

            function moveChild(parentNode, childNode, referenceNode) {
                Array.isArray(childNode) ? moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode) : insertChildAt(parentNode, childNode, referenceNode)
            }

            function removeChild(parentNode, childNode) {
                if (Array.isArray(childNode)) {
                    var closingComment = childNode[1];
                    childNode = childNode[0], removeDelimitedText(parentNode, childNode, closingComment), parentNode.removeChild(closingComment)
                }
                parentNode.removeChild(childNode)
            }

            function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
                for (var node = openingComment;;) {
                    var nextNode = node.nextSibling;
                    if (insertChildAt(parentNode, node, referenceNode), node === closingComment) break;
                    node = nextNode
                }
            }

            function removeDelimitedText(parentNode, startNode, closingComment) {
                for (;;) {
                    var node = startNode.nextSibling;
                    if (node === closingComment) break;
                    parentNode.removeChild(node)
                }
            }

            function replaceDelimitedText(openingComment, closingComment, stringText) {
                var parentNode = openingComment.parentNode,
                    nodeAfterComment = openingComment.nextSibling;
                nodeAfterComment === closingComment ? stringText && insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment) : stringText ? (setTextContent(nodeAfterComment, stringText), removeDelimitedText(parentNode, nodeAfterComment, closingComment)) : removeDelimitedText(parentNode, openingComment, closingComment), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                    instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
                    type: "replace text",
                    payload: stringText
                })
            }
            var DOMLazyTree = require("./DOMLazyTree"),
                Danger = require("./Danger"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                createMicrosoftUnsafeLocalFunction = require("./createMicrosoftUnsafeLocalFunction"),
                setInnerHTML = require("./setInnerHTML"),
                setTextContent = require("./setTextContent"),
                insertChildAt = createMicrosoftUnsafeLocalFunction(function(parentNode, childNode, referenceNode) {
                    parentNode.insertBefore(childNode, referenceNode)
                }),
                dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
            "production" !== process.env.NODE_ENV && (dangerouslyReplaceNodeWithMarkup = function(oldChild, markup, prevInstance) {
                if (Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup), 0 !== prevInstance._debugID) ReactInstrumentation.debugTool.onHostOperation({
                    instanceID: prevInstance._debugID,
                    type: "replace with",
                    payload: markup.toString()
                });
                else {
                    var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
                    0 !== nextInstance._debugID && ReactInstrumentation.debugTool.onHostOperation({
                        instanceID: nextInstance._debugID,
                        type: "mount",
                        payload: markup.toString()
                    })
                }
            });
            var DOMChildrenOperations = {
                dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
                replaceDelimitedText: replaceDelimitedText,
                processUpdates: function(parentNode, updates) {
                    if ("production" !== process.env.NODE_ENV) var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
                    for (var k = 0; k < updates.length; k++) {
                        var update = updates[k];
                        switch (update.type) {
                            case "INSERT_MARKUP":
                                insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode)), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                                    instanceID: parentNodeDebugID,
                                    type: "insert child",
                                    payload: {
                                        toIndex: update.toIndex,
                                        content: update.content.toString()
                                    }
                                });
                                break;
                            case "MOVE_EXISTING":
                                moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode)), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                                    instanceID: parentNodeDebugID,
                                    type: "move child",
                                    payload: {
                                        fromIndex: update.fromIndex,
                                        toIndex: update.toIndex
                                    }
                                });
                                break;
                            case "SET_MARKUP":
                                setInnerHTML(parentNode, update.content), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                                    instanceID: parentNodeDebugID,
                                    type: "replace children",
                                    payload: update.content.toString()
                                });
                                break;
                            case "TEXT_CONTENT":
                                setTextContent(parentNode, update.content), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                                    instanceID: parentNodeDebugID,
                                    type: "replace text",
                                    payload: update.content.toString()
                                });
                                break;
                            case "REMOVE_NODE":
                                removeChild(parentNode, update.fromNode), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                                    instanceID: parentNodeDebugID,
                                    type: "remove child",
                                    payload: {
                                        fromIndex: update.fromIndex
                                    }
                                })
                        }
                    }
                }
            };
            module.exports = DOMChildrenOperations
        }).call(this, require("_process"))
    }, {
        "./DOMLazyTree": 142,
        "./Danger": 146,
        "./ReactDOMComponentTree": 166,
        "./ReactInstrumentation": 195,
        "./createMicrosoftUnsafeLocalFunction": 233,
        "./setInnerHTML": 254,
        "./setTextContent": 255,
        _process: 13
    }],
    142: [function(require, module, exports) {
        "use strict";

        function insertTreeChildren(tree) {
            if (enableLazy) {
                var node = tree.node,
                    children = tree.children;
                if (children.length)
                    for (var i = 0; i < children.length; i++) insertTreeBefore(node, children[i], null);
                else null != tree.html ? setInnerHTML(node, tree.html) : null != tree.text && setTextContent(node, tree.text)
            }
        }

        function replaceChildWithTree(oldNode, newTree) {
            oldNode.parentNode.replaceChild(newTree.node, oldNode), insertTreeChildren(newTree)
        }

        function queueChild(parentTree, childTree) {
            enableLazy ? parentTree.children.push(childTree) : parentTree.node.appendChild(childTree.node)
        }

        function queueHTML(tree, html) {
            enableLazy ? tree.html = html : setInnerHTML(tree.node, html)
        }

        function queueText(tree, text) {
            enableLazy ? tree.text = text : setTextContent(tree.node, text)
        }

        function toString() {
            return this.node.nodeName
        }

        function DOMLazyTree(node) {
            return {
                node: node,
                children: [],
                html: null,
                text: null,
                toString: toString
            }
        }
        var DOMNamespaces = require("./DOMNamespaces"),
            setInnerHTML = require("./setInnerHTML"),
            createMicrosoftUnsafeLocalFunction = require("./createMicrosoftUnsafeLocalFunction"),
            setTextContent = require("./setTextContent"),
            enableLazy = "undefined" != typeof document && "number" == typeof document.documentMode || "undefined" != typeof navigator && "string" == typeof navigator.userAgent && /\bEdge\/\d/.test(navigator.userAgent),
            insertTreeBefore = createMicrosoftUnsafeLocalFunction(function(parentNode, tree, referenceNode) {
                11 === tree.node.nodeType || 1 === tree.node.nodeType && "object" === tree.node.nodeName.toLowerCase() && (null == tree.node.namespaceURI || tree.node.namespaceURI === DOMNamespaces.html) ? (insertTreeChildren(tree), parentNode.insertBefore(tree.node, referenceNode)) : (parentNode.insertBefore(tree.node, referenceNode), insertTreeChildren(tree))
            });
        DOMLazyTree.insertTreeBefore = insertTreeBefore, DOMLazyTree.replaceChildWithTree = replaceChildWithTree, DOMLazyTree.queueChild = queueChild, DOMLazyTree.queueHTML = queueHTML, DOMLazyTree.queueText = queueText, module.exports = DOMLazyTree
    }, {
        "./DOMNamespaces": 143,
        "./createMicrosoftUnsafeLocalFunction": 233,
        "./setInnerHTML": 254,
        "./setTextContent": 255
    }],
    143: [function(require, module, exports) {
        "use strict";
        var DOMNamespaces = {
            html: "http://www.w3.org/1999/xhtml",
            mathml: "http://www.w3.org/1998/Math/MathML",
            svg: "http://www.w3.org/2000/svg"
        };
        module.exports = DOMNamespaces
    }, {}],
    144: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function checkMask(value, bitmask) {
                return (value & bitmask) === bitmask
            }
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant"),
                DOMPropertyInjection = {
                    MUST_USE_PROPERTY: 1,
                    HAS_BOOLEAN_VALUE: 4,
                    HAS_NUMERIC_VALUE: 8,
                    HAS_POSITIVE_NUMERIC_VALUE: 24,
                    HAS_OVERLOADED_BOOLEAN_VALUE: 32,
                    injectDOMPropertyConfig: function(domPropertyConfig) {
                        var Injection = DOMPropertyInjection,
                            Properties = domPropertyConfig.Properties || {},
                            DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {},
                            DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {},
                            DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {},
                            DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
                        domPropertyConfig.isCustomAttribute && DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
                        for (var propName in Properties) {
                            DOMProperty.properties.hasOwnProperty(propName) && ("production" !== process.env.NODE_ENV ? invariant(!1, "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.", propName) : _prodInvariant("48", propName));
                            var lowerCased = propName.toLowerCase(),
                                propConfig = Properties[propName],
                                propertyInfo = {
                                    attributeName: lowerCased,
                                    attributeNamespace: null,
                                    propertyName: propName,
                                    mutationMethod: null,
                                    mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
                                    hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
                                    hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
                                    hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
                                    hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
                                };
                            if (propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1 || ("production" !== process.env.NODE_ENV ? invariant(!1, "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s", propName) : _prodInvariant("50", propName)), "production" !== process.env.NODE_ENV && (DOMProperty.getPossibleStandardName[lowerCased] = propName), DOMAttributeNames.hasOwnProperty(propName)) {
                                var attributeName = DOMAttributeNames[propName];
                                propertyInfo.attributeName = attributeName, "production" !== process.env.NODE_ENV && (DOMProperty.getPossibleStandardName[attributeName] = propName)
                            }
                            DOMAttributeNamespaces.hasOwnProperty(propName) && (propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName]), DOMPropertyNames.hasOwnProperty(propName) && (propertyInfo.propertyName = DOMPropertyNames[propName]), DOMMutationMethods.hasOwnProperty(propName) && (propertyInfo.mutationMethod = DOMMutationMethods[propName]), DOMProperty.properties[propName] = propertyInfo
                        }
                    }
                },
                ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",
                DOMProperty = {
                    ID_ATTRIBUTE_NAME: "data-reactid",
                    ROOT_ATTRIBUTE_NAME: "data-reactroot",
                    ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
                    ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",
                    properties: {},
                    getPossibleStandardName: "production" !== process.env.NODE_ENV ? {
                        autofocus: "autoFocus"
                    } : null,
                    _isCustomAttributeFunctions: [],
                    isCustomAttribute: function(attributeName) {
                        for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
                            if ((0, DOMProperty._isCustomAttributeFunctions[i])(attributeName)) return !0
                        }
                        return !1
                    },
                    injection: DOMPropertyInjection
                };
            module.exports = DOMProperty
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    145: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function isAttributeNameSafe(attributeName) {
                return !!validatedAttributeNameCache.hasOwnProperty(attributeName) || !illegalAttributeNameCache.hasOwnProperty(attributeName) && (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName) ? (validatedAttributeNameCache[attributeName] = !0, !0) : (illegalAttributeNameCache[attributeName] = !0, "production" !== process.env.NODE_ENV && warning(!1, "Invalid attribute name: `%s`", attributeName), !1))
            }

            function shouldIgnoreValue(propertyInfo, value) {
                return null == value || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && !1 === value
            }
            var DOMProperty = require("./DOMProperty"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                quoteAttributeValueForBrowser = require("./quoteAttributeValueForBrowser"),
                warning = require("fbjs/lib/warning"),
                VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + DOMProperty.ATTRIBUTE_NAME_START_CHAR + "][" + DOMProperty.ATTRIBUTE_NAME_CHAR + "]*$"),
                illegalAttributeNameCache = {},
                validatedAttributeNameCache = {},
                DOMPropertyOperations = {
                    createMarkupForID: function(id) {
                        return DOMProperty.ID_ATTRIBUTE_NAME + "=" + quoteAttributeValueForBrowser(id)
                    },
                    setAttributeForID: function(node, id) {
                        node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id)
                    },
                    createMarkupForRoot: function() {
                        return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""'
                    },
                    setAttributeForRoot: function(node) {
                        node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, "")
                    },
                    createMarkupForProperty: function(name, value) {
                        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
                        if (propertyInfo) {
                            if (shouldIgnoreValue(propertyInfo, value)) return "";
                            var attributeName = propertyInfo.attributeName;
                            return propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && !0 === value ? attributeName + '=""' : attributeName + "=" + quoteAttributeValueForBrowser(value)
                        }
                        return DOMProperty.isCustomAttribute(name) ? null == value ? "" : name + "=" + quoteAttributeValueForBrowser(value) : null
                    },
                    createMarkupForCustomAttribute: function(name, value) {
                        return isAttributeNameSafe(name) && null != value ? name + "=" + quoteAttributeValueForBrowser(value) : ""
                    },
                    setValueForProperty: function(node, name, value) {
                        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
                        if (propertyInfo) {
                            var mutationMethod = propertyInfo.mutationMethod;
                            if (mutationMethod) mutationMethod(node, value);
                            else {
                                if (shouldIgnoreValue(propertyInfo, value)) return void this.deleteValueForProperty(node, name);
                                if (propertyInfo.mustUseProperty) node[propertyInfo.propertyName] = value;
                                else {
                                    var attributeName = propertyInfo.attributeName,
                                        namespace = propertyInfo.attributeNamespace;
                                    namespace ? node.setAttributeNS(namespace, attributeName, "" + value) : propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && !0 === value ? node.setAttribute(attributeName, "") : node.setAttribute(attributeName, "" + value)
                                }
                            }
                        } else if (DOMProperty.isCustomAttribute(name)) return void DOMPropertyOperations.setValueForAttribute(node, name, value);
                        if ("production" !== process.env.NODE_ENV) {
                            var payload = {};
                            payload[name] = value, ReactInstrumentation.debugTool.onHostOperation({
                                instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                                type: "update attribute",
                                payload: payload
                            })
                        }
                    },
                    setValueForAttribute: function(node, name, value) {
                        if (isAttributeNameSafe(name) && (null == value ? node.removeAttribute(name) : node.setAttribute(name, "" + value), "production" !== process.env.NODE_ENV)) {
                            var payload = {};
                            payload[name] = value, ReactInstrumentation.debugTool.onHostOperation({
                                instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                                type: "update attribute",
                                payload: payload
                            })
                        }
                    },
                    deleteValueForAttribute: function(node, name) {
                        node.removeAttribute(name), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                            type: "remove attribute",
                            payload: name
                        })
                    },
                    deleteValueForProperty: function(node, name) {
                        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
                        if (propertyInfo) {
                            var mutationMethod = propertyInfo.mutationMethod;
                            if (mutationMethod) mutationMethod(node, void 0);
                            else if (propertyInfo.mustUseProperty) {
                                var propName = propertyInfo.propertyName;
                                propertyInfo.hasBooleanValue ? node[propName] = !1 : node[propName] = ""
                            } else node.removeAttribute(propertyInfo.attributeName)
                        } else DOMProperty.isCustomAttribute(name) && node.removeAttribute(name);
                        "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onHostOperation({
                            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                            type: "remove attribute",
                            payload: name
                        })
                    }
                };
            module.exports = DOMPropertyOperations
        }).call(this, require("_process"))
    }, {
        "./DOMProperty": 144,
        "./ReactDOMComponentTree": 166,
        "./ReactInstrumentation": 195,
        "./quoteAttributeValueForBrowser": 251,
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    146: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _prodInvariant = require("./reactProdInvariant"),
                DOMLazyTree = require("./DOMLazyTree"),
                ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
                createNodesFromMarkup = require("fbjs/lib/createNodesFromMarkup"),
                emptyFunction = require("fbjs/lib/emptyFunction"),
                invariant = require("fbjs/lib/invariant"),
                Danger = {
                    dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
                        if (ExecutionEnvironment.canUseDOM || ("production" !== process.env.NODE_ENV ? invariant(!1, "dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.") : _prodInvariant("56")), markup || ("production" !== process.env.NODE_ENV ? invariant(!1, "dangerouslyReplaceNodeWithMarkup(...): Missing markup.") : _prodInvariant("57")), "HTML" === oldChild.nodeName && ("production" !== process.env.NODE_ENV ? invariant(!1, "dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().") : _prodInvariant("58")), "string" == typeof markup) {
                            var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
                            oldChild.parentNode.replaceChild(newChild, oldChild)
                        } else DOMLazyTree.replaceChildWithTree(oldChild, markup)
                    }
                };
            module.exports = Danger
        }).call(this, require("_process"))
    }, {
        "./DOMLazyTree": 142,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/ExecutionEnvironment": 45,
        "fbjs/lib/createNodesFromMarkup": 50,
        "fbjs/lib/emptyFunction": 51,
        "fbjs/lib/invariant": 59
    }],
    147: [function(require, module, exports) {
        "use strict";
        var DefaultEventPluginOrder = ["ResponderEventPlugin", "SimpleEventPlugin", "TapEventPlugin", "EnterLeaveEventPlugin", "ChangeEventPlugin", "SelectEventPlugin", "BeforeInputEventPlugin"];
        module.exports = DefaultEventPluginOrder
    }, {}],
    148: [function(require, module, exports) {
        "use strict";
        var EventPropagators = require("./EventPropagators"),
            ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            SyntheticMouseEvent = require("./SyntheticMouseEvent"),
            eventTypes = {
                mouseEnter: {
                    registrationName: "onMouseEnter",
                    dependencies: ["topMouseOut", "topMouseOver"]
                },
                mouseLeave: {
                    registrationName: "onMouseLeave",
                    dependencies: ["topMouseOut", "topMouseOver"]
                }
            },
            EnterLeaveEventPlugin = {
                eventTypes: eventTypes,
                extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                    if ("topMouseOver" === topLevelType && (nativeEvent.relatedTarget || nativeEvent.fromElement)) return null;
                    if ("topMouseOut" !== topLevelType && "topMouseOver" !== topLevelType) return null;
                    var win;
                    if (nativeEventTarget.window === nativeEventTarget) win = nativeEventTarget;
                    else {
                        var doc = nativeEventTarget.ownerDocument;
                        win = doc ? doc.defaultView || doc.parentWindow : window
                    }
                    var from, to;
                    if ("topMouseOut" === topLevelType) {
                        from = targetInst;
                        var related = nativeEvent.relatedTarget || nativeEvent.toElement;
                        to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null
                    } else from = null, to = targetInst;
                    if (from === to) return null;
                    var fromNode = null == from ? win : ReactDOMComponentTree.getNodeFromInstance(from),
                        toNode = null == to ? win : ReactDOMComponentTree.getNodeFromInstance(to),
                        leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
                    leave.type = "mouseleave", leave.target = fromNode, leave.relatedTarget = toNode;
                    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
                    return enter.type = "mouseenter", enter.target = toNode, enter.relatedTarget = fromNode, EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to), [leave, enter]
                }
            };
        module.exports = EnterLeaveEventPlugin
    }, {
        "./EventPropagators": 152,
        "./ReactDOMComponentTree": 166,
        "./SyntheticMouseEvent": 223
    }],
    149: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function isInteractive(tag) {
                return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag
            }

            function shouldPreventMouseEvent(name, type, props) {
                switch (name) {
                    case "onClick":
                    case "onClickCapture":
                    case "onDoubleClick":
                    case "onDoubleClickCapture":
                    case "onMouseDown":
                    case "onMouseDownCapture":
                    case "onMouseMove":
                    case "onMouseMoveCapture":
                    case "onMouseUp":
                    case "onMouseUpCapture":
                        return !(!props.disabled || !isInteractive(type));
                    default:
                        return !1
                }
            }
            var _prodInvariant = require("./reactProdInvariant"),
                EventPluginRegistry = require("./EventPluginRegistry"),
                EventPluginUtils = require("./EventPluginUtils"),
                ReactErrorUtils = require("./ReactErrorUtils"),
                accumulateInto = require("./accumulateInto"),
                forEachAccumulated = require("./forEachAccumulated"),
                invariant = require("fbjs/lib/invariant"),
                listenerBank = {},
                eventQueue = null,
                executeDispatchesAndRelease = function(event, simulated) {
                    event && (EventPluginUtils.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event))
                },
                executeDispatchesAndReleaseSimulated = function(e) {
                    return executeDispatchesAndRelease(e, !0)
                },
                executeDispatchesAndReleaseTopLevel = function(e) {
                    return executeDispatchesAndRelease(e, !1)
                },
                getDictionaryKey = function(inst) {
                    return "." + inst._rootNodeID
                },
                EventPluginHub = {
                    injection: {
                        injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
                        injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
                    },
                    putListener: function(inst, registrationName, listener) {
                        "function" != typeof listener && ("production" !== process.env.NODE_ENV ? invariant(!1, "Expected %s listener to be a function, instead got type %s", registrationName, typeof listener) : _prodInvariant("94", registrationName, typeof listener));
                        var key = getDictionaryKey(inst);
                        (listenerBank[registrationName] || (listenerBank[registrationName] = {}))[key] = listener;
                        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
                        PluginModule && PluginModule.didPutListener && PluginModule.didPutListener(inst, registrationName, listener)
                    },
                    getListener: function(inst, registrationName) {
                        var bankForRegistrationName = listenerBank[registrationName];
                        if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) return null;
                        var key = getDictionaryKey(inst);
                        return bankForRegistrationName && bankForRegistrationName[key]
                    },
                    deleteListener: function(inst, registrationName) {
                        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
                        PluginModule && PluginModule.willDeleteListener && PluginModule.willDeleteListener(inst, registrationName);
                        var bankForRegistrationName = listenerBank[registrationName];
                        if (bankForRegistrationName) {
                            delete bankForRegistrationName[getDictionaryKey(inst)]
                        }
                    },
                    deleteAllListeners: function(inst) {
                        var key = getDictionaryKey(inst);
                        for (var registrationName in listenerBank)
                            if (listenerBank.hasOwnProperty(registrationName) && listenerBank[registrationName][key]) {
                                var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
                                PluginModule && PluginModule.willDeleteListener && PluginModule.willDeleteListener(inst, registrationName), delete listenerBank[registrationName][key]
                            }
                    },
                    extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                        for (var events, plugins = EventPluginRegistry.plugins, i = 0; i < plugins.length; i++) {
                            var possiblePlugin = plugins[i];
                            if (possiblePlugin) {
                                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                                extractedEvents && (events = accumulateInto(events, extractedEvents))
                            }
                        }
                        return events
                    },
                    enqueueEvents: function(events) {
                        events && (eventQueue = accumulateInto(eventQueue, events))
                    },
                    processEventQueue: function(simulated) {
                        var processingEventQueue = eventQueue;
                        eventQueue = null, simulated ? forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel), eventQueue && ("production" !== process.env.NODE_ENV ? invariant(!1, "processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.") : _prodInvariant("95")), ReactErrorUtils.rethrowCaughtError()
                    },
                    __purge: function() {
                        listenerBank = {}
                    },
                    __getListenerBank: function() {
                        return listenerBank
                    }
                };
            module.exports = EventPluginHub
        }).call(this, require("_process"))
    }, {
        "./EventPluginRegistry": 150,
        "./EventPluginUtils": 151,
        "./ReactErrorUtils": 186,
        "./accumulateInto": 230,
        "./forEachAccumulated": 238,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    150: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function recomputePluginOrdering() {
                if (eventPluginOrder)
                    for (var pluginName in namesToPlugins) {
                        var pluginModule = namesToPlugins[pluginName],
                            pluginIndex = eventPluginOrder.indexOf(pluginName);
                        if (pluginIndex > -1 || ("production" !== process.env.NODE_ENV ? invariant(!1, "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.", pluginName) : _prodInvariant("96", pluginName)), !EventPluginRegistry.plugins[pluginIndex]) {
                            pluginModule.extractEvents || ("production" !== process.env.NODE_ENV ? invariant(!1, "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.", pluginName) : _prodInvariant("97", pluginName)), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
                            var publishedEvents = pluginModule.eventTypes;
                            for (var eventName in publishedEvents) publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) || ("production" !== process.env.NODE_ENV ? invariant(!1, "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName) : _prodInvariant("98", eventName, pluginName))
                        }
                    }
            }

            function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
                EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) && ("production" !== process.env.NODE_ENV ? invariant(!1, "EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.", eventName) : _prodInvariant("99", eventName)), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
                var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
                if (phasedRegistrationNames) {
                    for (var phaseName in phasedRegistrationNames)
                        if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                            var phasedRegistrationName = phasedRegistrationNames[phaseName];
                            publishRegistrationName(phasedRegistrationName, pluginModule, eventName)
                        }
                    return !0
                }
                return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0)
            }

            function publishRegistrationName(registrationName, pluginModule, eventName) {
                if (EventPluginRegistry.registrationNameModules[registrationName] && ("production" !== process.env.NODE_ENV ? invariant(!1, "EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.", registrationName) : _prodInvariant("100", registrationName)), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies, "production" !== process.env.NODE_ENV) {
                    var lowerCasedName = registrationName.toLowerCase();
                    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName, "onDoubleClick" === registrationName && (EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName)
                }
            }
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant"),
                eventPluginOrder = null,
                namesToPlugins = {},
                EventPluginRegistry = {
                    plugins: [],
                    eventNameDispatchConfigs: {},
                    registrationNameModules: {},
                    registrationNameDependencies: {},
                    possibleRegistrationNames: "production" !== process.env.NODE_ENV ? {} : null,
                    injectEventPluginOrder: function(injectedEventPluginOrder) {
                        eventPluginOrder && ("production" !== process.env.NODE_ENV ? invariant(!1, "EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.") : _prodInvariant("101")), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering()
                    },
                    injectEventPluginsByName: function(injectedNamesToPlugins) {
                        var isOrderingDirty = !1;
                        for (var pluginName in injectedNamesToPlugins)
                            if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                                var pluginModule = injectedNamesToPlugins[pluginName];
                                namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (namesToPlugins[pluginName] && ("production" !== process.env.NODE_ENV ? invariant(!1, "EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.", pluginName) : _prodInvariant("102", pluginName)), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0)
                            }
                        isOrderingDirty && recomputePluginOrdering()
                    },
                    getPluginModuleForEvent: function(event) {
                        var dispatchConfig = event.dispatchConfig;
                        if (dispatchConfig.registrationName) return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
                        if (void 0 !== dispatchConfig.phasedRegistrationNames) {
                            var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
                            for (var phase in phasedRegistrationNames)
                                if (phasedRegistrationNames.hasOwnProperty(phase)) {
                                    var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
                                    if (pluginModule) return pluginModule
                                }
                        }
                        return null
                    },
                    _resetEventPlugins: function() {
                        eventPluginOrder = null;
                        for (var pluginName in namesToPlugins) namesToPlugins.hasOwnProperty(pluginName) && delete namesToPlugins[pluginName];
                        EventPluginRegistry.plugins.length = 0;
                        var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
                        for (var eventName in eventNameDispatchConfigs) eventNameDispatchConfigs.hasOwnProperty(eventName) && delete eventNameDispatchConfigs[eventName];
                        var registrationNameModules = EventPluginRegistry.registrationNameModules;
                        for (var registrationName in registrationNameModules) registrationNameModules.hasOwnProperty(registrationName) && delete registrationNameModules[registrationName];
                        if ("production" !== process.env.NODE_ENV) {
                            var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
                            for (var lowerCasedName in possibleRegistrationNames) possibleRegistrationNames.hasOwnProperty(lowerCasedName) && delete possibleRegistrationNames[lowerCasedName]
                        }
                    }
                };
            module.exports = EventPluginRegistry
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    151: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function isEndish(topLevelType) {
                return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType
            }

            function isMoveish(topLevelType) {
                return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType
            }

            function isStartish(topLevelType) {
                return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType
            }

            function executeDispatch(event, simulated, listener, inst) {
                var type = event.type || "unknown-event";
                event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), simulated ? ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event) : ReactErrorUtils.invokeGuardedCallback(type, listener, event), event.currentTarget = null
            }

            function executeDispatchesInOrder(event, simulated) {
                var dispatchListeners = event._dispatchListeners,
                    dispatchInstances = event._dispatchInstances;
                if ("production" !== process.env.NODE_ENV && validateEventDispatches(event), Array.isArray(dispatchListeners))
                    for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
                else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
                event._dispatchListeners = null, event._dispatchInstances = null
            }

            function executeDispatchesInOrderStopAtTrueImpl(event) {
                var dispatchListeners = event._dispatchListeners,
                    dispatchInstances = event._dispatchInstances;
                if ("production" !== process.env.NODE_ENV && validateEventDispatches(event), Array.isArray(dispatchListeners)) {
                    for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++)
                        if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i]
                } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
                return null
            }

            function executeDispatchesInOrderStopAtTrue(event) {
                var ret = executeDispatchesInOrderStopAtTrueImpl(event);
                return event._dispatchInstances = null, event._dispatchListeners = null, ret
            }

            function executeDirectDispatch(event) {
                "production" !== process.env.NODE_ENV && validateEventDispatches(event);
                var dispatchListener = event._dispatchListeners,
                    dispatchInstance = event._dispatchInstances;
                Array.isArray(dispatchListener) && ("production" !== process.env.NODE_ENV ? invariant(!1, "executeDirectDispatch(...): Invalid `event`.") : _prodInvariant("103")), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
                var res = dispatchListener ? dispatchListener(event) : null;
                return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res
            }

            function hasDispatches(event) {
                return !!event._dispatchListeners
            }
            var ComponentTree, TreeTraversal, validateEventDispatches, _prodInvariant = require("./reactProdInvariant"),
                ReactErrorUtils = require("./ReactErrorUtils"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                injection = {
                    injectComponentTree: function(Injected) {
                        ComponentTree = Injected, "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, "EventPluginUtils.injection.injectComponentTree(...): Injected module is missing getNodeFromInstance or getInstanceFromNode.")
                    },
                    injectTreeTraversal: function(Injected) {
                        TreeTraversal = Injected, "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, "EventPluginUtils.injection.injectTreeTraversal(...): Injected module is missing isAncestor or getLowestCommonAncestor.")
                    }
                };
            "production" !== process.env.NODE_ENV && (validateEventDispatches = function(event) {
                var dispatchListeners = event._dispatchListeners,
                    dispatchInstances = event._dispatchInstances,
                    listenersIsArr = Array.isArray(dispatchListeners),
                    listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0,
                    instancesIsArr = Array.isArray(dispatchInstances),
                    instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
                "production" !== process.env.NODE_ENV && warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, "EventPluginUtils: Invalid `event`.")
            });
            var EventPluginUtils = {
                isEndish: isEndish,
                isMoveish: isMoveish,
                isStartish: isStartish,
                executeDirectDispatch: executeDirectDispatch,
                executeDispatchesInOrder: executeDispatchesInOrder,
                executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
                hasDispatches: hasDispatches,
                getInstanceFromNode: function(node) {
                    return ComponentTree.getInstanceFromNode(node)
                },
                getNodeFromInstance: function(node) {
                    return ComponentTree.getNodeFromInstance(node)
                },
                isAncestor: function(a, b) {
                    return TreeTraversal.isAncestor(a, b)
                },
                getLowestCommonAncestor: function(a, b) {
                    return TreeTraversal.getLowestCommonAncestor(a, b)
                },
                getParentInstance: function(inst) {
                    return TreeTraversal.getParentInstance(inst)
                },
                traverseTwoPhase: function(target, fn, arg) {
                    return TreeTraversal.traverseTwoPhase(target, fn, arg)
                },
                traverseEnterLeave: function(from, to, fn, argFrom, argTo) {
                    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo)
                },
                injection: injection
            };
            module.exports = EventPluginUtils
        }).call(this, require("_process"))
    }, {
        "./ReactErrorUtils": 186,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66
    }],
    152: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function listenerAtPhase(inst, event, propagationPhase) {
                var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
                return getListener(inst, registrationName)
            }

            function accumulateDirectionalDispatches(inst, phase, event) {
                "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(inst, "Dispatching inst must not be null");
                var listener = listenerAtPhase(inst, event, phase);
                listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst))
            }

            function accumulateTwoPhaseDispatchesSingle(event) {
                event && event.dispatchConfig.phasedRegistrationNames && EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event)
            }

            function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
                if (event && event.dispatchConfig.phasedRegistrationNames) {
                    var targetInst = event._targetInst,
                        parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
                    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event)
                }
            }

            function accumulateDispatches(inst, ignoredDirection, event) {
                if (event && event.dispatchConfig.registrationName) {
                    var registrationName = event.dispatchConfig.registrationName,
                        listener = getListener(inst, registrationName);
                    listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst))
                }
            }

            function accumulateDirectDispatchesSingle(event) {
                event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event)
            }

            function accumulateTwoPhaseDispatches(events) {
                forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle)
            }

            function accumulateTwoPhaseDispatchesSkipTarget(events) {
                forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget)
            }

            function accumulateEnterLeaveDispatches(leave, enter, from, to) {
                EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter)
            }

            function accumulateDirectDispatches(events) {
                forEachAccumulated(events, accumulateDirectDispatchesSingle)
            }
            var EventPluginHub = require("./EventPluginHub"),
                EventPluginUtils = require("./EventPluginUtils"),
                accumulateInto = require("./accumulateInto"),
                forEachAccumulated = require("./forEachAccumulated"),
                warning = require("fbjs/lib/warning"),
                getListener = EventPluginHub.getListener,
                EventPropagators = {
                    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
                    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
                    accumulateDirectDispatches: accumulateDirectDispatches,
                    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
                };
            module.exports = EventPropagators
        }).call(this, require("_process"))
    }, {
        "./EventPluginHub": 149,
        "./EventPluginUtils": 151,
        "./accumulateInto": 230,
        "./forEachAccumulated": 238,
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    153: [function(require, module, exports) {
        "use strict";

        function FallbackCompositionState(root) {
            this._root = root, this._startText = this.getText(), this._fallbackText = null
        }
        var _assign = require("object-assign"),
            PooledClass = require("./PooledClass"),
            getTextContentAccessor = require("./getTextContentAccessor");
        _assign(FallbackCompositionState.prototype, {
            destructor: function() {
                this._root = null, this._startText = null, this._fallbackText = null
            },
            getText: function() {
                return "value" in this._root ? this._root.value : this._root[getTextContentAccessor()]
            },
            getData: function() {
                if (this._fallbackText) return this._fallbackText;
                var start, end, startValue = this._startText,
                    startLength = startValue.length,
                    endValue = this.getText(),
                    endLength = endValue.length;
                for (start = 0; start < startLength && startValue[start] === endValue[start]; start++);
                var minEnd = startLength - start;
                for (end = 1; end <= minEnd && startValue[startLength - end] === endValue[endLength - end]; end++);
                var sliceTail = end > 1 ? 1 - end : void 0;
                return this._fallbackText = endValue.slice(start, sliceTail), this._fallbackText
            }
        }), PooledClass.addPoolingTo(FallbackCompositionState), module.exports = FallbackCompositionState
    }, {
        "./PooledClass": 157,
        "./getTextContentAccessor": 246,
        "object-assign": 127
    }],
    154: [function(require, module, exports) {
        "use strict";
        var DOMProperty = require("./DOMProperty"),
            MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY,
            HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE,
            HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE,
            HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE,
            HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE,
            HTMLDOMPropertyConfig = {
                isCustomAttribute: RegExp.prototype.test.bind(new RegExp("^(data|aria)-[" + DOMProperty.ATTRIBUTE_NAME_CHAR + "]*$")),
                Properties: {
                    accept: 0,
                    acceptCharset: 0,
                    accessKey: 0,
                    action: 0,
                    allowFullScreen: HAS_BOOLEAN_VALUE,
                    allowTransparency: 0,
                    alt: 0,
                    as: 0,
                    async: HAS_BOOLEAN_VALUE,
                    autoComplete: 0,
                    autoPlay: HAS_BOOLEAN_VALUE,
                    capture: HAS_BOOLEAN_VALUE,
                    cellPadding: 0,
                    cellSpacing: 0,
                    charSet: 0,
                    challenge: 0,
                    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                    cite: 0,
                    classID: 0,
                    className: 0,
                    cols: HAS_POSITIVE_NUMERIC_VALUE,
                    colSpan: 0,
                    content: 0,
                    contentEditable: 0,
                    contextMenu: 0,
                    controls: HAS_BOOLEAN_VALUE,
                    coords: 0,
                    crossOrigin: 0,
                    data: 0,
                    dateTime: 0,
                    default: HAS_BOOLEAN_VALUE,
                    defer: HAS_BOOLEAN_VALUE,
                    dir: 0,
                    disabled: HAS_BOOLEAN_VALUE,
                    download: HAS_OVERLOADED_BOOLEAN_VALUE,
                    draggable: 0,
                    encType: 0,
                    form: 0,
                    formAction: 0,
                    formEncType: 0,
                    formMethod: 0,
                    formNoValidate: HAS_BOOLEAN_VALUE,
                    formTarget: 0,
                    frameBorder: 0,
                    headers: 0,
                    height: 0,
                    hidden: HAS_BOOLEAN_VALUE,
                    high: 0,
                    href: 0,
                    hrefLang: 0,
                    htmlFor: 0,
                    httpEquiv: 0,
                    icon: 0,
                    id: 0,
                    inputMode: 0,
                    integrity: 0,
                    is: 0,
                    keyParams: 0,
                    keyType: 0,
                    kind: 0,
                    label: 0,
                    lang: 0,
                    list: 0,
                    loop: HAS_BOOLEAN_VALUE,
                    low: 0,
                    manifest: 0,
                    marginHeight: 0,
                    marginWidth: 0,
                    max: 0,
                    maxLength: 0,
                    media: 0,
                    mediaGroup: 0,
                    method: 0,
                    min: 0,
                    minLength: 0,
                    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                    name: 0,
                    nonce: 0,
                    noValidate: HAS_BOOLEAN_VALUE,
                    open: HAS_BOOLEAN_VALUE,
                    optimum: 0,
                    pattern: 0,
                    placeholder: 0,
                    playsInline: HAS_BOOLEAN_VALUE,
                    poster: 0,
                    preload: 0,
                    profile: 0,
                    radioGroup: 0,
                    readOnly: HAS_BOOLEAN_VALUE,
                    referrerPolicy: 0,
                    rel: 0,
                    required: HAS_BOOLEAN_VALUE,
                    reversed: HAS_BOOLEAN_VALUE,
                    role: 0,
                    rows: HAS_POSITIVE_NUMERIC_VALUE,
                    rowSpan: HAS_NUMERIC_VALUE,
                    sandbox: 0,
                    scope: 0,
                    scoped: HAS_BOOLEAN_VALUE,
                    scrolling: 0,
                    seamless: HAS_BOOLEAN_VALUE,
                    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
                    shape: 0,
                    size: HAS_POSITIVE_NUMERIC_VALUE,
                    sizes: 0,
                    span: HAS_POSITIVE_NUMERIC_VALUE,
                    spellCheck: 0,
                    src: 0,
                    srcDoc: 0,
                    srcLang: 0,
                    srcSet: 0,
                    start: HAS_NUMERIC_VALUE,
                    step: 0,
                    style: 0,
                    summary: 0,
                    tabIndex: 0,
                    target: 0,
                    title: 0,
                    type: 0,
                    useMap: 0,
                    value: 0,
                    width: 0,
                    wmode: 0,
                    wrap: 0,
                    about: 0,
                    datatype: 0,
                    inlist: 0,
                    prefix: 0,
                    property: 0,
                    resource: 0,
                    typeof: 0,
                    vocab: 0,
                    autoCapitalize: 0,
                    autoCorrect: 0,
                    autoSave: 0,
                    color: 0,
                    itemProp: 0,
                    itemScope: HAS_BOOLEAN_VALUE,
                    itemType: 0,
                    itemID: 0,
                    itemRef: 0,
                    results: 0,
                    security: 0,
                    unselectable: 0
                },
                DOMAttributeNames: {
                    acceptCharset: "accept-charset",
                    className: "class",
                    htmlFor: "for",
                    httpEquiv: "http-equiv"
                },
                DOMPropertyNames: {},
                DOMMutationMethods: {
                    value: function(node, value) {
                        if (null == value) return node.removeAttribute("value");
                        "number" !== node.type || !1 === node.hasAttribute("value") ? node.setAttribute("value", "" + value) : node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node && node.setAttribute("value", "" + value)
                    }
                }
            };
        module.exports = HTMLDOMPropertyConfig
    }, {
        "./DOMProperty": 144
    }],
    155: [function(require, module, exports) {
        "use strict";

        function escape(key) {
            var escaperLookup = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + ("" + key).replace(/[=:]/g, function(match) {
                    return escaperLookup[match]
                })
        }

        function unescape(key) {
            var unescaperLookup = {
                "=0": "=",
                "=2": ":"
            };
            return ("" + ("." === key[0] && "$" === key[1] ? key.substring(2) : key.substring(1))).replace(/(=0|=2)/g, function(match) {
                return unescaperLookup[match]
            })
        }
        var KeyEscapeUtils = {
            escape: escape,
            unescape: unescape
        };
        module.exports = KeyEscapeUtils
    }, {}],
    156: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function _assertSingleLink(inputProps) {
                null != inputProps.checkedLink && null != inputProps.valueLink && ("production" !== process.env.NODE_ENV ? invariant(!1, "Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa.") : _prodInvariant("87"))
            }

            function _assertValueLink(inputProps) {
                _assertSingleLink(inputProps), (null != inputProps.value || null != inputProps.onChange) && ("production" !== process.env.NODE_ENV ? invariant(!1, "Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink.") : _prodInvariant("88"))
            }

            function _assertCheckedLink(inputProps) {
                _assertSingleLink(inputProps), (null != inputProps.checked || null != inputProps.onChange) && ("production" !== process.env.NODE_ENV ? invariant(!1, "Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink") : _prodInvariant("89"))
            }

            function getDeclarationErrorAddendum(owner) {
                if (owner) {
                    var name = owner.getName();
                    if (name) return " Check the render method of `" + name + "`."
                }
                return ""
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactPropTypesSecret = require("./ReactPropTypesSecret"),
                propTypesFactory = require("prop-types/factory"),
                React = require("react/lib/React"),
                PropTypes = propTypesFactory(React.isValidElement),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                hasReadOnlyValue = {
                    button: !0,
                    checkbox: !0,
                    image: !0,
                    hidden: !0,
                    radio: !0,
                    reset: !0,
                    submit: !0
                },
                propTypes = {
                    value: function(props, propName, componentName) {
                        return !props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled ? null : new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")
                    },
                    checked: function(props, propName, componentName) {
                        return !props[propName] || props.onChange || props.readOnly || props.disabled ? null : new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")
                    },
                    onChange: PropTypes.func
                },
                loggedTypeFailures = {},
                LinkedValueUtils = {
                    checkPropTypes: function(tagName, props, owner) {
                        for (var propName in propTypes) {
                            if (propTypes.hasOwnProperty(propName)) var error = propTypes[propName](props, propName, tagName, "prop", null, ReactPropTypesSecret);
                            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                                loggedTypeFailures[error.message] = !0;
                                var addendum = getDeclarationErrorAddendum(owner);
                                "production" !== process.env.NODE_ENV && warning(!1, "Failed form propType: %s%s", error.message, addendum)
                            }
                        }
                    },
                    getValue: function(inputProps) {
                        return inputProps.valueLink ? (_assertValueLink(inputProps), inputProps.valueLink.value) : inputProps.value
                    },
                    getChecked: function(inputProps) {
                        return inputProps.checkedLink ? (_assertCheckedLink(inputProps), inputProps.checkedLink.value) : inputProps.checked
                    },
                    executeOnChange: function(inputProps, event) {
                        return inputProps.valueLink ? (_assertValueLink(inputProps), inputProps.valueLink.requestChange(event.target.value)) : inputProps.checkedLink ? (_assertCheckedLink(inputProps), inputProps.checkedLink.requestChange(event.target.checked)) : inputProps.onChange ? inputProps.onChange.call(void 0, event) : void 0
                    }
                };
            module.exports = LinkedValueUtils
        }).call(this, require("_process"))
    }, {
        "./ReactPropTypesSecret": 203,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "prop-types/factory": 131,
        "react/lib/React": 261
    }],
    157: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant"),
                oneArgumentPooler = function(copyFieldsFrom) {
                    var Klass = this;
                    if (Klass.instancePool.length) {
                        var instance = Klass.instancePool.pop();
                        return Klass.call(instance, copyFieldsFrom), instance
                    }
                    return new Klass(copyFieldsFrom)
                },
                twoArgumentPooler = function(a1, a2) {
                    var Klass = this;
                    if (Klass.instancePool.length) {
                        var instance = Klass.instancePool.pop();
                        return Klass.call(instance, a1, a2), instance
                    }
                    return new Klass(a1, a2)
                },
                threeArgumentPooler = function(a1, a2, a3) {
                    var Klass = this;
                    if (Klass.instancePool.length) {
                        var instance = Klass.instancePool.pop();
                        return Klass.call(instance, a1, a2, a3), instance
                    }
                    return new Klass(a1, a2, a3)
                },
                fourArgumentPooler = function(a1, a2, a3, a4) {
                    var Klass = this;
                    if (Klass.instancePool.length) {
                        var instance = Klass.instancePool.pop();
                        return Klass.call(instance, a1, a2, a3, a4), instance
                    }
                    return new Klass(a1, a2, a3, a4)
                },
                standardReleaser = function(instance) {
                    var Klass = this;
                    instance instanceof Klass || ("production" !== process.env.NODE_ENV ? invariant(!1, "Trying to release an instance into a pool of a different type.") : _prodInvariant("25")), instance.destructor(), Klass.instancePool.length < Klass.poolSize && Klass.instancePool.push(instance)
                },
                DEFAULT_POOLER = oneArgumentPooler,
                addPoolingTo = function(CopyConstructor, pooler) {
                    var NewKlass = CopyConstructor;
                    return NewKlass.instancePool = [], NewKlass.getPooled = pooler || DEFAULT_POOLER, NewKlass.poolSize || (NewKlass.poolSize = 10), NewKlass.release = standardReleaser, NewKlass
                },
                PooledClass = {
                    addPoolingTo: addPoolingTo,
                    oneArgumentPooler: oneArgumentPooler,
                    twoArgumentPooler: twoArgumentPooler,
                    threeArgumentPooler: threeArgumentPooler,
                    fourArgumentPooler: fourArgumentPooler
                };
            module.exports = PooledClass
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    158: [function(require, module, exports) {
        "use strict";

        function getListeningForDocument(mountAt) {
            return Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey) || (mountAt[topListenersIDKey] = reactTopListenersCounter++, alreadyListeningTo[mountAt[topListenersIDKey]] = {}), alreadyListeningTo[mountAt[topListenersIDKey]]
        }
        var hasEventPageXY, _assign = require("object-assign"),
            EventPluginRegistry = require("./EventPluginRegistry"),
            ReactEventEmitterMixin = require("./ReactEventEmitterMixin"),
            ViewportMetrics = require("./ViewportMetrics"),
            getVendorPrefixedEventName = require("./getVendorPrefixedEventName"),
            isEventSupported = require("./isEventSupported"),
            alreadyListeningTo = {},
            isMonitoringScrollValue = !1,
            reactTopListenersCounter = 0,
            topEventMapping = {
                topAbort: "abort",
                topAnimationEnd: getVendorPrefixedEventName("animationend") || "animationend",
                topAnimationIteration: getVendorPrefixedEventName("animationiteration") || "animationiteration",
                topAnimationStart: getVendorPrefixedEventName("animationstart") || "animationstart",
                topBlur: "blur",
                topCanPlay: "canplay",
                topCanPlayThrough: "canplaythrough",
                topChange: "change",
                topClick: "click",
                topCompositionEnd: "compositionend",
                topCompositionStart: "compositionstart",
                topCompositionUpdate: "compositionupdate",
                topContextMenu: "contextmenu",
                topCopy: "copy",
                topCut: "cut",
                topDoubleClick: "dblclick",
                topDrag: "drag",
                topDragEnd: "dragend",
                topDragEnter: "dragenter",
                topDragExit: "dragexit",
                topDragLeave: "dragleave",
                topDragOver: "dragover",
                topDragStart: "dragstart",
                topDrop: "drop",
                topDurationChange: "durationchange",
                topEmptied: "emptied",
                topEncrypted: "encrypted",
                topEnded: "ended",
                topError: "error",
                topFocus: "focus",
                topInput: "input",
                topKeyDown: "keydown",
                topKeyPress: "keypress",
                topKeyUp: "keyup",
                topLoadedData: "loadeddata",
                topLoadedMetadata: "loadedmetadata",
                topLoadStart: "loadstart",
                topMouseDown: "mousedown",
                topMouseMove: "mousemove",
                topMouseOut: "mouseout",
                topMouseOver: "mouseover",
                topMouseUp: "mouseup",
                topPaste: "paste",
                topPause: "pause",
                topPlay: "play",
                topPlaying: "playing",
                topProgress: "progress",
                topRateChange: "ratechange",
                topScroll: "scroll",
                topSeeked: "seeked",
                topSeeking: "seeking",
                topSelectionChange: "selectionchange",
                topStalled: "stalled",
                topSuspend: "suspend",
                topTextInput: "textInput",
                topTimeUpdate: "timeupdate",
                topTouchCancel: "touchcancel",
                topTouchEnd: "touchend",
                topTouchMove: "touchmove",
                topTouchStart: "touchstart",
                topTransitionEnd: getVendorPrefixedEventName("transitionend") || "transitionend",
                topVolumeChange: "volumechange",
                topWaiting: "waiting",
                topWheel: "wheel"
            },
            topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2),
            ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
                ReactEventListener: null,
                injection: {
                    injectReactEventListener: function(ReactEventListener) {
                        ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel), ReactBrowserEventEmitter.ReactEventListener = ReactEventListener
                    }
                },
                setEnabled: function(enabled) {
                    ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled)
                },
                isEnabled: function() {
                    return !(!ReactBrowserEventEmitter.ReactEventListener || !ReactBrowserEventEmitter.ReactEventListener.isEnabled())
                },
                listenTo: function(registrationName, contentDocumentHandle) {
                    for (var mountAt = contentDocumentHandle, isListening = getListeningForDocument(mountAt), dependencies = EventPluginRegistry.registrationNameDependencies[registrationName], i = 0; i < dependencies.length; i++) {
                        var dependency = dependencies[i];
                        isListening.hasOwnProperty(dependency) && isListening[dependency] || ("topWheel" === dependency ? isEventSupported("wheel") ? ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent("topWheel", "wheel", mountAt) : isEventSupported("mousewheel") ? ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent("topWheel", "mousewheel", mountAt) : ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent("topWheel", "DOMMouseScroll", mountAt) : "topScroll" === dependency ? isEventSupported("scroll", !0) ? ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent("topScroll", "scroll", mountAt) : ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent("topScroll", "scroll", ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE) : "topFocus" === dependency || "topBlur" === dependency ? (isEventSupported("focus", !0) ? (ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent("topFocus", "focus", mountAt), ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent("topBlur", "blur", mountAt)) : isEventSupported("focusin") && (ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent("topFocus", "focusin", mountAt), ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent("topBlur", "focusout", mountAt)), isListening.topBlur = !0, isListening.topFocus = !0) : topEventMapping.hasOwnProperty(dependency) && ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt), isListening[dependency] = !0)
                    }
                },
                trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
                    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle)
                },
                trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
                    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle)
                },
                supportsEventPageXY: function() {
                    if (!document.createEvent) return !1;
                    var ev = document.createEvent("MouseEvent");
                    return null != ev && "pageX" in ev
                },
                ensureScrollValueMonitoring: function() {
                    if (void 0 === hasEventPageXY && (hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY()), !hasEventPageXY && !isMonitoringScrollValue) {
                        var refresh = ViewportMetrics.refreshScrollValues;
                        ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh), isMonitoringScrollValue = !0
                    }
                }
            });
        module.exports = ReactBrowserEventEmitter
    }, {
        "./EventPluginRegistry": 150,
        "./ReactEventEmitterMixin": 187,
        "./ViewportMetrics": 229,
        "./getVendorPrefixedEventName": 247,
        "./isEventSupported": 249,
        "object-assign": 127
    }],
    159: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function instantiateChild(childInstances, child, name, selfDebugID) {
                var keyUnique = void 0 === childInstances[name];
                "production" !== process.env.NODE_ENV && (ReactComponentTreeHook || (ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook")), keyUnique || "production" !== process.env.NODE_ENV && warning(!1, "flattenChildren(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.%s", KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID))), null != child && keyUnique && (childInstances[name] = instantiateReactComponent(child, !0))
            }
            var ReactComponentTreeHook, ReactReconciler = require("./ReactReconciler"),
                instantiateReactComponent = require("./instantiateReactComponent"),
                KeyEscapeUtils = require("./KeyEscapeUtils"),
                shouldUpdateReactComponent = require("./shouldUpdateReactComponent"),
                traverseAllChildren = require("./traverseAllChildren"),
                warning = require("fbjs/lib/warning");
            void 0 !== process && process.env && "test" === process.env.NODE_ENV && (ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook"));
            var ReactChildReconciler = {
                instantiateChildren: function(nestedChildNodes, transaction, context, selfDebugID) {
                    if (null == nestedChildNodes) return null;
                    var childInstances = {};
                    return "production" !== process.env.NODE_ENV ? traverseAllChildren(nestedChildNodes, function(childInsts, child, name) {
                        return instantiateChild(childInsts, child, name, selfDebugID)
                    }, childInstances) : traverseAllChildren(nestedChildNodes, instantiateChild, childInstances), childInstances
                },
                updateChildren: function(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) {
                    if (nextChildren || prevChildren) {
                        var name, prevChild;
                        for (name in nextChildren)
                            if (nextChildren.hasOwnProperty(name)) {
                                prevChild = prevChildren && prevChildren[name];
                                var prevElement = prevChild && prevChild._currentElement,
                                    nextElement = nextChildren[name];
                                if (null != prevChild && shouldUpdateReactComponent(prevElement, nextElement)) ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context), nextChildren[name] = prevChild;
                                else {
                                    prevChild && (removedNodes[name] = ReactReconciler.getHostNode(prevChild), ReactReconciler.unmountComponent(prevChild, !1));
                                    var nextChildInstance = instantiateReactComponent(nextElement, !0);
                                    nextChildren[name] = nextChildInstance;
                                    var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
                                    mountImages.push(nextChildMountImage)
                                }
                            }
                        for (name in prevChildren) !prevChildren.hasOwnProperty(name) || nextChildren && nextChildren.hasOwnProperty(name) || (prevChild = prevChildren[name], removedNodes[name] = ReactReconciler.getHostNode(prevChild), ReactReconciler.unmountComponent(prevChild, !1))
                    }
                },
                unmountChildren: function(renderedChildren, safely) {
                    for (var name in renderedChildren)
                        if (renderedChildren.hasOwnProperty(name)) {
                            var renderedChild = renderedChildren[name];
                            ReactReconciler.unmountComponent(renderedChild, safely)
                        }
                }
            };
            module.exports = ReactChildReconciler
        }).call(this, require("_process"))
    }, {
        "./KeyEscapeUtils": 155,
        "./ReactReconciler": 205,
        "./instantiateReactComponent": 248,
        "./shouldUpdateReactComponent": 256,
        "./traverseAllChildren": 257,
        _process: 13,
        "fbjs/lib/warning": 66,
        "react/lib/ReactComponentTreeHook": 265
    }],
    160: [function(require, module, exports) {
        "use strict";
        var DOMChildrenOperations = require("./DOMChildrenOperations"),
            ReactDOMIDOperations = require("./ReactDOMIDOperations"),
            ReactComponentBrowserEnvironment = {
                processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
                replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
            };
        module.exports = ReactComponentBrowserEnvironment
    }, {
        "./DOMChildrenOperations": 141,
        "./ReactDOMIDOperations": 170
    }],
    161: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant"),
                injected = !1,
                ReactComponentEnvironment = {
                    replaceNodeWithMarkup: null,
                    processChildrenUpdates: null,
                    injection: {
                        injectEnvironment: function(environment) {
                            injected && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactCompositeComponent: injectEnvironment() can only be called once.") : _prodInvariant("104")), ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup, ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates, injected = !0
                        }
                    }
                };
            module.exports = ReactComponentEnvironment
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    162: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function StatelessComponent(Component) {}

            function warnIfInvalidElement(Component, element) {
                "production" !== process.env.NODE_ENV && ("production" !== process.env.NODE_ENV && warning(null === element || !1 === element || React.isValidElement(element), "%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.", Component.displayName || Component.name || "Component"), "production" !== process.env.NODE_ENV && warning(!Component.childContextTypes, "%s(...): childContextTypes cannot be defined on a functional component.", Component.displayName || Component.name || "Component"))
            }

            function shouldConstruct(Component) {
                return !(!Component.prototype || !Component.prototype.isReactComponent)
            }

            function isPureComponent(Component) {
                return !(!Component.prototype || !Component.prototype.isPureReactComponent)
            }

            function measureLifeCyclePerf(fn, debugID, timerType) {
                if (0 === debugID) return fn();
                ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
                try {
                    return fn()
                } finally {
                    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType)
                }
            }
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                React = require("react/lib/React"),
                ReactComponentEnvironment = require("./ReactComponentEnvironment"),
                ReactCurrentOwner = require("react/lib/ReactCurrentOwner"),
                ReactErrorUtils = require("./ReactErrorUtils"),
                ReactInstanceMap = require("./ReactInstanceMap"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                ReactNodeTypes = require("./ReactNodeTypes"),
                ReactReconciler = require("./ReactReconciler");
            if ("production" !== process.env.NODE_ENV) var checkReactTypeSpec = require("./checkReactTypeSpec");
            var emptyObject = require("fbjs/lib/emptyObject"),
                invariant = require("fbjs/lib/invariant"),
                shallowEqual = require("fbjs/lib/shallowEqual"),
                shouldUpdateReactComponent = require("./shouldUpdateReactComponent"),
                warning = require("fbjs/lib/warning"),
                CompositeTypes = {
                    ImpureClass: 0,
                    PureClass: 1,
                    StatelessFunctional: 2
                };
            StatelessComponent.prototype.render = function() {
                var Component = ReactInstanceMap.get(this)._currentElement.type,
                    element = Component(this.props, this.context, this.updater);
                return warnIfInvalidElement(Component, element), element
            };
            var nextMountID = 1,
                ReactCompositeComponent = {
                    construct: function(element) {
                        this._currentElement = element, this._rootNodeID = 0, this._compositeType = null, this._instance = null, this._hostParent = null, this._hostContainerInfo = null, this._updateBatchNumber = null, this._pendingElement = null, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._renderedNodeType = null, this._renderedComponent = null, this._context = null, this._mountOrder = 0, this._topLevelWrapper = null, this._pendingCallbacks = null, this._calledComponentWillUnmount = !1, "production" !== process.env.NODE_ENV && (this._warnedAboutRefsInRender = !1)
                    },
                    mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
                        var _this = this;
                        this._context = context, this._mountOrder = nextMountID++, this._hostParent = hostParent, this._hostContainerInfo = hostContainerInfo;
                        var renderedElement, publicProps = this._currentElement.props,
                            publicContext = this._processContext(context),
                            Component = this._currentElement.type,
                            updateQueue = transaction.getUpdateQueue(),
                            doConstruct = shouldConstruct(Component),
                            inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
                        if (doConstruct || null != inst && null != inst.render ? isPureComponent(Component) ? this._compositeType = CompositeTypes.PureClass : this._compositeType = CompositeTypes.ImpureClass : (renderedElement = inst, warnIfInvalidElement(Component, renderedElement), null === inst || !1 === inst || React.isValidElement(inst) || ("production" !== process.env.NODE_ENV ? invariant(!1, "%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.", Component.displayName || Component.name || "Component") : _prodInvariant("105", Component.displayName || Component.name || "Component")), inst = new StatelessComponent(Component), this._compositeType = CompositeTypes.StatelessFunctional), "production" !== process.env.NODE_ENV) {
                            null == inst.render && "production" !== process.env.NODE_ENV && warning(!1, "%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", Component.displayName || Component.name || "Component");
                            var propsMutated = inst.props !== publicProps,
                                componentName = Component.displayName || Component.name || "Component";
                            "production" !== process.env.NODE_ENV && warning(void 0 === inst.props || !propsMutated, "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", componentName, componentName)
                        }
                        inst.props = publicProps, inst.context = publicContext, inst.refs = emptyObject, inst.updater = updateQueue, this._instance = inst, ReactInstanceMap.set(inst, this), "production" !== process.env.NODE_ENV && ("production" !== process.env.NODE_ENV && warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, "getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", this.getName() || "a component"), "production" !== process.env.NODE_ENV && warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, "getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", this.getName() || "a component"), "production" !== process.env.NODE_ENV && warning(!inst.propTypes, "propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", this.getName() || "a component"), "production" !== process.env.NODE_ENV && warning(!inst.contextTypes, "contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", this.getName() || "a component"), "production" !== process.env.NODE_ENV && warning("function" != typeof inst.componentShouldUpdate, "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", this.getName() || "A component"), "production" !== process.env.NODE_ENV && warning("function" != typeof inst.componentDidUnmount, "%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", this.getName() || "A component"), "production" !== process.env.NODE_ENV && warning("function" != typeof inst.componentWillRecieveProps, "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", this.getName() || "A component"));
                        var initialState = inst.state;
                        void 0 === initialState && (inst.state = initialState = null), ("object" != typeof initialState || Array.isArray(initialState)) && ("production" !== process.env.NODE_ENV ? invariant(!1, "%s.state: must be set to an object or null", this.getName() || "ReactCompositeComponent") : _prodInvariant("106", this.getName() || "ReactCompositeComponent")), this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1;
                        var markup;
                        return markup = inst.unstable_handleError ? this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) : this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context), inst.componentDidMount && ("production" !== process.env.NODE_ENV ? transaction.getReactMountReady().enqueue(function() {
                            measureLifeCyclePerf(function() {
                                return inst.componentDidMount()
                            }, _this._debugID, "componentDidMount")
                        }) : transaction.getReactMountReady().enqueue(inst.componentDidMount, inst)), markup
                    },
                    _constructComponent: function(doConstruct, publicProps, publicContext, updateQueue) {
                        if ("production" === process.env.NODE_ENV) return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
                        ReactCurrentOwner.current = this;
                        try {
                            return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue)
                        } finally {
                            ReactCurrentOwner.current = null
                        }
                    },
                    _constructComponentWithoutOwner: function(doConstruct, publicProps, publicContext, updateQueue) {
                        var Component = this._currentElement.type;
                        return doConstruct ? "production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                            return new Component(publicProps, publicContext, updateQueue)
                        }, this._debugID, "ctor") : new Component(publicProps, publicContext, updateQueue) : "production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                            return Component(publicProps, publicContext, updateQueue)
                        }, this._debugID, "render") : Component(publicProps, publicContext, updateQueue)
                    },
                    performInitialMountWithErrorHandling: function(renderedElement, hostParent, hostContainerInfo, transaction, context) {
                        var markup, checkpoint = transaction.checkpoint();
                        try {
                            markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context)
                        } catch (e) {
                            transaction.rollback(checkpoint), this._instance.unstable_handleError(e), this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)), checkpoint = transaction.checkpoint(), this._renderedComponent.unmountComponent(!0), transaction.rollback(checkpoint), markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context)
                        }
                        return markup
                    },
                    performInitialMount: function(renderedElement, hostParent, hostContainerInfo, transaction, context) {
                        var inst = this._instance,
                            debugID = 0;
                        "production" !== process.env.NODE_ENV && (debugID = this._debugID), inst.componentWillMount && ("production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                            return inst.componentWillMount()
                        }, debugID, "componentWillMount") : inst.componentWillMount(), this._pendingStateQueue && (inst.state = this._processPendingState(inst.props, inst.context))), void 0 === renderedElement && (renderedElement = this._renderValidatedComponent());
                        var nodeType = ReactNodeTypes.getType(renderedElement);
                        this._renderedNodeType = nodeType;
                        var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY);
                        this._renderedComponent = child;
                        var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
                        if ("production" !== process.env.NODE_ENV && 0 !== debugID) {
                            var childDebugIDs = 0 !== child._debugID ? [child._debugID] : [];
                            ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs)
                        }
                        return markup
                    },
                    getHostNode: function() {
                        return ReactReconciler.getHostNode(this._renderedComponent)
                    },
                    unmountComponent: function(safely) {
                        if (this._renderedComponent) {
                            var inst = this._instance;
                            if (inst.componentWillUnmount && !inst._calledComponentWillUnmount)
                                if (inst._calledComponentWillUnmount = !0, safely) {
                                    var name = this.getName() + ".componentWillUnmount()";
                                    ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst))
                                } else "production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                                    return inst.componentWillUnmount()
                                }, this._debugID, "componentWillUnmount") : inst.componentWillUnmount();
                            this._renderedComponent && (ReactReconciler.unmountComponent(this._renderedComponent, safely), this._renderedNodeType = null, this._renderedComponent = null, this._instance = null), this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._pendingCallbacks = null, this._pendingElement = null, this._context = null, this._rootNodeID = 0, this._topLevelWrapper = null, ReactInstanceMap.remove(inst)
                        }
                    },
                    _maskContext: function(context) {
                        var Component = this._currentElement.type,
                            contextTypes = Component.contextTypes;
                        if (!contextTypes) return emptyObject;
                        var maskedContext = {};
                        for (var contextName in contextTypes) maskedContext[contextName] = context[contextName];
                        return maskedContext
                    },
                    _processContext: function(context) {
                        var maskedContext = this._maskContext(context);
                        if ("production" !== process.env.NODE_ENV) {
                            var Component = this._currentElement.type;
                            Component.contextTypes && this._checkContextTypes(Component.contextTypes, maskedContext, "context")
                        }
                        return maskedContext
                    },
                    _processChildContext: function(currentContext) {
                        var childContext, Component = this._currentElement.type,
                            inst = this._instance;
                        if (inst.getChildContext)
                            if ("production" !== process.env.NODE_ENV) {
                                ReactInstrumentation.debugTool.onBeginProcessingChildContext();
                                try {
                                    childContext = inst.getChildContext()
                                } finally {
                                    ReactInstrumentation.debugTool.onEndProcessingChildContext()
                                }
                            } else childContext = inst.getChildContext();
                        if (childContext) {
                            "object" != typeof Component.childContextTypes && ("production" !== process.env.NODE_ENV ? invariant(!1, "%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", this.getName() || "ReactCompositeComponent") : _prodInvariant("107", this.getName() || "ReactCompositeComponent")), "production" !== process.env.NODE_ENV && this._checkContextTypes(Component.childContextTypes, childContext, "child context");
                            for (var name in childContext) name in Component.childContextTypes || ("production" !== process.env.NODE_ENV ? invariant(!1, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || "ReactCompositeComponent", name) : _prodInvariant("108", this.getName() || "ReactCompositeComponent", name));
                            return _assign({}, currentContext, childContext)
                        }
                        return currentContext
                    },
                    _checkContextTypes: function(typeSpecs, values, location) {
                        "production" !== process.env.NODE_ENV && checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID)
                    },
                    receiveComponent: function(nextElement, transaction, nextContext) {
                        var prevElement = this._currentElement,
                            prevContext = this._context;
                        this._pendingElement = null, this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext)
                    },
                    performUpdateIfNecessary: function(transaction) {
                        null != this._pendingElement ? ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context) : null !== this._pendingStateQueue || this._pendingForceUpdate ? this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context) : this._updateBatchNumber = null
                    },
                    updateComponent: function(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
                        var inst = this._instance;
                        null == inst && ("production" !== process.env.NODE_ENV ? invariant(!1, "Attempted to update component `%s` that has already been unmounted (or failed to mount).", this.getName() || "ReactCompositeComponent") : _prodInvariant("136", this.getName() || "ReactCompositeComponent"));
                        var nextContext, willReceive = !1;
                        this._context === nextUnmaskedContext ? nextContext = inst.context : (nextContext = this._processContext(nextUnmaskedContext), willReceive = !0);
                        var prevProps = prevParentElement.props,
                            nextProps = nextParentElement.props;
                        prevParentElement !== nextParentElement && (willReceive = !0), willReceive && inst.componentWillReceiveProps && ("production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                            return inst.componentWillReceiveProps(nextProps, nextContext)
                        }, this._debugID, "componentWillReceiveProps") : inst.componentWillReceiveProps(nextProps, nextContext));
                        var nextState = this._processPendingState(nextProps, nextContext),
                            shouldUpdate = !0;
                        this._pendingForceUpdate || (inst.shouldComponentUpdate ? shouldUpdate = "production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                            return inst.shouldComponentUpdate(nextProps, nextState, nextContext)
                        }, this._debugID, "shouldComponentUpdate") : inst.shouldComponentUpdate(nextProps, nextState, nextContext) : this._compositeType === CompositeTypes.PureClass && (shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState))), "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(void 0 !== shouldUpdate, "%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", this.getName() || "ReactCompositeComponent"), this._updateBatchNumber = null, shouldUpdate ? (this._pendingForceUpdate = !1, this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext)) : (this._currentElement = nextParentElement, this._context = nextUnmaskedContext, inst.props = nextProps, inst.state = nextState, inst.context = nextContext)
                    },
                    _processPendingState: function(props, context) {
                        var inst = this._instance,
                            queue = this._pendingStateQueue,
                            replace = this._pendingReplaceState;
                        if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !queue) return inst.state;
                        if (replace && 1 === queue.length) return queue[0];
                        for (var nextState = _assign({}, replace ? queue[0] : inst.state), i = replace ? 1 : 0; i < queue.length; i++) {
                            var partial = queue[i];
                            _assign(nextState, "function" == typeof partial ? partial.call(inst, nextState, props, context) : partial)
                        }
                        return nextState
                    },
                    _performComponentUpdate: function(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
                        var prevProps, prevState, prevContext, _this2 = this,
                            inst = this._instance,
                            hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
                        hasComponentDidUpdate && (prevProps = inst.props, prevState = inst.state, prevContext = inst.context), inst.componentWillUpdate && ("production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                            return inst.componentWillUpdate(nextProps, nextState, nextContext)
                        }, this._debugID, "componentWillUpdate") : inst.componentWillUpdate(nextProps, nextState, nextContext)), this._currentElement = nextElement, this._context = unmaskedContext, inst.props = nextProps, inst.state = nextState, inst.context = nextContext, this._updateRenderedComponent(transaction, unmaskedContext), hasComponentDidUpdate && ("production" !== process.env.NODE_ENV ? transaction.getReactMountReady().enqueue(function() {
                            measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, "componentDidUpdate")
                        }) : transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst))
                    },
                    _updateRenderedComponent: function(transaction, context) {
                        var prevComponentInstance = this._renderedComponent,
                            prevRenderedElement = prevComponentInstance._currentElement,
                            nextRenderedElement = this._renderValidatedComponent(),
                            debugID = 0;
                        if ("production" !== process.env.NODE_ENV && (debugID = this._debugID), shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
                        else {
                            var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
                            ReactReconciler.unmountComponent(prevComponentInstance, !1);
                            var nodeType = ReactNodeTypes.getType(nextRenderedElement);
                            this._renderedNodeType = nodeType;
                            var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY);
                            this._renderedComponent = child;
                            var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
                            if ("production" !== process.env.NODE_ENV && 0 !== debugID) {
                                var childDebugIDs = 0 !== child._debugID ? [child._debugID] : [];
                                ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs)
                            }
                            this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance)
                        }
                    },
                    _replaceNodeWithMarkup: function(oldHostNode, nextMarkup, prevInstance) {
                        ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance)
                    },
                    _renderValidatedComponentWithoutOwnerOrContext: function() {
                        var renderedElement, inst = this._instance;
                        return renderedElement = "production" !== process.env.NODE_ENV ? measureLifeCyclePerf(function() {
                            return inst.render()
                        }, this._debugID, "render") : inst.render(), "production" !== process.env.NODE_ENV && void 0 === renderedElement && inst.render._isMockFunction && (renderedElement = null), renderedElement
                    },
                    _renderValidatedComponent: function() {
                        var renderedElement;
                        if ("production" !== process.env.NODE_ENV || this._compositeType !== CompositeTypes.StatelessFunctional) {
                            ReactCurrentOwner.current = this;
                            try {
                                renderedElement = this._renderValidatedComponentWithoutOwnerOrContext()
                            } finally {
                                ReactCurrentOwner.current = null
                            }
                        } else renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
                        return null === renderedElement || !1 === renderedElement || React.isValidElement(renderedElement) || ("production" !== process.env.NODE_ENV ? invariant(!1, "%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.", this.getName() || "ReactCompositeComponent") : _prodInvariant("109", this.getName() || "ReactCompositeComponent")), renderedElement
                    },
                    attachRef: function(ref, component) {
                        var inst = this.getPublicInstance();
                        null == inst && ("production" !== process.env.NODE_ENV ? invariant(!1, "Stateless function components cannot have refs.") : _prodInvariant("110"));
                        var publicComponentInstance = component.getPublicInstance();
                        if ("production" !== process.env.NODE_ENV) {
                            var componentName = component && component.getName ? component.getName() : "a component";
                            "production" !== process.env.NODE_ENV && warning(null != publicComponentInstance || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs (See ref "%s" in %s created by %s). Attempts to access this ref will fail.', ref, componentName, this.getName())
                        }(inst.refs === emptyObject ? inst.refs = {} : inst.refs)[ref] = publicComponentInstance
                    },
                    detachRef: function(ref) {
                        delete this.getPublicInstance().refs[ref]
                    },
                    getName: function() {
                        var type = this._currentElement.type,
                            constructor = this._instance && this._instance.constructor;
                        return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null
                    },
                    getPublicInstance: function() {
                        var inst = this._instance;
                        return this._compositeType === CompositeTypes.StatelessFunctional ? null : inst
                    },
                    _instantiateReactComponent: null
                };
            module.exports = ReactCompositeComponent
        }).call(this, require("_process"))
    }, {
        "./ReactComponentEnvironment": 161,
        "./ReactErrorUtils": 186,
        "./ReactInstanceMap": 194,
        "./ReactInstrumentation": 195,
        "./ReactNodeTypes": 200,
        "./ReactReconciler": 205,
        "./checkReactTypeSpec": 232,
        "./reactProdInvariant": 252,
        "./shouldUpdateReactComponent": 256,
        _process: 13,
        "fbjs/lib/emptyObject": 52,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/shallowEqual": 65,
        "fbjs/lib/warning": 66,
        "object-assign": 127,
        "react/lib/React": 261,
        "react/lib/ReactCurrentOwner": 266
    }],
    163: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactDefaultInjection = require("./ReactDefaultInjection"),
                ReactMount = require("./ReactMount"),
                ReactReconciler = require("./ReactReconciler"),
                ReactUpdates = require("./ReactUpdates"),
                ReactVersion = require("./ReactVersion"),
                findDOMNode = require("./findDOMNode"),
                getHostComponentFromComposite = require("./getHostComponentFromComposite"),
                renderSubtreeIntoContainer = require("./renderSubtreeIntoContainer"),
                warning = require("fbjs/lib/warning");
            ReactDefaultInjection.inject();
            var ReactDOM = {
                findDOMNode: findDOMNode,
                render: ReactMount.render,
                unmountComponentAtNode: ReactMount.unmountComponentAtNode,
                version: ReactVersion,
                unstable_batchedUpdates: ReactUpdates.batchedUpdates,
                unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
            };
            if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
                    ComponentTree: {
                        getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
                        getNodeFromInstance: function(inst) {
                            return inst._renderedComponent && (inst = getHostComponentFromComposite(inst)), inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null
                        }
                    },
                    Mount: ReactMount,
                    Reconciler: ReactReconciler
                }), "production" !== process.env.NODE_ENV) {
                if (require("fbjs/lib/ExecutionEnvironment").canUseDOM && window.top === window.self) {
                    if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && (navigator.userAgent.indexOf("Chrome") > -1 && -1 === navigator.userAgent.indexOf("Edge") || navigator.userAgent.indexOf("Firefox") > -1)) {
                        -1 === window.location.protocol.indexOf("http") && navigator.userAgent.indexOf("Firefox")
                    }
                    var testFunc = function() {};
                    "production" !== process.env.NODE_ENV && warning(-1 !== (testFunc.name || testFunc.toString()).indexOf("testFn"), "It looks like you're using a minified copy of the development build of React. When deploying React apps to production, make sure to use the production build which skips development warnings and is faster. See https://fb.me/react-minification for more details.");
                    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
                    "production" !== process.env.NODE_ENV && warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the following tag to your HTML to prevent this from happening: <meta http-equiv="X-UA-Compatible" content="IE=edge" />');
                    for (var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim], i = 0; i < expectedFeatures.length; i++)
                        if (!expectedFeatures[i]) {
                            "production" !== process.env.NODE_ENV && warning(!1, "One or more ES5 shims expected by React are not available: https://fb.me/react-warning-polyfills");
                            break
                        }
                }
            }
            if ("production" !== process.env.NODE_ENV) {
                var ReactInstrumentation = require("./ReactInstrumentation"),
                    ReactDOMUnknownPropertyHook = require("./ReactDOMUnknownPropertyHook"),
                    ReactDOMNullInputValuePropHook = require("./ReactDOMNullInputValuePropHook"),
                    ReactDOMInvalidARIAHook = require("./ReactDOMInvalidARIAHook");
                ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook), ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook), ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook)
            }
            module.exports = ReactDOM
        }).call(this, require("_process"))
    }, {
        "./ReactDOMComponentTree": 166,
        "./ReactDOMInvalidARIAHook": 172,
        "./ReactDOMNullInputValuePropHook": 173,
        "./ReactDOMUnknownPropertyHook": 180,
        "./ReactDefaultInjection": 183,
        "./ReactInstrumentation": 195,
        "./ReactMount": 198,
        "./ReactReconciler": 205,
        "./ReactUpdates": 210,
        "./ReactVersion": 211,
        "./findDOMNode": 236,
        "./getHostComponentFromComposite": 243,
        "./renderSubtreeIntoContainer": 253,
        _process: 13,
        "fbjs/lib/ExecutionEnvironment": 45,
        "fbjs/lib/warning": 66
    }],
    164: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getDeclarationErrorAddendum(internalInstance) {
                if (internalInstance) {
                    var owner = internalInstance._currentElement._owner || null;
                    if (owner) {
                        var name = owner.getName();
                        if (name) return " This DOM node was rendered by `" + name + "`."
                    }
                }
                return ""
            }

            function friendlyStringify(obj) {
                if ("object" == typeof obj) {
                    if (Array.isArray(obj)) return "[" + obj.map(friendlyStringify).join(", ") + "]";
                    var pairs = [];
                    for (var key in obj)
                        if (Object.prototype.hasOwnProperty.call(obj, key)) {
                            var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
                            pairs.push(keyEscaped + ": " + friendlyStringify(obj[key]))
                        }
                    return "{" + pairs.join(", ") + "}"
                }
                return "string" == typeof obj ? JSON.stringify(obj) : "function" == typeof obj ? "[function object]" : String(obj)
            }

            function checkAndWarnForMutatedStyle(style1, style2, component) {
                if (null != style1 && null != style2 && !shallowEqual(style1, style2)) {
                    var ownerName, componentName = component._tag,
                        owner = component._currentElement._owner;
                    owner && (ownerName = owner.getName());
                    var hash = ownerName + "|" + componentName;
                    styleMutationWarning.hasOwnProperty(hash) || (styleMutationWarning[hash] = !0, "production" !== process.env.NODE_ENV && warning(!1, "`%s` was passed a style object that has previously been mutated. Mutating `style` is deprecated. Consider cloning it beforehand. Check the `render` %s. Previous style: %s. Mutated style: %s.", componentName, owner ? "of `" + ownerName + "`" : "using <" + componentName + ">", friendlyStringify(style1), friendlyStringify(style2)))
                }
            }

            function assertValidProps(component, props) {
                props && (voidElementTags[component._tag] && (null != props.children || null != props.dangerouslySetInnerHTML) && ("production" !== process.env.NODE_ENV ? invariant(!1, "%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s", component._tag, component._currentElement._owner ? " Check the render method of " + component._currentElement._owner.getName() + "." : "") : _prodInvariant("137", component._tag, component._currentElement._owner ? " Check the render method of " + component._currentElement._owner.getName() + "." : "")), null != props.dangerouslySetInnerHTML && (null != props.children && ("production" !== process.env.NODE_ENV ? invariant(!1, "Can only set one of `children` or `props.dangerouslySetInnerHTML`.") : _prodInvariant("60")), "object" == typeof props.dangerouslySetInnerHTML && HTML in props.dangerouslySetInnerHTML || ("production" !== process.env.NODE_ENV ? invariant(!1, "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.") : _prodInvariant("61"))), "production" !== process.env.NODE_ENV && ("production" !== process.env.NODE_ENV && warning(null == props.innerHTML, "Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), "production" !== process.env.NODE_ENV && warning(props.suppressContentEditableWarning || !props.contentEditable || null == props.children, "A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), "production" !== process.env.NODE_ENV && warning(null == props.onFocusIn && null == props.onFocusOut, "React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.")), null != props.style && "object" != typeof props.style && ("production" !== process.env.NODE_ENV ? invariant(!1, "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s", getDeclarationErrorAddendum(component)) : _prodInvariant("62", getDeclarationErrorAddendum(component))))
            }

            function enqueuePutListener(inst, registrationName, listener, transaction) {
                if (!(transaction instanceof ReactServerRenderingTransaction)) {
                    "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning("onScroll" !== registrationName || isEventSupported("scroll", !0), "This browser doesn't support the `onScroll` event");
                    var containerInfo = inst._hostContainerInfo,
                        isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE,
                        doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
                    listenTo(registrationName, doc), transaction.getReactMountReady().enqueue(putListener, {
                        inst: inst,
                        registrationName: registrationName,
                        listener: listener
                    })
                }
            }

            function putListener() {
                var listenerToPut = this;
                EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener)
            }

            function inputPostMount() {
                var inst = this;
                ReactDOMInput.postMountWrapper(inst)
            }

            function textareaPostMount() {
                var inst = this;
                ReactDOMTextarea.postMountWrapper(inst)
            }

            function optionPostMount() {
                var inst = this;
                ReactDOMOption.postMountWrapper(inst)
            }

            function trapBubbledEventsLocal() {
                var inst = this;
                inst._rootNodeID || ("production" !== process.env.NODE_ENV ? invariant(!1, "Must be mounted to trap events") : _prodInvariant("63"));
                var node = getNode(inst);
                switch (node || ("production" !== process.env.NODE_ENV ? invariant(!1, "trapBubbledEvent(...): Requires node to be rendered.") : _prodInvariant("64")), inst._tag) {
                    case "iframe":
                    case "object":
                        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent("topLoad", "load", node)];
                        break;
                    case "video":
                    case "audio":
                        inst._wrapperState.listeners = [];
                        for (var event in mediaEvents) mediaEvents.hasOwnProperty(event) && inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
                        break;
                    case "source":
                        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent("topError", "error", node)];
                        break;
                    case "img":
                        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent("topError", "error", node), ReactBrowserEventEmitter.trapBubbledEvent("topLoad", "load", node)];
                        break;
                    case "form":
                        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent("topReset", "reset", node), ReactBrowserEventEmitter.trapBubbledEvent("topSubmit", "submit", node)];
                        break;
                    case "input":
                    case "select":
                    case "textarea":
                        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent("topInvalid", "invalid", node)]
                }
            }

            function postUpdateSelectWrapper() {
                ReactDOMSelect.postUpdateWrapper(this)
            }

            function validateDangerousTag(tag) {
                hasOwnProperty.call(validatedTagCache, tag) || (VALID_TAG_REGEX.test(tag) || ("production" !== process.env.NODE_ENV ? invariant(!1, "Invalid tag: %s", tag) : _prodInvariant("65", tag)), validatedTagCache[tag] = !0)
            }

            function isCustomComponent(tagName, props) {
                return tagName.indexOf("-") >= 0 || null != props.is
            }

            function ReactDOMComponent(element) {
                var tag = element.type;
                validateDangerousTag(tag), this._currentElement = element, this._tag = tag.toLowerCase(), this._namespaceURI = null, this._renderedChildren = null, this._previousStyle = null, this._previousStyleCopy = null, this._hostNode = null, this._hostParent = null, this._rootNodeID = 0, this._domID = 0, this._hostContainerInfo = null, this._wrapperState = null, this._topLevelWrapper = null, this._flags = 0, "production" !== process.env.NODE_ENV && (this._ancestorInfo = null, setAndValidateContentChildDev.call(this, null))
            }
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                AutoFocusUtils = require("./AutoFocusUtils"),
                CSSPropertyOperations = require("./CSSPropertyOperations"),
                DOMLazyTree = require("./DOMLazyTree"),
                DOMNamespaces = require("./DOMNamespaces"),
                DOMProperty = require("./DOMProperty"),
                DOMPropertyOperations = require("./DOMPropertyOperations"),
                EventPluginHub = require("./EventPluginHub"),
                EventPluginRegistry = require("./EventPluginRegistry"),
                ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter"),
                ReactDOMComponentFlags = require("./ReactDOMComponentFlags"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactDOMInput = require("./ReactDOMInput"),
                ReactDOMOption = require("./ReactDOMOption"),
                ReactDOMSelect = require("./ReactDOMSelect"),
                ReactDOMTextarea = require("./ReactDOMTextarea"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                ReactMultiChild = require("./ReactMultiChild"),
                ReactServerRenderingTransaction = require("./ReactServerRenderingTransaction"),
                emptyFunction = require("fbjs/lib/emptyFunction"),
                escapeTextContentForBrowser = require("./escapeTextContentForBrowser"),
                invariant = require("fbjs/lib/invariant"),
                isEventSupported = require("./isEventSupported"),
                shallowEqual = require("fbjs/lib/shallowEqual"),
                validateDOMNesting = require("./validateDOMNesting"),
                warning = require("fbjs/lib/warning"),
                Flags = ReactDOMComponentFlags,
                deleteListener = EventPluginHub.deleteListener,
                getNode = ReactDOMComponentTree.getNodeFromInstance,
                listenTo = ReactBrowserEventEmitter.listenTo,
                registrationNameModules = EventPluginRegistry.registrationNameModules,
                CONTENT_TYPES = {
                    string: !0,
                    number: !0
                },
                HTML = "__html",
                RESERVED_PROPS = {
                    children: null,
                    dangerouslySetInnerHTML: null,
                    suppressContentEditableWarning: null
                },
                DOC_FRAGMENT_TYPE = 11,
                styleMutationWarning = {},
                setAndValidateContentChildDev = emptyFunction;
            "production" !== process.env.NODE_ENV && (setAndValidateContentChildDev = function(content) {
                var hasExistingContent = null != this._contentDebugID,
                    debugID = this._debugID,
                    contentDebugID = -debugID;
                if (null == content) return hasExistingContent && ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID), void(this._contentDebugID = null);
                validateDOMNesting(null, String(content), this, this._ancestorInfo), this._contentDebugID = contentDebugID, hasExistingContent ? (ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content), ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID)) : (ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID), ReactInstrumentation.debugTool.onMountComponent(contentDebugID), ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]))
            });
            var mediaEvents = {
                    topAbort: "abort",
                    topCanPlay: "canplay",
                    topCanPlayThrough: "canplaythrough",
                    topDurationChange: "durationchange",
                    topEmptied: "emptied",
                    topEncrypted: "encrypted",
                    topEnded: "ended",
                    topError: "error",
                    topLoadedData: "loadeddata",
                    topLoadedMetadata: "loadedmetadata",
                    topLoadStart: "loadstart",
                    topPause: "pause",
                    topPlay: "play",
                    topPlaying: "playing",
                    topProgress: "progress",
                    topRateChange: "ratechange",
                    topSeeked: "seeked",
                    topSeeking: "seeking",
                    topStalled: "stalled",
                    topSuspend: "suspend",
                    topTimeUpdate: "timeupdate",
                    topVolumeChange: "volumechange",
                    topWaiting: "waiting"
                },
                omittedCloseTags = {
                    area: !0,
                    base: !0,
                    br: !0,
                    col: !0,
                    embed: !0,
                    hr: !0,
                    img: !0,
                    input: !0,
                    keygen: !0,
                    link: !0,
                    meta: !0,
                    param: !0,
                    source: !0,
                    track: !0,
                    wbr: !0
                },
                newlineEatingTags = {
                    listing: !0,
                    pre: !0,
                    textarea: !0
                },
                voidElementTags = _assign({
                    menuitem: !0
                }, omittedCloseTags),
                VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
                validatedTagCache = {},
                hasOwnProperty = {}.hasOwnProperty,
                globalIdCounter = 1;
            ReactDOMComponent.displayName = "ReactDOMComponent", ReactDOMComponent.Mixin = {
                mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
                    this._rootNodeID = globalIdCounter++, this._domID = hostContainerInfo._idCounter++, this._hostParent = hostParent, this._hostContainerInfo = hostContainerInfo;
                    var props = this._currentElement.props;
                    switch (this._tag) {
                        case "audio":
                        case "form":
                        case "iframe":
                        case "img":
                        case "link":
                        case "object":
                        case "source":
                        case "video":
                            this._wrapperState = {
                                listeners: null
                            }, transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
                            break;
                        case "input":
                            ReactDOMInput.mountWrapper(this, props, hostParent), props = ReactDOMInput.getHostProps(this, props), transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
                            break;
                        case "option":
                            ReactDOMOption.mountWrapper(this, props, hostParent), props = ReactDOMOption.getHostProps(this, props);
                            break;
                        case "select":
                            ReactDOMSelect.mountWrapper(this, props, hostParent), props = ReactDOMSelect.getHostProps(this, props), transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
                            break;
                        case "textarea":
                            ReactDOMTextarea.mountWrapper(this, props, hostParent), props = ReactDOMTextarea.getHostProps(this, props), transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this)
                    }
                    assertValidProps(this, props);
                    var namespaceURI, parentTag;
                    if (null != hostParent ? (namespaceURI = hostParent._namespaceURI, parentTag = hostParent._tag) : hostContainerInfo._tag && (namespaceURI = hostContainerInfo._namespaceURI, parentTag = hostContainerInfo._tag), (null == namespaceURI || namespaceURI === DOMNamespaces.svg && "foreignobject" === parentTag) && (namespaceURI = DOMNamespaces.html), namespaceURI === DOMNamespaces.html && ("svg" === this._tag ? namespaceURI = DOMNamespaces.svg : "math" === this._tag && (namespaceURI = DOMNamespaces.mathml)), this._namespaceURI = namespaceURI, "production" !== process.env.NODE_ENV) {
                        var parentInfo;
                        null != hostParent ? parentInfo = hostParent._ancestorInfo : hostContainerInfo._tag && (parentInfo = hostContainerInfo._ancestorInfo), parentInfo && validateDOMNesting(this._tag, null, this, parentInfo), this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this)
                    }
                    var mountImage;
                    if (transaction.useCreateElement) {
                        var el, ownerDocument = hostContainerInfo._ownerDocument;
                        if (namespaceURI === DOMNamespaces.html)
                            if ("script" === this._tag) {
                                var div = ownerDocument.createElement("div"),
                                    type = this._currentElement.type;
                                div.innerHTML = "<" + type + "></" + type + ">", el = div.removeChild(div.firstChild)
                            } else el = props.is ? ownerDocument.createElement(this._currentElement.type, props.is) : ownerDocument.createElement(this._currentElement.type);
                        else el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
                        ReactDOMComponentTree.precacheNode(this, el), this._flags |= Flags.hasCachedChildNodes, this._hostParent || DOMPropertyOperations.setAttributeForRoot(el), this._updateDOMProperties(null, props, transaction);
                        var lazyTree = DOMLazyTree(el);
                        this._createInitialChildren(transaction, props, context, lazyTree), mountImage = lazyTree
                    } else {
                        var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props),
                            tagContent = this._createContentMarkup(transaction, props, context);
                        mountImage = !tagContent && omittedCloseTags[this._tag] ? tagOpen + "/>" : tagOpen + ">" + tagContent + "</" + this._currentElement.type + ">"
                    }
                    switch (this._tag) {
                        case "input":
                            transaction.getReactMountReady().enqueue(inputPostMount, this), props.autoFocus && transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
                            break;
                        case "textarea":
                            transaction.getReactMountReady().enqueue(textareaPostMount, this), props.autoFocus && transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
                            break;
                        case "select":
                        case "button":
                            props.autoFocus && transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
                            break;
                        case "option":
                            transaction.getReactMountReady().enqueue(optionPostMount, this)
                    }
                    return mountImage
                },
                _createOpenTagMarkupAndPutListeners: function(transaction, props) {
                    var ret = "<" + this._currentElement.type;
                    for (var propKey in props)
                        if (props.hasOwnProperty(propKey)) {
                            var propValue = props[propKey];
                            if (null != propValue)
                                if (registrationNameModules.hasOwnProperty(propKey)) propValue && enqueuePutListener(this, propKey, propValue, transaction);
                                else {
                                    "style" === propKey && (propValue && ("production" !== process.env.NODE_ENV && (this._previousStyle = propValue), propValue = this._previousStyleCopy = _assign({}, props.style)), propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this));
                                    var markup = null;
                                    null != this._tag && isCustomComponent(this._tag, props) ? RESERVED_PROPS.hasOwnProperty(propKey) || (markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue)) : markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue), markup && (ret += " " + markup)
                                }
                        }
                    return transaction.renderToStaticMarkup ? ret : (this._hostParent || (ret += " " + DOMPropertyOperations.createMarkupForRoot()), ret += " " + DOMPropertyOperations.createMarkupForID(this._domID))
                },
                _createContentMarkup: function(transaction, props, context) {
                    var ret = "",
                        innerHTML = props.dangerouslySetInnerHTML;
                    if (null != innerHTML) null != innerHTML.__html && (ret = innerHTML.__html);
                    else {
                        var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null,
                            childrenToUse = null != contentToUse ? null : props.children;
                        if (null != contentToUse) ret = escapeTextContentForBrowser(contentToUse), "production" !== process.env.NODE_ENV && setAndValidateContentChildDev.call(this, contentToUse);
                        else if (null != childrenToUse) {
                            var mountImages = this.mountChildren(childrenToUse, transaction, context);
                            ret = mountImages.join("")
                        }
                    }
                    return newlineEatingTags[this._tag] && "\n" === ret.charAt(0) ? "\n" + ret : ret
                },
                _createInitialChildren: function(transaction, props, context, lazyTree) {
                    var innerHTML = props.dangerouslySetInnerHTML;
                    if (null != innerHTML) null != innerHTML.__html && DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
                    else {
                        var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null,
                            childrenToUse = null != contentToUse ? null : props.children;
                        if (null != contentToUse) "" !== contentToUse && ("production" !== process.env.NODE_ENV && setAndValidateContentChildDev.call(this, contentToUse), DOMLazyTree.queueText(lazyTree, contentToUse));
                        else if (null != childrenToUse)
                            for (var mountImages = this.mountChildren(childrenToUse, transaction, context), i = 0; i < mountImages.length; i++) DOMLazyTree.queueChild(lazyTree, mountImages[i])
                    }
                },
                receiveComponent: function(nextElement, transaction, context) {
                    var prevElement = this._currentElement;
                    this._currentElement = nextElement, this.updateComponent(transaction, prevElement, nextElement, context)
                },
                updateComponent: function(transaction, prevElement, nextElement, context) {
                    var lastProps = prevElement.props,
                        nextProps = this._currentElement.props;
                    switch (this._tag) {
                        case "input":
                            lastProps = ReactDOMInput.getHostProps(this, lastProps), nextProps = ReactDOMInput.getHostProps(this, nextProps);
                            break;
                        case "option":
                            lastProps = ReactDOMOption.getHostProps(this, lastProps), nextProps = ReactDOMOption.getHostProps(this, nextProps);
                            break;
                        case "select":
                            lastProps = ReactDOMSelect.getHostProps(this, lastProps), nextProps = ReactDOMSelect.getHostProps(this, nextProps);
                            break;
                        case "textarea":
                            lastProps = ReactDOMTextarea.getHostProps(this, lastProps), nextProps = ReactDOMTextarea.getHostProps(this, nextProps)
                    }
                    switch (assertValidProps(this, nextProps), this._updateDOMProperties(lastProps, nextProps, transaction), this._updateDOMChildren(lastProps, nextProps, transaction, context), this._tag) {
                        case "input":
                            ReactDOMInput.updateWrapper(this);
                            break;
                        case "textarea":
                            ReactDOMTextarea.updateWrapper(this);
                            break;
                        case "select":
                            transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this)
                    }
                },
                _updateDOMProperties: function(lastProps, nextProps, transaction) {
                    var propKey, styleName, styleUpdates;
                    for (propKey in lastProps)
                        if (!nextProps.hasOwnProperty(propKey) && lastProps.hasOwnProperty(propKey) && null != lastProps[propKey])
                            if ("style" === propKey) {
                                var lastStyle = this._previousStyleCopy;
                                for (styleName in lastStyle) lastStyle.hasOwnProperty(styleName) && (styleUpdates = styleUpdates || {}, styleUpdates[styleName] = "");
                                this._previousStyleCopy = null
                            } else registrationNameModules.hasOwnProperty(propKey) ? lastProps[propKey] && deleteListener(this, propKey) : isCustomComponent(this._tag, lastProps) ? RESERVED_PROPS.hasOwnProperty(propKey) || DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey) : (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) && DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
                    for (propKey in nextProps) {
                        var nextProp = nextProps[propKey],
                            lastProp = "style" === propKey ? this._previousStyleCopy : null != lastProps ? lastProps[propKey] : void 0;
                        if (nextProps.hasOwnProperty(propKey) && nextProp !== lastProp && (null != nextProp || null != lastProp))
                            if ("style" === propKey)
                                if (nextProp ? ("production" !== process.env.NODE_ENV && (checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this), this._previousStyle = nextProp), nextProp = this._previousStyleCopy = _assign({}, nextProp)) : this._previousStyleCopy = null, lastProp) {
                                    for (styleName in lastProp) !lastProp.hasOwnProperty(styleName) || nextProp && nextProp.hasOwnProperty(styleName) || (styleUpdates = styleUpdates || {}, styleUpdates[styleName] = "");
                                    for (styleName in nextProp) nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName] && (styleUpdates = styleUpdates || {}, styleUpdates[styleName] = nextProp[styleName])
                                } else styleUpdates = nextProp;
                            else if (registrationNameModules.hasOwnProperty(propKey)) nextProp ? enqueuePutListener(this, propKey, nextProp, transaction) : lastProp && deleteListener(this, propKey);
                            else if (isCustomComponent(this._tag, nextProps)) RESERVED_PROPS.hasOwnProperty(propKey) || DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
                            else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
                                var node = getNode(this);
                                null != nextProp ? DOMPropertyOperations.setValueForProperty(node, propKey, nextProp) : DOMPropertyOperations.deleteValueForProperty(node, propKey)
                            }
                    }
                    styleUpdates && CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this)
                },
                _updateDOMChildren: function(lastProps, nextProps, transaction, context) {
                    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null,
                        nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null,
                        lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html,
                        nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html,
                        lastChildren = null != lastContent ? null : lastProps.children,
                        nextChildren = null != nextContent ? null : nextProps.children,
                        lastHasContentOrHtml = null != lastContent || null != lastHtml,
                        nextHasContentOrHtml = null != nextContent || null != nextHtml;
                    null != lastChildren && null == nextChildren ? this.updateChildren(null, transaction, context) : lastHasContentOrHtml && !nextHasContentOrHtml && (this.updateTextContent(""), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onSetChildren(this._debugID, [])), null != nextContent ? lastContent !== nextContent && (this.updateTextContent("" + nextContent), "production" !== process.env.NODE_ENV && setAndValidateContentChildDev.call(this, nextContent)) : null != nextHtml ? (lastHtml !== nextHtml && this.updateMarkup("" + nextHtml), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onSetChildren(this._debugID, [])) : null != nextChildren && ("production" !== process.env.NODE_ENV && setAndValidateContentChildDev.call(this, null), this.updateChildren(nextChildren, transaction, context))
                },
                getHostNode: function() {
                    return getNode(this)
                },
                unmountComponent: function(safely) {
                    switch (this._tag) {
                        case "audio":
                        case "form":
                        case "iframe":
                        case "img":
                        case "link":
                        case "object":
                        case "source":
                        case "video":
                            var listeners = this._wrapperState.listeners;
                            if (listeners)
                                for (var i = 0; i < listeners.length; i++) listeners[i].remove();
                            break;
                        case "html":
                        case "head":
                        case "body":
                            "production" !== process.env.NODE_ENV ? invariant(!1, "<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.", this._tag) : _prodInvariant("66", this._tag)
                    }
                    this.unmountChildren(safely), ReactDOMComponentTree.uncacheNode(this), EventPluginHub.deleteAllListeners(this), this._rootNodeID = 0, this._domID = 0, this._wrapperState = null, "production" !== process.env.NODE_ENV && setAndValidateContentChildDev.call(this, null)
                },
                getPublicInstance: function() {
                    return getNode(this)
                }
            }, _assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin), module.exports = ReactDOMComponent
        }).call(this, require("_process"))
    }, {
        "./AutoFocusUtils": 135,
        "./CSSPropertyOperations": 138,
        "./DOMLazyTree": 142,
        "./DOMNamespaces": 143,
        "./DOMProperty": 144,
        "./DOMPropertyOperations": 145,
        "./EventPluginHub": 149,
        "./EventPluginRegistry": 150,
        "./ReactBrowserEventEmitter": 158,
        "./ReactDOMComponentFlags": 165,
        "./ReactDOMComponentTree": 166,
        "./ReactDOMInput": 171,
        "./ReactDOMOption": 174,
        "./ReactDOMSelect": 175,
        "./ReactDOMTextarea": 178,
        "./ReactInstrumentation": 195,
        "./ReactMultiChild": 199,
        "./ReactServerRenderingTransaction": 207,
        "./escapeTextContentForBrowser": 235,
        "./isEventSupported": 249,
        "./reactProdInvariant": 252,
        "./validateDOMNesting": 258,
        _process: 13,
        "fbjs/lib/emptyFunction": 51,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/shallowEqual": 65,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    165: [function(require, module, exports) {
        "use strict";
        var ReactDOMComponentFlags = {
            hasCachedChildNodes: 1
        };
        module.exports = ReactDOMComponentFlags
    }, {}],
    166: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function shouldPrecacheNode(node, nodeID) {
                return 1 === node.nodeType && node.getAttribute(ATTR_NAME) === String(nodeID) || 8 === node.nodeType && node.nodeValue === " react-text: " + nodeID + " " || 8 === node.nodeType && node.nodeValue === " react-empty: " + nodeID + " "
            }

            function getRenderedHostOrTextFromComponent(component) {
                for (var rendered; rendered = component._renderedComponent;) component = rendered;
                return component
            }

            function precacheNode(inst, node) {
                var hostInst = getRenderedHostOrTextFromComponent(inst);
                hostInst._hostNode = node, node[internalInstanceKey] = hostInst
            }

            function uncacheNode(inst) {
                var node = inst._hostNode;
                node && (delete node[internalInstanceKey], inst._hostNode = null)
            }

            function precacheChildNodes(inst, node) {
                if (!(inst._flags & Flags.hasCachedChildNodes)) {
                    var children = inst._renderedChildren,
                        childNode = node.firstChild;
                    outer: for (var name in children)
                        if (children.hasOwnProperty(name)) {
                            var childInst = children[name],
                                childID = getRenderedHostOrTextFromComponent(childInst)._domID;
                            if (0 !== childID) {
                                for (; null !== childNode; childNode = childNode.nextSibling)
                                    if (shouldPrecacheNode(childNode, childID)) {
                                        precacheNode(childInst, childNode);
                                        continue outer
                                    }
                                "production" !== process.env.NODE_ENV ? invariant(!1, "Unable to find element with ID %s.", childID) : _prodInvariant("32", childID)
                            }
                        }
                    inst._flags |= Flags.hasCachedChildNodes
                }
            }

            function getClosestInstanceFromNode(node) {
                if (node[internalInstanceKey]) return node[internalInstanceKey];
                for (var parents = []; !node[internalInstanceKey];) {
                    if (parents.push(node), !node.parentNode) return null;
                    node = node.parentNode
                }
                for (var closest, inst; node && (inst = node[internalInstanceKey]); node = parents.pop()) closest = inst, parents.length && precacheChildNodes(inst, node);
                return closest
            }

            function getInstanceFromNode(node) {
                var inst = getClosestInstanceFromNode(node);
                return null != inst && inst._hostNode === node ? inst : null
            }

            function getNodeFromInstance(inst) {
                if (void 0 === inst._hostNode && ("production" !== process.env.NODE_ENV ? invariant(!1, "getNodeFromInstance: Invalid argument.") : _prodInvariant("33")), inst._hostNode) return inst._hostNode;
                for (var parents = []; !inst._hostNode;) parents.push(inst), inst._hostParent || ("production" !== process.env.NODE_ENV ? invariant(!1, "React DOM tree root should always have a node reference.") : _prodInvariant("34")), inst = inst._hostParent;
                for (; parents.length; inst = parents.pop()) precacheChildNodes(inst, inst._hostNode);
                return inst._hostNode
            }
            var _prodInvariant = require("./reactProdInvariant"),
                DOMProperty = require("./DOMProperty"),
                ReactDOMComponentFlags = require("./ReactDOMComponentFlags"),
                invariant = require("fbjs/lib/invariant"),
                ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME,
                Flags = ReactDOMComponentFlags,
                internalInstanceKey = "__reactInternalInstance$" + Math.random().toString(36).slice(2),
                ReactDOMComponentTree = {
                    getClosestInstanceFromNode: getClosestInstanceFromNode,
                    getInstanceFromNode: getInstanceFromNode,
                    getNodeFromInstance: getNodeFromInstance,
                    precacheChildNodes: precacheChildNodes,
                    precacheNode: precacheNode,
                    uncacheNode: uncacheNode
                };
            module.exports = ReactDOMComponentTree
        }).call(this, require("_process"))
    }, {
        "./DOMProperty": 144,
        "./ReactDOMComponentFlags": 165,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    167: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function ReactDOMContainerInfo(topLevelWrapper, node) {
                var info = {
                    _topLevelWrapper: topLevelWrapper,
                    _idCounter: 1,
                    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
                    _node: node,
                    _tag: node ? node.nodeName.toLowerCase() : null,
                    _namespaceURI: node ? node.namespaceURI : null
                };
                return "production" !== process.env.NODE_ENV && (info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null), info
            }
            var validateDOMNesting = require("./validateDOMNesting"),
                DOC_NODE_TYPE = 9;
            module.exports = ReactDOMContainerInfo
        }).call(this, require("_process"))
    }, {
        "./validateDOMNesting": 258,
        _process: 13
    }],
    168: [function(require, module, exports) {
        "use strict";
        var _assign = require("object-assign"),
            DOMLazyTree = require("./DOMLazyTree"),
            ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            ReactDOMEmptyComponent = function(instantiate) {
                this._currentElement = null, this._hostNode = null, this._hostParent = null, this._hostContainerInfo = null, this._domID = 0
            };
        _assign(ReactDOMEmptyComponent.prototype, {
            mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
                var domID = hostContainerInfo._idCounter++;
                this._domID = domID, this._hostParent = hostParent, this._hostContainerInfo = hostContainerInfo;
                var nodeValue = " react-empty: " + this._domID + " ";
                if (transaction.useCreateElement) {
                    var ownerDocument = hostContainerInfo._ownerDocument,
                        node = ownerDocument.createComment(nodeValue);
                    return ReactDOMComponentTree.precacheNode(this, node), DOMLazyTree(node)
                }
                return transaction.renderToStaticMarkup ? "" : "\x3c!--" + nodeValue + "--\x3e"
            },
            receiveComponent: function() {},
            getHostNode: function() {
                return ReactDOMComponentTree.getNodeFromInstance(this)
            },
            unmountComponent: function() {
                ReactDOMComponentTree.uncacheNode(this)
            }
        }), module.exports = ReactDOMEmptyComponent
    }, {
        "./DOMLazyTree": 142,
        "./ReactDOMComponentTree": 166,
        "object-assign": 127
    }],
    169: [function(require, module, exports) {
        "use strict";
        var ReactDOMFeatureFlags = {
            useCreateElement: !0,
            useFiber: !1
        };
        module.exports = ReactDOMFeatureFlags
    }, {}],
    170: [function(require, module, exports) {
        "use strict";
        var DOMChildrenOperations = require("./DOMChildrenOperations"),
            ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            ReactDOMIDOperations = {
                dangerouslyProcessChildrenUpdates: function(parentInst, updates) {
                    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
                    DOMChildrenOperations.processUpdates(node, updates)
                }
            };
        module.exports = ReactDOMIDOperations
    }, {
        "./DOMChildrenOperations": 141,
        "./ReactDOMComponentTree": 166
    }],
    171: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function forceUpdateIfMounted() {
                this._rootNodeID && ReactDOMInput.updateWrapper(this)
            }

            function isControlled(props) {
                return "checkbox" === props.type || "radio" === props.type ? null != props.checked : null != props.value
            }

            function _handleChange(event) {
                var props = this._currentElement.props,
                    returnValue = LinkedValueUtils.executeOnChange(props, event);
                ReactUpdates.asap(forceUpdateIfMounted, this);
                var name = props.name;
                if ("radio" === props.type && null != name) {
                    for (var rootNode = ReactDOMComponentTree.getNodeFromInstance(this), queryRoot = rootNode; queryRoot.parentNode;) queryRoot = queryRoot.parentNode;
                    for (var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]'), i = 0; i < group.length; i++) {
                        var otherNode = group[i];
                        if (otherNode !== rootNode && otherNode.form === rootNode.form) {
                            var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
                            otherInstance || ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.") : _prodInvariant("90")), ReactUpdates.asap(forceUpdateIfMounted, otherInstance)
                        }
                    }
                }
                return returnValue
            }
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                DOMPropertyOperations = require("./DOMPropertyOperations"),
                LinkedValueUtils = require("./LinkedValueUtils"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactUpdates = require("./ReactUpdates"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                didWarnValueLink = !1,
                didWarnCheckedLink = !1,
                didWarnValueDefaultValue = !1,
                didWarnCheckedDefaultChecked = !1,
                didWarnControlledToUncontrolled = !1,
                didWarnUncontrolledToControlled = !1,
                ReactDOMInput = {
                    getHostProps: function(inst, props) {
                        var value = LinkedValueUtils.getValue(props),
                            checked = LinkedValueUtils.getChecked(props);
                        return _assign({
                            type: void 0,
                            step: void 0,
                            min: void 0,
                            max: void 0
                        }, props, {
                            defaultChecked: void 0,
                            defaultValue: void 0,
                            value: null != value ? value : inst._wrapperState.initialValue,
                            checked: null != checked ? checked : inst._wrapperState.initialChecked,
                            onChange: inst._wrapperState.onChange
                        })
                    },
                    mountWrapper: function(inst, props) {
                        if ("production" !== process.env.NODE_ENV) {
                            LinkedValueUtils.checkPropTypes("input", props, inst._currentElement._owner);
                            var owner = inst._currentElement._owner;
                            void 0 === props.valueLink || didWarnValueLink || ("production" !== process.env.NODE_ENV && warning(!1, "`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead."), didWarnValueLink = !0), void 0 === props.checkedLink || didWarnCheckedLink || ("production" !== process.env.NODE_ENV && warning(!1, "`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead."), didWarnCheckedLink = !0), void 0 === props.checked || void 0 === props.defaultChecked || didWarnCheckedDefaultChecked || ("production" !== process.env.NODE_ENV && warning(!1, "%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://fb.me/react-controlled-components", owner && owner.getName() || "A component", props.type), didWarnCheckedDefaultChecked = !0), void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue || ("production" !== process.env.NODE_ENV && warning(!1, "%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://fb.me/react-controlled-components", owner && owner.getName() || "A component", props.type), didWarnValueDefaultValue = !0)
                        }
                        var defaultValue = props.defaultValue;
                        inst._wrapperState = {
                            initialChecked: null != props.checked ? props.checked : props.defaultChecked,
                            initialValue: null != props.value ? props.value : defaultValue,
                            listeners: null,
                            onChange: _handleChange.bind(inst),
                            controlled: isControlled(props)
                        }
                    },
                    updateWrapper: function(inst) {
                        var props = inst._currentElement.props;
                        if ("production" !== process.env.NODE_ENV) {
                            var controlled = isControlled(props),
                                owner = inst._currentElement._owner;
                            inst._wrapperState.controlled || !controlled || didWarnUncontrolledToControlled || ("production" !== process.env.NODE_ENV && warning(!1, "%s is changing an uncontrolled input of type %s to be controlled. Input elements should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components", owner && owner.getName() || "A component", props.type), didWarnUncontrolledToControlled = !0), !inst._wrapperState.controlled || controlled || didWarnControlledToUncontrolled || ("production" !== process.env.NODE_ENV && warning(!1, "%s is changing a controlled input of type %s to be uncontrolled. Input elements should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components", owner && owner.getName() || "A component", props.type), didWarnControlledToUncontrolled = !0)
                        }
                        var checked = props.checked;
                        null != checked && DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), "checked", checked || !1);
                        var node = ReactDOMComponentTree.getNodeFromInstance(inst),
                            value = LinkedValueUtils.getValue(props);
                        if (null != value)
                            if (0 === value && "" === node.value) node.value = "0";
                            else if ("number" === props.type) {
                                var valueAsNumber = parseFloat(node.value, 10) || 0;
                                value != valueAsNumber && (node.value = "" + value)
                            } else value != node.value && (node.value = "" + value);
                        else null == props.value && null != props.defaultValue && node.defaultValue !== "" + props.defaultValue && (node.defaultValue = "" + props.defaultValue), null == props.checked && null != props.defaultChecked && (node.defaultChecked = !!props.defaultChecked)
                    },
                    postMountWrapper: function(inst) {
                        var props = inst._currentElement.props,
                            node = ReactDOMComponentTree.getNodeFromInstance(inst);
                        switch (props.type) {
                            case "submit":
                            case "reset":
                                break;
                            case "color":
                            case "date":
                            case "datetime":
                            case "datetime-local":
                            case "month":
                            case "time":
                            case "week":
                                node.value = "", node.value = node.defaultValue;
                                break;
                            default:
                                node.value = node.value
                        }
                        var name = node.name;
                        "" !== name && (node.name = ""), node.defaultChecked = !node.defaultChecked, node.defaultChecked = !node.defaultChecked, "" !== name && (node.name = name)
                    }
                };
            module.exports = ReactDOMInput
        }).call(this, require("_process"))
    }, {
        "./DOMPropertyOperations": 145,
        "./LinkedValueUtils": 156,
        "./ReactDOMComponentTree": 166,
        "./ReactUpdates": 210,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    172: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function validateProperty(tagName, name, debugID) {
                if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) return !0;
                if (rARIA.test(name)) {
                    var lowerCasedName = name.toLowerCase(),
                        standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
                    if (null == standardName) return warnedProperties[name] = !0, !1;
                    if (name !== standardName) return "production" !== process.env.NODE_ENV && warning(!1, "Unknown ARIA attribute %s. Did you mean %s?%s", name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)), warnedProperties[name] = !0, !0
                }
                return !0
            }

            function warnInvalidARIAProps(debugID, element) {
                var invalidProps = [];
                for (var key in element.props) {
                    validateProperty(element.type, key, debugID) || invalidProps.push(key)
                }
                var unknownPropString = invalidProps.map(function(prop) {
                    return "`" + prop + "`"
                }).join(", ");
                1 === invalidProps.length ? "production" !== process.env.NODE_ENV && warning(!1, "Invalid aria prop %s on <%s> tag. For details, see https://fb.me/invalid-aria-prop%s", unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : invalidProps.length > 1 && "production" !== process.env.NODE_ENV && warning(!1, "Invalid aria props %s on <%s> tag. For details, see https://fb.me/invalid-aria-prop%s", unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID))
            }

            function handleElement(debugID, element) {
                null != element && "string" == typeof element.type && (element.type.indexOf("-") >= 0 || element.props.is || warnInvalidARIAProps(debugID, element))
            }
            var DOMProperty = require("./DOMProperty"),
                ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook"),
                warning = require("fbjs/lib/warning"),
                warnedProperties = {},
                rARIA = new RegExp("^(aria)-[" + DOMProperty.ATTRIBUTE_NAME_CHAR + "]*$"),
                ReactDOMInvalidARIAHook = {
                    onBeforeMountComponent: function(debugID, element) {
                        "production" !== process.env.NODE_ENV && handleElement(debugID, element)
                    },
                    onBeforeUpdateComponent: function(debugID, element) {
                        "production" !== process.env.NODE_ENV && handleElement(debugID, element)
                    }
                };
            module.exports = ReactDOMInvalidARIAHook
        }).call(this, require("_process"))
    }, {
        "./DOMProperty": 144,
        _process: 13,
        "fbjs/lib/warning": 66,
        "react/lib/ReactComponentTreeHook": 265
    }],
    173: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function handleElement(debugID, element) {
                null != element && ("input" !== element.type && "textarea" !== element.type && "select" !== element.type || null == element.props || null !== element.props.value || didWarnValueNull || ("production" !== process.env.NODE_ENV && warning(!1, "`value` prop on `%s` should not be null. Consider using the empty string to clear the component or `undefined` for uncontrolled components.%s", element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)), didWarnValueNull = !0))
            }
            var ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook"),
                warning = require("fbjs/lib/warning"),
                didWarnValueNull = !1,
                ReactDOMNullInputValuePropHook = {
                    onBeforeMountComponent: function(debugID, element) {
                        handleElement(debugID, element)
                    },
                    onBeforeUpdateComponent: function(debugID, element) {
                        handleElement(debugID, element)
                    }
                };
            module.exports = ReactDOMNullInputValuePropHook
        }).call(this, require("_process"))
    }, {
        _process: 13,
        "fbjs/lib/warning": 66,
        "react/lib/ReactComponentTreeHook": 265
    }],
    174: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function flattenChildren(children) {
                var content = "";
                return React.Children.forEach(children, function(child) {
                    null != child && ("string" == typeof child || "number" == typeof child ? content += child : didWarnInvalidOptionChildren || (didWarnInvalidOptionChildren = !0, "production" !== process.env.NODE_ENV && warning(!1, "Only strings and numbers are supported as <option> children.")))
                }), content
            }
            var _assign = require("object-assign"),
                React = require("react/lib/React"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactDOMSelect = require("./ReactDOMSelect"),
                warning = require("fbjs/lib/warning"),
                didWarnInvalidOptionChildren = !1,
                ReactDOMOption = {
                    mountWrapper: function(inst, props, hostParent) {
                        "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(null == props.selected, "Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                        var selectValue = null;
                        if (null != hostParent) {
                            var selectParent = hostParent;
                            "optgroup" === selectParent._tag && (selectParent = selectParent._hostParent), null != selectParent && "select" === selectParent._tag && (selectValue = ReactDOMSelect.getSelectValueContext(selectParent))
                        }
                        var selected = null;
                        if (null != selectValue) {
                            var value;
                            if (value = null != props.value ? props.value + "" : flattenChildren(props.children), selected = !1, Array.isArray(selectValue)) {
                                for (var i = 0; i < selectValue.length; i++)
                                    if ("" + selectValue[i] === value) {
                                        selected = !0;
                                        break
                                    }
                            } else selected = "" + selectValue === value
                        }
                        inst._wrapperState = {
                            selected: selected
                        }
                    },
                    postMountWrapper: function(inst) {
                        var props = inst._currentElement.props;
                        if (null != props.value) {
                            ReactDOMComponentTree.getNodeFromInstance(inst).setAttribute("value", props.value)
                        }
                    },
                    getHostProps: function(inst, props) {
                        var hostProps = _assign({
                            selected: void 0,
                            children: void 0
                        }, props);
                        null != inst._wrapperState.selected && (hostProps.selected = inst._wrapperState.selected);
                        var content = flattenChildren(props.children);
                        return content && (hostProps.children = content), hostProps
                    }
                };
            module.exports = ReactDOMOption
        }).call(this, require("_process"))
    }, {
        "./ReactDOMComponentTree": 166,
        "./ReactDOMSelect": 175,
        _process: 13,
        "fbjs/lib/warning": 66,
        "object-assign": 127,
        "react/lib/React": 261
    }],
    175: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function updateOptionsIfPendingUpdateAndMounted() {
                if (this._rootNodeID && this._wrapperState.pendingUpdate) {
                    this._wrapperState.pendingUpdate = !1;
                    var props = this._currentElement.props,
                        value = LinkedValueUtils.getValue(props);
                    null != value && updateOptions(this, Boolean(props.multiple), value)
                }
            }

            function getDeclarationErrorAddendum(owner) {
                if (owner) {
                    var name = owner.getName();
                    if (name) return " Check the render method of `" + name + "`."
                }
                return ""
            }

            function checkSelectPropTypes(inst, props) {
                var owner = inst._currentElement._owner;
                LinkedValueUtils.checkPropTypes("select", props, owner), void 0 === props.valueLink || didWarnValueLink || ("production" !== process.env.NODE_ENV && warning(!1, "`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead."), didWarnValueLink = !0);
                for (var i = 0; i < valuePropNames.length; i++) {
                    var propName = valuePropNames[i];
                    if (null != props[propName]) {
                        var isArray = Array.isArray(props[propName]);
                        props.multiple && !isArray ? "production" !== process.env.NODE_ENV && warning(!1, "The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum(owner)) : !props.multiple && isArray && "production" !== process.env.NODE_ENV && warning(!1, "The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum(owner))
                    }
                }
            }

            function updateOptions(inst, multiple, propValue) {
                var selectedValue, i, options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
                if (multiple) {
                    for (selectedValue = {}, i = 0; i < propValue.length; i++) selectedValue["" + propValue[i]] = !0;
                    for (i = 0; i < options.length; i++) {
                        var selected = selectedValue.hasOwnProperty(options[i].value);
                        options[i].selected !== selected && (options[i].selected = selected)
                    }
                } else {
                    for (selectedValue = "" + propValue, i = 0; i < options.length; i++)
                        if (options[i].value === selectedValue) return void(options[i].selected = !0);
                    options.length && (options[0].selected = !0)
                }
            }

            function _handleChange(event) {
                var props = this._currentElement.props,
                    returnValue = LinkedValueUtils.executeOnChange(props, event);
                return this._rootNodeID && (this._wrapperState.pendingUpdate = !0), ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this), returnValue
            }
            var _assign = require("object-assign"),
                LinkedValueUtils = require("./LinkedValueUtils"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactUpdates = require("./ReactUpdates"),
                warning = require("fbjs/lib/warning"),
                didWarnValueLink = !1,
                didWarnValueDefaultValue = !1,
                valuePropNames = ["value", "defaultValue"],
                ReactDOMSelect = {
                    getHostProps: function(inst, props) {
                        return _assign({}, props, {
                            onChange: inst._wrapperState.onChange,
                            value: void 0
                        })
                    },
                    mountWrapper: function(inst, props) {
                        "production" !== process.env.NODE_ENV && checkSelectPropTypes(inst, props);
                        var value = LinkedValueUtils.getValue(props);
                        inst._wrapperState = {
                            pendingUpdate: !1,
                            initialValue: null != value ? value : props.defaultValue,
                            listeners: null,
                            onChange: _handleChange.bind(inst),
                            wasMultiple: Boolean(props.multiple)
                        }, void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue || ("production" !== process.env.NODE_ENV && warning(!1, "Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://fb.me/react-controlled-components"), didWarnValueDefaultValue = !0)
                    },
                    getSelectValueContext: function(inst) {
                        return inst._wrapperState.initialValue
                    },
                    postUpdateWrapper: function(inst) {
                        var props = inst._currentElement.props;
                        inst._wrapperState.initialValue = void 0;
                        var wasMultiple = inst._wrapperState.wasMultiple;
                        inst._wrapperState.wasMultiple = Boolean(props.multiple);
                        var value = LinkedValueUtils.getValue(props);
                        null != value ? (inst._wrapperState.pendingUpdate = !1, updateOptions(inst, Boolean(props.multiple), value)) : wasMultiple !== Boolean(props.multiple) && (null != props.defaultValue ? updateOptions(inst, Boolean(props.multiple), props.defaultValue) : updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : ""))
                    }
                };
            module.exports = ReactDOMSelect
        }).call(this, require("_process"))
    }, {
        "./LinkedValueUtils": 156,
        "./ReactDOMComponentTree": 166,
        "./ReactUpdates": 210,
        _process: 13,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    176: [function(require, module, exports) {
        "use strict";

        function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
            return anchorNode === focusNode && anchorOffset === focusOffset
        }

        function getIEOffsets(node) {
            var selection = document.selection,
                selectedRange = selection.createRange(),
                selectedLength = selectedRange.text.length,
                fromStart = selectedRange.duplicate();
            fromStart.moveToElementText(node), fromStart.setEndPoint("EndToStart", selectedRange);
            var startOffset = fromStart.text.length;
            return {
                start: startOffset,
                end: startOffset + selectedLength
            }
        }

        function getModernOffsets(node) {
            var selection = window.getSelection && window.getSelection();
            if (!selection || 0 === selection.rangeCount) return null;
            var anchorNode = selection.anchorNode,
                anchorOffset = selection.anchorOffset,
                focusNode = selection.focusNode,
                focusOffset = selection.focusOffset,
                currentRange = selection.getRangeAt(0);
            try {
                currentRange.startContainer.nodeType, currentRange.endContainer.nodeType
            } catch (e) {
                return null
            }
            var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset),
                rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length,
                tempRange = currentRange.cloneRange();
            tempRange.selectNodeContents(node), tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
            var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset),
                start = isTempRangeCollapsed ? 0 : tempRange.toString().length,
                end = start + rangeLength,
                detectionRange = document.createRange();
            detectionRange.setStart(anchorNode, anchorOffset), detectionRange.setEnd(focusNode, focusOffset);
            var isBackward = detectionRange.collapsed;
            return {
                start: isBackward ? end : start,
                end: isBackward ? start : end
            }
        }

        function setIEOffsets(node, offsets) {
            var start, end, range = document.selection.createRange().duplicate();
            void 0 === offsets.end ? (start = offsets.start, end = start) : offsets.start > offsets.end ? (start = offsets.end, end = offsets.start) : (start = offsets.start, end = offsets.end), range.moveToElementText(node), range.moveStart("character", start), range.setEndPoint("EndToStart", range), range.moveEnd("character", end - start), range.select()
        }

        function setModernOffsets(node, offsets) {
            if (window.getSelection) {
                var selection = window.getSelection(),
                    length = node[getTextContentAccessor()].length,
                    start = Math.min(offsets.start, length),
                    end = void 0 === offsets.end ? start : Math.min(offsets.end, length);
                if (!selection.extend && start > end) {
                    var temp = end;
                    end = start, start = temp
                }
                var startMarker = getNodeForCharacterOffset(node, start),
                    endMarker = getNodeForCharacterOffset(node, end);
                if (startMarker && endMarker) {
                    var range = document.createRange();
                    range.setStart(startMarker.node, startMarker.offset), selection.removeAllRanges(), start > end ? (selection.addRange(range), selection.extend(endMarker.node, endMarker.offset)) : (range.setEnd(endMarker.node, endMarker.offset), selection.addRange(range))
                }
            }
        }
        var ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            getNodeForCharacterOffset = require("./getNodeForCharacterOffset"),
            getTextContentAccessor = require("./getTextContentAccessor"),
            useIEOffsets = ExecutionEnvironment.canUseDOM && "selection" in document && !("getSelection" in window),
            ReactDOMSelection = {
                getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
                setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
            };
        module.exports = ReactDOMSelection
    }, {
        "./getNodeForCharacterOffset": 245,
        "./getTextContentAccessor": 246,
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    177: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                DOMChildrenOperations = require("./DOMChildrenOperations"),
                DOMLazyTree = require("./DOMLazyTree"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                escapeTextContentForBrowser = require("./escapeTextContentForBrowser"),
                invariant = require("fbjs/lib/invariant"),
                validateDOMNesting = require("./validateDOMNesting"),
                ReactDOMTextComponent = function(text) {
                    this._currentElement = text, this._stringText = "" + text, this._hostNode = null, this._hostParent = null, this._domID = 0, this._mountIndex = 0, this._closingComment = null, this._commentNodes = null
                };
            _assign(ReactDOMTextComponent.prototype, {
                mountComponent: function(transaction, hostParent, hostContainerInfo, context) {
                    if ("production" !== process.env.NODE_ENV) {
                        var parentInfo;
                        null != hostParent ? parentInfo = hostParent._ancestorInfo : null != hostContainerInfo && (parentInfo = hostContainerInfo._ancestorInfo), parentInfo && validateDOMNesting(null, this._stringText, this, parentInfo)
                    }
                    var domID = hostContainerInfo._idCounter++,
                        openingValue = " react-text: " + domID + " ";
                    if (this._domID = domID, this._hostParent = hostParent, transaction.useCreateElement) {
                        var ownerDocument = hostContainerInfo._ownerDocument,
                            openingComment = ownerDocument.createComment(openingValue),
                            closingComment = ownerDocument.createComment(" /react-text "),
                            lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
                        return DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment)), this._stringText && DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText))), DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment)), ReactDOMComponentTree.precacheNode(this, openingComment), this._closingComment = closingComment, lazyTree
                    }
                    var escapedText = escapeTextContentForBrowser(this._stringText);
                    return transaction.renderToStaticMarkup ? escapedText : "\x3c!--" + openingValue + "--\x3e" + escapedText + "\x3c!-- /react-text --\x3e"
                },
                receiveComponent: function(nextText, transaction) {
                    if (nextText !== this._currentElement) {
                        this._currentElement = nextText;
                        var nextStringText = "" + nextText;
                        if (nextStringText !== this._stringText) {
                            this._stringText = nextStringText;
                            var commentNodes = this.getHostNode();
                            DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText)
                        }
                    }
                },
                getHostNode: function() {
                    var hostNode = this._commentNodes;
                    if (hostNode) return hostNode;
                    if (!this._closingComment)
                        for (var openingComment = ReactDOMComponentTree.getNodeFromInstance(this), node = openingComment.nextSibling;;) {
                            if (null == node && ("production" !== process.env.NODE_ENV ? invariant(!1, "Missing closing comment for text component %s", this._domID) : _prodInvariant("67", this._domID)), 8 === node.nodeType && " /react-text " === node.nodeValue) {
                                this._closingComment = node;
                                break
                            }
                            node = node.nextSibling
                        }
                    return hostNode = [this._hostNode, this._closingComment], this._commentNodes = hostNode, hostNode
                },
                unmountComponent: function() {
                    this._closingComment = null, this._commentNodes = null, ReactDOMComponentTree.uncacheNode(this)
                }
            }), module.exports = ReactDOMTextComponent
        }).call(this, require("_process"))
    }, {
        "./DOMChildrenOperations": 141,
        "./DOMLazyTree": 142,
        "./ReactDOMComponentTree": 166,
        "./escapeTextContentForBrowser": 235,
        "./reactProdInvariant": 252,
        "./validateDOMNesting": 258,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "object-assign": 127
    }],
    178: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function forceUpdateIfMounted() {
                this._rootNodeID && ReactDOMTextarea.updateWrapper(this)
            }

            function _handleChange(event) {
                var props = this._currentElement.props,
                    returnValue = LinkedValueUtils.executeOnChange(props, event);
                return ReactUpdates.asap(forceUpdateIfMounted, this), returnValue
            }
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                LinkedValueUtils = require("./LinkedValueUtils"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactUpdates = require("./ReactUpdates"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                didWarnValueLink = !1,
                didWarnValDefaultVal = !1,
                ReactDOMTextarea = {
                    getHostProps: function(inst, props) {
                        return null != props.dangerouslySetInnerHTML && ("production" !== process.env.NODE_ENV ? invariant(!1, "`dangerouslySetInnerHTML` does not make sense on <textarea>.") : _prodInvariant("91")), _assign({}, props, {
                            value: void 0,
                            defaultValue: void 0,
                            children: "" + inst._wrapperState.initialValue,
                            onChange: inst._wrapperState.onChange
                        })
                    },
                    mountWrapper: function(inst, props) {
                        "production" !== process.env.NODE_ENV && (LinkedValueUtils.checkPropTypes("textarea", props, inst._currentElement._owner), void 0 === props.valueLink || didWarnValueLink || ("production" !== process.env.NODE_ENV && warning(!1, "`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead."), didWarnValueLink = !0), void 0 === props.value || void 0 === props.defaultValue || didWarnValDefaultVal || ("production" !== process.env.NODE_ENV && warning(!1, "Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://fb.me/react-controlled-components"), didWarnValDefaultVal = !0));
                        var value = LinkedValueUtils.getValue(props),
                            initialValue = value;
                        if (null == value) {
                            var defaultValue = props.defaultValue,
                                children = props.children;
                            null != children && ("production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(!1, "Use the `defaultValue` or `value` props instead of setting children on <textarea>."), null != defaultValue && ("production" !== process.env.NODE_ENV ? invariant(!1, "If you supply `defaultValue` on a <textarea>, do not pass children.") : _prodInvariant("92")), Array.isArray(children) && (children.length <= 1 || ("production" !== process.env.NODE_ENV ? invariant(!1, "<textarea> can only have at most one child.") : _prodInvariant("93")), children = children[0]), defaultValue = "" + children), null == defaultValue && (defaultValue = ""), initialValue = defaultValue
                        }
                        inst._wrapperState = {
                            initialValue: "" + initialValue,
                            listeners: null,
                            onChange: _handleChange.bind(inst)
                        }
                    },
                    updateWrapper: function(inst) {
                        var props = inst._currentElement.props,
                            node = ReactDOMComponentTree.getNodeFromInstance(inst),
                            value = LinkedValueUtils.getValue(props);
                        if (null != value) {
                            var newValue = "" + value;
                            newValue !== node.value && (node.value = newValue), null == props.defaultValue && (node.defaultValue = newValue)
                        }
                        null != props.defaultValue && (node.defaultValue = props.defaultValue)
                    },
                    postMountWrapper: function(inst) {
                        var node = ReactDOMComponentTree.getNodeFromInstance(inst),
                            textContent = node.textContent;
                        textContent === inst._wrapperState.initialValue && (node.value = textContent)
                    }
                };
            module.exports = ReactDOMTextarea
        }).call(this, require("_process"))
    }, {
        "./LinkedValueUtils": 156,
        "./ReactDOMComponentTree": 166,
        "./ReactUpdates": 210,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    179: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getLowestCommonAncestor(instA, instB) {
                "_hostNode" in instA || ("production" !== process.env.NODE_ENV ? invariant(!1, "getNodeFromInstance: Invalid argument.") : _prodInvariant("33")), "_hostNode" in instB || ("production" !== process.env.NODE_ENV ? invariant(!1, "getNodeFromInstance: Invalid argument.") : _prodInvariant("33"));
                for (var depthA = 0, tempA = instA; tempA; tempA = tempA._hostParent) depthA++;
                for (var depthB = 0, tempB = instB; tempB; tempB = tempB._hostParent) depthB++;
                for (; depthA - depthB > 0;) instA = instA._hostParent, depthA--;
                for (; depthB - depthA > 0;) instB = instB._hostParent, depthB--;
                for (var depth = depthA; depth--;) {
                    if (instA === instB) return instA;
                    instA = instA._hostParent, instB = instB._hostParent
                }
                return null
            }

            function isAncestor(instA, instB) {
                "_hostNode" in instA || ("production" !== process.env.NODE_ENV ? invariant(!1, "isAncestor: Invalid argument.") : _prodInvariant("35")), "_hostNode" in instB || ("production" !== process.env.NODE_ENV ? invariant(!1, "isAncestor: Invalid argument.") : _prodInvariant("35"));
                for (; instB;) {
                    if (instB === instA) return !0;
                    instB = instB._hostParent
                }
                return !1
            }

            function getParentInstance(inst) {
                return "_hostNode" in inst || ("production" !== process.env.NODE_ENV ? invariant(!1, "getParentInstance: Invalid argument.") : _prodInvariant("36")), inst._hostParent
            }

            function traverseTwoPhase(inst, fn, arg) {
                for (var path = []; inst;) path.push(inst), inst = inst._hostParent;
                var i;
                for (i = path.length; i-- > 0;) fn(path[i], "captured", arg);
                for (i = 0; i < path.length; i++) fn(path[i], "bubbled", arg)
            }

            function traverseEnterLeave(from, to, fn, argFrom, argTo) {
                for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) pathFrom.push(from), from = from._hostParent;
                for (var pathTo = []; to && to !== common;) pathTo.push(to), to = to._hostParent;
                var i;
                for (i = 0; i < pathFrom.length; i++) fn(pathFrom[i], "bubbled", argFrom);
                for (i = pathTo.length; i-- > 0;) fn(pathTo[i], "captured", argTo)
            }
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant");
            module.exports = {
                isAncestor: isAncestor,
                getLowestCommonAncestor: getLowestCommonAncestor,
                getParentInstance: getParentInstance,
                traverseTwoPhase: traverseTwoPhase,
                traverseEnterLeave: traverseEnterLeave
            }
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    180: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function handleElement(debugID, element) {
                null != element && "string" == typeof element.type && (element.type.indexOf("-") >= 0 || element.props.is || warnUnknownProperties(debugID, element))
            }
            var DOMProperty = require("./DOMProperty"),
                EventPluginRegistry = require("./EventPluginRegistry"),
                ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook"),
                warning = require("fbjs/lib/warning");
            if ("production" !== process.env.NODE_ENV) var reactProps = {
                    children: !0,
                    dangerouslySetInnerHTML: !0,
                    key: !0,
                    ref: !0,
                    autoFocus: !0,
                    defaultValue: !0,
                    valueLink: !0,
                    defaultChecked: !0,
                    checkedLink: !0,
                    innerHTML: !0,
                    suppressContentEditableWarning: !0,
                    onFocusIn: !0,
                    onFocusOut: !0
                },
                warnedProperties = {},
                validateProperty = function(tagName, name, debugID) {
                    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) return !0;
                    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) return !0;
                    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) return !0;
                    warnedProperties[name] = !0;
                    var lowerCasedName = name.toLowerCase(),
                        standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null,
                        registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
                    return null != standardName ? ("production" !== process.env.NODE_ENV && warning(!1, "Unknown DOM property %s. Did you mean %s?%s", name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)), !0) : null != registrationName && ("production" !== process.env.NODE_ENV && warning(!1, "Unknown event handler property %s. Did you mean `%s`?%s", name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)), !0)
                };
            var warnUnknownProperties = function(debugID, element) {
                    var unknownProps = [];
                    for (var key in element.props) {
                        validateProperty(element.type, key, debugID) || unknownProps.push(key)
                    }
                    var unknownPropString = unknownProps.map(function(prop) {
                        return "`" + prop + "`"
                    }).join(", ");
                    1 === unknownProps.length ? "production" !== process.env.NODE_ENV && warning(!1, "Unknown prop %s on <%s> tag. Remove this prop from the element. For details, see https://fb.me/react-unknown-prop%s", unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : unknownProps.length > 1 && "production" !== process.env.NODE_ENV && warning(!1, "Unknown props %s on <%s> tag. Remove these props from the element. For details, see https://fb.me/react-unknown-prop%s", unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID))
                },
                ReactDOMUnknownPropertyHook = {
                    onBeforeMountComponent: function(debugID, element) {
                        handleElement(debugID, element)
                    },
                    onBeforeUpdateComponent: function(debugID, element) {
                        handleElement(debugID, element)
                    }
                };
            module.exports = ReactDOMUnknownPropertyHook
        }).call(this, require("_process"))
    }, {
        "./DOMProperty": 144,
        "./EventPluginRegistry": 150,
        _process: 13,
        "fbjs/lib/warning": 66,
        "react/lib/ReactComponentTreeHook": 265
    }],
    181: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
                try {
                    fn.call(context, arg1, arg2, arg3, arg4, arg5)
                } catch (e) {
                    "production" !== process.env.NODE_ENV && warning(didHookThrowForEvent[event], "Exception thrown by hook while handling %s: %s", event, e + "\n" + e.stack), didHookThrowForEvent[event] = !0
                }
            }

            function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
                for (var i = 0; i < hooks.length; i++) {
                    var hook = hooks[i],
                        fn = hook[event];
                    fn && callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5)
                }
            }

            function clearHistory() {
                ReactComponentTreeHook.purgeUnmountedComponents(), ReactHostOperationHistoryHook.clearHistory()
            }

            function getTreeSnapshot(registeredIDs) {
                return registeredIDs.reduce(function(tree, id) {
                    var ownerID = ReactComponentTreeHook.getOwnerID(id),
                        parentID = ReactComponentTreeHook.getParentID(id);
                    return tree[id] = {
                        displayName: ReactComponentTreeHook.getDisplayName(id),
                        text: ReactComponentTreeHook.getText(id),
                        updateCount: ReactComponentTreeHook.getUpdateCount(id),
                        childIDs: ReactComponentTreeHook.getChildIDs(id),
                        ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
                        parentID: parentID
                    }, tree
                }, {})
            }

            function resetMeasurements() {
                var previousStartTime = currentFlushStartTime,
                    previousMeasurements = currentFlushMeasurements,
                    previousOperations = ReactHostOperationHistoryHook.getHistory();
                if (0 === currentFlushNesting) return currentFlushStartTime = 0, currentFlushMeasurements = [], void clearHistory();
                if (previousMeasurements.length || previousOperations.length) {
                    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
                    flushHistory.push({
                        duration: performanceNow() - previousStartTime,
                        measurements: previousMeasurements || [],
                        operations: previousOperations || [],
                        treeSnapshot: getTreeSnapshot(registeredIDs)
                    })
                }
                clearHistory(), currentFlushStartTime = performanceNow(), currentFlushMeasurements = []
            }

            function checkDebugID(debugID) {
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1] && 0 === debugID || debugID || "production" !== process.env.NODE_ENV && warning(!1, "ReactDebugTool: debugID may not be empty.")
            }

            function beginLifeCycleTimer(debugID, timerType) {
                0 !== currentFlushNesting && (currentTimerType && !lifeCycleTimerHasWarned && ("production" !== process.env.NODE_ENV && warning(!1, "There is an internal error in the React performance measurement code. Did not expect %s timer to start while %s timer is still in progress for %s instance.", timerType, currentTimerType || "no", debugID === currentTimerDebugID ? "the same" : "another"), lifeCycleTimerHasWarned = !0), currentTimerStartTime = performanceNow(), currentTimerNestedFlushDuration = 0, currentTimerDebugID = debugID, currentTimerType = timerType)
            }

            function endLifeCycleTimer(debugID, timerType) {
                0 !== currentFlushNesting && (currentTimerType === timerType || lifeCycleTimerHasWarned || ("production" !== process.env.NODE_ENV && warning(!1, "There is an internal error in the React performance measurement code. We did not expect %s timer to stop while %s timer is still in progress for %s instance. Please report this as a bug in React.", timerType, currentTimerType || "no", debugID === currentTimerDebugID ? "the same" : "another"), lifeCycleTimerHasWarned = !0), isProfiling && currentFlushMeasurements.push({
                    timerType: timerType,
                    instanceID: debugID,
                    duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
                }), currentTimerStartTime = 0, currentTimerNestedFlushDuration = 0, currentTimerDebugID = null, currentTimerType = null)
            }

            function pauseCurrentLifeCycleTimer() {
                var currentTimer = {
                    startTime: currentTimerStartTime,
                    nestedFlushStartTime: performanceNow(),
                    debugID: currentTimerDebugID,
                    timerType: currentTimerType
                };
                lifeCycleTimerStack.push(currentTimer), currentTimerStartTime = 0, currentTimerNestedFlushDuration = 0, currentTimerDebugID = null, currentTimerType = null
            }

            function resumeCurrentLifeCycleTimer() {
                var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
                    startTime = _lifeCycleTimerStack$.startTime,
                    nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
                    debugID = _lifeCycleTimerStack$.debugID,
                    timerType = _lifeCycleTimerStack$.timerType,
                    nestedFlushDuration = performanceNow() - nestedFlushStartTime;
                currentTimerStartTime = startTime, currentTimerNestedFlushDuration += nestedFlushDuration, currentTimerDebugID = debugID, currentTimerType = timerType
            }

            function shouldMark(debugID) {
                if (!isProfiling || !canUsePerformanceMeasure) return !1;
                var element = ReactComponentTreeHook.getElement(debugID);
                return null != element && "object" == typeof element && !("string" == typeof element.type)
            }

            function markBegin(debugID, markType) {
                if (shouldMark(debugID)) {
                    var markName = debugID + "::" + markType;
                    lastMarkTimeStamp = performanceNow(), performance.mark(markName)
                }
            }

            function markEnd(debugID, markType) {
                if (shouldMark(debugID)) {
                    var markName = debugID + "::" + markType,
                        displayName = ReactComponentTreeHook.getDisplayName(debugID) || "Unknown";
                    if (performanceNow() - lastMarkTimeStamp > .1) {
                        var measurementName = displayName + " [" + markType + "]";
                        performance.measure(measurementName, markName)
                    }
                    performance.clearMarks(markName), performance.clearMeasures(measurementName)
                }
            }
            var ReactInvalidSetStateWarningHook = require("./ReactInvalidSetStateWarningHook"),
                ReactHostOperationHistoryHook = require("./ReactHostOperationHistoryHook"),
                ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook"),
                ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
                performanceNow = require("fbjs/lib/performanceNow"),
                warning = require("fbjs/lib/warning"),
                hooks = [],
                didHookThrowForEvent = {},
                isProfiling = !1,
                flushHistory = [],
                lifeCycleTimerStack = [],
                currentFlushNesting = 0,
                currentFlushMeasurements = [],
                currentFlushStartTime = 0,
                currentTimerDebugID = null,
                currentTimerStartTime = 0,
                currentTimerNestedFlushDuration = 0,
                currentTimerType = null,
                lifeCycleTimerHasWarned = !1,
                lastMarkTimeStamp = 0,
                canUsePerformanceMeasure = "undefined" != typeof performance && "function" == typeof performance.mark && "function" == typeof performance.clearMarks && "function" == typeof performance.measure && "function" == typeof performance.clearMeasures,
                ReactDebugTool = {
                    addHook: function(hook) {
                        hooks.push(hook)
                    },
                    removeHook: function(hook) {
                        for (var i = 0; i < hooks.length; i++) hooks[i] === hook && (hooks.splice(i, 1), i--)
                    },
                    isProfiling: function() {
                        return isProfiling
                    },
                    beginProfiling: function() {
                        isProfiling || (isProfiling = !0, flushHistory.length = 0, resetMeasurements(), ReactDebugTool.addHook(ReactHostOperationHistoryHook))
                    },
                    endProfiling: function() {
                        isProfiling && (isProfiling = !1, resetMeasurements(), ReactDebugTool.removeHook(ReactHostOperationHistoryHook))
                    },
                    getFlushHistory: function() {
                        return flushHistory
                    },
                    onBeginFlush: function() {
                        currentFlushNesting++, resetMeasurements(), pauseCurrentLifeCycleTimer(), emitEvent("onBeginFlush")
                    },
                    onEndFlush: function() {
                        resetMeasurements(), currentFlushNesting--, resumeCurrentLifeCycleTimer(), emitEvent("onEndFlush")
                    },
                    onBeginLifeCycleTimer: function(debugID, timerType) {
                        checkDebugID(debugID), emitEvent("onBeginLifeCycleTimer", debugID, timerType), markBegin(debugID, timerType), beginLifeCycleTimer(debugID, timerType)
                    },
                    onEndLifeCycleTimer: function(debugID, timerType) {
                        checkDebugID(debugID), endLifeCycleTimer(debugID, timerType), markEnd(debugID, timerType), emitEvent("onEndLifeCycleTimer", debugID, timerType)
                    },
                    onBeginProcessingChildContext: function() {
                        emitEvent("onBeginProcessingChildContext")
                    },
                    onEndProcessingChildContext: function() {
                        emitEvent("onEndProcessingChildContext")
                    },
                    onHostOperation: function(operation) {
                        checkDebugID(operation.instanceID), emitEvent("onHostOperation", operation)
                    },
                    onSetState: function() {
                        emitEvent("onSetState")
                    },
                    onSetChildren: function(debugID, childDebugIDs) {
                        checkDebugID(debugID), childDebugIDs.forEach(checkDebugID), emitEvent("onSetChildren", debugID, childDebugIDs)
                    },
                    onBeforeMountComponent: function(debugID, element, parentDebugID) {
                        checkDebugID(debugID), checkDebugID(parentDebugID, !0), emitEvent("onBeforeMountComponent", debugID, element, parentDebugID), markBegin(debugID, "mount")
                    },
                    onMountComponent: function(debugID) {
                        checkDebugID(debugID), markEnd(debugID, "mount"), emitEvent("onMountComponent", debugID)
                    },
                    onBeforeUpdateComponent: function(debugID, element) {
                        checkDebugID(debugID), emitEvent("onBeforeUpdateComponent", debugID, element), markBegin(debugID, "update")
                    },
                    onUpdateComponent: function(debugID) {
                        checkDebugID(debugID), markEnd(debugID, "update"), emitEvent("onUpdateComponent", debugID)
                    },
                    onBeforeUnmountComponent: function(debugID) {
                        checkDebugID(debugID), emitEvent("onBeforeUnmountComponent", debugID), markBegin(debugID, "unmount")
                    },
                    onUnmountComponent: function(debugID) {
                        checkDebugID(debugID), markEnd(debugID, "unmount"), emitEvent("onUnmountComponent", debugID)
                    },
                    onTestEvent: function() {
                        emitEvent("onTestEvent")
                    }
                };
            ReactDebugTool.addDevtool = ReactDebugTool.addHook, ReactDebugTool.removeDevtool = ReactDebugTool.removeHook, ReactDebugTool.addHook(ReactInvalidSetStateWarningHook), ReactDebugTool.addHook(ReactComponentTreeHook), /[?&]react_perf\b/.test(ExecutionEnvironment.canUseDOM && window.location.href || "") && ReactDebugTool.beginProfiling(), module.exports = ReactDebugTool
        }).call(this, require("_process"))
    }, {
        "./ReactHostOperationHistoryHook": 191,
        "./ReactInvalidSetStateWarningHook": 196,
        _process: 13,
        "fbjs/lib/ExecutionEnvironment": 45,
        "fbjs/lib/performanceNow": 64,
        "fbjs/lib/warning": 66,
        "react/lib/ReactComponentTreeHook": 265
    }],
    182: [function(require, module, exports) {
        "use strict";

        function ReactDefaultBatchingStrategyTransaction() {
            this.reinitializeTransaction()
        }
        var _assign = require("object-assign"),
            ReactUpdates = require("./ReactUpdates"),
            Transaction = require("./Transaction"),
            emptyFunction = require("fbjs/lib/emptyFunction"),
            RESET_BATCHED_UPDATES = {
                initialize: emptyFunction,
                close: function() {
                    ReactDefaultBatchingStrategy.isBatchingUpdates = !1
                }
            },
            FLUSH_BATCHED_UPDATES = {
                initialize: emptyFunction,
                close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
            },
            TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
        _assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
            getTransactionWrappers: function() {
                return TRANSACTION_WRAPPERS
            }
        });
        var transaction = new ReactDefaultBatchingStrategyTransaction,
            ReactDefaultBatchingStrategy = {
                isBatchingUpdates: !1,
                batchedUpdates: function(callback, a, b, c, d, e) {
                    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
                    return ReactDefaultBatchingStrategy.isBatchingUpdates = !0, alreadyBatchingUpdates ? callback(a, b, c, d, e) : transaction.perform(callback, null, a, b, c, d, e)
                }
            };
        module.exports = ReactDefaultBatchingStrategy
    }, {
        "./ReactUpdates": 210,
        "./Transaction": 228,
        "fbjs/lib/emptyFunction": 51,
        "object-assign": 127
    }],
    183: [function(require, module, exports) {
        "use strict";

        function inject() {
            alreadyInjected || (alreadyInjected = !0, ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener), ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder), ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree), ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal), ReactInjection.EventPluginHub.injectEventPluginsByName({
                SimpleEventPlugin: SimpleEventPlugin,
                EnterLeaveEventPlugin: EnterLeaveEventPlugin,
                ChangeEventPlugin: ChangeEventPlugin,
                SelectEventPlugin: SelectEventPlugin,
                BeforeInputEventPlugin: BeforeInputEventPlugin
            }), ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent), ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent), ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig), ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig), ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig), ReactInjection.EmptyComponent.injectEmptyComponentFactory(function(instantiate) {
                return new ReactDOMEmptyComponent(instantiate)
            }), ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction), ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy), ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment))
        }
        var ARIADOMPropertyConfig = require("./ARIADOMPropertyConfig"),
            BeforeInputEventPlugin = require("./BeforeInputEventPlugin"),
            ChangeEventPlugin = require("./ChangeEventPlugin"),
            DefaultEventPluginOrder = require("./DefaultEventPluginOrder"),
            EnterLeaveEventPlugin = require("./EnterLeaveEventPlugin"),
            HTMLDOMPropertyConfig = require("./HTMLDOMPropertyConfig"),
            ReactComponentBrowserEnvironment = require("./ReactComponentBrowserEnvironment"),
            ReactDOMComponent = require("./ReactDOMComponent"),
            ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            ReactDOMEmptyComponent = require("./ReactDOMEmptyComponent"),
            ReactDOMTreeTraversal = require("./ReactDOMTreeTraversal"),
            ReactDOMTextComponent = require("./ReactDOMTextComponent"),
            ReactDefaultBatchingStrategy = require("./ReactDefaultBatchingStrategy"),
            ReactEventListener = require("./ReactEventListener"),
            ReactInjection = require("./ReactInjection"),
            ReactReconcileTransaction = require("./ReactReconcileTransaction"),
            SVGDOMPropertyConfig = require("./SVGDOMPropertyConfig"),
            SelectEventPlugin = require("./SelectEventPlugin"),
            SimpleEventPlugin = require("./SimpleEventPlugin"),
            alreadyInjected = !1;
        module.exports = {
            inject: inject
        }
    }, {
        "./ARIADOMPropertyConfig": 134,
        "./BeforeInputEventPlugin": 136,
        "./ChangeEventPlugin": 140,
        "./DefaultEventPluginOrder": 147,
        "./EnterLeaveEventPlugin": 148,
        "./HTMLDOMPropertyConfig": 154,
        "./ReactComponentBrowserEnvironment": 160,
        "./ReactDOMComponent": 164,
        "./ReactDOMComponentTree": 166,
        "./ReactDOMEmptyComponent": 168,
        "./ReactDOMTextComponent": 177,
        "./ReactDOMTreeTraversal": 179,
        "./ReactDefaultBatchingStrategy": 182,
        "./ReactEventListener": 188,
        "./ReactInjection": 192,
        "./ReactReconcileTransaction": 204,
        "./SVGDOMPropertyConfig": 212,
        "./SelectEventPlugin": 213,
        "./SimpleEventPlugin": 214
    }],
    184: [function(require, module, exports) {
        "use strict";
        var REACT_ELEMENT_TYPE = "function" == typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
        module.exports = REACT_ELEMENT_TYPE
    }, {}],
    185: [function(require, module, exports) {
        "use strict";
        var emptyComponentFactory, ReactEmptyComponentInjection = {
                injectEmptyComponentFactory: function(factory) {
                    emptyComponentFactory = factory
                }
            },
            ReactEmptyComponent = {
                create: function(instantiate) {
                    return emptyComponentFactory(instantiate)
                }
            };
        ReactEmptyComponent.injection = ReactEmptyComponentInjection, module.exports = ReactEmptyComponent
    }, {}],
    186: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function invokeGuardedCallback(name, func, a) {
                try {
                    func(a)
                } catch (x) {
                    null === caughtError && (caughtError = x)
                }
            }
            var caughtError = null,
                ReactErrorUtils = {
                    invokeGuardedCallback: invokeGuardedCallback,
                    invokeGuardedCallbackWithCatch: invokeGuardedCallback,
                    rethrowCaughtError: function() {
                        if (caughtError) {
                            var error = caughtError;
                            throw caughtError = null, error
                        }
                    }
                };
            if ("production" !== process.env.NODE_ENV && "undefined" != typeof window && "function" == typeof window.dispatchEvent && "undefined" != typeof document && "function" == typeof document.createEvent) {
                var fakeNode = document.createElement("react");
                ReactErrorUtils.invokeGuardedCallback = function(name, func, a) {
                    var boundFunc = func.bind(null, a),
                        evtType = "react-" + name;
                    fakeNode.addEventListener(evtType, boundFunc, !1);
                    var evt = document.createEvent("Event");
                    evt.initEvent(evtType, !1, !1), fakeNode.dispatchEvent(evt), fakeNode.removeEventListener(evtType, boundFunc, !1)
                }
            }
            module.exports = ReactErrorUtils
        }).call(this, require("_process"))
    }, {
        _process: 13
    }],
    187: [function(require, module, exports) {
        "use strict";

        function runEventQueueInBatch(events) {
            EventPluginHub.enqueueEvents(events), EventPluginHub.processEventQueue(!1)
        }
        var EventPluginHub = require("./EventPluginHub"),
            ReactEventEmitterMixin = {
                handleTopLevel: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                    runEventQueueInBatch(EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget))
                }
            };
        module.exports = ReactEventEmitterMixin
    }, {
        "./EventPluginHub": 149
    }],
    188: [function(require, module, exports) {
        "use strict";

        function findParent(inst) {
            for (; inst._hostParent;) inst = inst._hostParent;
            var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst),
                container = rootNode.parentNode;
            return ReactDOMComponentTree.getClosestInstanceFromNode(container)
        }

        function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
            this.topLevelType = topLevelType, this.nativeEvent = nativeEvent, this.ancestors = []
        }

        function handleTopLevelImpl(bookKeeping) {
            var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent),
                targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget),
                ancestor = targetInst;
            do {
                bookKeeping.ancestors.push(ancestor), ancestor = ancestor && findParent(ancestor)
            } while (ancestor);
            for (var i = 0; i < bookKeeping.ancestors.length; i++) targetInst = bookKeeping.ancestors[i], ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent))
        }

        function scrollValueMonitor(cb) {
            cb(getUnboundedScrollPosition(window))
        }
        var _assign = require("object-assign"),
            EventListener = require("fbjs/lib/EventListener"),
            ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            PooledClass = require("./PooledClass"),
            ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            ReactUpdates = require("./ReactUpdates"),
            getEventTarget = require("./getEventTarget"),
            getUnboundedScrollPosition = require("fbjs/lib/getUnboundedScrollPosition");
        _assign(TopLevelCallbackBookKeeping.prototype, {
            destructor: function() {
                this.topLevelType = null, this.nativeEvent = null, this.ancestors.length = 0
            }
        }), PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
        var ReactEventListener = {
            _enabled: !0,
            _handleTopLevel: null,
            WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
            setHandleTopLevel: function(handleTopLevel) {
                ReactEventListener._handleTopLevel = handleTopLevel
            },
            setEnabled: function(enabled) {
                ReactEventListener._enabled = !!enabled
            },
            isEnabled: function() {
                return ReactEventListener._enabled
            },
            trapBubbledEvent: function(topLevelType, handlerBaseName, element) {
                return element ? EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType)) : null
            },
            trapCapturedEvent: function(topLevelType, handlerBaseName, element) {
                return element ? EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType)) : null
            },
            monitorScrollValue: function(refresh) {
                var callback = scrollValueMonitor.bind(null, refresh);
                EventListener.listen(window, "scroll", callback)
            },
            dispatchEvent: function(topLevelType, nativeEvent) {
                if (ReactEventListener._enabled) {
                    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
                    try {
                        ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping)
                    } finally {
                        TopLevelCallbackBookKeeping.release(bookKeeping)
                    }
                }
            }
        };
        module.exports = ReactEventListener
    }, {
        "./PooledClass": 157,
        "./ReactDOMComponentTree": 166,
        "./ReactUpdates": 210,
        "./getEventTarget": 242,
        "fbjs/lib/EventListener": 44,
        "fbjs/lib/ExecutionEnvironment": 45,
        "fbjs/lib/getUnboundedScrollPosition": 56,
        "object-assign": 127
    }],
    189: [function(require, module, exports) {
        "use strict";
        var ReactFeatureFlags = {
            logTopLevelRenders: !1
        };
        module.exports = ReactFeatureFlags
    }, {}],
    190: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function createInternalComponent(element) {
                return genericComponentClass || ("production" !== process.env.NODE_ENV ? invariant(!1, "There is no registered component for the tag %s", element.type) : _prodInvariant("111", element.type)), new genericComponentClass(element)
            }

            function createInstanceForText(text) {
                return new textComponentClass(text)
            }

            function isTextComponent(component) {
                return component instanceof textComponentClass
            }
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant"),
                genericComponentClass = null,
                textComponentClass = null,
                ReactHostComponentInjection = {
                    injectGenericComponentClass: function(componentClass) {
                        genericComponentClass = componentClass
                    },
                    injectTextComponentClass: function(componentClass) {
                        textComponentClass = componentClass
                    }
                },
                ReactHostComponent = {
                    createInternalComponent: createInternalComponent,
                    createInstanceForText: createInstanceForText,
                    isTextComponent: isTextComponent,
                    injection: ReactHostComponentInjection
                };
            module.exports = ReactHostComponent
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    191: [function(require, module, exports) {
        "use strict";
        var history = [],
            ReactHostOperationHistoryHook = {
                onHostOperation: function(operation) {
                    history.push(operation)
                },
                clearHistory: function() {
                    ReactHostOperationHistoryHook._preventClearing || (history = [])
                },
                getHistory: function() {
                    return history
                }
            };
        module.exports = ReactHostOperationHistoryHook
    }, {}],
    192: [function(require, module, exports) {
        "use strict";
        var DOMProperty = require("./DOMProperty"),
            EventPluginHub = require("./EventPluginHub"),
            EventPluginUtils = require("./EventPluginUtils"),
            ReactComponentEnvironment = require("./ReactComponentEnvironment"),
            ReactEmptyComponent = require("./ReactEmptyComponent"),
            ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter"),
            ReactHostComponent = require("./ReactHostComponent"),
            ReactUpdates = require("./ReactUpdates"),
            ReactInjection = {
                Component: ReactComponentEnvironment.injection,
                DOMProperty: DOMProperty.injection,
                EmptyComponent: ReactEmptyComponent.injection,
                EventPluginHub: EventPluginHub.injection,
                EventPluginUtils: EventPluginUtils.injection,
                EventEmitter: ReactBrowserEventEmitter.injection,
                HostComponent: ReactHostComponent.injection,
                Updates: ReactUpdates.injection
            };
        module.exports = ReactInjection
    }, {
        "./DOMProperty": 144,
        "./EventPluginHub": 149,
        "./EventPluginUtils": 151,
        "./ReactBrowserEventEmitter": 158,
        "./ReactComponentEnvironment": 161,
        "./ReactEmptyComponent": 185,
        "./ReactHostComponent": 190,
        "./ReactUpdates": 210
    }],
    193: [function(require, module, exports) {
        "use strict";

        function isInDocument(node) {
            return containsNode(document.documentElement, node)
        }
        var ReactDOMSelection = require("./ReactDOMSelection"),
            containsNode = require("fbjs/lib/containsNode"),
            focusNode = require("fbjs/lib/focusNode"),
            getActiveElement = require("fbjs/lib/getActiveElement"),
            ReactInputSelection = {
                hasSelectionCapabilities: function(elem) {
                    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
                    return nodeName && ("input" === nodeName && "text" === elem.type || "textarea" === nodeName || "true" === elem.contentEditable)
                },
                getSelectionInformation: function() {
                    var focusedElem = getActiveElement();
                    return {
                        focusedElem: focusedElem,
                        selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
                    }
                },
                restoreSelection: function(priorSelectionInformation) {
                    var curFocusedElem = getActiveElement(),
                        priorFocusedElem = priorSelectionInformation.focusedElem,
                        priorSelectionRange = priorSelectionInformation.selectionRange;
                    curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem) && (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem) && ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange), focusNode(priorFocusedElem))
                },
                getSelection: function(input) {
                    var selection;
                    if ("selectionStart" in input) selection = {
                        start: input.selectionStart,
                        end: input.selectionEnd
                    };
                    else if (document.selection && input.nodeName && "input" === input.nodeName.toLowerCase()) {
                        var range = document.selection.createRange();
                        range.parentElement() === input && (selection = {
                            start: -range.moveStart("character", -input.value.length),
                            end: -range.moveEnd("character", -input.value.length)
                        })
                    } else selection = ReactDOMSelection.getOffsets(input);
                    return selection || {
                            start: 0,
                            end: 0
                        }
                },
                setSelection: function(input, offsets) {
                    var start = offsets.start,
                        end = offsets.end;
                    if (void 0 === end && (end = start), "selectionStart" in input) input.selectionStart = start, input.selectionEnd = Math.min(end, input.value.length);
                    else if (document.selection && input.nodeName && "input" === input.nodeName.toLowerCase()) {
                        var range = input.createTextRange();
                        range.collapse(!0), range.moveStart("character", start), range.moveEnd("character", end - start), range.select()
                    } else ReactDOMSelection.setOffsets(input, offsets)
                }
            };
        module.exports = ReactInputSelection
    }, {
        "./ReactDOMSelection": 176,
        "fbjs/lib/containsNode": 48,
        "fbjs/lib/focusNode": 53,
        "fbjs/lib/getActiveElement": 54
    }],
    194: [function(require, module, exports) {
        "use strict";
        var ReactInstanceMap = {
            remove: function(key) {
                key._reactInternalInstance = void 0
            },
            get: function(key) {
                return key._reactInternalInstance
            },
            has: function(key) {
                return void 0 !== key._reactInternalInstance
            },
            set: function(key, value) {
                key._reactInternalInstance = value
            }
        };
        module.exports = ReactInstanceMap
    }, {}],
    195: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var debugTool = null;
            if ("production" !== process.env.NODE_ENV) {
                debugTool = require("./ReactDebugTool")
            }
            module.exports = {
                debugTool: debugTool
            }
        }).call(this, require("_process"))
    }, {
        "./ReactDebugTool": 181,
        _process: 13
    }],
    196: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var warning = require("fbjs/lib/warning");
            if ("production" !== process.env.NODE_ENV) var processingChildContext = !1,
                warnInvalidSetState = function() {
                    "production" !== process.env.NODE_ENV && warning(!processingChildContext, "setState(...): Cannot call setState() inside getChildContext()")
                };
            var ReactInvalidSetStateWarningHook = {
                onBeginProcessingChildContext: function() {
                    processingChildContext = !0
                },
                onEndProcessingChildContext: function() {
                    processingChildContext = !1
                },
                onSetState: function() {
                    warnInvalidSetState()
                }
            };
            module.exports = ReactInvalidSetStateWarningHook
        }).call(this, require("_process"))
    }, {
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    197: [function(require, module, exports) {
        "use strict";
        var adler32 = require("./adler32"),
            COMMENT_START = /^<\!\-\-/,
            ReactMarkupChecksum = {
                CHECKSUM_ATTR_NAME: "data-react-checksum",
                addChecksumToMarkup: function(markup) {
                    var checksum = adler32(markup);
                    return COMMENT_START.test(markup) ? markup : markup.replace(/\/?>/, " " + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&')
                },
                canReuseMarkup: function(markup, element) {
                    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
                    return existingChecksum = existingChecksum && parseInt(existingChecksum, 10), adler32(markup) === existingChecksum
                }
            };
        module.exports = ReactMarkupChecksum
    }, {
        "./adler32": 231
    }],
    198: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function firstDifferenceIndex(string1, string2) {
                for (var minLen = Math.min(string1.length, string2.length), i = 0; i < minLen; i++)
                    if (string1.charAt(i) !== string2.charAt(i)) return i;
                return string1.length === string2.length ? -1 : minLen
            }

            function getReactRootElementInContainer(container) {
                return container ? container.nodeType === DOC_NODE_TYPE ? container.documentElement : container.firstChild : null
            }

            function internalGetID(node) {
                return node.getAttribute && node.getAttribute(ATTR_NAME) || ""
            }

            function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
                if (ReactFeatureFlags.logTopLevelRenders) {
                    var wrappedElement = wrapperInstance._currentElement.props.child,
                        type = wrappedElement.type;
                    "React mount: " + ("string" == typeof type ? type : type.displayName || type.name)
                }
                var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0);
                wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance, ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction)
            }

            function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
                var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(!shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
                transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context), ReactUpdates.ReactReconcileTransaction.release(transaction)
            }

            function unmountComponentFromNode(instance, container, safely) {
                for ("production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onBeginFlush(), ReactReconciler.unmountComponent(instance, safely), "production" !== process.env.NODE_ENV && ReactInstrumentation.debugTool.onEndFlush(), container.nodeType === DOC_NODE_TYPE && (container = container.documentElement); container.lastChild;) container.removeChild(container.lastChild)
            }

            function hasNonRootReactChild(container) {
                var rootEl = getReactRootElementInContainer(container);
                if (rootEl) {
                    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
                    return !(!inst || !inst._hostParent)
                }
            }

            function nodeIsRenderedByOtherInstance(container) {
                var rootEl = getReactRootElementInContainer(container);
                return !(!rootEl || !isReactNode(rootEl) || ReactDOMComponentTree.getInstanceFromNode(rootEl))
            }

            function isValidContainer(node) {
                return !(!node || node.nodeType !== ELEMENT_NODE_TYPE && node.nodeType !== DOC_NODE_TYPE && node.nodeType !== DOCUMENT_FRAGMENT_NODE_TYPE)
            }

            function isReactNode(node) {
                return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME))
            }

            function getHostRootInstanceInContainer(container) {
                var rootEl = getReactRootElementInContainer(container),
                    prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
                return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null
            }

            function getTopLevelWrapperInContainer(container) {
                var root = getHostRootInstanceInContainer(container);
                return root ? root._hostContainerInfo._topLevelWrapper : null
            }
            var _prodInvariant = require("./reactProdInvariant"),
                DOMLazyTree = require("./DOMLazyTree"),
                DOMProperty = require("./DOMProperty"),
                React = require("react/lib/React"),
                ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter"),
                ReactCurrentOwner = require("react/lib/ReactCurrentOwner"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactDOMContainerInfo = require("./ReactDOMContainerInfo"),
                ReactDOMFeatureFlags = require("./ReactDOMFeatureFlags"),
                ReactFeatureFlags = require("./ReactFeatureFlags"),
                ReactInstanceMap = require("./ReactInstanceMap"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                ReactMarkupChecksum = require("./ReactMarkupChecksum"),
                ReactReconciler = require("./ReactReconciler"),
                ReactUpdateQueue = require("./ReactUpdateQueue"),
                ReactUpdates = require("./ReactUpdates"),
                emptyObject = require("fbjs/lib/emptyObject"),
                instantiateReactComponent = require("./instantiateReactComponent"),
                invariant = require("fbjs/lib/invariant"),
                setInnerHTML = require("./setInnerHTML"),
                shouldUpdateReactComponent = require("./shouldUpdateReactComponent"),
                warning = require("fbjs/lib/warning"),
                ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME,
                ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME,
                ELEMENT_NODE_TYPE = 1,
                DOC_NODE_TYPE = 9,
                DOCUMENT_FRAGMENT_NODE_TYPE = 11,
                instancesByReactRootID = {},
                topLevelRootCounter = 1,
                TopLevelWrapper = function() {
                    this.rootID = topLevelRootCounter++
                };
            TopLevelWrapper.prototype.isReactComponent = {}, "production" !== process.env.NODE_ENV && (TopLevelWrapper.displayName = "TopLevelWrapper"), TopLevelWrapper.prototype.render = function() {
                return this.props.child
            }, TopLevelWrapper.isReactTopLevelWrapper = !0;
            var ReactMount = {
                TopLevelWrapper: TopLevelWrapper,
                _instancesByReactRootID: instancesByReactRootID,
                scrollMonitor: function(container, renderCallback) {
                    renderCallback()
                },
                _updateRootComponent: function(prevComponent, nextElement, nextContext, container, callback) {
                    return ReactMount.scrollMonitor(container, function() {
                        ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext), callback && ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback)
                    }), prevComponent
                },
                _renderNewRootComponent: function(nextElement, container, shouldReuseMarkup, context) {
                    "production" !== process.env.NODE_ENV && warning(null == ReactCurrentOwner.current, "_renderNewRootComponent(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. Check the render method of %s.", ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || "ReactCompositeComponent"), isValidContainer(container) || ("production" !== process.env.NODE_ENV ? invariant(!1, "_registerComponent(...): Target container is not a DOM element.") : _prodInvariant("37")), ReactBrowserEventEmitter.ensureScrollValueMonitoring();
                    var componentInstance = instantiateReactComponent(nextElement, !1);
                    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
                    var wrapperID = componentInstance._instance.rootID;
                    return instancesByReactRootID[wrapperID] = componentInstance, componentInstance
                },
                renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
                    return null != parentComponent && ReactInstanceMap.has(parentComponent) || ("production" !== process.env.NODE_ENV ? invariant(!1, "parentComponent must be a valid React Component") : _prodInvariant("38")), ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback)
                },
                _renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
                    ReactUpdateQueue.validateCallback(callback, "ReactDOM.render"), React.isValidElement(nextElement) || ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactDOM.render(): Invalid component element.%s", "string" == typeof nextElement ? " Instead of passing a string like 'div', pass React.createElement('div') or <div />." : "function" == typeof nextElement ? " Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />." : null != nextElement && void 0 !== nextElement.props ? " This may be caused by unintentionally loading two independent copies of React." : "") : _prodInvariant("39", "string" == typeof nextElement ? " Instead of passing a string like 'div', pass React.createElement('div') or <div />." : "function" == typeof nextElement ? " Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />." : null != nextElement && void 0 !== nextElement.props ? " This may be caused by unintentionally loading two independent copies of React." : "")), "production" !== process.env.NODE_ENV && warning(!container || !container.tagName || "BODY" !== container.tagName.toUpperCase(), "render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
                    var nextContext, nextWrappedElement = React.createElement(TopLevelWrapper, {
                        child: nextElement
                    });
                    if (parentComponent) {
                        var parentInst = ReactInstanceMap.get(parentComponent);
                        nextContext = parentInst._processChildContext(parentInst._context)
                    } else nextContext = emptyObject;
                    var prevComponent = getTopLevelWrapperInContainer(container);
                    if (prevComponent) {
                        var prevWrappedElement = prevComponent._currentElement,
                            prevElement = prevWrappedElement.props.child;
                        if (shouldUpdateReactComponent(prevElement, nextElement)) {
                            var publicInst = prevComponent._renderedComponent.getPublicInstance(),
                                updatedCallback = callback && function() {
                                        callback.call(publicInst)
                                    };
                            return ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback), publicInst
                        }
                        ReactMount.unmountComponentAtNode(container)
                    }
                    var reactRootElement = getReactRootElementInContainer(container),
                        containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement),
                        containerHasNonRootReactChild = hasNonRootReactChild(container);
                    if ("production" !== process.env.NODE_ENV && ("production" !== process.env.NODE_ENV && warning(!containerHasNonRootReactChild, "render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), !containerHasReactMarkup || reactRootElement.nextSibling))
                        for (var rootElementSibling = reactRootElement; rootElementSibling;) {
                            if (internalGetID(rootElementSibling)) {
                                "production" !== process.env.NODE_ENV && warning(!1, "render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.");
                                break
                            }
                            rootElementSibling = rootElementSibling.nextSibling
                        }
                    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild,
                        component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
                    return callback && callback.call(component), component
                },
                render: function(nextElement, container, callback) {
                    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback)
                },
                unmountComponentAtNode: function(container) {
                    "production" !== process.env.NODE_ENV && warning(null == ReactCurrentOwner.current, "unmountComponentAtNode(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. Check the render method of %s.", ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || "ReactCompositeComponent"), isValidContainer(container) || ("production" !== process.env.NODE_ENV ? invariant(!1, "unmountComponentAtNode(...): Target container is not a DOM element.") : _prodInvariant("40")), "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
                    var prevComponent = getTopLevelWrapperInContainer(container);
                    if (!prevComponent) {
                        var containerHasNonRootReactChild = hasNonRootReactChild(container),
                            isContainerReactRoot = 1 === container.nodeType && container.hasAttribute(ROOT_ATTR_NAME);
                        return "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component."), !1
                    }
                    return delete instancesByReactRootID[prevComponent._instance.rootID], ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, !1), !0
                },
                _mountImageIntoNode: function(markup, container, instance, shouldReuseMarkup, transaction) {
                    if (isValidContainer(container) || ("production" !== process.env.NODE_ENV ? invariant(!1, "mountComponentIntoNode(...): Target container is not valid.") : _prodInvariant("41")), shouldReuseMarkup) {
                        var rootElement = getReactRootElementInContainer(container);
                        if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) return void ReactDOMComponentTree.precacheNode(instance, rootElement);
                        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
                        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
                        var rootMarkup = rootElement.outerHTML;
                        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
                        var normalizedMarkup = markup;
                        if ("production" !== process.env.NODE_ENV) {
                            var normalizer;
                            container.nodeType === ELEMENT_NODE_TYPE ? (normalizer = document.createElement("div"), normalizer.innerHTML = markup, normalizedMarkup = normalizer.innerHTML) : (normalizer = document.createElement("iframe"), document.body.appendChild(normalizer), normalizer.contentDocument.write(markup), normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML, document.body.removeChild(normalizer))
                        }
                        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup),
                            difference = " (client) " + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + "\n (server) " + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
                        container.nodeType === DOC_NODE_TYPE && ("production" !== process.env.NODE_ENV ? invariant(!1, "You're trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s", difference) : _prodInvariant("42", difference)), "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(!1, "React attempted to reuse markup in a container but the checksum was invalid. This generally means that you are using server rendering and the markup generated on the server was not what the client was expecting. React injected new markup to compensate which works but you have lost many of the benefits of server rendering. Instead, figure out why the markup being generated is different on the client or server:\n%s", difference)
                    }
                    if (container.nodeType === DOC_NODE_TYPE && ("production" !== process.env.NODE_ENV ? invariant(!1, "You're trying to render a component to the document but you didn't use server rendering. We can't do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.") : _prodInvariant("43")), transaction.useCreateElement) {
                        for (; container.lastChild;) container.removeChild(container.lastChild);
                        DOMLazyTree.insertTreeBefore(container, markup, null)
                    } else setInnerHTML(container, markup), ReactDOMComponentTree.precacheNode(instance, container.firstChild);
                    if ("production" !== process.env.NODE_ENV) {
                        var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
                        0 !== hostNode._debugID && ReactInstrumentation.debugTool.onHostOperation({
                            instanceID: hostNode._debugID,
                            type: "mount",
                            payload: markup.toString()
                        })
                    }
                }
            };
            module.exports = ReactMount
        }).call(this, require("_process"))
    }, {
        "./DOMLazyTree": 142,
        "./DOMProperty": 144,
        "./ReactBrowserEventEmitter": 158,
        "./ReactDOMComponentTree": 166,
        "./ReactDOMContainerInfo": 167,
        "./ReactDOMFeatureFlags": 169,
        "./ReactFeatureFlags": 189,
        "./ReactInstanceMap": 194,
        "./ReactInstrumentation": 195,
        "./ReactMarkupChecksum": 197,
        "./ReactReconciler": 205,
        "./ReactUpdateQueue": 209,
        "./ReactUpdates": 210,
        "./instantiateReactComponent": 248,
        "./reactProdInvariant": 252,
        "./setInnerHTML": 254,
        "./shouldUpdateReactComponent": 256,
        _process: 13,
        "fbjs/lib/emptyObject": 52,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "react/lib/React": 261,
        "react/lib/ReactCurrentOwner": 266
    }],
    199: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function makeInsertMarkup(markup, afterNode, toIndex) {
                return {
                    type: "INSERT_MARKUP",
                    content: markup,
                    fromIndex: null,
                    fromNode: null,
                    toIndex: toIndex,
                    afterNode: afterNode
                }
            }

            function makeMove(child, afterNode, toIndex) {
                return {
                    type: "MOVE_EXISTING",
                    content: null,
                    fromIndex: child._mountIndex,
                    fromNode: ReactReconciler.getHostNode(child),
                    toIndex: toIndex,
                    afterNode: afterNode
                }
            }

            function makeRemove(child, node) {
                return {
                    type: "REMOVE_NODE",
                    content: null,
                    fromIndex: child._mountIndex,
                    fromNode: node,
                    toIndex: null,
                    afterNode: null
                }
            }

            function makeSetMarkup(markup) {
                return {
                    type: "SET_MARKUP",
                    content: markup,
                    fromIndex: null,
                    fromNode: null,
                    toIndex: null,
                    afterNode: null
                }
            }

            function makeTextContent(textContent) {
                return {
                    type: "TEXT_CONTENT",
                    content: textContent,
                    fromIndex: null,
                    fromNode: null,
                    toIndex: null,
                    afterNode: null
                }
            }

            function enqueue(queue, update) {
                return update && (queue = queue || [], queue.push(update)), queue
            }

            function processQueue(inst, updateQueue) {
                ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue)
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactComponentEnvironment = require("./ReactComponentEnvironment"),
                ReactInstanceMap = require("./ReactInstanceMap"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                ReactCurrentOwner = require("react/lib/ReactCurrentOwner"),
                ReactReconciler = require("./ReactReconciler"),
                ReactChildReconciler = require("./ReactChildReconciler"),
                emptyFunction = require("fbjs/lib/emptyFunction"),
                flattenChildren = require("./flattenChildren"),
                invariant = require("fbjs/lib/invariant"),
                setChildrenForInstrumentation = emptyFunction;
            if ("production" !== process.env.NODE_ENV) {
                var getDebugID = function(inst) {
                    if (!inst._debugID) {
                        var internal;
                        (internal = ReactInstanceMap.get(inst)) && (inst = internal)
                    }
                    return inst._debugID
                };
                setChildrenForInstrumentation = function(children) {
                    var debugID = getDebugID(this);
                    0 !== debugID && ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function(key) {
                        return children[key]._debugID
                    }) : [])
                }
            }
            var ReactMultiChild = {
                Mixin: {
                    _reconcilerInstantiateChildren: function(nestedChildren, transaction, context) {
                        if ("production" !== process.env.NODE_ENV) {
                            var selfDebugID = getDebugID(this);
                            if (this._currentElement) try {
                                return ReactCurrentOwner.current = this._currentElement._owner, ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID)
                            } finally {
                                ReactCurrentOwner.current = null
                            }
                        }
                        return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context)
                    },
                    _reconcilerUpdateChildren: function(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
                        var nextChildren, selfDebugID = 0;
                        if ("production" !== process.env.NODE_ENV && (selfDebugID = getDebugID(this), this._currentElement)) {
                            try {
                                ReactCurrentOwner.current = this._currentElement._owner, nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID)
                            } finally {
                                ReactCurrentOwner.current = null
                            }
                            return ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID), nextChildren
                        }
                        return nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID), ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID), nextChildren
                    },
                    mountChildren: function(nestedChildren, transaction, context) {
                        var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
                        this._renderedChildren = children;
                        var mountImages = [],
                            index = 0;
                        for (var name in children)
                            if (children.hasOwnProperty(name)) {
                                var child = children[name],
                                    selfDebugID = 0;
                                "production" !== process.env.NODE_ENV && (selfDebugID = getDebugID(this));
                                var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
                                child._mountIndex = index++, mountImages.push(mountImage)
                            }
                        return "production" !== process.env.NODE_ENV && setChildrenForInstrumentation.call(this, children), mountImages
                    },
                    updateTextContent: function(nextContent) {
                        var prevChildren = this._renderedChildren;
                        ReactChildReconciler.unmountChildren(prevChildren, !1);
                        for (var name in prevChildren) prevChildren.hasOwnProperty(name) && ("production" !== process.env.NODE_ENV ? invariant(!1, "updateTextContent called on non-empty component.") : _prodInvariant("118"));
                        processQueue(this, [makeTextContent(nextContent)])
                    },
                    updateMarkup: function(nextMarkup) {
                        var prevChildren = this._renderedChildren;
                        ReactChildReconciler.unmountChildren(prevChildren, !1);
                        for (var name in prevChildren) prevChildren.hasOwnProperty(name) && ("production" !== process.env.NODE_ENV ? invariant(!1, "updateTextContent called on non-empty component.") : _prodInvariant("118"));
                        processQueue(this, [makeSetMarkup(nextMarkup)])
                    },
                    updateChildren: function(nextNestedChildrenElements, transaction, context) {
                        this._updateChildren(nextNestedChildrenElements, transaction, context)
                    },
                    _updateChildren: function(nextNestedChildrenElements, transaction, context) {
                        var prevChildren = this._renderedChildren,
                            removedNodes = {},
                            mountImages = [],
                            nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
                        if (nextChildren || prevChildren) {
                            var name, updates = null,
                                nextIndex = 0,
                                lastIndex = 0,
                                nextMountIndex = 0,
                                lastPlacedNode = null;
                            for (name in nextChildren)
                                if (nextChildren.hasOwnProperty(name)) {
                                    var prevChild = prevChildren && prevChildren[name],
                                        nextChild = nextChildren[name];
                                    prevChild === nextChild ? (updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex)), lastIndex = Math.max(prevChild._mountIndex, lastIndex), prevChild._mountIndex = nextIndex) : (prevChild && (lastIndex = Math.max(prevChild._mountIndex, lastIndex)), updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context)), nextMountIndex++), nextIndex++, lastPlacedNode = ReactReconciler.getHostNode(nextChild)
                                }
                            for (name in removedNodes) removedNodes.hasOwnProperty(name) && (updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name])));
                            updates && processQueue(this, updates), this._renderedChildren = nextChildren, "production" !== process.env.NODE_ENV && setChildrenForInstrumentation.call(this, nextChildren)
                        }
                    },
                    unmountChildren: function(safely) {
                        var renderedChildren = this._renderedChildren;
                        ReactChildReconciler.unmountChildren(renderedChildren, safely), this._renderedChildren = null
                    },
                    moveChild: function(child, afterNode, toIndex, lastIndex) {
                        if (child._mountIndex < lastIndex) return makeMove(child, afterNode, toIndex)
                    },
                    createChild: function(child, afterNode, mountImage) {
                        return makeInsertMarkup(mountImage, afterNode, child._mountIndex)
                    },
                    removeChild: function(child, node) {
                        return makeRemove(child, node)
                    },
                    _mountChildAtIndex: function(child, mountImage, afterNode, index, transaction, context) {
                        return child._mountIndex = index, this.createChild(child, afterNode, mountImage)
                    },
                    _unmountChild: function(child, node) {
                        var update = this.removeChild(child, node);
                        return child._mountIndex = null, update
                    }
                }
            };
            module.exports = ReactMultiChild
        }).call(this, require("_process"))
    }, {
        "./ReactChildReconciler": 159,
        "./ReactComponentEnvironment": 161,
        "./ReactInstanceMap": 194,
        "./ReactInstrumentation": 195,
        "./ReactReconciler": 205,
        "./flattenChildren": 237,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/emptyFunction": 51,
        "fbjs/lib/invariant": 59,
        "react/lib/ReactCurrentOwner": 266
    }],
    200: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _prodInvariant = require("./reactProdInvariant"),
                React = require("react/lib/React"),
                invariant = require("fbjs/lib/invariant"),
                ReactNodeTypes = {
                    HOST: 0,
                    COMPOSITE: 1,
                    EMPTY: 2,
                    getType: function(node) {
                        return null === node || !1 === node ? ReactNodeTypes.EMPTY : React.isValidElement(node) ? "function" == typeof node.type ? ReactNodeTypes.COMPOSITE : ReactNodeTypes.HOST : void("production" !== process.env.NODE_ENV ? invariant(!1, "Unexpected node: %s", node) : _prodInvariant("26", node))
                    }
                };
            module.exports = ReactNodeTypes
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "react/lib/React": 261
    }],
    201: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function isValidOwner(object) {
                return !(!object || "function" != typeof object.attachRef || "function" != typeof object.detachRef)
            }
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant"),
                ReactOwner = {
                    addComponentAsRefTo: function(component, ref, owner) {
                        isValidOwner(owner) || ("production" !== process.env.NODE_ENV ? invariant(!1, "addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).") : _prodInvariant("119")), owner.attachRef(ref, component)
                    },
                    removeComponentAsRefFrom: function(component, ref, owner) {
                        isValidOwner(owner) || ("production" !== process.env.NODE_ENV ? invariant(!1, "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).") : _prodInvariant("120"));
                        var ownerPublicInstance = owner.getPublicInstance();
                        ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance() && owner.detachRef(ref)
                    }
                };
            module.exports = ReactOwner
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    202: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var ReactPropTypeLocationNames = {};
            "production" !== process.env.NODE_ENV && (ReactPropTypeLocationNames = {
                prop: "prop",
                context: "context",
                childContext: "child context"
            }), module.exports = ReactPropTypeLocationNames
        }).call(this, require("_process"))
    }, {
        _process: 13
    }],
    203: [function(require, module, exports) {
        "use strict";
        module.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
    }, {}],
    204: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function ReactReconcileTransaction(useCreateElement) {
                this.reinitializeTransaction(), this.renderToStaticMarkup = !1, this.reactMountReady = CallbackQueue.getPooled(null), this.useCreateElement = useCreateElement
            }
            var _assign = require("object-assign"),
                CallbackQueue = require("./CallbackQueue"),
                PooledClass = require("./PooledClass"),
                ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter"),
                ReactInputSelection = require("./ReactInputSelection"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                Transaction = require("./Transaction"),
                ReactUpdateQueue = require("./ReactUpdateQueue"),
                SELECTION_RESTORATION = {
                    initialize: ReactInputSelection.getSelectionInformation,
                    close: ReactInputSelection.restoreSelection
                },
                EVENT_SUPPRESSION = {
                    initialize: function() {
                        var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
                        return ReactBrowserEventEmitter.setEnabled(!1), currentlyEnabled
                    },
                    close: function(previouslyEnabled) {
                        ReactBrowserEventEmitter.setEnabled(previouslyEnabled)
                    }
                },
                ON_DOM_READY_QUEUEING = {
                    initialize: function() {
                        this.reactMountReady.reset()
                    },
                    close: function() {
                        this.reactMountReady.notifyAll()
                    }
                },
                TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
            "production" !== process.env.NODE_ENV && TRANSACTION_WRAPPERS.push({
                initialize: ReactInstrumentation.debugTool.onBeginFlush,
                close: ReactInstrumentation.debugTool.onEndFlush
            });
            var Mixin = {
                getTransactionWrappers: function() {
                    return TRANSACTION_WRAPPERS
                },
                getReactMountReady: function() {
                    return this.reactMountReady
                },
                getUpdateQueue: function() {
                    return ReactUpdateQueue
                },
                checkpoint: function() {
                    return this.reactMountReady.checkpoint()
                },
                rollback: function(checkpoint) {
                    this.reactMountReady.rollback(checkpoint)
                },
                destructor: function() {
                    CallbackQueue.release(this.reactMountReady), this.reactMountReady = null
                }
            };
            _assign(ReactReconcileTransaction.prototype, Transaction, Mixin), PooledClass.addPoolingTo(ReactReconcileTransaction), module.exports = ReactReconcileTransaction
        }).call(this, require("_process"))
    }, {
        "./CallbackQueue": 139,
        "./PooledClass": 157,
        "./ReactBrowserEventEmitter": 158,
        "./ReactInputSelection": 193,
        "./ReactInstrumentation": 195,
        "./ReactUpdateQueue": 209,
        "./Transaction": 228,
        _process: 13,
        "object-assign": 127
    }],
    205: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function attachRefs() {
                ReactRef.attachRefs(this, this._currentElement)
            }
            var ReactRef = require("./ReactRef"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                warning = require("fbjs/lib/warning"),
                ReactReconciler = {
                    mountComponent: function(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) {
                        "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
                        var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
                        return internalInstance._currentElement && null != internalInstance._currentElement.ref && transaction.getReactMountReady().enqueue(attachRefs, internalInstance), "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID), markup
                    },
                    getHostNode: function(internalInstance) {
                        return internalInstance.getHostNode()
                    },
                    unmountComponent: function(internalInstance, safely) {
                        "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID), ReactRef.detachRefs(internalInstance, internalInstance._currentElement), internalInstance.unmountComponent(safely), "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID)
                    },
                    receiveComponent: function(internalInstance, nextElement, transaction, context) {
                        var prevElement = internalInstance._currentElement;
                        if (nextElement !== prevElement || context !== internalInstance._context) {
                            "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
                            var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
                            refsChanged && ReactRef.detachRefs(internalInstance, prevElement), internalInstance.receiveComponent(nextElement, transaction, context), refsChanged && internalInstance._currentElement && null != internalInstance._currentElement.ref && transaction.getReactMountReady().enqueue(attachRefs, internalInstance), "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID)
                        }
                    },
                    performUpdateIfNecessary: function(internalInstance, transaction, updateBatchNumber) {
                        if (internalInstance._updateBatchNumber !== updateBatchNumber) return void("production" !== process.env.NODE_ENV && warning(null == internalInstance._updateBatchNumber || internalInstance._updateBatchNumber === updateBatchNumber + 1, "performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)", updateBatchNumber, internalInstance._updateBatchNumber));
                        "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement), internalInstance.performUpdateIfNecessary(transaction), "production" !== process.env.NODE_ENV && 0 !== internalInstance._debugID && ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID)
                    }
                };
            module.exports = ReactReconciler
        }).call(this, require("_process"))
    }, {
        "./ReactInstrumentation": 195,
        "./ReactRef": 206,
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    206: [function(require, module, exports) {
        "use strict";

        function attachRef(ref, component, owner) {
            "function" == typeof ref ? ref(component.getPublicInstance()) : ReactOwner.addComponentAsRefTo(component, ref, owner)
        }

        function detachRef(ref, component, owner) {
            "function" == typeof ref ? ref(null) : ReactOwner.removeComponentAsRefFrom(component, ref, owner)
        }
        var ReactOwner = require("./ReactOwner"),
            ReactRef = {};
        ReactRef.attachRefs = function(instance, element) {
            if (null !== element && "object" == typeof element) {
                var ref = element.ref;
                null != ref && attachRef(ref, instance, element._owner)
            }
        }, ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
            var prevRef = null,
                prevOwner = null;
            null !== prevElement && "object" == typeof prevElement && (prevRef = prevElement.ref, prevOwner = prevElement._owner);
            var nextRef = null,
                nextOwner = null;
            return null !== nextElement && "object" == typeof nextElement && (nextRef = nextElement.ref, nextOwner = nextElement._owner), prevRef !== nextRef || "string" == typeof nextRef && nextOwner !== prevOwner
        }, ReactRef.detachRefs = function(instance, element) {
            if (null !== element && "object" == typeof element) {
                var ref = element.ref;
                null != ref && detachRef(ref, instance, element._owner)
            }
        }, module.exports = ReactRef
    }, {
        "./ReactOwner": 201
    }],
    207: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function ReactServerRenderingTransaction(renderToStaticMarkup) {
                this.reinitializeTransaction(), this.renderToStaticMarkup = renderToStaticMarkup, this.useCreateElement = !1, this.updateQueue = new ReactServerUpdateQueue(this)
            }
            var _assign = require("object-assign"),
                PooledClass = require("./PooledClass"),
                Transaction = require("./Transaction"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                ReactServerUpdateQueue = require("./ReactServerUpdateQueue"),
                TRANSACTION_WRAPPERS = [];
            "production" !== process.env.NODE_ENV && TRANSACTION_WRAPPERS.push({
                initialize: ReactInstrumentation.debugTool.onBeginFlush,
                close: ReactInstrumentation.debugTool.onEndFlush
            });
            var noopCallbackQueue = {
                    enqueue: function() {}
                },
                Mixin = {
                    getTransactionWrappers: function() {
                        return TRANSACTION_WRAPPERS
                    },
                    getReactMountReady: function() {
                        return noopCallbackQueue
                    },
                    getUpdateQueue: function() {
                        return this.updateQueue
                    },
                    destructor: function() {},
                    checkpoint: function() {},
                    rollback: function() {}
                };
            _assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin), PooledClass.addPoolingTo(ReactServerRenderingTransaction), module.exports = ReactServerRenderingTransaction
        }).call(this, require("_process"))
    }, {
        "./PooledClass": 157,
        "./ReactInstrumentation": 195,
        "./ReactServerUpdateQueue": 208,
        "./Transaction": 228,
        _process: 13,
        "object-assign": 127
    }],
    208: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function")
            }

            function warnNoop(publicInstance, callerName) {
                if ("production" !== process.env.NODE_ENV) {
                    var constructor = publicInstance.constructor;
                    "production" !== process.env.NODE_ENV && warning(!1, "%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op. Please check the code for the %s component.", callerName, callerName, constructor && (constructor.displayName || constructor.name) || "ReactClass")
                }
            }
            var ReactUpdateQueue = require("./ReactUpdateQueue"),
                warning = require("fbjs/lib/warning"),
                ReactServerUpdateQueue = function() {
                    function ReactServerUpdateQueue(transaction) {
                        _classCallCheck(this, ReactServerUpdateQueue), this.transaction = transaction
                    }
                    return ReactServerUpdateQueue.prototype.isMounted = function(publicInstance) {
                        return !1
                    }, ReactServerUpdateQueue.prototype.enqueueCallback = function(publicInstance, callback, callerName) {
                        this.transaction.isInTransaction() && ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName)
                    }, ReactServerUpdateQueue.prototype.enqueueForceUpdate = function(publicInstance) {
                        this.transaction.isInTransaction() ? ReactUpdateQueue.enqueueForceUpdate(publicInstance) : warnNoop(publicInstance, "forceUpdate")
                    }, ReactServerUpdateQueue.prototype.enqueueReplaceState = function(publicInstance, completeState) {
                        this.transaction.isInTransaction() ? ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState) : warnNoop(publicInstance, "replaceState")
                    }, ReactServerUpdateQueue.prototype.enqueueSetState = function(publicInstance, partialState) {
                        this.transaction.isInTransaction() ? ReactUpdateQueue.enqueueSetState(publicInstance, partialState) : warnNoop(publicInstance, "setState")
                    }, ReactServerUpdateQueue
                }();
            module.exports = ReactServerUpdateQueue
        }).call(this, require("_process"))
    }, {
        "./ReactUpdateQueue": 209,
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    209: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function enqueueUpdate(internalInstance) {
                ReactUpdates.enqueueUpdate(internalInstance)
            }

            function formatUnexpectedArgument(arg) {
                var type = typeof arg;
                if ("object" !== type) return type;
                var displayName = arg.constructor && arg.constructor.name || type,
                    keys = Object.keys(arg);
                return keys.length > 0 && keys.length < 20 ? displayName + " (keys: " + keys.join(", ") + ")" : displayName
            }

            function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
                var internalInstance = ReactInstanceMap.get(publicInstance);
                if (!internalInstance) {
                    if ("production" !== process.env.NODE_ENV) {
                        var ctor = publicInstance.constructor;
                        "production" !== process.env.NODE_ENV && warning(!callerName, "%s(...): Can only update a mounted or mounting component. This usually means you called %s() on an unmounted component. This is a no-op. Please check the code for the %s component.", callerName, callerName, ctor && (ctor.displayName || ctor.name) || "ReactClass")
                    }
                    return null
                }
                return "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(null == ReactCurrentOwner.current, "%s(...): Cannot update during an existing state transition (such as within `render` or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to `componentWillMount`.", callerName), internalInstance
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactCurrentOwner = require("react/lib/ReactCurrentOwner"),
                ReactInstanceMap = require("./ReactInstanceMap"),
                ReactInstrumentation = require("./ReactInstrumentation"),
                ReactUpdates = require("./ReactUpdates"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                ReactUpdateQueue = {
                    isMounted: function(publicInstance) {
                        if ("production" !== process.env.NODE_ENV) {
                            var owner = ReactCurrentOwner.current;
                            null !== owner && ("production" !== process.env.NODE_ENV && warning(owner._warnedAboutRefsInRender, "%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", owner.getName() || "A component"), owner._warnedAboutRefsInRender = !0)
                        }
                        var internalInstance = ReactInstanceMap.get(publicInstance);
                        return !!internalInstance && !!internalInstance._renderedComponent
                    },
                    enqueueCallback: function(publicInstance, callback, callerName) {
                        ReactUpdateQueue.validateCallback(callback, callerName);
                        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
                        if (!internalInstance) return null;
                        internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback], enqueueUpdate(internalInstance)
                    },
                    enqueueCallbackInternal: function(internalInstance, callback) {
                        internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback], enqueueUpdate(internalInstance)
                    },
                    enqueueForceUpdate: function(publicInstance) {
                        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, "forceUpdate");
                        internalInstance && (internalInstance._pendingForceUpdate = !0, enqueueUpdate(internalInstance))
                    },
                    enqueueReplaceState: function(publicInstance, completeState, callback) {
                        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, "replaceState");
                        internalInstance && (internalInstance._pendingStateQueue = [completeState], internalInstance._pendingReplaceState = !0, void 0 !== callback && null !== callback && (ReactUpdateQueue.validateCallback(callback, "replaceState"), internalInstance._pendingCallbacks ? internalInstance._pendingCallbacks.push(callback) : internalInstance._pendingCallbacks = [callback]), enqueueUpdate(internalInstance))
                    },
                    enqueueSetState: function(publicInstance, partialState) {
                        "production" !== process.env.NODE_ENV && (ReactInstrumentation.debugTool.onSetState(), "production" !== process.env.NODE_ENV && warning(null != partialState, "setState(...): You passed an undefined or null state object; instead, use forceUpdate()."));
                        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, "setState");
                        if (internalInstance) {
                            (internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = [])).push(partialState), enqueueUpdate(internalInstance)
                        }
                    },
                    enqueueElementInternal: function(internalInstance, nextElement, nextContext) {
                        internalInstance._pendingElement = nextElement, internalInstance._context = nextContext, enqueueUpdate(internalInstance)
                    },
                    validateCallback: function(callback, callerName) {
                        callback && "function" != typeof callback && ("production" !== process.env.NODE_ENV ? invariant(!1, "%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, formatUnexpectedArgument(callback)) : _prodInvariant("122", callerName, formatUnexpectedArgument(callback)))
                    }
                };
            module.exports = ReactUpdateQueue
        }).call(this, require("_process"))
    }, {
        "./ReactInstanceMap": 194,
        "./ReactInstrumentation": 195,
        "./ReactUpdates": 210,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "react/lib/ReactCurrentOwner": 266
    }],
    210: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function ensureInjected() {
                ReactUpdates.ReactReconcileTransaction && batchingStrategy || ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactUpdates: must inject a reconcile transaction class and batching strategy") : _prodInvariant("123"))
            }

            function ReactUpdatesFlushTransaction() {
                this.reinitializeTransaction(), this.dirtyComponentsLength = null, this.callbackQueue = CallbackQueue.getPooled(), this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(!0)
            }

            function batchedUpdates(callback, a, b, c, d, e) {
                return ensureInjected(), batchingStrategy.batchedUpdates(callback, a, b, c, d, e)
            }

            function mountOrderComparator(c1, c2) {
                return c1._mountOrder - c2._mountOrder
            }

            function runBatchedUpdates(transaction) {
                var len = transaction.dirtyComponentsLength;
                len !== dirtyComponents.length && ("production" !== process.env.NODE_ENV ? invariant(!1, "Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).", len, dirtyComponents.length) : _prodInvariant("124", len, dirtyComponents.length)), dirtyComponents.sort(mountOrderComparator), updateBatchNumber++;
                for (var i = 0; i < len; i++) {
                    var component = dirtyComponents[i],
                        callbacks = component._pendingCallbacks;
                    component._pendingCallbacks = null;
                    if (ReactFeatureFlags.logTopLevelRenders) {
                        var namedComponent = component;
                        component._currentElement.type.isReactTopLevelWrapper && (namedComponent = component._renderedComponent), "React update: " + namedComponent.getName()
                    }
                    if (ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber), callbacks)
                        for (var j = 0; j < callbacks.length; j++) transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance())
                }
            }

            function enqueueUpdate(component) {
                if (ensureInjected(), !batchingStrategy.isBatchingUpdates) return void batchingStrategy.batchedUpdates(enqueueUpdate, component);
                dirtyComponents.push(component), null == component._updateBatchNumber && (component._updateBatchNumber = updateBatchNumber + 1)
            }

            function asap(callback, context) {
                batchingStrategy.isBatchingUpdates || ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactUpdates.asap: Can't enqueue an asap callback in a context whereupdates are not being batched.") : _prodInvariant("125")), asapCallbackQueue.enqueue(callback, context), asapEnqueued = !0
            }
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                CallbackQueue = require("./CallbackQueue"),
                PooledClass = require("./PooledClass"),
                ReactFeatureFlags = require("./ReactFeatureFlags"),
                ReactReconciler = require("./ReactReconciler"),
                Transaction = require("./Transaction"),
                invariant = require("fbjs/lib/invariant"),
                dirtyComponents = [],
                updateBatchNumber = 0,
                asapCallbackQueue = CallbackQueue.getPooled(),
                asapEnqueued = !1,
                batchingStrategy = null,
                NESTED_UPDATES = {
                    initialize: function() {
                        this.dirtyComponentsLength = dirtyComponents.length
                    },
                    close: function() {
                        this.dirtyComponentsLength !== dirtyComponents.length ? (dirtyComponents.splice(0, this.dirtyComponentsLength), flushBatchedUpdates()) : dirtyComponents.length = 0
                    }
                },
                UPDATE_QUEUEING = {
                    initialize: function() {
                        this.callbackQueue.reset()
                    },
                    close: function() {
                        this.callbackQueue.notifyAll()
                    }
                },
                TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
            _assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
                getTransactionWrappers: function() {
                    return TRANSACTION_WRAPPERS
                },
                destructor: function() {
                    this.dirtyComponentsLength = null, CallbackQueue.release(this.callbackQueue), this.callbackQueue = null, ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction), this.reconcileTransaction = null
                },
                perform: function(method, scope, a) {
                    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a)
                }
            }), PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
            var flushBatchedUpdates = function() {
                    for (; dirtyComponents.length || asapEnqueued;) {
                        if (dirtyComponents.length) {
                            var transaction = ReactUpdatesFlushTransaction.getPooled();
                            transaction.perform(runBatchedUpdates, null, transaction), ReactUpdatesFlushTransaction.release(transaction)
                        }
                        if (asapEnqueued) {
                            asapEnqueued = !1;
                            var queue = asapCallbackQueue;
                            asapCallbackQueue = CallbackQueue.getPooled(), queue.notifyAll(), CallbackQueue.release(queue)
                        }
                    }
                },
                ReactUpdatesInjection = {
                    injectReconcileTransaction: function(ReconcileTransaction) {
                        ReconcileTransaction || ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactUpdates: must provide a reconcile transaction class") : _prodInvariant("126")), ReactUpdates.ReactReconcileTransaction = ReconcileTransaction
                    },
                    injectBatchingStrategy: function(_batchingStrategy) {
                        _batchingStrategy || ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactUpdates: must provide a batching strategy") : _prodInvariant("127")), "function" != typeof _batchingStrategy.batchedUpdates && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactUpdates: must provide a batchedUpdates() function") : _prodInvariant("128")), "boolean" != typeof _batchingStrategy.isBatchingUpdates && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactUpdates: must provide an isBatchingUpdates boolean attribute") : _prodInvariant("129")), batchingStrategy = _batchingStrategy
                    }
                },
                ReactUpdates = {
                    ReactReconcileTransaction: null,
                    batchedUpdates: batchedUpdates,
                    enqueueUpdate: enqueueUpdate,
                    flushBatchedUpdates: flushBatchedUpdates,
                    injection: ReactUpdatesInjection,
                    asap: asap
                };
            module.exports = ReactUpdates
        }).call(this, require("_process"))
    }, {
        "./CallbackQueue": 139,
        "./PooledClass": 157,
        "./ReactFeatureFlags": 189,
        "./ReactReconciler": 205,
        "./Transaction": 228,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "object-assign": 127
    }],
    211: [function(require, module, exports) {
        "use strict";
        module.exports = "15.5.3"
    }, {}],
    212: [function(require, module, exports) {
        "use strict";
        var NS = {
                xlink: "http://www.w3.org/1999/xlink",
                xml: "http://www.w3.org/XML/1998/namespace"
            },
            ATTRS = {
                accentHeight: "accent-height",
                accumulate: 0,
                additive: 0,
                alignmentBaseline: "alignment-baseline",
                allowReorder: "allowReorder",
                alphabetic: 0,
                amplitude: 0,
                arabicForm: "arabic-form",
                ascent: 0,
                attributeName: "attributeName",
                attributeType: "attributeType",
                autoReverse: "autoReverse",
                azimuth: 0,
                baseFrequency: "baseFrequency",
                baseProfile: "baseProfile",
                baselineShift: "baseline-shift",
                bbox: 0,
                begin: 0,
                bias: 0,
                by: 0,
                calcMode: "calcMode",
                capHeight: "cap-height",
                clip: 0,
                clipPath: "clip-path",
                clipRule: "clip-rule",
                clipPathUnits: "clipPathUnits",
                colorInterpolation: "color-interpolation",
                colorInterpolationFilters: "color-interpolation-filters",
                colorProfile: "color-profile",
                colorRendering: "color-rendering",
                contentScriptType: "contentScriptType",
                contentStyleType: "contentStyleType",
                cursor: 0,
                cx: 0,
                cy: 0,
                d: 0,
                decelerate: 0,
                descent: 0,
                diffuseConstant: "diffuseConstant",
                direction: 0,
                display: 0,
                divisor: 0,
                dominantBaseline: "dominant-baseline",
                dur: 0,
                dx: 0,
                dy: 0,
                edgeMode: "edgeMode",
                elevation: 0,
                enableBackground: "enable-background",
                end: 0,
                exponent: 0,
                externalResourcesRequired: "externalResourcesRequired",
                fill: 0,
                fillOpacity: "fill-opacity",
                fillRule: "fill-rule",
                filter: 0,
                filterRes: "filterRes",
                filterUnits: "filterUnits",
                floodColor: "flood-color",
                floodOpacity: "flood-opacity",
                focusable: 0,
                fontFamily: "font-family",
                fontSize: "font-size",
                fontSizeAdjust: "font-size-adjust",
                fontStretch: "font-stretch",
                fontStyle: "font-style",
                fontVariant: "font-variant",
                fontWeight: "font-weight",
                format: 0,
                from: 0,
                fx: 0,
                fy: 0,
                g1: 0,
                g2: 0,
                glyphName: "glyph-name",
                glyphOrientationHorizontal: "glyph-orientation-horizontal",
                glyphOrientationVertical: "glyph-orientation-vertical",
                glyphRef: "glyphRef",
                gradientTransform: "gradientTransform",
                gradientUnits: "gradientUnits",
                hanging: 0,
                horizAdvX: "horiz-adv-x",
                horizOriginX: "horiz-origin-x",
                ideographic: 0,
                imageRendering: "image-rendering",
                in: 0,
                in2: 0,
                intercept: 0,
                k: 0,
                k1: 0,
                k2: 0,
                k3: 0,
                k4: 0,
                kernelMatrix: "kernelMatrix",
                kernelUnitLength: "kernelUnitLength",
                kerning: 0,
                keyPoints: "keyPoints",
                keySplines: "keySplines",
                keyTimes: "keyTimes",
                lengthAdjust: "lengthAdjust",
                letterSpacing: "letter-spacing",
                lightingColor: "lighting-color",
                limitingConeAngle: "limitingConeAngle",
                local: 0,
                markerEnd: "marker-end",
                markerMid: "marker-mid",
                markerStart: "marker-start",
                markerHeight: "markerHeight",
                markerUnits: "markerUnits",
                markerWidth: "markerWidth",
                mask: 0,
                maskContentUnits: "maskContentUnits",
                maskUnits: "maskUnits",
                mathematical: 0,
                mode: 0,
                numOctaves: "numOctaves",
                offset: 0,
                opacity: 0,
                operator: 0,
                order: 0,
                orient: 0,
                orientation: 0,
                origin: 0,
                overflow: 0,
                overlinePosition: "overline-position",
                overlineThickness: "overline-thickness",
                paintOrder: "paint-order",
                panose1: "panose-1",
                pathLength: "pathLength",
                patternContentUnits: "patternContentUnits",
                patternTransform: "patternTransform",
                patternUnits: "patternUnits",
                pointerEvents: "pointer-events",
                points: 0,
                pointsAtX: "pointsAtX",
                pointsAtY: "pointsAtY",
                pointsAtZ: "pointsAtZ",
                preserveAlpha: "preserveAlpha",
                preserveAspectRatio: "preserveAspectRatio",
                primitiveUnits: "primitiveUnits",
                r: 0,
                radius: 0,
                refX: "refX",
                refY: "refY",
                renderingIntent: "rendering-intent",
                repeatCount: "repeatCount",
                repeatDur: "repeatDur",
                requiredExtensions: "requiredExtensions",
                requiredFeatures: "requiredFeatures",
                restart: 0,
                result: 0,
                rotate: 0,
                rx: 0,
                ry: 0,
                scale: 0,
                seed: 0,
                shapeRendering: "shape-rendering",
                slope: 0,
                spacing: 0,
                specularConstant: "specularConstant",
                specularExponent: "specularExponent",
                speed: 0,
                spreadMethod: "spreadMethod",
                startOffset: "startOffset",
                stdDeviation: "stdDeviation",
                stemh: 0,
                stemv: 0,
                stitchTiles: "stitchTiles",
                stopColor: "stop-color",
                stopOpacity: "stop-opacity",
                strikethroughPosition: "strikethrough-position",
                strikethroughThickness: "strikethrough-thickness",
                string: 0,
                stroke: 0,
                strokeDasharray: "stroke-dasharray",
                strokeDashoffset: "stroke-dashoffset",
                strokeLinecap: "stroke-linecap",
                strokeLinejoin: "stroke-linejoin",
                strokeMiterlimit: "stroke-miterlimit",
                strokeOpacity: "stroke-opacity",
                strokeWidth: "stroke-width",
                surfaceScale: "surfaceScale",
                systemLanguage: "systemLanguage",
                tableValues: "tableValues",
                targetX: "targetX",
                targetY: "targetY",
                textAnchor: "text-anchor",
                textDecoration: "text-decoration",
                textRendering: "text-rendering",
                textLength: "textLength",
                to: 0,
                transform: 0,
                u1: 0,
                u2: 0,
                underlinePosition: "underline-position",
                underlineThickness: "underline-thickness",
                unicode: 0,
                unicodeBidi: "unicode-bidi",
                unicodeRange: "unicode-range",
                unitsPerEm: "units-per-em",
                vAlphabetic: "v-alphabetic",
                vHanging: "v-hanging",
                vIdeographic: "v-ideographic",
                vMathematical: "v-mathematical",
                values: 0,
                vectorEffect: "vector-effect",
                version: 0,
                vertAdvY: "vert-adv-y",
                vertOriginX: "vert-origin-x",
                vertOriginY: "vert-origin-y",
                viewBox: "viewBox",
                viewTarget: "viewTarget",
                visibility: 0,
                widths: 0,
                wordSpacing: "word-spacing",
                writingMode: "writing-mode",
                x: 0,
                xHeight: "x-height",
                x1: 0,
                x2: 0,
                xChannelSelector: "xChannelSelector",
                xlinkActuate: "xlink:actuate",
                xlinkArcrole: "xlink:arcrole",
                xlinkHref: "xlink:href",
                xlinkRole: "xlink:role",
                xlinkShow: "xlink:show",
                xlinkTitle: "xlink:title",
                xlinkType: "xlink:type",
                xmlBase: "xml:base",
                xmlns: 0,
                xmlnsXlink: "xmlns:xlink",
                xmlLang: "xml:lang",
                xmlSpace: "xml:space",
                y: 0,
                y1: 0,
                y2: 0,
                yChannelSelector: "yChannelSelector",
                z: 0,
                zoomAndPan: "zoomAndPan"
            },
            SVGDOMPropertyConfig = {
                Properties: {},
                DOMAttributeNamespaces: {
                    xlinkActuate: NS.xlink,
                    xlinkArcrole: NS.xlink,
                    xlinkHref: NS.xlink,
                    xlinkRole: NS.xlink,
                    xlinkShow: NS.xlink,
                    xlinkTitle: NS.xlink,
                    xlinkType: NS.xlink,
                    xmlBase: NS.xml,
                    xmlLang: NS.xml,
                    xmlSpace: NS.xml
                },
                DOMAttributeNames: {}
            };
        Object.keys(ATTRS).forEach(function(key) {
            SVGDOMPropertyConfig.Properties[key] = 0, ATTRS[key] && (SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key])
        }), module.exports = SVGDOMPropertyConfig
    }, {}],
    213: [function(require, module, exports) {
        "use strict";

        function getSelection(node) {
            if ("selectionStart" in node && ReactInputSelection.hasSelectionCapabilities(node)) return {
                start: node.selectionStart,
                end: node.selectionEnd
            };
            if (window.getSelection) {
                var selection = window.getSelection();
                return {
                    anchorNode: selection.anchorNode,
                    anchorOffset: selection.anchorOffset,
                    focusNode: selection.focusNode,
                    focusOffset: selection.focusOffset
                }
            }
            if (document.selection) {
                var range = document.selection.createRange();
                return {
                    parentElement: range.parentElement(),
                    text: range.text,
                    top: range.boundingTop,
                    left: range.boundingLeft
                }
            }
        }

        function constructSelectEvent(nativeEvent, nativeEventTarget) {
            if (mouseDown || null == activeElement || activeElement !== getActiveElement()) return null;
            var currentSelection = getSelection(activeElement);
            if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
                lastSelection = currentSelection;
                var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
                return syntheticEvent.type = "select", syntheticEvent.target = activeElement, EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent), syntheticEvent
            }
            return null
        }
        var EventPropagators = require("./EventPropagators"),
            ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            ReactDOMComponentTree = require("./ReactDOMComponentTree"),
            ReactInputSelection = require("./ReactInputSelection"),
            SyntheticEvent = require("./SyntheticEvent"),
            getActiveElement = require("fbjs/lib/getActiveElement"),
            isTextInputElement = require("./isTextInputElement"),
            shallowEqual = require("fbjs/lib/shallowEqual"),
            skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && "documentMode" in document && document.documentMode <= 11,
            eventTypes = {
                select: {
                    phasedRegistrationNames: {
                        bubbled: "onSelect",
                        captured: "onSelectCapture"
                    },
                    dependencies: ["topBlur", "topContextMenu", "topFocus", "topKeyDown", "topKeyUp", "topMouseDown", "topMouseUp", "topSelectionChange"]
                }
            },
            activeElement = null,
            activeElementInst = null,
            lastSelection = null,
            mouseDown = !1,
            hasListener = !1,
            SelectEventPlugin = {
                eventTypes: eventTypes,
                extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                    if (!hasListener) return null;
                    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
                    switch (topLevelType) {
                        case "topFocus":
                            (isTextInputElement(targetNode) || "true" === targetNode.contentEditable) && (activeElement = targetNode, activeElementInst = targetInst, lastSelection = null);
                            break;
                        case "topBlur":
                            activeElement = null, activeElementInst = null, lastSelection = null;
                            break;
                        case "topMouseDown":
                            mouseDown = !0;
                            break;
                        case "topContextMenu":
                        case "topMouseUp":
                            return mouseDown = !1, constructSelectEvent(nativeEvent, nativeEventTarget);
                        case "topSelectionChange":
                            if (skipSelectionChangeEvent) break;
                        case "topKeyDown":
                        case "topKeyUp":
                            return constructSelectEvent(nativeEvent, nativeEventTarget)
                    }
                    return null
                },
                didPutListener: function(inst, registrationName, listener) {
                    "onSelect" === registrationName && (hasListener = !0)
                }
            };
        module.exports = SelectEventPlugin
    }, {
        "./EventPropagators": 152,
        "./ReactDOMComponentTree": 166,
        "./ReactInputSelection": 193,
        "./SyntheticEvent": 219,
        "./isTextInputElement": 250,
        "fbjs/lib/ExecutionEnvironment": 45,
        "fbjs/lib/getActiveElement": 54,
        "fbjs/lib/shallowEqual": 65
    }],
    214: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getDictionaryKey(inst) {
                return "." + inst._rootNodeID
            }

            function isInteractive(tag) {
                return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag
            }
            var _prodInvariant = require("./reactProdInvariant"),
                EventListener = require("fbjs/lib/EventListener"),
                EventPropagators = require("./EventPropagators"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                SyntheticAnimationEvent = require("./SyntheticAnimationEvent"),
                SyntheticClipboardEvent = require("./SyntheticClipboardEvent"),
                SyntheticEvent = require("./SyntheticEvent"),
                SyntheticFocusEvent = require("./SyntheticFocusEvent"),
                SyntheticKeyboardEvent = require("./SyntheticKeyboardEvent"),
                SyntheticMouseEvent = require("./SyntheticMouseEvent"),
                SyntheticDragEvent = require("./SyntheticDragEvent"),
                SyntheticTouchEvent = require("./SyntheticTouchEvent"),
                SyntheticTransitionEvent = require("./SyntheticTransitionEvent"),
                SyntheticUIEvent = require("./SyntheticUIEvent"),
                SyntheticWheelEvent = require("./SyntheticWheelEvent"),
                emptyFunction = require("fbjs/lib/emptyFunction"),
                getEventCharCode = require("./getEventCharCode"),
                invariant = require("fbjs/lib/invariant"),
                eventTypes = {},
                topLevelEventsToDispatchConfig = {};
            ["abort", "animationEnd", "animationIteration", "animationStart", "blur", "canPlay", "canPlayThrough", "click", "contextMenu", "copy", "cut", "doubleClick", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "focus", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "progress", "rateChange", "reset", "scroll", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchMove", "touchStart", "transitionEnd", "volumeChange", "waiting", "wheel"].forEach(function(event) {
                var capitalizedEvent = event[0].toUpperCase() + event.slice(1),
                    onEvent = "on" + capitalizedEvent,
                    topEvent = "top" + capitalizedEvent,
                    type = {
                        phasedRegistrationNames: {
                            bubbled: onEvent,
                            captured: onEvent + "Capture"
                        },
                        dependencies: [topEvent]
                    };
                eventTypes[event] = type, topLevelEventsToDispatchConfig[topEvent] = type
            });
            var onClickListeners = {},
                SimpleEventPlugin = {
                    eventTypes: eventTypes,
                    extractEvents: function(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
                        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
                        if (!dispatchConfig) return null;
                        var EventConstructor;
                        switch (topLevelType) {
                            case "topAbort":
                            case "topCanPlay":
                            case "topCanPlayThrough":
                            case "topDurationChange":
                            case "topEmptied":
                            case "topEncrypted":
                            case "topEnded":
                            case "topError":
                            case "topInput":
                            case "topInvalid":
                            case "topLoad":
                            case "topLoadedData":
                            case "topLoadedMetadata":
                            case "topLoadStart":
                            case "topPause":
                            case "topPlay":
                            case "topPlaying":
                            case "topProgress":
                            case "topRateChange":
                            case "topReset":
                            case "topSeeked":
                            case "topSeeking":
                            case "topStalled":
                            case "topSubmit":
                            case "topSuspend":
                            case "topTimeUpdate":
                            case "topVolumeChange":
                            case "topWaiting":
                                EventConstructor = SyntheticEvent;
                                break;
                            case "topKeyPress":
                                if (0 === getEventCharCode(nativeEvent)) return null;
                            case "topKeyDown":
                            case "topKeyUp":
                                EventConstructor = SyntheticKeyboardEvent;
                                break;
                            case "topBlur":
                            case "topFocus":
                                EventConstructor = SyntheticFocusEvent;
                                break;
                            case "topClick":
                                if (2 === nativeEvent.button) return null;
                            case "topDoubleClick":
                            case "topMouseDown":
                            case "topMouseMove":
                            case "topMouseUp":
                            case "topMouseOut":
                            case "topMouseOver":
                            case "topContextMenu":
                                EventConstructor = SyntheticMouseEvent;
                                break;
                            case "topDrag":
                            case "topDragEnd":
                            case "topDragEnter":
                            case "topDragExit":
                            case "topDragLeave":
                            case "topDragOver":
                            case "topDragStart":
                            case "topDrop":
                                EventConstructor = SyntheticDragEvent;
                                break;
                            case "topTouchCancel":
                            case "topTouchEnd":
                            case "topTouchMove":
                            case "topTouchStart":
                                EventConstructor = SyntheticTouchEvent;
                                break;
                            case "topAnimationEnd":
                            case "topAnimationIteration":
                            case "topAnimationStart":
                                EventConstructor = SyntheticAnimationEvent;
                                break;
                            case "topTransitionEnd":
                                EventConstructor = SyntheticTransitionEvent;
                                break;
                            case "topScroll":
                                EventConstructor = SyntheticUIEvent;
                                break;
                            case "topWheel":
                                EventConstructor = SyntheticWheelEvent;
                                break;
                            case "topCopy":
                            case "topCut":
                            case "topPaste":
                                EventConstructor = SyntheticClipboardEvent
                        }
                        EventConstructor || ("production" !== process.env.NODE_ENV ? invariant(!1, "SimpleEventPlugin: Unhandled event type, `%s`.", topLevelType) : _prodInvariant("86", topLevelType));
                        var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
                        return EventPropagators.accumulateTwoPhaseDispatches(event), event
                    },
                    didPutListener: function(inst, registrationName, listener) {
                        if ("onClick" === registrationName && !isInteractive(inst._tag)) {
                            var key = getDictionaryKey(inst),
                                node = ReactDOMComponentTree.getNodeFromInstance(inst);
                            onClickListeners[key] || (onClickListeners[key] = EventListener.listen(node, "click", emptyFunction))
                        }
                    },
                    willDeleteListener: function(inst, registrationName) {
                        if ("onClick" === registrationName && !isInteractive(inst._tag)) {
                            var key = getDictionaryKey(inst);
                            onClickListeners[key].remove(), delete onClickListeners[key]
                        }
                    }
                };
            module.exports = SimpleEventPlugin
        }).call(this, require("_process"))
    }, {
        "./EventPropagators": 152,
        "./ReactDOMComponentTree": 166,
        "./SyntheticAnimationEvent": 215,
        "./SyntheticClipboardEvent": 216,
        "./SyntheticDragEvent": 218,
        "./SyntheticEvent": 219,
        "./SyntheticFocusEvent": 220,
        "./SyntheticKeyboardEvent": 222,
        "./SyntheticMouseEvent": 223,
        "./SyntheticTouchEvent": 224,
        "./SyntheticTransitionEvent": 225,
        "./SyntheticUIEvent": 226,
        "./SyntheticWheelEvent": 227,
        "./getEventCharCode": 239,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/EventListener": 44,
        "fbjs/lib/emptyFunction": 51,
        "fbjs/lib/invariant": 59
    }],
    215: [function(require, module, exports) {
        "use strict";

        function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticEvent = require("./SyntheticEvent"),
            AnimationEventInterface = {
                animationName: null,
                elapsedTime: null,
                pseudoElement: null
            };
        SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface), module.exports = SyntheticAnimationEvent
    }, {
        "./SyntheticEvent": 219
    }],
    216: [function(require, module, exports) {
        "use strict";

        function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticEvent = require("./SyntheticEvent"),
            ClipboardEventInterface = {
                clipboardData: function(event) {
                    return "clipboardData" in event ? event.clipboardData : window.clipboardData
                }
            };
        SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface), module.exports = SyntheticClipboardEvent
    }, {
        "./SyntheticEvent": 219
    }],
    217: [function(require, module, exports) {
        "use strict";

        function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticEvent = require("./SyntheticEvent"),
            CompositionEventInterface = {
                data: null
            };
        SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface), module.exports = SyntheticCompositionEvent
    }, {
        "./SyntheticEvent": 219
    }],
    218: [function(require, module, exports) {
        "use strict";

        function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticMouseEvent = require("./SyntheticMouseEvent"),
            DragEventInterface = {
                dataTransfer: null
            };
        SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface), module.exports = SyntheticDragEvent
    }, {
        "./SyntheticMouseEvent": 223
    }],
    219: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
                "production" !== process.env.NODE_ENV && (delete this.nativeEvent, delete this.preventDefault, delete this.stopPropagation), this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
                var Interface = this.constructor.Interface;
                for (var propName in Interface)
                    if (Interface.hasOwnProperty(propName)) {
                        "production" !== process.env.NODE_ENV && delete this[propName];
                        var normalize = Interface[propName];
                        normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]
                    }
                var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
                return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this
            }

            function getPooledWarningPropertyDefinition(propName, getVal) {
                function set(val) {
                    return warn(isFunction ? "setting the method" : "setting the property", "This is effectively a no-op"), val
                }

                function get() {
                    return warn(isFunction ? "accessing the method" : "accessing the property", isFunction ? "This is a no-op function" : "This is set to null"), getVal
                }

                function warn(action, result) {
                    "production" !== process.env.NODE_ENV && warning(!1, "This synthetic event is reused for performance reasons. If you're seeing this, you're %s `%s` on a released/nullified synthetic event. %s. If you must keep the original synthetic event around, use event.persist(). See https://fb.me/react-event-pooling for more information.", action, propName, result)
                }
                var isFunction = "function" == typeof getVal;
                return {
                    configurable: !0,
                    set: set,
                    get: get
                }
            }
            var _assign = require("object-assign"),
                PooledClass = require("./PooledClass"),
                emptyFunction = require("fbjs/lib/emptyFunction"),
                warning = require("fbjs/lib/warning"),
                didWarnForAddedNewProperty = !1,
                isProxySupported = "function" == typeof Proxy,
                shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
                EventInterface = {
                    type: null,
                    target: null,
                    currentTarget: emptyFunction.thatReturnsNull,
                    eventPhase: null,
                    bubbles: null,
                    cancelable: null,
                    timeStamp: function(event) {
                        return event.timeStamp || Date.now()
                    },
                    defaultPrevented: null,
                    isTrusted: null
                };
            _assign(SyntheticEvent.prototype, {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                    var event = this.nativeEvent;
                    event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue)
                },
                stopPropagation: function() {
                    var event = this.nativeEvent;
                    event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue)
                },
                persist: function() {
                    this.isPersistent = emptyFunction.thatReturnsTrue
                },
                isPersistent: emptyFunction.thatReturnsFalse,
                destructor: function() {
                    var Interface = this.constructor.Interface;
                    for (var propName in Interface) "production" !== process.env.NODE_ENV ? Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName])) : this[propName] = null;
                    for (var i = 0; i < shouldBeReleasedProperties.length; i++) this[shouldBeReleasedProperties[i]] = null;
                    "production" !== process.env.NODE_ENV && (Object.defineProperty(this, "nativeEvent", getPooledWarningPropertyDefinition("nativeEvent", null)), Object.defineProperty(this, "preventDefault", getPooledWarningPropertyDefinition("preventDefault", emptyFunction)), Object.defineProperty(this, "stopPropagation", getPooledWarningPropertyDefinition("stopPropagation", emptyFunction)))
                }
            }), SyntheticEvent.Interface = EventInterface, "production" !== process.env.NODE_ENV && isProxySupported && (SyntheticEvent = new Proxy(SyntheticEvent, {
                construct: function(target, args) {
                    return this.apply(target, Object.create(target.prototype), args)
                },
                apply: function(constructor, that, args) {
                    return new Proxy(constructor.apply(that, args), {
                        set: function(target, prop, value) {
                            return "isPersistent" === prop || target.constructor.Interface.hasOwnProperty(prop) || -1 !== shouldBeReleasedProperties.indexOf(prop) || ("production" !== process.env.NODE_ENV && warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're seeing this, you're adding a new property in the synthetic event object. The property is never released. See https://fb.me/react-event-pooling for more information."), didWarnForAddedNewProperty = !0), target[prop] = value, !0
                        }
                    })
                }
            })), SyntheticEvent.augmentClass = function(Class, Interface) {
                var Super = this,
                    E = function() {};
                E.prototype = Super.prototype;
                var prototype = new E;
                _assign(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = _assign({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler)
            }, PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler), module.exports = SyntheticEvent
        }).call(this, require("_process"))
    }, {
        "./PooledClass": 157,
        _process: 13,
        "fbjs/lib/emptyFunction": 51,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    220: [function(require, module, exports) {
        "use strict";

        function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticUIEvent = require("./SyntheticUIEvent"),
            FocusEventInterface = {
                relatedTarget: null
            };
        SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface), module.exports = SyntheticFocusEvent
    }, {
        "./SyntheticUIEvent": 226
    }],
    221: [function(require, module, exports) {
        "use strict";

        function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticEvent = require("./SyntheticEvent"),
            InputEventInterface = {
                data: null
            };
        SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface), module.exports = SyntheticInputEvent
    }, {
        "./SyntheticEvent": 219
    }],
    222: [function(require, module, exports) {
        "use strict";

        function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticUIEvent = require("./SyntheticUIEvent"),
            getEventCharCode = require("./getEventCharCode"),
            getEventKey = require("./getEventKey"),
            getEventModifierState = require("./getEventModifierState"),
            KeyboardEventInterface = {
                key: getEventKey,
                location: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                repeat: null,
                locale: null,
                getModifierState: getEventModifierState,
                charCode: function(event) {
                    return "keypress" === event.type ? getEventCharCode(event) : 0
                },
                keyCode: function(event) {
                    return "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0
                },
                which: function(event) {
                    return "keypress" === event.type ? getEventCharCode(event) : "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0
                }
            };
        SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface), module.exports = SyntheticKeyboardEvent
    }, {
        "./SyntheticUIEvent": 226,
        "./getEventCharCode": 239,
        "./getEventKey": 240,
        "./getEventModifierState": 241
    }],
    223: [function(require, module, exports) {
        "use strict";

        function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticUIEvent = require("./SyntheticUIEvent"),
            ViewportMetrics = require("./ViewportMetrics"),
            getEventModifierState = require("./getEventModifierState"),
            MouseEventInterface = {
                screenX: null,
                screenY: null,
                clientX: null,
                clientY: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                getModifierState: getEventModifierState,
                button: function(event) {
                    var button = event.button;
                    return "which" in event ? button : 2 === button ? 2 : 4 === button ? 1 : 0
                },
                buttons: null,
                relatedTarget: function(event) {
                    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement)
                },
                pageX: function(event) {
                    return "pageX" in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft
                },
                pageY: function(event) {
                    return "pageY" in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop
                }
            };
        SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface), module.exports = SyntheticMouseEvent
    }, {
        "./SyntheticUIEvent": 226,
        "./ViewportMetrics": 229,
        "./getEventModifierState": 241
    }],
    224: [function(require, module, exports) {
        "use strict";

        function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticUIEvent = require("./SyntheticUIEvent"),
            getEventModifierState = require("./getEventModifierState"),
            TouchEventInterface = {
                touches: null,
                targetTouches: null,
                changedTouches: null,
                altKey: null,
                metaKey: null,
                ctrlKey: null,
                shiftKey: null,
                getModifierState: getEventModifierState
            };
        SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface), module.exports = SyntheticTouchEvent
    }, {
        "./SyntheticUIEvent": 226,
        "./getEventModifierState": 241
    }],
    225: [function(require, module, exports) {
        "use strict";

        function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticEvent = require("./SyntheticEvent"),
            TransitionEventInterface = {
                propertyName: null,
                elapsedTime: null,
                pseudoElement: null
            };
        SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface), module.exports = SyntheticTransitionEvent
    }, {
        "./SyntheticEvent": 219
    }],
    226: [function(require, module, exports) {
        "use strict";

        function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticEvent = require("./SyntheticEvent"),
            getEventTarget = require("./getEventTarget"),
            UIEventInterface = {
                view: function(event) {
                    if (event.view) return event.view;
                    var target = getEventTarget(event);
                    if (target.window === target) return target;
                    var doc = target.ownerDocument;
                    return doc ? doc.defaultView || doc.parentWindow : window
                },
                detail: function(event) {
                    return event.detail || 0
                }
            };
        SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface), module.exports = SyntheticUIEvent
    }, {
        "./SyntheticEvent": 219,
        "./getEventTarget": 242
    }],
    227: [function(require, module, exports) {
        "use strict";

        function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
            return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget)
        }
        var SyntheticMouseEvent = require("./SyntheticMouseEvent"),
            WheelEventInterface = {
                deltaX: function(event) {
                    return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0
                },
                deltaY: function(event) {
                    return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0
                },
                deltaZ: null,
                deltaMode: null
            };
        SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface), module.exports = SyntheticWheelEvent
    }, {
        "./SyntheticMouseEvent": 223
    }],
    228: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant"),
                OBSERVED_ERROR = {},
                TransactionImpl = {
                    reinitializeTransaction: function() {
                        this.transactionWrappers = this.getTransactionWrappers(), this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [], this._isInTransaction = !1
                    },
                    _isInTransaction: !1,
                    getTransactionWrappers: null,
                    isInTransaction: function() {
                        return !!this._isInTransaction
                    },
                    perform: function(method, scope, a, b, c, d, e, f) {
                        this.isInTransaction() && ("production" !== process.env.NODE_ENV ? invariant(!1, "Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.") : _prodInvariant("27"));
                        var errorThrown, ret;
                        try {
                            this._isInTransaction = !0, errorThrown = !0, this.initializeAll(0), ret = method.call(scope, a, b, c, d, e, f), errorThrown = !1
                        } finally {
                            try {
                                if (errorThrown) try {
                                    this.closeAll(0)
                                } catch (err) {} else this.closeAll(0)
                            } finally {
                                this._isInTransaction = !1
                            }
                        }
                        return ret
                    },
                    initializeAll: function(startIndex) {
                        for (var transactionWrappers = this.transactionWrappers, i = startIndex; i < transactionWrappers.length; i++) {
                            var wrapper = transactionWrappers[i];
                            try {
                                this.wrapperInitData[i] = OBSERVED_ERROR, this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null
                            } finally {
                                if (this.wrapperInitData[i] === OBSERVED_ERROR) try {
                                    this.initializeAll(i + 1)
                                } catch (err) {}
                            }
                        }
                    },
                    closeAll: function(startIndex) {
                        this.isInTransaction() || ("production" !== process.env.NODE_ENV ? invariant(!1, "Transaction.closeAll(): Cannot close transaction when none are open.") : _prodInvariant("28"));
                        for (var transactionWrappers = this.transactionWrappers, i = startIndex; i < transactionWrappers.length; i++) {
                            var errorThrown, wrapper = transactionWrappers[i],
                                initData = this.wrapperInitData[i];
                            try {
                                errorThrown = !0, initData !== OBSERVED_ERROR && wrapper.close && wrapper.close.call(this, initData), errorThrown = !1
                            } finally {
                                if (errorThrown) try {
                                    this.closeAll(i + 1)
                                } catch (e) {}
                            }
                        }
                        this.wrapperInitData.length = 0
                    }
                };
            module.exports = TransactionImpl
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    229: [function(require, module, exports) {
        "use strict";
        var ViewportMetrics = {
            currentScrollLeft: 0,
            currentScrollTop: 0,
            refreshScrollValues: function(scrollPosition) {
                ViewportMetrics.currentScrollLeft = scrollPosition.x, ViewportMetrics.currentScrollTop = scrollPosition.y
            }
        };
        module.exports = ViewportMetrics
    }, {}],
    230: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function accumulateInto(current, next) {
                return null == next && ("production" !== process.env.NODE_ENV ? invariant(!1, "accumulateInto(...): Accumulated items must not be null or undefined.") : _prodInvariant("30")), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next]
            }
            var _prodInvariant = require("./reactProdInvariant"),
                invariant = require("fbjs/lib/invariant");
            module.exports = accumulateInto
        }).call(this, require("_process"))
    }, {
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    231: [function(require, module, exports) {
        "use strict";

        function adler32(data) {
            for (var a = 1, b = 0, i = 0, l = data.length, m = -4 & l; i < m;) {
                for (var n = Math.min(i + 4096, m); i < n; i += 4) b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
                a %= MOD, b %= MOD
            }
            for (; i < l; i++) b += a += data.charCodeAt(i);
            return a %= MOD, b %= MOD, a | b << 16
        }
        var MOD = 65521;
        module.exports = adler32
    }, {}],
    232: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
                for (var typeSpecName in typeSpecs)
                    if (typeSpecs.hasOwnProperty(typeSpecName)) {
                        var error;
                        try {
                            "function" != typeof typeSpecs[typeSpecName] && ("production" !== process.env.NODE_ENV ? invariant(!1, "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", componentName || "React class", ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant("84", componentName || "React class", ReactPropTypeLocationNames[location], typeSpecName)), error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret)
                        } catch (ex) {
                            error = ex
                        }
                        if ("production" !== process.env.NODE_ENV && warning(!error || error instanceof Error, "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", ReactPropTypeLocationNames[location], typeSpecName, typeof error), error instanceof Error && !(error.message in loggedTypeFailures)) {
                            loggedTypeFailures[error.message] = !0;
                            var componentStackInfo = "";
                            "production" !== process.env.NODE_ENV && (ReactComponentTreeHook || (ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook")), null !== debugID ? componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID) : null !== element && (componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element))), "production" !== process.env.NODE_ENV && warning(!1, "Failed %s type: %s%s", location, error.message, componentStackInfo)
                        }
                    }
            }
            var ReactComponentTreeHook, _prodInvariant = require("./reactProdInvariant"),
                ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames"),
                ReactPropTypesSecret = require("./ReactPropTypesSecret"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning");
            void 0 !== process && process.env && "test" === process.env.NODE_ENV && (ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook"));
            var loggedTypeFailures = {};
            module.exports = checkReactTypeSpec
        }).call(this, require("_process"))
    }, {
        "./ReactPropTypeLocationNames": 202,
        "./ReactPropTypesSecret": 203,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "react/lib/ReactComponentTreeHook": 265
    }],
    233: [function(require, module, exports) {
        "use strict";
        var createMicrosoftUnsafeLocalFunction = function(func) {
            return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(arg0, arg1, arg2, arg3) {
                MSApp.execUnsafeLocalFunction(function() {
                    return func(arg0, arg1, arg2, arg3)
                })
            } : func
        };
        module.exports = createMicrosoftUnsafeLocalFunction
    }, {}],
    234: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function dangerousStyleValue(name, value, component) {
                if (null == value || "boolean" == typeof value || "" === value) return "";
                if (isNaN(value) || 0 === value || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) return "" + value;
                if ("string" == typeof value) {
                    if ("production" !== process.env.NODE_ENV && component && "0" !== value) {
                        var owner = component._currentElement._owner,
                            ownerName = owner ? owner.getName() : null;
                        ownerName && !styleWarnings[ownerName] && (styleWarnings[ownerName] = {});
                        var warned = !1;
                        if (ownerName) {
                            var warnings = styleWarnings[ownerName];
                            warned = warnings[name], warned || (warnings[name] = !0)
                        }
                        warned || "production" !== process.env.NODE_ENV && warning(!1, "a `%s` tag (owner: `%s`) was passed a numeric string value for CSS property `%s` (value: `%s`) which will be treated as a unitless number in a future version of React.", component._currentElement.type, ownerName || "unknown", name, value)
                    }
                    value = value.trim()
                }
                return value + "px"
            }
            var CSSProperty = require("./CSSProperty"),
                warning = require("fbjs/lib/warning"),
                isUnitlessNumber = CSSProperty.isUnitlessNumber,
                styleWarnings = {};
            module.exports = dangerousStyleValue
        }).call(this, require("_process"))
    }, {
        "./CSSProperty": 137,
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    235: [function(require, module, exports) {
        "use strict";

        function escapeHtml(string) {
            var str = "" + string,
                match = matchHtmlRegExp.exec(str);
            if (!match) return str;
            var escape, html = "",
                index = 0,
                lastIndex = 0;
            for (index = match.index; index < str.length; index++) {
                switch (str.charCodeAt(index)) {
                    case 34:
                        escape = "&quot;";
                        break;
                    case 38:
                        escape = "&amp;";
                        break;
                    case 39:
                        escape = "&#x27;";
                        break;
                    case 60:
                        escape = "&lt;";
                        break;
                    case 62:
                        escape = "&gt;";
                        break;
                    default:
                        continue
                }
                lastIndex !== index && (html += str.substring(lastIndex, index)), lastIndex = index + 1, html += escape
            }
            return lastIndex !== index ? html + str.substring(lastIndex, index) : html
        }

        function escapeTextContentForBrowser(text) {
            return "boolean" == typeof text || "number" == typeof text ? "" + text : escapeHtml(text)
        }
        var matchHtmlRegExp = /["'&<>]/;
        module.exports = escapeTextContentForBrowser
    }, {}],
    236: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function findDOMNode(componentOrElement) {
                if ("production" !== process.env.NODE_ENV) {
                    var owner = ReactCurrentOwner.current;
                    null !== owner && ("production" !== process.env.NODE_ENV && warning(owner._warnedAboutRefsInRender, "%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", owner.getName() || "A component"), owner._warnedAboutRefsInRender = !0)
                }
                if (null == componentOrElement) return null;
                if (1 === componentOrElement.nodeType) return componentOrElement;
                var inst = ReactInstanceMap.get(componentOrElement);
                if (inst) return inst = getHostComponentFromComposite(inst), inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
                "function" == typeof componentOrElement.render ? "production" !== process.env.NODE_ENV ? invariant(!1, "findDOMNode was called on an unmounted component.") : _prodInvariant("44") : "production" !== process.env.NODE_ENV ? invariant(!1, "Element appears to be neither ReactComponent nor DOMNode (keys: %s)", Object.keys(componentOrElement)) : _prodInvariant("45", Object.keys(componentOrElement))
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactCurrentOwner = require("react/lib/ReactCurrentOwner"),
                ReactDOMComponentTree = require("./ReactDOMComponentTree"),
                ReactInstanceMap = require("./ReactInstanceMap"),
                getHostComponentFromComposite = require("./getHostComponentFromComposite"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning");
            module.exports = findDOMNode
        }).call(this, require("_process"))
    }, {
        "./ReactDOMComponentTree": 166,
        "./ReactInstanceMap": 194,
        "./getHostComponentFromComposite": 243,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "react/lib/ReactCurrentOwner": 266
    }],
    237: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
                if (traverseContext && "object" == typeof traverseContext) {
                    var result = traverseContext,
                        keyUnique = void 0 === result[name];
                    "production" !== process.env.NODE_ENV && (ReactComponentTreeHook || (ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook")), keyUnique || "production" !== process.env.NODE_ENV && warning(!1, "flattenChildren(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.%s", KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID))), keyUnique && null != child && (result[name] = child)
                }
            }

            function flattenChildren(children, selfDebugID) {
                if (null == children) return children;
                var result = {};
                return "production" !== process.env.NODE_ENV ? traverseAllChildren(children, function(traverseContext, child, name) {
                    return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID)
                }, result) : traverseAllChildren(children, flattenSingleChildIntoContext, result), result
            }
            var ReactComponentTreeHook, KeyEscapeUtils = require("./KeyEscapeUtils"),
                traverseAllChildren = require("./traverseAllChildren"),
                warning = require("fbjs/lib/warning");
            void 0 !== process && process.env && "test" === process.env.NODE_ENV && (ReactComponentTreeHook = require("react/lib/ReactComponentTreeHook")), module.exports = flattenChildren
        }).call(this, require("_process"))
    }, {
        "./KeyEscapeUtils": 155,
        "./traverseAllChildren": 257,
        _process: 13,
        "fbjs/lib/warning": 66,
        "react/lib/ReactComponentTreeHook": 265
    }],
    238: [function(require, module, exports) {
        "use strict";

        function forEachAccumulated(arr, cb, scope) {
            Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr)
        }
        module.exports = forEachAccumulated
    }, {}],
    239: [function(require, module, exports) {
        "use strict";

        function getEventCharCode(nativeEvent) {
            var charCode, keyCode = nativeEvent.keyCode;
            return "charCode" in nativeEvent ? 0 === (charCode = nativeEvent.charCode) && 13 === keyCode && (charCode = 13) : charCode = keyCode, charCode >= 32 || 13 === charCode ? charCode : 0
        }
        module.exports = getEventCharCode
    }, {}],
    240: [function(require, module, exports) {
        "use strict";

        function getEventKey(nativeEvent) {
            if (nativeEvent.key) {
                var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
                if ("Unidentified" !== key) return key
            }
            if ("keypress" === nativeEvent.type) {
                var charCode = getEventCharCode(nativeEvent);
                return 13 === charCode ? "Enter" : String.fromCharCode(charCode)
            }
            return "keydown" === nativeEvent.type || "keyup" === nativeEvent.type ? translateToKey[nativeEvent.keyCode] || "Unidentified" : ""
        }
        var getEventCharCode = require("./getEventCharCode"),
            normalizeKey = {
                Esc: "Escape",
                Spacebar: " ",
                Left: "ArrowLeft",
                Up: "ArrowUp",
                Right: "ArrowRight",
                Down: "ArrowDown",
                Del: "Delete",
                Win: "OS",
                Menu: "ContextMenu",
                Apps: "ContextMenu",
                Scroll: "ScrollLock",
                MozPrintableKey: "Unidentified"
            },
            translateToKey = {
                8: "Backspace",
                9: "Tab",
                12: "Clear",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                19: "Pause",
                20: "CapsLock",
                27: "Escape",
                32: " ",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "ArrowLeft",
                38: "ArrowUp",
                39: "ArrowRight",
                40: "ArrowDown",
                45: "Insert",
                46: "Delete",
                112: "F1",
                113: "F2",
                114: "F3",
                115: "F4",
                116: "F5",
                117: "F6",
                118: "F7",
                119: "F8",
                120: "F9",
                121: "F10",
                122: "F11",
                123: "F12",
                144: "NumLock",
                145: "ScrollLock",
                224: "Meta"
            };
        module.exports = getEventKey
    }, {
        "./getEventCharCode": 239
    }],
    241: [function(require, module, exports) {
        "use strict";

        function modifierStateGetter(keyArg) {
            var syntheticEvent = this,
                nativeEvent = syntheticEvent.nativeEvent;
            if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
            var keyProp = modifierKeyToProp[keyArg];
            return !!keyProp && !!nativeEvent[keyProp]
        }

        function getEventModifierState(nativeEvent) {
            return modifierStateGetter
        }
        var modifierKeyToProp = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
        };
        module.exports = getEventModifierState
    }, {}],
    242: [function(require, module, exports) {
        "use strict";

        function getEventTarget(nativeEvent) {
            var target = nativeEvent.target || nativeEvent.srcElement || window;
            return target.correspondingUseElement && (target = target.correspondingUseElement), 3 === target.nodeType ? target.parentNode : target
        }
        module.exports = getEventTarget
    }, {}],
    243: [function(require, module, exports) {
        "use strict";

        function getHostComponentFromComposite(inst) {
            for (var type;
                 (type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE;) inst = inst._renderedComponent;
            return type === ReactNodeTypes.HOST ? inst._renderedComponent : type === ReactNodeTypes.EMPTY ? null : void 0
        }
        var ReactNodeTypes = require("./ReactNodeTypes");
        module.exports = getHostComponentFromComposite
    }, {
        "./ReactNodeTypes": 200
    }],
    244: [function(require, module, exports) {
        "use strict";

        function getIteratorFn(maybeIterable) {
            var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
            if ("function" == typeof iteratorFn) return iteratorFn
        }
        var ITERATOR_SYMBOL = "function" == typeof Symbol && Symbol.iterator,
            FAUX_ITERATOR_SYMBOL = "@@iterator";
        module.exports = getIteratorFn
    }, {}],
    245: [function(require, module, exports) {
        "use strict";

        function getLeafNode(node) {
            for (; node && node.firstChild;) node = node.firstChild;
            return node
        }

        function getSiblingNode(node) {
            for (; node;) {
                if (node.nextSibling) return node.nextSibling;
                node = node.parentNode
            }
        }

        function getNodeForCharacterOffset(root, offset) {
            for (var node = getLeafNode(root), nodeStart = 0, nodeEnd = 0; node;) {
                if (3 === node.nodeType) {
                    if (nodeEnd = nodeStart + node.textContent.length, nodeStart <= offset && nodeEnd >= offset) return {
                        node: node,
                        offset: offset - nodeStart
                    };
                    nodeStart = nodeEnd
                }
                node = getLeafNode(getSiblingNode(node))
            }
        }
        module.exports = getNodeForCharacterOffset
    }, {}],
    246: [function(require, module, exports) {
        "use strict";

        function getTextContentAccessor() {
            return !contentKey && ExecutionEnvironment.canUseDOM && (contentKey = "textContent" in document.documentElement ? "textContent" : "innerText"), contentKey
        }
        var ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            contentKey = null;
        module.exports = getTextContentAccessor
    }, {
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    247: [function(require, module, exports) {
        "use strict";

        function makePrefixMap(styleProp, eventName) {
            var prefixes = {};
            return prefixes[styleProp.toLowerCase()] = eventName.toLowerCase(), prefixes["Webkit" + styleProp] = "webkit" + eventName, prefixes["Moz" + styleProp] = "moz" + eventName, prefixes["ms" + styleProp] = "MS" + eventName, prefixes["O" + styleProp] = "o" + eventName.toLowerCase(), prefixes
        }

        function getVendorPrefixedEventName(eventName) {
            if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
            if (!vendorPrefixes[eventName]) return eventName;
            var prefixMap = vendorPrefixes[eventName];
            for (var styleProp in prefixMap)
                if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
            return ""
        }
        var ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            vendorPrefixes = {
                animationend: makePrefixMap("Animation", "AnimationEnd"),
                animationiteration: makePrefixMap("Animation", "AnimationIteration"),
                animationstart: makePrefixMap("Animation", "AnimationStart"),
                transitionend: makePrefixMap("Transition", "TransitionEnd")
            },
            prefixedEventNames = {},
            style = {};
        ExecutionEnvironment.canUseDOM && (style = document.createElement("div").style, "AnimationEvent" in window || (delete vendorPrefixes.animationend.animation, delete vendorPrefixes.animationiteration.animation, delete vendorPrefixes.animationstart.animation), "TransitionEvent" in window || delete vendorPrefixes.transitionend.transition), module.exports = getVendorPrefixedEventName
    }, {
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    248: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getDeclarationErrorAddendum(owner) {
                if (owner) {
                    var name = owner.getName();
                    if (name) return " Check the render method of `" + name + "`."
                }
                return ""
            }

            function isInternalComponentType(type) {
                return "function" == typeof type && void 0 !== type.prototype && "function" == typeof type.prototype.mountComponent && "function" == typeof type.prototype.receiveComponent
            }

            function instantiateReactComponent(node, shouldHaveDebugID) {
                var instance;
                if (null === node || !1 === node) instance = ReactEmptyComponent.create(instantiateReactComponent);
                else if ("object" == typeof node) {
                    var element = node,
                        type = element.type;
                    if ("function" != typeof type && "string" != typeof type) {
                        var info = "";
                        "production" !== process.env.NODE_ENV && (void 0 === type || "object" == typeof type && null !== type && 0 === Object.keys(type).length) && (info += " You likely forgot to export your component from the file it's defined in."), info += getDeclarationErrorAddendum(element._owner), "production" !== process.env.NODE_ENV ? invariant(!1, "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info) : _prodInvariant("130", null == type ? type : typeof type, info)
                    }
                    "string" == typeof element.type ? instance = ReactHostComponent.createInternalComponent(element) : isInternalComponentType(element.type) ? (instance = new element.type(element), instance.getHostNode || (instance.getHostNode = instance.getNativeNode)) : instance = new ReactCompositeComponentWrapper(element)
                } else "string" == typeof node || "number" == typeof node ? instance = ReactHostComponent.createInstanceForText(node) : "production" !== process.env.NODE_ENV ? invariant(!1, "Encountered invalid React node of type %s", typeof node) : _prodInvariant("131", typeof node);
                return "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning("function" == typeof instance.mountComponent && "function" == typeof instance.receiveComponent && "function" == typeof instance.getHostNode && "function" == typeof instance.unmountComponent, "Only React Components can be mounted."), instance._mountIndex = 0, instance._mountImage = null, "production" !== process.env.NODE_ENV && (instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0), "production" !== process.env.NODE_ENV && Object.preventExtensions && Object.preventExtensions(instance), instance
            }
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                ReactCompositeComponent = require("./ReactCompositeComponent"),
                ReactEmptyComponent = require("./ReactEmptyComponent"),
                ReactHostComponent = require("./ReactHostComponent"),
                getNextDebugID = require("react/lib/getNextDebugID"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                ReactCompositeComponentWrapper = function(element) {
                    this.construct(element)
                };
            _assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
                _instantiateReactComponent: instantiateReactComponent
            }), module.exports = instantiateReactComponent
        }).call(this, require("_process"))
    }, {
        "./ReactCompositeComponent": 162,
        "./ReactEmptyComponent": 185,
        "./ReactHostComponent": 190,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "object-assign": 127,
        "react/lib/getNextDebugID": 280
    }],
    249: [function(require, module, exports) {
        "use strict";
        /**
         * Checks if an event is supported in the current execution environment.
         *
         * NOTE: This will not work correctly for non-generic events such as `change`,
         * `reset`, `load`, `error`, and `select`.
         *
         * Borrows from Modernizr.
         *
         * @param {string} eventNameSuffix Event name, e.g. "click".
         * @param {?boolean} capture Check if the capture phase is supported.
         * @return {boolean} True if the event is supported.
         * @internal
         * @license Modernizr 3.0.0pre (Custom Build) | MIT
         */
        function isEventSupported(eventNameSuffix, capture) {
            if (!ExecutionEnvironment.canUseDOM || capture && !("addEventListener" in document)) return !1;
            var eventName = "on" + eventNameSuffix,
                isSupported = eventName in document;
            if (!isSupported) {
                var element = document.createElement("div");
                element.setAttribute(eventName, "return;"), isSupported = "function" == typeof element[eventName]
            }
            return !isSupported && useHasFeature && "wheel" === eventNameSuffix && (isSupported = document.implementation.hasFeature("Events.wheel", "3.0")), isSupported
        }
        var useHasFeature, ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment");
        ExecutionEnvironment.canUseDOM && (useHasFeature = document.implementation && document.implementation.hasFeature && !0 !== document.implementation.hasFeature("", "")), module.exports = isEventSupported
    }, {
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    250: [function(require, module, exports) {
        "use strict";

        function isTextInputElement(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            return "input" === nodeName ? !!supportedInputTypes[elem.type] : "textarea" === nodeName
        }
        var supportedInputTypes = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0
        };
        module.exports = isTextInputElement
    }, {}],
    251: [function(require, module, exports) {
        "use strict";

        function quoteAttributeValueForBrowser(value) {
            return '"' + escapeTextContentForBrowser(value) + '"'
        }
        var escapeTextContentForBrowser = require("./escapeTextContentForBrowser");
        module.exports = quoteAttributeValueForBrowser
    }, {
        "./escapeTextContentForBrowser": 235
    }],
    252: [function(require, module, exports) {
        "use strict";

        function reactProdInvariant(code) {
            for (var argCount = arguments.length - 1, message = "Minified React error #" + code + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=" + code, argIdx = 0; argIdx < argCount; argIdx++) message += "&args[]=" + encodeURIComponent(arguments[argIdx + 1]);
            message += " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
            var error = new Error(message);
            throw error.name = "Invariant Violation", error.framesToPop = 1, error
        }
        module.exports = reactProdInvariant
    }, {}],
    253: [function(require, module, exports) {
        "use strict";
        var ReactMount = require("./ReactMount");
        module.exports = ReactMount.renderSubtreeIntoContainer
    }, {
        "./ReactMount": 198
    }],
    254: [function(require, module, exports) {
        "use strict";
        var reusableSVGContainer, ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            DOMNamespaces = require("./DOMNamespaces"),
            WHITESPACE_TEST = /^[ \r\n\t\f]/,
            NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,
            createMicrosoftUnsafeLocalFunction = require("./createMicrosoftUnsafeLocalFunction"),
            setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
                if (node.namespaceURI !== DOMNamespaces.svg || "innerHTML" in node) node.innerHTML = html;
                else {
                    reusableSVGContainer = reusableSVGContainer || document.createElement("div"), reusableSVGContainer.innerHTML = "<svg>" + html + "</svg>";
                    for (var svgNode = reusableSVGContainer.firstChild; svgNode.firstChild;) node.appendChild(svgNode.firstChild)
                }
            });
        if (ExecutionEnvironment.canUseDOM) {
            var testElement = document.createElement("div");
            testElement.innerHTML = " ", "" === testElement.innerHTML && (setInnerHTML = function(node, html) {
                if (node.parentNode && node.parentNode.replaceChild(node, node), WHITESPACE_TEST.test(html) || "<" === html[0] && NONVISIBLE_TEST.test(html)) {
                    node.innerHTML = String.fromCharCode(65279) + html;
                    var textNode = node.firstChild;
                    1 === textNode.data.length ? node.removeChild(textNode) : textNode.deleteData(0, 1)
                } else node.innerHTML = html
            }), testElement = null
        }
        module.exports = setInnerHTML
    }, {
        "./DOMNamespaces": 143,
        "./createMicrosoftUnsafeLocalFunction": 233,
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    255: [function(require, module, exports) {
        "use strict";
        var ExecutionEnvironment = require("fbjs/lib/ExecutionEnvironment"),
            escapeTextContentForBrowser = require("./escapeTextContentForBrowser"),
            setInnerHTML = require("./setInnerHTML"),
            setTextContent = function(node, text) {
                if (text) {
                    var firstChild = node.firstChild;
                    if (firstChild && firstChild === node.lastChild && 3 === firstChild.nodeType) return void(firstChild.nodeValue = text)
                }
                node.textContent = text
            };
        ExecutionEnvironment.canUseDOM && ("textContent" in document.documentElement || (setTextContent = function(node, text) {
            if (3 === node.nodeType) return void(node.nodeValue = text);
            setInnerHTML(node, escapeTextContentForBrowser(text))
        })), module.exports = setTextContent
    }, {
        "./escapeTextContentForBrowser": 235,
        "./setInnerHTML": 254,
        "fbjs/lib/ExecutionEnvironment": 45
    }],
    256: [function(require, module, exports) {
        "use strict";

        function shouldUpdateReactComponent(prevElement, nextElement) {
            var prevEmpty = null === prevElement || !1 === prevElement,
                nextEmpty = null === nextElement || !1 === nextElement;
            if (prevEmpty || nextEmpty) return prevEmpty === nextEmpty;
            var prevType = typeof prevElement,
                nextType = typeof nextElement;
            return "string" === prevType || "number" === prevType ? "string" === nextType || "number" === nextType : "object" === nextType && prevElement.type === nextElement.type && prevElement.key === nextElement.key
        }
        module.exports = shouldUpdateReactComponent
    }, {}],
    257: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getComponentKey(component, index) {
                return component && "object" == typeof component && null != component.key ? KeyEscapeUtils.escape(component.key) : index.toString(36)
            }

            function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
                var type = typeof children;
                if ("undefined" !== type && "boolean" !== type || (children = null), null === children || "string" === type || "number" === type || "object" === type && children.$$typeof === REACT_ELEMENT_TYPE) return callback(traverseContext, children, "" === nameSoFar ? SEPARATOR + getComponentKey(children, 0) : nameSoFar), 1;
                var child, nextName, subtreeCount = 0,
                    nextNamePrefix = "" === nameSoFar ? SEPARATOR : nameSoFar + SUBSEPARATOR;
                if (Array.isArray(children))
                    for (var i = 0; i < children.length; i++) child = children[i], nextName = nextNamePrefix + getComponentKey(child, i), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
                else {
                    var iteratorFn = getIteratorFn(children);
                    if (iteratorFn) {
                        var step, iterator = iteratorFn.call(children);
                        if (iteratorFn !== children.entries)
                            for (var ii = 0; !(step = iterator.next()).done;) child = step.value, nextName = nextNamePrefix + getComponentKey(child, ii++), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
                        else {
                            if ("production" !== process.env.NODE_ENV) {
                                var mapsAsChildrenAddendum = "";
                                if (ReactCurrentOwner.current) {
                                    var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                                    mapsAsChildrenOwnerName && (mapsAsChildrenAddendum = " Check the render method of `" + mapsAsChildrenOwnerName + "`.")
                                }
                                "production" !== process.env.NODE_ENV && warning(didWarnAboutMaps, "Using Maps as children is not yet fully supported. It is an experimental feature that might be removed. Convert it to a sequence / iterable of keyed ReactElements instead.%s", mapsAsChildrenAddendum), didWarnAboutMaps = !0
                            }
                            for (; !(step = iterator.next()).done;) {
                                var entry = step.value;
                                entry && (child = entry[1], nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext))
                            }
                        }
                    } else if ("object" === type) {
                        var addendum = "";
                        if ("production" !== process.env.NODE_ENV && (addendum = " If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.", children._isReactElement && (addendum = " It looks like you're using an element created by a different version of React. Make sure to use only one copy of React."), ReactCurrentOwner.current)) {
                            var name = ReactCurrentOwner.current.getName();
                            name && (addendum += " Check the render method of `" + name + "`.")
                        }
                        var childrenString = String(children);
                        "production" !== process.env.NODE_ENV ? invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum) : _prodInvariant("31", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum)
                    }
                }
                return subtreeCount
            }

            function traverseAllChildren(children, callback, traverseContext) {
                return null == children ? 0 : traverseAllChildrenImpl(children, "", callback, traverseContext)
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactCurrentOwner = require("react/lib/ReactCurrentOwner"),
                REACT_ELEMENT_TYPE = require("./ReactElementSymbol"),
                getIteratorFn = require("./getIteratorFn"),
                invariant = require("fbjs/lib/invariant"),
                KeyEscapeUtils = require("./KeyEscapeUtils"),
                warning = require("fbjs/lib/warning"),
                SEPARATOR = ".",
                SUBSEPARATOR = ":",
                didWarnAboutMaps = !1;
            module.exports = traverseAllChildren
        }).call(this, require("_process"))
    }, {
        "./KeyEscapeUtils": 155,
        "./ReactElementSymbol": 184,
        "./getIteratorFn": 244,
        "./reactProdInvariant": 252,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "react/lib/ReactCurrentOwner": 266
    }],
    258: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _assign = require("object-assign"),
                emptyFunction = require("fbjs/lib/emptyFunction"),
                warning = require("fbjs/lib/warning"),
                validateDOMNesting = emptyFunction;
            if ("production" !== process.env.NODE_ENV) {
                var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"],
                    inScopeTags = ["applet", "caption", "html", "table", "td", "th", "marquee", "object", "template", "foreignObject", "desc", "title"],
                    buttonScopeTags = inScopeTags.concat(["button"]),
                    impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"],
                    emptyAncestorInfo = {
                        current: null,
                        formTag: null,
                        aTagInScope: null,
                        buttonTagInScope: null,
                        nobrTagInScope: null,
                        pTagInButtonScope: null,
                        listItemTagAutoclosing: null,
                        dlItemTagAutoclosing: null
                    },
                    updatedAncestorInfo = function(oldInfo, tag, instance) {
                        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo),
                            info = {
                                tag: tag,
                                instance: instance
                            };
                        return -1 !== inScopeTags.indexOf(tag) && (ancestorInfo.aTagInScope = null, ancestorInfo.buttonTagInScope = null, ancestorInfo.nobrTagInScope = null), -1 !== buttonScopeTags.indexOf(tag) && (ancestorInfo.pTagInButtonScope = null), -1 !== specialTags.indexOf(tag) && "address" !== tag && "div" !== tag && "p" !== tag && (ancestorInfo.listItemTagAutoclosing = null, ancestorInfo.dlItemTagAutoclosing = null), ancestorInfo.current = info, "form" === tag && (ancestorInfo.formTag = info), "a" === tag && (ancestorInfo.aTagInScope = info), "button" === tag && (ancestorInfo.buttonTagInScope = info), "nobr" === tag && (ancestorInfo.nobrTagInScope = info), "p" === tag && (ancestorInfo.pTagInButtonScope = info), "li" === tag && (ancestorInfo.listItemTagAutoclosing = info), "dd" !== tag && "dt" !== tag || (ancestorInfo.dlItemTagAutoclosing = info), ancestorInfo
                    },
                    isTagValidWithParent = function(tag, parentTag) {
                        switch (parentTag) {
                            case "select":
                                return "option" === tag || "optgroup" === tag || "#text" === tag;
                            case "optgroup":
                                return "option" === tag || "#text" === tag;
                            case "option":
                                return "#text" === tag;
                            case "tr":
                                return "th" === tag || "td" === tag || "style" === tag || "script" === tag || "template" === tag;
                            case "tbody":
                            case "thead":
                            case "tfoot":
                                return "tr" === tag || "style" === tag || "script" === tag || "template" === tag;
                            case "colgroup":
                                return "col" === tag || "template" === tag;
                            case "table":
                                return "caption" === tag || "colgroup" === tag || "tbody" === tag || "tfoot" === tag || "thead" === tag || "style" === tag || "script" === tag || "template" === tag;
                            case "head":
                                return "base" === tag || "basefont" === tag || "bgsound" === tag || "link" === tag || "meta" === tag || "title" === tag || "noscript" === tag || "noframes" === tag || "style" === tag || "script" === tag || "template" === tag;
                            case "html":
                                return "head" === tag || "body" === tag;
                            case "#document":
                                return "html" === tag
                        }
                        switch (tag) {
                            case "h1":
                            case "h2":
                            case "h3":
                            case "h4":
                            case "h5":
                            case "h6":
                                return "h1" !== parentTag && "h2" !== parentTag && "h3" !== parentTag && "h4" !== parentTag && "h5" !== parentTag && "h6" !== parentTag;
                            case "rp":
                            case "rt":
                                return -1 === impliedEndTags.indexOf(parentTag);
                            case "body":
                            case "caption":
                            case "col":
                            case "colgroup":
                            case "frame":
                            case "head":
                            case "html":
                            case "tbody":
                            case "td":
                            case "tfoot":
                            case "th":
                            case "thead":
                            case "tr":
                                return null == parentTag
                        }
                        return !0
                    },
                    findInvalidAncestorForTag = function(tag, ancestorInfo) {
                        switch (tag) {
                            case "address":
                            case "article":
                            case "aside":
                            case "blockquote":
                            case "center":
                            case "details":
                            case "dialog":
                            case "dir":
                            case "div":
                            case "dl":
                            case "fieldset":
                            case "figcaption":
                            case "figure":
                            case "footer":
                            case "header":
                            case "hgroup":
                            case "main":
                            case "menu":
                            case "nav":
                            case "ol":
                            case "p":
                            case "section":
                            case "summary":
                            case "ul":
                            case "pre":
                            case "listing":
                            case "table":
                            case "hr":
                            case "xmp":
                            case "h1":
                            case "h2":
                            case "h3":
                            case "h4":
                            case "h5":
                            case "h6":
                                return ancestorInfo.pTagInButtonScope;
                            case "form":
                                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
                            case "li":
                                return ancestorInfo.listItemTagAutoclosing;
                            case "dd":
                            case "dt":
                                return ancestorInfo.dlItemTagAutoclosing;
                            case "button":
                                return ancestorInfo.buttonTagInScope;
                            case "a":
                                return ancestorInfo.aTagInScope;
                            case "nobr":
                                return ancestorInfo.nobrTagInScope
                        }
                        return null
                    },
                    findOwnerStack = function(instance) {
                        if (!instance) return [];
                        var stack = [];
                        do {
                            stack.push(instance)
                        } while (instance = instance._currentElement._owner);
                        return stack.reverse(), stack
                    },
                    didWarn = {};
                validateDOMNesting = function(childTag, childText, childInstance, ancestorInfo) {
                    ancestorInfo = ancestorInfo || emptyAncestorInfo;
                    var parentInfo = ancestorInfo.current,
                        parentTag = parentInfo && parentInfo.tag;
                    null != childText && ("production" !== process.env.NODE_ENV && warning(null == childTag, "validateDOMNesting: when childText is passed, childTag should be null"), childTag = "#text");
                    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo,
                        invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo),
                        problematic = invalidParent || invalidAncestor;
                    if (problematic) {
                        var i, ancestorTag = problematic.tag,
                            ancestorInstance = problematic.instance,
                            childOwner = childInstance && childInstance._currentElement._owner,
                            ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner,
                            childOwners = findOwnerStack(childOwner),
                            ancestorOwners = findOwnerStack(ancestorOwner),
                            minStackLen = Math.min(childOwners.length, ancestorOwners.length),
                            deepestCommon = -1;
                        for (i = 0; i < minStackLen && childOwners[i] === ancestorOwners[i]; i++) deepestCommon = i;
                        var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function(inst) {
                                return inst.getName() || "(unknown)"
                            }),
                            ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function(inst) {
                                return inst.getName() || "(unknown)"
                            }),
                            ownerInfo = [].concat(-1 !== deepestCommon ? childOwners[deepestCommon].getName() || "(unknown)" : [], ancestorOwnerNames, ancestorTag, invalidAncestor ? ["..."] : [], childOwnerNames, childTag).join(" > "),
                            warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag + "|" + ownerInfo;
                        if (didWarn[warnKey]) return;
                        didWarn[warnKey] = !0;
                        var tagDisplayName = childTag,
                            whitespaceInfo = "";
                        if ("#text" === childTag ? /\S/.test(childText) ? tagDisplayName = "Text nodes" : (tagDisplayName = "Whitespace text nodes", whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : tagDisplayName = "<" + childTag + ">", invalidParent) {
                            var info = "";
                            "table" === ancestorTag && "tr" === childTag && (info += " Add a <tbody> to your code to match the DOM tree generated by the browser."), "production" !== process.env.NODE_ENV && warning(!1, "validateDOMNesting(...): %s cannot appear as a child of <%s>.%s See %s.%s", tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info)
                        } else "production" !== process.env.NODE_ENV && warning(!1, "validateDOMNesting(...): %s cannot appear as a descendant of <%s>. See %s.", tagDisplayName, ancestorTag, ownerInfo)
                    }
                }, validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo, validateDOMNesting.isTagValidInContext = function(tag, ancestorInfo) {
                    ancestorInfo = ancestorInfo || emptyAncestorInfo;
                    var parentInfo = ancestorInfo.current,
                        parentTag = parentInfo && parentInfo.tag;
                    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo)
                }
            }
            module.exports = validateDOMNesting
        }).call(this, require("_process"))
    }, {
        _process: 13,
        "fbjs/lib/emptyFunction": 51,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    259: [function(require, module, exports) {
        arguments[4][155][0].apply(exports, arguments)
    }, {
        dup: 155
    }],
    260: [function(require, module, exports) {
        arguments[4][157][0].apply(exports, arguments)
    }, {
        "./reactProdInvariant": 282,
        _process: 13,
        dup: 157,
        "fbjs/lib/invariant": 59
    }],
    261: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var _assign = require("object-assign"),
                ReactChildren = require("./ReactChildren"),
                ReactComponent = require("./ReactComponent"),
                ReactPureComponent = require("./ReactPureComponent"),
                ReactClass = require("./ReactClass"),
                ReactDOMFactories = require("./ReactDOMFactories"),
                ReactElement = require("./ReactElement"),
                ReactPropTypes = require("./ReactPropTypes"),
                ReactVersion = require("./ReactVersion"),
                onlyChild = require("./onlyChild"),
                warning = require("fbjs/lib/warning"),
                createElement = ReactElement.createElement,
                createFactory = ReactElement.createFactory,
                cloneElement = ReactElement.cloneElement;
            if ("production" !== process.env.NODE_ENV) {
                var canDefineProperty = require("./canDefineProperty"),
                    ReactElementValidator = require("./ReactElementValidator"),
                    didWarnPropTypesDeprecated = !1;
                createElement = ReactElementValidator.createElement, createFactory = ReactElementValidator.createFactory, cloneElement = ReactElementValidator.cloneElement
            }
            var __spread = _assign;
            if ("production" !== process.env.NODE_ENV) {
                var warned = !1;
                __spread = function() {
                    return "production" !== process.env.NODE_ENV && warning(warned, "React.__spread is deprecated and should not be used. Use Object.assign directly or another helper function with similar semantics. You may be seeing this warning due to your compiler. See https://fb.me/react-spread-deprecation for more details."), warned = !0, _assign.apply(null, arguments)
                }
            }
            var React = {
                Children: {
                    map: ReactChildren.map,
                    forEach: ReactChildren.forEach,
                    count: ReactChildren.count,
                    toArray: ReactChildren.toArray,
                    only: onlyChild
                },
                Component: ReactComponent,
                PureComponent: ReactPureComponent,
                createElement: createElement,
                cloneElement: cloneElement,
                isValidElement: ReactElement.isValidElement,
                PropTypes: ReactPropTypes,
                createClass: ReactClass.createClass,
                createFactory: createFactory,
                createMixin: function(mixin) {
                    return mixin
                },
                DOM: ReactDOMFactories,
                version: ReactVersion,
                __spread: __spread
            };
            "production" !== process.env.NODE_ENV && canDefineProperty && Object.defineProperty(React, "PropTypes", {
                get: function() {
                    return "production" !== process.env.NODE_ENV && warning(didWarnPropTypesDeprecated, "Accessing PropTypes via the main React package is deprecated. Use the prop-types package from npm instead."), didWarnPropTypesDeprecated = !0, ReactPropTypes
                }
            }), module.exports = React
        }).call(this, require("_process"))
    }, {
        "./ReactChildren": 262,
        "./ReactClass": 263,
        "./ReactComponent": 264,
        "./ReactDOMFactories": 267,
        "./ReactElement": 268,
        "./ReactElementValidator": 270,
        "./ReactPropTypes": 273,
        "./ReactPureComponent": 275,
        "./ReactVersion": 276,
        "./canDefineProperty": 277,
        "./onlyChild": 281,
        _process: 13,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    262: [function(require, module, exports) {
        "use strict";

        function escapeUserProvidedKey(text) {
            return ("" + text).replace(userProvidedKeyEscapeRegex, "$&/")
        }

        function ForEachBookKeeping(forEachFunction, forEachContext) {
            this.func = forEachFunction, this.context = forEachContext, this.count = 0
        }

        function forEachSingleChild(bookKeeping, child, name) {
            var func = bookKeeping.func,
                context = bookKeeping.context;
            func.call(context, child, bookKeeping.count++)
        }

        function forEachChildren(children, forEachFunc, forEachContext) {
            if (null == children) return children;
            var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
            traverseAllChildren(children, forEachSingleChild, traverseContext), ForEachBookKeeping.release(traverseContext)
        }

        function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
            this.result = mapResult, this.keyPrefix = keyPrefix, this.func = mapFunction, this.context = mapContext, this.count = 0
        }

        function mapSingleChildIntoContext(bookKeeping, child, childKey) {
            var result = bookKeeping.result,
                keyPrefix = bookKeeping.keyPrefix,
                func = bookKeeping.func,
                context = bookKeeping.context,
                mappedChild = func.call(context, child, bookKeeping.count++);
            Array.isArray(mappedChild) ? mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument) : null != mappedChild && (ReactElement.isValidElement(mappedChild) && (mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (!mappedChild.key || child && child.key === mappedChild.key ? "" : escapeUserProvidedKey(mappedChild.key) + "/") + childKey)), result.push(mappedChild))
        }

        function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
            var escapedPrefix = "";
            null != prefix && (escapedPrefix = escapeUserProvidedKey(prefix) + "/");
            var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
            traverseAllChildren(children, mapSingleChildIntoContext, traverseContext), MapBookKeeping.release(traverseContext)
        }

        function mapChildren(children, func, context) {
            if (null == children) return children;
            var result = [];
            return mapIntoWithKeyPrefixInternal(children, result, null, func, context), result
        }

        function forEachSingleChildDummy(traverseContext, child, name) {
            return null
        }

        function countChildren(children, context) {
            return traverseAllChildren(children, forEachSingleChildDummy, null)
        }

        function toArray(children) {
            var result = [];
            return mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument), result
        }
        var PooledClass = require("./PooledClass"),
            ReactElement = require("./ReactElement"),
            emptyFunction = require("fbjs/lib/emptyFunction"),
            traverseAllChildren = require("./traverseAllChildren"),
            twoArgumentPooler = PooledClass.twoArgumentPooler,
            fourArgumentPooler = PooledClass.fourArgumentPooler,
            userProvidedKeyEscapeRegex = /\/+/g;
        ForEachBookKeeping.prototype.destructor = function() {
            this.func = null, this.context = null, this.count = 0
        }, PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler), MapBookKeeping.prototype.destructor = function() {
            this.result = null, this.keyPrefix = null, this.func = null, this.context = null, this.count = 0
        }, PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
        var ReactChildren = {
            forEach: forEachChildren,
            map: mapChildren,
            mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
            count: countChildren,
            toArray: toArray
        };
        module.exports = ReactChildren
    }, {
        "./PooledClass": 260,
        "./ReactElement": 268,
        "./traverseAllChildren": 283,
        "fbjs/lib/emptyFunction": 51
    }],
    263: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function identity(fn) {
                return fn
            }

            function validateTypeDef(Constructor, typeDef, location) {
                for (var propName in typeDef) typeDef.hasOwnProperty(propName) && "production" !== process.env.NODE_ENV && warning("function" == typeof typeDef[propName], "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", Constructor.displayName || "ReactClass", ReactPropTypeLocationNames[location], propName)
            }

            function validateMethodOverride(isAlreadyDefined, name) {
                var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
                ReactClassMixin.hasOwnProperty(name) && "OVERRIDE_BASE" !== specPolicy && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", name) : _prodInvariant("73", name)), isAlreadyDefined && "DEFINE_MANY" !== specPolicy && "DEFINE_MANY_MERGED" !== specPolicy && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name) : _prodInvariant("74", name))
            }

            function mixSpecIntoComponent(Constructor, spec) {
                if (spec) {
                    "function" == typeof spec && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.") : _prodInvariant("75")), ReactElement.isValidElement(spec) && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.") : _prodInvariant("76"));
                    var proto = Constructor.prototype,
                        autoBindPairs = proto.__reactAutoBindPairs;
                    spec.hasOwnProperty(MIXINS_KEY) && RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
                    for (var name in spec)
                        if (spec.hasOwnProperty(name) && name !== MIXINS_KEY) {
                            var property = spec[name],
                                isAlreadyDefined = proto.hasOwnProperty(name);
                            if (validateMethodOverride(isAlreadyDefined, name), RESERVED_SPEC_KEYS.hasOwnProperty(name)) RESERVED_SPEC_KEYS[name](Constructor, property);
                            else {
                                var isReactClassMethod = ReactClassInterface.hasOwnProperty(name),
                                    isFunction = "function" == typeof property,
                                    shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && !1 !== spec.autobind;
                                if (shouldAutoBind) autoBindPairs.push(name, property), proto[name] = property;
                                else if (isAlreadyDefined) {
                                    var specPolicy = ReactClassInterface[name];
                                    (!isReactClassMethod || "DEFINE_MANY_MERGED" !== specPolicy && "DEFINE_MANY" !== specPolicy) && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", specPolicy, name) : _prodInvariant("77", specPolicy, name)), "DEFINE_MANY_MERGED" === specPolicy ? proto[name] = createMergedResultFunction(proto[name], property) : "DEFINE_MANY" === specPolicy && (proto[name] = createChainedFunction(proto[name], property))
                                } else proto[name] = property, "production" !== process.env.NODE_ENV && "function" == typeof property && spec.displayName && (proto[name].displayName = spec.displayName + "_" + name)
                            }
                        }
                } else if ("production" !== process.env.NODE_ENV) {
                    var typeofSpec = typeof spec,
                        isMixinValid = "object" === typeofSpec && null !== spec;
                    "production" !== process.env.NODE_ENV && warning(isMixinValid, "%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.", Constructor.displayName || "ReactClass", null === spec ? null : typeofSpec)
                }
            }

            function mixStaticSpecIntoComponent(Constructor, statics) {
                if (statics)
                    for (var name in statics) {
                        var property = statics[name];
                        if (statics.hasOwnProperty(name)) {
                            var isReserved = name in RESERVED_SPEC_KEYS;
                            isReserved && ("production" !== process.env.NODE_ENV ? invariant(!1, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant("78", name));
                            var isInherited = name in Constructor;
                            isInherited && ("production" !== process.env.NODE_ENV ? invariant(!1, "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", name) : _prodInvariant("79", name)), Constructor[name] = property
                        }
                    }
            }

            function mergeIntoWithNoDuplicateKeys(one, two) {
                one && two && "object" == typeof one && "object" == typeof two || ("production" !== process.env.NODE_ENV ? invariant(!1, "mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.") : _prodInvariant("80"));
                for (var key in two) two.hasOwnProperty(key) && (void 0 !== one[key] && ("production" !== process.env.NODE_ENV ? invariant(!1, "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", key) : _prodInvariant("81", key)), one[key] = two[key]);
                return one
            }

            function createMergedResultFunction(one, two) {
                return function() {
                    var a = one.apply(this, arguments),
                        b = two.apply(this, arguments);
                    if (null == a) return b;
                    if (null == b) return a;
                    var c = {};
                    return mergeIntoWithNoDuplicateKeys(c, a), mergeIntoWithNoDuplicateKeys(c, b), c
                }
            }

            function createChainedFunction(one, two) {
                return function() {
                    one.apply(this, arguments), two.apply(this, arguments)
                }
            }

            function bindAutoBindMethod(component, method) {
                var boundMethod = method.bind(component);
                if ("production" !== process.env.NODE_ENV) {
                    boundMethod.__reactBoundContext = component, boundMethod.__reactBoundMethod = method, boundMethod.__reactBoundArguments = null;
                    var componentName = component.constructor.displayName,
                        _bind = boundMethod.bind;
                    boundMethod.bind = function(newThis) {
                        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) args[_key - 1] = arguments[_key];
                        if (newThis !== component && null !== newThis) "production" !== process.env.NODE_ENV && warning(!1, "bind(): React component methods may only be bound to the component instance. See %s", componentName);
                        else if (!args.length) return "production" !== process.env.NODE_ENV && warning(!1, "bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s", componentName), boundMethod;
                        var reboundMethod = _bind.apply(boundMethod, arguments);
                        return reboundMethod.__reactBoundContext = component, reboundMethod.__reactBoundMethod = method, reboundMethod.__reactBoundArguments = args, reboundMethod
                    }
                }
                return boundMethod
            }

            function bindAutoBindMethods(component) {
                for (var pairs = component.__reactAutoBindPairs, i = 0; i < pairs.length; i += 2) {
                    var autoBindKey = pairs[i],
                        method = pairs[i + 1];
                    component[autoBindKey] = bindAutoBindMethod(component, method)
                }
            }
            var _prodInvariant = require("./reactProdInvariant"),
                _assign = require("object-assign"),
                ReactComponent = require("./ReactComponent"),
                ReactElement = require("./ReactElement"),
                ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames"),
                ReactNoopUpdateQueue = require("./ReactNoopUpdateQueue"),
                emptyObject = require("fbjs/lib/emptyObject"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                MIXINS_KEY = "mixins",
                injectedMixins = [],
                ReactClassInterface = {
                    mixins: "DEFINE_MANY",
                    statics: "DEFINE_MANY",
                    propTypes: "DEFINE_MANY",
                    contextTypes: "DEFINE_MANY",
                    childContextTypes: "DEFINE_MANY",
                    getDefaultProps: "DEFINE_MANY_MERGED",
                    getInitialState: "DEFINE_MANY_MERGED",
                    getChildContext: "DEFINE_MANY_MERGED",
                    render: "DEFINE_ONCE",
                    componentWillMount: "DEFINE_MANY",
                    componentDidMount: "DEFINE_MANY",
                    componentWillReceiveProps: "DEFINE_MANY",
                    shouldComponentUpdate: "DEFINE_ONCE",
                    componentWillUpdate: "DEFINE_MANY",
                    componentDidUpdate: "DEFINE_MANY",
                    componentWillUnmount: "DEFINE_MANY",
                    updateComponent: "OVERRIDE_BASE"
                },
                RESERVED_SPEC_KEYS = {
                    displayName: function(Constructor, displayName) {
                        Constructor.displayName = displayName
                    },
                    mixins: function(Constructor, mixins) {
                        if (mixins)
                            for (var i = 0; i < mixins.length; i++) mixSpecIntoComponent(Constructor, mixins[i])
                    },
                    childContextTypes: function(Constructor, childContextTypes) {
                        "production" !== process.env.NODE_ENV && validateTypeDef(Constructor, childContextTypes, "childContext"), Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes)
                    },
                    contextTypes: function(Constructor, contextTypes) {
                        "production" !== process.env.NODE_ENV && validateTypeDef(Constructor, contextTypes, "context"), Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes)
                    },
                    getDefaultProps: function(Constructor, getDefaultProps) {
                        Constructor.getDefaultProps ? Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps) : Constructor.getDefaultProps = getDefaultProps
                    },
                    propTypes: function(Constructor, propTypes) {
                        "production" !== process.env.NODE_ENV && validateTypeDef(Constructor, propTypes, "prop"), Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes)
                    },
                    statics: function(Constructor, statics) {
                        mixStaticSpecIntoComponent(Constructor, statics)
                    },
                    autobind: function() {}
                },
                ReactClassMixin = {
                    replaceState: function(newState, callback) {
                        this.updater.enqueueReplaceState(this, newState), callback && this.updater.enqueueCallback(this, callback, "replaceState")
                    },
                    isMounted: function() {
                        return this.updater.isMounted(this)
                    }
                },
                ReactClassComponent = function() {};
            _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
            var didWarnDeprecated = !1,
                ReactClass = {
                    createClass: function(spec) {
                        "production" !== process.env.NODE_ENV && ("production" !== process.env.NODE_ENV && warning(didWarnDeprecated, "%s: React.createClass is deprecated and will be removed in version 16. Use plain JavaScript classes instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement.", spec && spec.displayName || "A Component"), didWarnDeprecated = !0);
                        var Constructor = identity(function(props, context, updater) {
                            "production" !== process.env.NODE_ENV && "production" !== process.env.NODE_ENV && warning(this instanceof Constructor, "Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory"), this.__reactAutoBindPairs.length && bindAutoBindMethods(this), this.props = props, this.context = context, this.refs = emptyObject, this.updater = updater || ReactNoopUpdateQueue, this.state = null;
                            var initialState = this.getInitialState ? this.getInitialState() : null;
                            "production" !== process.env.NODE_ENV && void 0 === initialState && this.getInitialState._isMockFunction && (initialState = null), ("object" != typeof initialState || Array.isArray(initialState)) && ("production" !== process.env.NODE_ENV ? invariant(!1, "%s.getInitialState(): must return an object or null", Constructor.displayName || "ReactCompositeComponent") : _prodInvariant("82", Constructor.displayName || "ReactCompositeComponent")), this.state = initialState
                        });
                        Constructor.prototype = new ReactClassComponent, Constructor.prototype.constructor = Constructor, Constructor.prototype.__reactAutoBindPairs = [], injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor)), mixSpecIntoComponent(Constructor, spec), Constructor.getDefaultProps && (Constructor.defaultProps = Constructor.getDefaultProps()), "production" !== process.env.NODE_ENV && (Constructor.getDefaultProps && (Constructor.getDefaultProps.isReactClassApproved = {}), Constructor.prototype.getInitialState && (Constructor.prototype.getInitialState.isReactClassApproved = {})), Constructor.prototype.render || ("production" !== process.env.NODE_ENV ? invariant(!1, "createClass(...): Class specification must implement a `render` method.") : _prodInvariant("83")), "production" !== process.env.NODE_ENV && ("production" !== process.env.NODE_ENV && warning(!Constructor.prototype.componentShouldUpdate, "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", spec.displayName || "A component"), "production" !== process.env.NODE_ENV && warning(!Constructor.prototype.componentWillRecieveProps, "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", spec.displayName || "A component"));
                        for (var methodName in ReactClassInterface) Constructor.prototype[methodName] || (Constructor.prototype[methodName] = null);
                        return Constructor
                    },
                    injection: {
                        injectMixin: function(mixin) {
                            injectedMixins.push(mixin)
                        }
                    }
                };
            module.exports = ReactClass
        }).call(this, require("_process"))
    }, {
        "./ReactComponent": 264,
        "./ReactElement": 268,
        "./ReactNoopUpdateQueue": 271,
        "./ReactPropTypeLocationNames": 272,
        "./reactProdInvariant": 282,
        _process: 13,
        "fbjs/lib/emptyObject": 52,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    264: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function ReactComponent(props, context, updater) {
                this.props = props, this.context = context, this.refs = emptyObject, this.updater = updater || ReactNoopUpdateQueue
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactNoopUpdateQueue = require("./ReactNoopUpdateQueue"),
                canDefineProperty = require("./canDefineProperty"),
                emptyObject = require("fbjs/lib/emptyObject"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning");
            if (ReactComponent.prototype.isReactComponent = {}, ReactComponent.prototype.setState = function(partialState, callback) {
                    "object" != typeof partialState && "function" != typeof partialState && null != partialState && ("production" !== process.env.NODE_ENV ? invariant(!1, "setState(...): takes an object of state variables to update or a function which returns an object of state variables.") : _prodInvariant("85")), this.updater.enqueueSetState(this, partialState), callback && this.updater.enqueueCallback(this, callback, "setState")
                }, ReactComponent.prototype.forceUpdate = function(callback) {
                    this.updater.enqueueForceUpdate(this), callback && this.updater.enqueueCallback(this, callback, "forceUpdate")
                }, "production" !== process.env.NODE_ENV) {
                var deprecatedAPIs = {
                    isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
                    replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
                };
                for (var fnName in deprecatedAPIs) deprecatedAPIs.hasOwnProperty(fnName) && function(methodName, info) {
                    canDefineProperty && Object.defineProperty(ReactComponent.prototype, methodName, {
                        get: function() {
                            "production" !== process.env.NODE_ENV && warning(!1, "%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1])
                        }
                    })
                }(fnName, deprecatedAPIs[fnName])
            }
            module.exports = ReactComponent
        }).call(this, require("_process"))
    }, {
        "./ReactNoopUpdateQueue": 271,
        "./canDefineProperty": 277,
        "./reactProdInvariant": 282,
        _process: 13,
        "fbjs/lib/emptyObject": 52,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66
    }],
    265: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function isNative(fn) {
                var funcToString = Function.prototype.toString,
                    hasOwnProperty = Object.prototype.hasOwnProperty,
                    reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
                try {
                    var source = funcToString.call(fn);
                    return reIsNative.test(source)
                } catch (err) {
                    return !1
                }
            }

            function purgeDeep(id) {
                var item = getItem(id);
                if (item) {
                    var childIDs = item.childIDs;
                    removeItem(id), childIDs.forEach(purgeDeep)
                }
            }

            function describeComponentFrame(name, source, ownerName) {
                return "\n    in " + (name || "Unknown") + (source ? " (at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + ")" : ownerName ? " (created by " + ownerName + ")" : "")
            }

            function getDisplayName(element) {
                return null == element ? "#empty" : "string" == typeof element || "number" == typeof element ? "#text" : "string" == typeof element.type ? element.type : element.type.displayName || element.type.name || "Unknown"
            }

            function describeID(id) {
                var ownerName, name = ReactComponentTreeHook.getDisplayName(id),
                    element = ReactComponentTreeHook.getElement(id),
                    ownerID = ReactComponentTreeHook.getOwnerID(id);
                return ownerID && (ownerName = ReactComponentTreeHook.getDisplayName(ownerID)), "production" !== process.env.NODE_ENV && warning(element, "ReactComponentTreeHook: Missing React element for debugID %s when building stack", id), describeComponentFrame(name, element && element._source, ownerName)
            }
            var setItem, getItem, removeItem, getItemIDs, addRoot, removeRoot, getRootIDs, _prodInvariant = require("./reactProdInvariant"),
                ReactCurrentOwner = require("./ReactCurrentOwner"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning"),
                canUseCollections = "function" == typeof Array.from && "function" == typeof Map && isNative(Map) && null != Map.prototype && "function" == typeof Map.prototype.keys && isNative(Map.prototype.keys) && "function" == typeof Set && isNative(Set) && null != Set.prototype && "function" == typeof Set.prototype.keys && isNative(Set.prototype.keys);
            if (canUseCollections) {
                var itemMap = new Map,
                    rootIDSet = new Set;
                setItem = function(id, item) {
                    itemMap.set(id, item)
                }, getItem = function(id) {
                    return itemMap.get(id)
                }, removeItem = function(id) {
                    itemMap.delete(id)
                }, getItemIDs = function() {
                    return Array.from(itemMap.keys())
                }, addRoot = function(id) {
                    rootIDSet.add(id)
                }, removeRoot = function(id) {
                    rootIDSet.delete(id)
                }, getRootIDs = function() {
                    return Array.from(rootIDSet.keys())
                }
            } else {
                var itemByKey = {},
                    rootByKey = {},
                    getKeyFromID = function(id) {
                        return "." + id
                    },
                    getIDFromKey = function(key) {
                        return parseInt(key.substr(1), 10)
                    };
                setItem = function(id, item) {
                    var key = getKeyFromID(id);
                    itemByKey[key] = item
                }, getItem = function(id) {
                    var key = getKeyFromID(id);
                    return itemByKey[key]
                }, removeItem = function(id) {
                    var key = getKeyFromID(id);
                    delete itemByKey[key]
                }, getItemIDs = function() {
                    return Object.keys(itemByKey).map(getIDFromKey)
                }, addRoot = function(id) {
                    var key = getKeyFromID(id);
                    rootByKey[key] = !0
                }, removeRoot = function(id) {
                    var key = getKeyFromID(id);
                    delete rootByKey[key]
                }, getRootIDs = function() {
                    return Object.keys(rootByKey).map(getIDFromKey)
                }
            }
            var unmountedIDs = [],
                ReactComponentTreeHook = {
                    onSetChildren: function(id, nextChildIDs) {
                        var item = getItem(id);
                        item || ("production" !== process.env.NODE_ENV ? invariant(!1, "Item must have been set") : _prodInvariant("144")), item.childIDs = nextChildIDs;
                        for (var i = 0; i < nextChildIDs.length; i++) {
                            var nextChildID = nextChildIDs[i],
                                nextChild = getItem(nextChildID);
                            nextChild || ("production" !== process.env.NODE_ENV ? invariant(!1, "Expected hook events to fire for the child before its parent includes it in onSetChildren().") : _prodInvariant("140")), null == nextChild.childIDs && "object" == typeof nextChild.element && null != nextChild.element && ("production" !== process.env.NODE_ENV ? invariant(!1, "Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().") : _prodInvariant("141")), nextChild.isMounted || ("production" !== process.env.NODE_ENV ? invariant(!1, "Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().") : _prodInvariant("71")), null == nextChild.parentID && (nextChild.parentID = id), nextChild.parentID !== id && ("production" !== process.env.NODE_ENV ? invariant(!1, "Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).", nextChildID, nextChild.parentID, id) : _prodInvariant("142", nextChildID, nextChild.parentID, id))
                        }
                    },
                    onBeforeMountComponent: function(id, element, parentID) {
                        setItem(id, {
                            element: element,
                            parentID: parentID,
                            text: null,
                            childIDs: [],
                            isMounted: !1,
                            updateCount: 0
                        })
                    },
                    onBeforeUpdateComponent: function(id, element) {
                        var item = getItem(id);
                        item && item.isMounted && (item.element = element)
                    },
                    onMountComponent: function(id) {
                        var item = getItem(id);
                        item || ("production" !== process.env.NODE_ENV ? invariant(!1, "Item must have been set") : _prodInvariant("144")), item.isMounted = !0, 0 === item.parentID && addRoot(id)
                    },
                    onUpdateComponent: function(id) {
                        var item = getItem(id);
                        item && item.isMounted && item.updateCount++
                    },
                    onUnmountComponent: function(id) {
                        var item = getItem(id);
                        if (item) {
                            item.isMounted = !1;
                            0 === item.parentID && removeRoot(id)
                        }
                        unmountedIDs.push(id)
                    },
                    purgeUnmountedComponents: function() {
                        if (!ReactComponentTreeHook._preventPurging) {
                            for (var i = 0; i < unmountedIDs.length; i++) {
                                purgeDeep(unmountedIDs[i])
                            }
                            unmountedIDs.length = 0
                        }
                    },
                    isMounted: function(id) {
                        var item = getItem(id);
                        return !!item && item.isMounted
                    },
                    getCurrentStackAddendum: function(topElement) {
                        var info = "";
                        if (topElement) {
                            var name = getDisplayName(topElement),
                                owner = topElement._owner;
                            info += describeComponentFrame(name, topElement._source, owner && owner.getName())
                        }
                        var currentOwner = ReactCurrentOwner.current,
                            id = currentOwner && currentOwner._debugID;
                        return info += ReactComponentTreeHook.getStackAddendumByID(id)
                    },
                    getStackAddendumByID: function(id) {
                        for (var info = ""; id;) info += describeID(id), id = ReactComponentTreeHook.getParentID(id);
                        return info
                    },
                    getChildIDs: function(id) {
                        var item = getItem(id);
                        return item ? item.childIDs : []
                    },
                    getDisplayName: function(id) {
                        var element = ReactComponentTreeHook.getElement(id);
                        return element ? getDisplayName(element) : null
                    },
                    getElement: function(id) {
                        var item = getItem(id);
                        return item ? item.element : null
                    },
                    getOwnerID: function(id) {
                        var element = ReactComponentTreeHook.getElement(id);
                        return element && element._owner ? element._owner._debugID : null
                    },
                    getParentID: function(id) {
                        var item = getItem(id);
                        return item ? item.parentID : null
                    },
                    getSource: function(id) {
                        var item = getItem(id),
                            element = item ? item.element : null;
                        return null != element ? element._source : null
                    },
                    getText: function(id) {
                        var element = ReactComponentTreeHook.getElement(id);
                        return "string" == typeof element ? element : "number" == typeof element ? "" + element : null
                    },
                    getUpdateCount: function(id) {
                        var item = getItem(id);
                        return item ? item.updateCount : 0
                    },
                    getRootIDs: getRootIDs,
                    getRegisteredIDs: getItemIDs
                };
            module.exports = ReactComponentTreeHook
        }).call(this, require("_process"))
    }, {
        "./ReactCurrentOwner": 266,
        "./reactProdInvariant": 282,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66
    }],
    266: [function(require, module, exports) {
        "use strict";
        var ReactCurrentOwner = {
            current: null
        };
        module.exports = ReactCurrentOwner
    }, {}],
    267: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var ReactElement = require("./ReactElement"),
                createDOMFactory = ReactElement.createFactory;
            if ("production" !== process.env.NODE_ENV) {
                createDOMFactory = require("./ReactElementValidator").createFactory
            }
            var ReactDOMFactories = {
                a: createDOMFactory("a"),
                abbr: createDOMFactory("abbr"),
                address: createDOMFactory("address"),
                area: createDOMFactory("area"),
                article: createDOMFactory("article"),
                aside: createDOMFactory("aside"),
                audio: createDOMFactory("audio"),
                b: createDOMFactory("b"),
                base: createDOMFactory("base"),
                bdi: createDOMFactory("bdi"),
                bdo: createDOMFactory("bdo"),
                big: createDOMFactory("big"),
                blockquote: createDOMFactory("blockquote"),
                body: createDOMFactory("body"),
                br: createDOMFactory("br"),
                button: createDOMFactory("button"),
                canvas: createDOMFactory("canvas"),
                caption: createDOMFactory("caption"),
                cite: createDOMFactory("cite"),
                code: createDOMFactory("code"),
                col: createDOMFactory("col"),
                colgroup: createDOMFactory("colgroup"),
                data: createDOMFactory("data"),
                datalist: createDOMFactory("datalist"),
                dd: createDOMFactory("dd"),
                del: createDOMFactory("del"),
                details: createDOMFactory("details"),
                dfn: createDOMFactory("dfn"),
                dialog: createDOMFactory("dialog"),
                div: createDOMFactory("div"),
                dl: createDOMFactory("dl"),
                dt: createDOMFactory("dt"),
                em: createDOMFactory("em"),
                embed: createDOMFactory("embed"),
                fieldset: createDOMFactory("fieldset"),
                figcaption: createDOMFactory("figcaption"),
                figure: createDOMFactory("figure"),
                footer: createDOMFactory("footer"),
                form: createDOMFactory("form"),
                h1: createDOMFactory("h1"),
                h2: createDOMFactory("h2"),
                h3: createDOMFactory("h3"),
                h4: createDOMFactory("h4"),
                h5: createDOMFactory("h5"),
                h6: createDOMFactory("h6"),
                head: createDOMFactory("head"),
                header: createDOMFactory("header"),
                hgroup: createDOMFactory("hgroup"),
                hr: createDOMFactory("hr"),
                html: createDOMFactory("html"),
                i: createDOMFactory("i"),
                iframe: createDOMFactory("iframe"),
                img: createDOMFactory("img"),
                input: createDOMFactory("input"),
                ins: createDOMFactory("ins"),
                kbd: createDOMFactory("kbd"),
                keygen: createDOMFactory("keygen"),
                label: createDOMFactory("label"),
                legend: createDOMFactory("legend"),
                li: createDOMFactory("li"),
                link: createDOMFactory("link"),
                main: createDOMFactory("main"),
                map: createDOMFactory("map"),
                mark: createDOMFactory("mark"),
                menu: createDOMFactory("menu"),
                menuitem: createDOMFactory("menuitem"),
                meta: createDOMFactory("meta"),
                meter: createDOMFactory("meter"),
                nav: createDOMFactory("nav"),
                noscript: createDOMFactory("noscript"),
                object: createDOMFactory("object"),
                ol: createDOMFactory("ol"),
                optgroup: createDOMFactory("optgroup"),
                option: createDOMFactory("option"),
                output: createDOMFactory("output"),
                p: createDOMFactory("p"),
                param: createDOMFactory("param"),
                picture: createDOMFactory("picture"),
                pre: createDOMFactory("pre"),
                progress: createDOMFactory("progress"),
                q: createDOMFactory("q"),
                rp: createDOMFactory("rp"),
                rt: createDOMFactory("rt"),
                ruby: createDOMFactory("ruby"),
                s: createDOMFactory("s"),
                samp: createDOMFactory("samp"),
                script: createDOMFactory("script"),
                section: createDOMFactory("section"),
                select: createDOMFactory("select"),
                small: createDOMFactory("small"),
                source: createDOMFactory("source"),
                span: createDOMFactory("span"),
                strong: createDOMFactory("strong"),
                style: createDOMFactory("style"),
                sub: createDOMFactory("sub"),
                summary: createDOMFactory("summary"),
                sup: createDOMFactory("sup"),
                table: createDOMFactory("table"),
                tbody: createDOMFactory("tbody"),
                td: createDOMFactory("td"),
                textarea: createDOMFactory("textarea"),
                tfoot: createDOMFactory("tfoot"),
                th: createDOMFactory("th"),
                thead: createDOMFactory("thead"),
                time: createDOMFactory("time"),
                title: createDOMFactory("title"),
                tr: createDOMFactory("tr"),
                track: createDOMFactory("track"),
                u: createDOMFactory("u"),
                ul: createDOMFactory("ul"),
                var: createDOMFactory("var"),
                video: createDOMFactory("video"),
                wbr: createDOMFactory("wbr"),
                circle: createDOMFactory("circle"),
                clipPath: createDOMFactory("clipPath"),
                defs: createDOMFactory("defs"),
                ellipse: createDOMFactory("ellipse"),
                g: createDOMFactory("g"),
                image: createDOMFactory("image"),
                line: createDOMFactory("line"),
                linearGradient: createDOMFactory("linearGradient"),
                mask: createDOMFactory("mask"),
                path: createDOMFactory("path"),
                pattern: createDOMFactory("pattern"),
                polygon: createDOMFactory("polygon"),
                polyline: createDOMFactory("polyline"),
                radialGradient: createDOMFactory("radialGradient"),
                rect: createDOMFactory("rect"),
                stop: createDOMFactory("stop"),
                svg: createDOMFactory("svg"),
                text: createDOMFactory("text"),
                tspan: createDOMFactory("tspan")
            };
            module.exports = ReactDOMFactories
        }).call(this, require("_process"))
    }, {
        "./ReactElement": 268,
        "./ReactElementValidator": 270,
        _process: 13
    }],
    268: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function hasValidRef(config) {
                if ("production" !== process.env.NODE_ENV && hasOwnProperty.call(config, "ref")) {
                    var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                    if (getter && getter.isReactWarning) return !1
                }
                return void 0 !== config.ref
            }

            function hasValidKey(config) {
                if ("production" !== process.env.NODE_ENV && hasOwnProperty.call(config, "key")) {
                    var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                    if (getter && getter.isReactWarning) return !1
                }
                return void 0 !== config.key
            }

            function defineKeyPropWarningGetter(props, displayName) {
                var warnAboutAccessingKey = function() {
                    specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, "production" !== process.env.NODE_ENV && warning(!1, "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)", displayName))
                };
                warnAboutAccessingKey.isReactWarning = !0, Object.defineProperty(props, "key", {
                    get: warnAboutAccessingKey,
                    configurable: !0
                })
            }

            function defineRefPropWarningGetter(props, displayName) {
                var warnAboutAccessingRef = function() {
                    specialPropRefWarningShown || (specialPropRefWarningShown = !0, "production" !== process.env.NODE_ENV && warning(!1, "%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)", displayName))
                };
                warnAboutAccessingRef.isReactWarning = !0, Object.defineProperty(props, "ref", {
                    get: warnAboutAccessingRef,
                    configurable: !0
                })
            }
            var specialPropKeyWarningShown, specialPropRefWarningShown, _assign = require("object-assign"),
                ReactCurrentOwner = require("./ReactCurrentOwner"),
                warning = require("fbjs/lib/warning"),
                canDefineProperty = require("./canDefineProperty"),
                hasOwnProperty = Object.prototype.hasOwnProperty,
                REACT_ELEMENT_TYPE = require("./ReactElementSymbol"),
                RESERVED_PROPS = {
                    key: !0,
                    ref: !0,
                    __self: !0,
                    __source: !0
                },
                ReactElement = function(type, key, ref, self, source, owner, props) {
                    var element = {
                        $$typeof: REACT_ELEMENT_TYPE,
                        type: type,
                        key: key,
                        ref: ref,
                        props: props,
                        _owner: owner
                    };
                    return "production" !== process.env.NODE_ENV && (element._store = {}, canDefineProperty ? (Object.defineProperty(element._store, "validated", {
                        configurable: !1,
                        enumerable: !1,
                        writable: !0,
                        value: !1
                    }), Object.defineProperty(element, "_self", {
                        configurable: !1,
                        enumerable: !1,
                        writable: !1,
                        value: self
                    }), Object.defineProperty(element, "_source", {
                        configurable: !1,
                        enumerable: !1,
                        writable: !1,
                        value: source
                    })) : (element._store.validated = !1, element._self = self, element._source = source), Object.freeze && (Object.freeze(element.props), Object.freeze(element))), element
                };
            ReactElement.createElement = function(type, config, children) {
                var propName, props = {},
                    key = null,
                    ref = null,
                    self = null,
                    source = null;
                if (null != config) {
                    hasValidRef(config) && (ref = config.ref), hasValidKey(config) && (key = "" + config.key), self = void 0 === config.__self ? null : config.__self, source = void 0 === config.__source ? null : config.__source;
                    for (propName in config) hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (props[propName] = config[propName])
                }
                var childrenLength = arguments.length - 2;
                if (1 === childrenLength) props.children = children;
                else if (childrenLength > 1) {
                    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++) childArray[i] = arguments[i + 2];
                    "production" !== process.env.NODE_ENV && Object.freeze && Object.freeze(childArray), props.children = childArray
                }
                if (type && type.defaultProps) {
                    var defaultProps = type.defaultProps;
                    for (propName in defaultProps) void 0 === props[propName] && (props[propName] = defaultProps[propName])
                }
                if ("production" !== process.env.NODE_ENV && (key || ref) && (void 0 === props.$$typeof || props.$$typeof !== REACT_ELEMENT_TYPE)) {
                    var displayName = "function" == typeof type ? type.displayName || type.name || "Unknown" : type;
                    key && defineKeyPropWarningGetter(props, displayName), ref && defineRefPropWarningGetter(props, displayName)
                }
                return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props)
            }, ReactElement.createFactory = function(type) {
                var factory = ReactElement.createElement.bind(null, type);
                return factory.type = type, factory
            }, ReactElement.cloneAndReplaceKey = function(oldElement, newKey) {
                return ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props)
            }, ReactElement.cloneElement = function(element, config, children) {
                var propName, props = _assign({}, element.props),
                    key = element.key,
                    ref = element.ref,
                    self = element._self,
                    source = element._source,
                    owner = element._owner;
                if (null != config) {
                    hasValidRef(config) && (ref = config.ref, owner = ReactCurrentOwner.current), hasValidKey(config) && (key = "" + config.key);
                    var defaultProps;
                    element.type && element.type.defaultProps && (defaultProps = element.type.defaultProps);
                    for (propName in config) hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (void 0 === config[propName] && void 0 !== defaultProps ? props[propName] = defaultProps[propName] : props[propName] = config[propName])
                }
                var childrenLength = arguments.length - 2;
                if (1 === childrenLength) props.children = children;
                else if (childrenLength > 1) {
                    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++) childArray[i] = arguments[i + 2];
                    props.children = childArray
                }
                return ReactElement(element.type, key, ref, self, source, owner, props)
            }, ReactElement.isValidElement = function(object) {
                return "object" == typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE
            }, module.exports = ReactElement
        }).call(this, require("_process"))
    }, {
        "./ReactCurrentOwner": 266,
        "./ReactElementSymbol": 269,
        "./canDefineProperty": 277,
        _process: 13,
        "fbjs/lib/warning": 66,
        "object-assign": 127
    }],
    269: [function(require, module, exports) {
        arguments[4][184][0].apply(exports, arguments)
    }, {
        dup: 184
    }],
    270: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getDeclarationErrorAddendum() {
                if (ReactCurrentOwner.current) {
                    var name = ReactCurrentOwner.current.getName();
                    if (name) return " Check the render method of `" + name + "`."
                }
                return ""
            }

            function getSourceInfoErrorAddendum(elementProps) {
                if (null !== elementProps && void 0 !== elementProps && void 0 !== elementProps.__source) {
                    var source = elementProps.__source;
                    return " Check your code at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + "."
                }
                return ""
            }

            function getCurrentComponentErrorInfo(parentType) {
                var info = getDeclarationErrorAddendum();
                if (!info) {
                    var parentName = "string" == typeof parentType ? parentType : parentType.displayName || parentType.name;
                    parentName && (info = " Check the top-level render call using <" + parentName + ">.")
                }
                return info
            }

            function validateExplicitKey(element, parentType) {
                if (element._store && !element._store.validated && null == element.key) {
                    element._store.validated = !0;
                    var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {}),
                        currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
                    if (!memoizer[currentComponentErrorInfo]) {
                        memoizer[currentComponentErrorInfo] = !0;
                        var childOwner = "";
                        element && element._owner && element._owner !== ReactCurrentOwner.current && (childOwner = " It was passed a child from " + element._owner.getName() + "."), "production" !== process.env.NODE_ENV && warning(!1, 'Each child in an array or iterator should have a unique "key" prop.%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element))
                    }
                }
            }

            function validateChildKeys(node, parentType) {
                if ("object" == typeof node)
                    if (Array.isArray(node))
                        for (var i = 0; i < node.length; i++) {
                            var child = node[i];
                            ReactElement.isValidElement(child) && validateExplicitKey(child, parentType)
                        } else if (ReactElement.isValidElement(node)) node._store && (node._store.validated = !0);
                    else if (node) {
                        var iteratorFn = getIteratorFn(node);
                        if (iteratorFn && iteratorFn !== node.entries)
                            for (var step, iterator = iteratorFn.call(node); !(step = iterator.next()).done;) ReactElement.isValidElement(step.value) && validateExplicitKey(step.value, parentType)
                    }
            }

            function validatePropTypes(element) {
                var componentClass = element.type;
                if ("function" == typeof componentClass) {
                    var name = componentClass.displayName || componentClass.name;
                    componentClass.propTypes && checkReactTypeSpec(componentClass.propTypes, element.props, "prop", name, element, null), "function" == typeof componentClass.getDefaultProps && "production" !== process.env.NODE_ENV && warning(componentClass.getDefaultProps.isReactClassApproved, "getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")
                }
            }
            var ReactCurrentOwner = require("./ReactCurrentOwner"),
                ReactComponentTreeHook = require("./ReactComponentTreeHook"),
                ReactElement = require("./ReactElement"),
                checkReactTypeSpec = require("./checkReactTypeSpec"),
                canDefineProperty = require("./canDefineProperty"),
                getIteratorFn = require("./getIteratorFn"),
                warning = require("fbjs/lib/warning"),
                ownerHasKeyUseWarning = {},
                ReactElementValidator = {
                    createElement: function(type, props, children) {
                        var validType = "string" == typeof type || "function" == typeof type;
                        if (!validType && "function" != typeof type && "string" != typeof type) {
                            var info = "";
                            (void 0 === type || "object" == typeof type && null !== type && 0 === Object.keys(type).length) && (info += " You likely forgot to export your component from the file it's defined in.");
                            var sourceInfo = getSourceInfoErrorAddendum(props);
                            info += sourceInfo || getDeclarationErrorAddendum(), info += ReactComponentTreeHook.getCurrentStackAddendum(), "production" !== process.env.NODE_ENV && warning(!1, "React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info)
                        }
                        var element = ReactElement.createElement.apply(this, arguments);
                        if (null == element) return element;
                        if (validType)
                            for (var i = 2; i < arguments.length; i++) validateChildKeys(arguments[i], type);
                        return validatePropTypes(element), element
                    },
                    createFactory: function(type) {
                        var validatedFactory = ReactElementValidator.createElement.bind(null, type);
                        return validatedFactory.type = type, "production" !== process.env.NODE_ENV && canDefineProperty && Object.defineProperty(validatedFactory, "type", {
                            enumerable: !1,
                            get: function() {
                                return "production" !== process.env.NODE_ENV && warning(!1, "Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
                                    value: type
                                }), type
                            }
                        }), validatedFactory
                    },
                    cloneElement: function(element, props, children) {
                        for (var newElement = ReactElement.cloneElement.apply(this, arguments), i = 2; i < arguments.length; i++) validateChildKeys(arguments[i], newElement.type);
                        return validatePropTypes(newElement), newElement
                    }
                };
            module.exports = ReactElementValidator
        }).call(this, require("_process"))
    }, {
        "./ReactComponentTreeHook": 265,
        "./ReactCurrentOwner": 266,
        "./ReactElement": 268,
        "./canDefineProperty": 277,
        "./checkReactTypeSpec": 278,
        "./getIteratorFn": 279,
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    271: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function warnNoop(publicInstance, callerName) {
                if ("production" !== process.env.NODE_ENV) {
                    var constructor = publicInstance.constructor;
                    "production" !== process.env.NODE_ENV && warning(!1, "%s(...): Can only update a mounted or mounting component. This usually means you called %s() on an unmounted component. This is a no-op. Please check the code for the %s component.", callerName, callerName, constructor && (constructor.displayName || constructor.name) || "ReactClass")
                }
            }
            var warning = require("fbjs/lib/warning"),
                ReactNoopUpdateQueue = {
                    isMounted: function(publicInstance) {
                        return !1
                    },
                    enqueueCallback: function(publicInstance, callback) {},
                    enqueueForceUpdate: function(publicInstance) {
                        warnNoop(publicInstance, "forceUpdate")
                    },
                    enqueueReplaceState: function(publicInstance, completeState) {
                        warnNoop(publicInstance, "replaceState")
                    },
                    enqueueSetState: function(publicInstance, partialState) {
                        warnNoop(publicInstance, "setState")
                    }
                };
            module.exports = ReactNoopUpdateQueue
        }).call(this, require("_process"))
    }, {
        _process: 13,
        "fbjs/lib/warning": 66
    }],
    272: [function(require, module, exports) {
        arguments[4][202][0].apply(exports, arguments)
    }, {
        _process: 13,
        dup: 202
    }],
    273: [function(require, module, exports) {
        "use strict";
        var _require = require("./ReactElement"),
            isValidElement = _require.isValidElement,
            factory = require("prop-types/factory");
        module.exports = factory(isValidElement)
    }, {
        "./ReactElement": 268,
        "prop-types/factory": 131
    }],
    274: [function(require, module, exports) {
        arguments[4][203][0].apply(exports, arguments)
    }, {
        dup: 203
    }],
    275: [function(require, module, exports) {
        "use strict";

        function ReactPureComponent(props, context, updater) {
            this.props = props, this.context = context, this.refs = emptyObject, this.updater = updater || ReactNoopUpdateQueue
        }

        function ComponentDummy() {}
        var _assign = require("object-assign"),
            ReactComponent = require("./ReactComponent"),
            ReactNoopUpdateQueue = require("./ReactNoopUpdateQueue"),
            emptyObject = require("fbjs/lib/emptyObject");
        ComponentDummy.prototype = ReactComponent.prototype, ReactPureComponent.prototype = new ComponentDummy, ReactPureComponent.prototype.constructor = ReactPureComponent, _assign(ReactPureComponent.prototype, ReactComponent.prototype), ReactPureComponent.prototype.isPureReactComponent = !0, module.exports = ReactPureComponent
    }, {
        "./ReactComponent": 264,
        "./ReactNoopUpdateQueue": 271,
        "fbjs/lib/emptyObject": 52,
        "object-assign": 127
    }],
    276: [function(require, module, exports) {
        arguments[4][211][0].apply(exports, arguments)
    }, {
        dup: 211
    }],
    277: [function(require, module, exports) {
        (function(process) {
            "use strict";
            var canDefineProperty = !1;
            if ("production" !== process.env.NODE_ENV) try {
                Object.defineProperty({}, "x", {
                    get: function() {}
                }), canDefineProperty = !0
            } catch (x) {}
            module.exports = canDefineProperty
        }).call(this, require("_process"))
    }, {
        _process: 13
    }],
    278: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
                for (var typeSpecName in typeSpecs)
                    if (typeSpecs.hasOwnProperty(typeSpecName)) {
                        var error;
                        try {
                            "function" != typeof typeSpecs[typeSpecName] && ("production" !== process.env.NODE_ENV ? invariant(!1, "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", componentName || "React class", ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant("84", componentName || "React class", ReactPropTypeLocationNames[location], typeSpecName)), error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret)
                        } catch (ex) {
                            error = ex
                        }
                        if ("production" !== process.env.NODE_ENV && warning(!error || error instanceof Error, "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", ReactPropTypeLocationNames[location], typeSpecName, typeof error), error instanceof Error && !(error.message in loggedTypeFailures)) {
                            loggedTypeFailures[error.message] = !0;
                            var componentStackInfo = "";
                            "production" !== process.env.NODE_ENV && (ReactComponentTreeHook || (ReactComponentTreeHook = require("./ReactComponentTreeHook")), null !== debugID ? componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID) : null !== element && (componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element))), "production" !== process.env.NODE_ENV && warning(!1, "Failed %s type: %s%s", location, error.message, componentStackInfo)
                        }
                    }
            }
            var ReactComponentTreeHook, _prodInvariant = require("./reactProdInvariant"),
                ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames"),
                ReactPropTypesSecret = require("./ReactPropTypesSecret"),
                invariant = require("fbjs/lib/invariant"),
                warning = require("fbjs/lib/warning");
            void 0 !== process && process.env && "test" === process.env.NODE_ENV && (ReactComponentTreeHook = require("./ReactComponentTreeHook"));
            var loggedTypeFailures = {};
            module.exports = checkReactTypeSpec
        }).call(this, require("_process"))
    }, {
        "./ReactComponentTreeHook": 265,
        "./ReactPropTypeLocationNames": 272,
        "./ReactPropTypesSecret": 274,
        "./reactProdInvariant": 282,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66
    }],
    279: [function(require, module, exports) {
        arguments[4][244][0].apply(exports, arguments)
    }, {
        dup: 244
    }],
    280: [function(require, module, exports) {
        "use strict";

        function getNextDebugID() {
            return nextDebugID++
        }
        var nextDebugID = 1;
        module.exports = getNextDebugID
    }, {}],
    281: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function onlyChild(children) {
                return ReactElement.isValidElement(children) || ("production" !== process.env.NODE_ENV ? invariant(!1, "React.Children.only expected to receive a single React element child.") : _prodInvariant("143")), children
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactElement = require("./ReactElement"),
                invariant = require("fbjs/lib/invariant");
            module.exports = onlyChild
        }).call(this, require("_process"))
    }, {
        "./ReactElement": 268,
        "./reactProdInvariant": 282,
        _process: 13,
        "fbjs/lib/invariant": 59
    }],
    282: [function(require, module, exports) {
        arguments[4][252][0].apply(exports, arguments)
    }, {
        dup: 252
    }],
    283: [function(require, module, exports) {
        (function(process) {
            "use strict";

            function getComponentKey(component, index) {
                return component && "object" == typeof component && null != component.key ? KeyEscapeUtils.escape(component.key) : index.toString(36)
            }

            function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
                var type = typeof children;
                if ("undefined" !== type && "boolean" !== type || (children = null), null === children || "string" === type || "number" === type || "object" === type && children.$$typeof === REACT_ELEMENT_TYPE) return callback(traverseContext, children, "" === nameSoFar ? SEPARATOR + getComponentKey(children, 0) : nameSoFar), 1;
                var child, nextName, subtreeCount = 0,
                    nextNamePrefix = "" === nameSoFar ? SEPARATOR : nameSoFar + SUBSEPARATOR;
                if (Array.isArray(children))
                    for (var i = 0; i < children.length; i++) child = children[i], nextName = nextNamePrefix + getComponentKey(child, i), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
                else {
                    var iteratorFn = getIteratorFn(children);
                    if (iteratorFn) {
                        var step, iterator = iteratorFn.call(children);
                        if (iteratorFn !== children.entries)
                            for (var ii = 0; !(step = iterator.next()).done;) child = step.value, nextName = nextNamePrefix + getComponentKey(child, ii++), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
                        else {
                            if ("production" !== process.env.NODE_ENV) {
                                var mapsAsChildrenAddendum = "";
                                if (ReactCurrentOwner.current) {
                                    var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                                    mapsAsChildrenOwnerName && (mapsAsChildrenAddendum = " Check the render method of `" + mapsAsChildrenOwnerName + "`.")
                                }
                                "production" !== process.env.NODE_ENV && warning(didWarnAboutMaps, "Using Maps as children is not yet fully supported. It is an experimental feature that might be removed. Convert it to a sequence / iterable of keyed ReactElements instead.%s", mapsAsChildrenAddendum), didWarnAboutMaps = !0
                            }
                            for (; !(step = iterator.next()).done;) {
                                var entry = step.value;
                                entry && (child = entry[1], nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext))
                            }
                        }
                    } else if ("object" === type) {
                        var addendum = "";
                        if ("production" !== process.env.NODE_ENV && (addendum = " If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.", children._isReactElement && (addendum = " It looks like you're using an element created by a different version of React. Make sure to use only one copy of React."), ReactCurrentOwner.current)) {
                            var name = ReactCurrentOwner.current.getName();
                            name && (addendum += " Check the render method of `" + name + "`.")
                        }
                        var childrenString = String(children);
                        "production" !== process.env.NODE_ENV ? invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum) : _prodInvariant("31", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum)
                    }
                }
                return subtreeCount
            }

            function traverseAllChildren(children, callback, traverseContext) {
                return null == children ? 0 : traverseAllChildrenImpl(children, "", callback, traverseContext)
            }
            var _prodInvariant = require("./reactProdInvariant"),
                ReactCurrentOwner = require("./ReactCurrentOwner"),
                REACT_ELEMENT_TYPE = require("./ReactElementSymbol"),
                getIteratorFn = require("./getIteratorFn"),
                invariant = require("fbjs/lib/invariant"),
                KeyEscapeUtils = require("./KeyEscapeUtils"),
                warning = require("fbjs/lib/warning"),
                SEPARATOR = ".",
                SUBSEPARATOR = ":",
                didWarnAboutMaps = !1;
            module.exports = traverseAllChildren
        }).call(this, require("_process"))
    }, {
        "./KeyEscapeUtils": 259,
        "./ReactCurrentOwner": 266,
        "./ReactElementSymbol": 269,
        "./getIteratorFn": 279,
        "./reactProdInvariant": 282,
        _process: 13,
        "fbjs/lib/invariant": 59,
        "fbjs/lib/warning": 66
    }],
    284: [function(require, module, exports) {
        "use strict";
        module.exports = require("./lib/React")
    }, {
        "./lib/React": 261
    }],
    285: [function(require, module, exports) {
        function select(element) {
            var selectedText;
            if ("SELECT" === element.nodeName) element.focus(), selectedText = element.value;
            else if ("INPUT" === element.nodeName || "TEXTAREA" === element.nodeName) {
                var isReadOnly = element.hasAttribute("readonly");
                isReadOnly || element.setAttribute("readonly", ""), element.select(), element.setSelectionRange(0, element.value.length), isReadOnly || element.removeAttribute("readonly"), selectedText = element.value
            } else {
                element.hasAttribute("contenteditable") && element.focus();
                var selection = window.getSelection(),
                    range = document.createRange();
                range.selectNodeContents(element), selection.removeAllRanges(), selection.addRange(range), selectedText = selection.toString()
            }
            return selectedText
        }
        module.exports = select
    }, {}],
    286: [function(require, module, exports) { /*! https://mths.be/includes v0.2.0 by @mathias */
        String.prototype.includes || function() {
            "use strict";
            var toString = {}.toString,
                defineProperty = function() {
                    try {
                        var object = {},
                            $defineProperty = Object.defineProperty,
                            result = $defineProperty(object, object, object) && $defineProperty
                    } catch (error) {}
                    return result
                }(),
                indexOf = "".indexOf,
                includes = function(search) {
                    if (null == this) throw TypeError();
                    var string = String(this);
                    if (search && "[object RegExp]" == toString.call(search)) throw TypeError();
                    var stringLength = string.length,
                        searchString = String(search),
                        searchLength = searchString.length,
                        position = arguments.length > 1 ? arguments[1] : void 0,
                        pos = position ? Number(position) : 0;
                    return pos != pos && (pos = 0), !(searchLength + Math.min(Math.max(pos, 0), stringLength) > stringLength) && -1 != indexOf.call(string, searchString, pos)
                };
            defineProperty ? defineProperty(String.prototype, "includes", {
                value: includes,
                configurable: !0,
                writable: !0
            }) : String.prototype.includes = includes
        }()
    }, {}],
    287: [function(require, module, exports) {
        function count(self, substr) {
            for (var count = 0, pos = self.indexOf(substr); pos >= 0;) count += 1, pos = self.indexOf(substr, pos + 1);
            return count
        }
        module.exports = count
    }, {}],
    288: [function(require, module, exports) {
        function splitLeft(self, sep, maxSplit, limit) {
            if (void 0 === maxSplit) var maxSplit = -1;
            var splitResult = self.split(sep),
                splitPart1 = splitResult.slice(0, maxSplit),
                splitPart2 = splitResult.slice(maxSplit);
            return splitResult = 0 === splitPart2.length ? splitPart1 : splitPart1.concat(splitPart2.join(sep)), void 0 === limit ? splitResult : limit < 0 ? splitResult.slice(limit) : splitResult.slice(0, limit)
        }
        module.exports = splitLeft
    }, {}],
    289: [function(require, module, exports) {
        function splitRight(self, sep, maxSplit, limit) {
            if (void 0 === maxSplit) var maxSplit = -1;
            if (void 0 === limit) var limit = 0;
            for (var splitResult = [self], i = self.length - 1; i >= 0; i--) 0 === splitResult[0].slice(i).indexOf(sep) && (splitResult.length <= maxSplit || -1 === maxSplit) && (splitResult.splice(1, 0, splitResult[0].slice(i + sep.length)), splitResult[0] = splitResult[0].slice(0, i));
            return limit >= 0 ? splitResult.slice(-limit) : splitResult.slice(0, -limit)
        }
        module.exports = splitRight
    }, {}],
    290: [function(require, module, exports) {
        (function() {
            "use strict";

            function initialize(object, s) {
                object.s = null !== s && void 0 !== s ? "string" == typeof s ? s : s.toString() : s, object.orig = s, null !== s && void 0 !== s ? object.__defineGetter__ ? object.__defineGetter__("length", function() {
                    return object.s.length
                }) : object.length = s.length : object.length = -1
            }

            function S(s) {
                initialize(this, s)
            }

            function extendPrototype() {
                for (var name in __sp) ! function(name) {
                    var func = __sp[name];
                    __nsp.hasOwnProperty(name) || (methodsAdded.push(name), __nsp[name] = function() {
                        return String.prototype.s = this, func.apply(this, arguments)
                    })
                }(name)
            }

            function restorePrototype() {
                for (var i = 0; i < methodsAdded.length; ++i) delete String.prototype[methodsAdded[i]];
                methodsAdded.length = 0
            }

            function getNativeStringPropertyNames() {
                var results = [];
                if (Object.getOwnPropertyNames) return results = Object.getOwnPropertyNames(__nsp), results.splice(results.indexOf("valueOf"), 1), results.splice(results.indexOf("toString"), 1), results;
                var stringNames = {};
                for (var name in String.prototype) stringNames[name] = name;
                for (var name in Object.prototype) delete stringNames[name];
                for (var name in stringNames) results.push(name);
                return results
            }

            function Export(str) {
                return new S(str)
            }

            function multiArgs(args, fn) {
                var i, result = [];
                for (i = 0; i < args.length; i++) result.push(args[i]), fn && fn.call(args, args[i], i);
                return result
            }

            function escapeRegExp(s) {
                var c, i, ret = [],
                    re = /^[A-Za-z0-9]+$/;
                for (s = ensureString(s), i = 0; i < s.length; ++i) c = s.charAt(i), re.test(c) ? ret.push(c) : "\\000" === c ? ret.push("\\000") : ret.push("\\" + c);
                return ret.join("")
            }

            function ensureString(string) {
                return null == string ? "" : "" + string
            }
            var ENTITIES = {},
                latin_map = {
                    "Á": "A",
                    "Ă": "A",
                    "Ắ": "A",
                    "Ặ": "A",
                    "Ằ": "A",
                    "Ẳ": "A",
                    "Ẵ": "A",
                    "Ǎ": "A",
                    "Â": "A",
                    "Ấ": "A",
                    "Ậ": "A",
                    "Ầ": "A",
                    "Ẩ": "A",
                    "Ẫ": "A",
                    "Ä": "A",
                    "Ǟ": "A",
                    "Ȧ": "A",
                    "Ǡ": "A",
                    "Ạ": "A",
                    "Ȁ": "A",
                    "À": "A",
                    "Ả": "A",
                    "Ȃ": "A",
                    "Ā": "A",
                    "Ą": "A",
                    "Å": "A",
                    "Ǻ": "A",
                    "Ḁ": "A",
                    "Ⱥ": "A",
                    "Ã": "A",
                    "Ꜳ": "AA",
                    "Æ": "AE",
                    "Ǽ": "AE",
                    "Ǣ": "AE",
                    "Ꜵ": "AO",
                    "Ꜷ": "AU",
                    "Ꜹ": "AV",
                    "Ꜻ": "AV",
                    "Ꜽ": "AY",
                    "Ḃ": "B",
                    "Ḅ": "B",
                    "Ɓ": "B",
                    "Ḇ": "B",
                    "Ƀ": "B",
                    "Ƃ": "B",
                    "Ć": "C",
                    "Č": "C",
                    "Ç": "C",
                    "Ḉ": "C",
                    "Ĉ": "C",
                    "Ċ": "C",
                    "Ƈ": "C",
                    "Ȼ": "C",
                    "Ď": "D",
                    "Ḑ": "D",
                    "Ḓ": "D",
                    "Ḋ": "D",
                    "Ḍ": "D",
                    "Ɗ": "D",
                    "Ḏ": "D",
                    "ǲ": "D",
                    "ǅ": "D",
                    "Đ": "D",
                    "Ƌ": "D",
                    "Ǳ": "DZ",
                    "Ǆ": "DZ",
                    "É": "E",
                    "Ĕ": "E",
                    "Ě": "E",
                    "Ȩ": "E",
                    "Ḝ": "E",
                    "Ê": "E",
                    "Ế": "E",
                    "Ệ": "E",
                    "Ề": "E",
                    "Ể": "E",
                    "Ễ": "E",
                    "Ḙ": "E",
                    "Ë": "E",
                    "Ė": "E",
                    "Ẹ": "E",
                    "Ȅ": "E",
                    "È": "E",
                    "Ẻ": "E",
                    "Ȇ": "E",
                    "Ē": "E",
                    "Ḗ": "E",
                    "Ḕ": "E",
                    "Ę": "E",
                    "Ɇ": "E",
                    "Ẽ": "E",
                    "Ḛ": "E",
                    "Ꝫ": "ET",
                    "Ḟ": "F",
                    "Ƒ": "F",
                    "Ǵ": "G",
                    "Ğ": "G",
                    "Ǧ": "G",
                    "Ģ": "G",
                    "Ĝ": "G",
                    "Ġ": "G",
                    "Ɠ": "G",
                    "Ḡ": "G",
                    "Ǥ": "G",
                    "Ḫ": "H",
                    "Ȟ": "H",
                    "Ḩ": "H",
                    "Ĥ": "H",
                    "Ⱨ": "H",
                    "Ḧ": "H",
                    "Ḣ": "H",
                    "Ḥ": "H",
                    "Ħ": "H",
                    "Í": "I",
                    "Ĭ": "I",
                    "Ǐ": "I",
                    "Î": "I",
                    "Ï": "I",
                    "Ḯ": "I",
                    "İ": "I",
                    "Ị": "I",
                    "Ȉ": "I",
                    "Ì": "I",
                    "Ỉ": "I",
                    "Ȋ": "I",
                    "Ī": "I",
                    "Į": "I",
                    "Ɨ": "I",
                    "Ĩ": "I",
                    "Ḭ": "I",
                    "Ꝺ": "D",
                    "Ꝼ": "F",
                    "Ᵹ": "G",
                    "Ꞃ": "R",
                    "Ꞅ": "S",
                    "Ꞇ": "T",
                    "Ꝭ": "IS",
                    "Ĵ": "J",
                    "Ɉ": "J",
                    "Ḱ": "K",
                    "Ǩ": "K",
                    "Ķ": "K",
                    "Ⱪ": "K",
                    "Ꝃ": "K",
                    "Ḳ": "K",
                    "Ƙ": "K",
                    "Ḵ": "K",
                    "Ꝁ": "K",
                    "Ꝅ": "K",
                    "Ĺ": "L",
                    "Ƚ": "L",
                    "Ľ": "L",
                    "Ļ": "L",
                    "Ḽ": "L",
                    "Ḷ": "L",
                    "Ḹ": "L",
                    "Ⱡ": "L",
                    "Ꝉ": "L",
                    "Ḻ": "L",
                    "Ŀ": "L",
                    "Ɫ": "L",
                    "ǈ": "L",
                    "Ł": "L",
                    "Ǉ": "LJ",
                    "Ḿ": "M",
                    "Ṁ": "M",
                    "Ṃ": "M",
                    "Ɱ": "M",
                    "Ń": "N",
                    "Ň": "N",
                    "Ņ": "N",
                    "Ṋ": "N",
                    "Ṅ": "N",
                    "Ṇ": "N",
                    "Ǹ": "N",
                    "Ɲ": "N",
                    "Ṉ": "N",
                    "Ƞ": "N",
                    "ǋ": "N",
                    "Ñ": "N",
                    "Ǌ": "NJ",
                    "Ó": "O",
                    "Ŏ": "O",
                    "Ǒ": "O",
                    "Ô": "O",
                    "Ố": "O",
                    "Ộ": "O",
                    "Ồ": "O",
                    "Ổ": "O",
                    "Ỗ": "O",
                    "Ö": "O",
                    "Ȫ": "O",
                    "Ȯ": "O",
                    "Ȱ": "O",
                    "Ọ": "O",
                    "Ő": "O",
                    "Ȍ": "O",
                    "Ò": "O",
                    "Ỏ": "O",
                    "Ơ": "O",
                    "Ớ": "O",
                    "Ợ": "O",
                    "Ờ": "O",
                    "Ở": "O",
                    "Ỡ": "O",
                    "Ȏ": "O",
                    "Ꝋ": "O",
                    "Ꝍ": "O",
                    "Ō": "O",
                    "Ṓ": "O",
                    "Ṑ": "O",
                    "Ɵ": "O",
                    "Ǫ": "O",
                    "Ǭ": "O",
                    "Ø": "O",
                    "Ǿ": "O",
                    "Õ": "O",
                    "Ṍ": "O",
                    "Ṏ": "O",
                    "Ȭ": "O",
                    "Ƣ": "OI",
                    "Ꝏ": "OO",
                    "Ɛ": "E",
                    "Ɔ": "O",
                    "Ȣ": "OU",
                    "Ṕ": "P",
                    "Ṗ": "P",
                    "Ꝓ": "P",
                    "Ƥ": "P",
                    "Ꝕ": "P",
                    "Ᵽ": "P",
                    "Ꝑ": "P",
                    "Ꝙ": "Q",
                    "Ꝗ": "Q",
                    "Ŕ": "R",
                    "Ř": "R",
                    "Ŗ": "R",
                    "Ṙ": "R",
                    "Ṛ": "R",
                    "Ṝ": "R",
                    "Ȑ": "R",
                    "Ȓ": "R",
                    "Ṟ": "R",
                    "Ɍ": "R",
                    "Ɽ": "R",
                    "Ꜿ": "C",
                    "Ǝ": "E",
                    "Ś": "S",
                    "Ṥ": "S",
                    "Š": "S",
                    "Ṧ": "S",
                    "Ş": "S",
                    "Ŝ": "S",
                    "Ș": "S",
                    "Ṡ": "S",
                    "Ṣ": "S",
                    "Ṩ": "S",
                    "ẞ": "SS",
                    "Ť": "T",
                    "Ţ": "T",
                    "Ṱ": "T",
                    "Ț": "T",
                    "Ⱦ": "T",
                    "Ṫ": "T",
                    "Ṭ": "T",
                    "Ƭ": "T",
                    "Ṯ": "T",
                    "Ʈ": "T",
                    "Ŧ": "T",
                    "Ɐ": "A",
                    "Ꞁ": "L",
                    "Ɯ": "M",
                    "Ʌ": "V",
                    "Ꜩ": "TZ",
                    "Ú": "U",
                    "Ŭ": "U",
                    "Ǔ": "U",
                    "Û": "U",
                    "Ṷ": "U",
                    "Ü": "U",
                    "Ǘ": "U",
                    "Ǚ": "U",
                    "Ǜ": "U",
                    "Ǖ": "U",
                    "Ṳ": "U",
                    "Ụ": "U",
                    "Ű": "U",
                    "Ȕ": "U",
                    "Ù": "U",
                    "Ủ": "U",
                    "Ư": "U",
                    "Ứ": "U",
                    "Ự": "U",
                    "Ừ": "U",
                    "Ử": "U",
                    "Ữ": "U",
                    "Ȗ": "U",
                    "Ū": "U",
                    "Ṻ": "U",
                    "Ų": "U",
                    "Ů": "U",
                    "Ũ": "U",
                    "Ṹ": "U",
                    "Ṵ": "U",
                    "Ꝟ": "V",
                    "Ṿ": "V",
                    "Ʋ": "V",
                    "Ṽ": "V",
                    "Ꝡ": "VY",
                    "Ẃ": "W",
                    "Ŵ": "W",
                    "Ẅ": "W",
                    "Ẇ": "W",
                    "Ẉ": "W",
                    "Ẁ": "W",
                    "Ⱳ": "W",
                    "Ẍ": "X",
                    "Ẋ": "X",
                    "Ý": "Y",
                    "Ŷ": "Y",
                    "Ÿ": "Y",
                    "Ẏ": "Y",
                    "Ỵ": "Y",
                    "Ỳ": "Y",
                    "Ƴ": "Y",
                    "Ỷ": "Y",
                    "Ỿ": "Y",
                    "Ȳ": "Y",
                    "Ɏ": "Y",
                    "Ỹ": "Y",
                    "Ź": "Z",
                    "Ž": "Z",
                    "Ẑ": "Z",
                    "Ⱬ": "Z",
                    "Ż": "Z",
                    "Ẓ": "Z",
                    "Ȥ": "Z",
                    "Ẕ": "Z",
                    "Ƶ": "Z",
                    "Ĳ": "IJ",
                    "Œ": "OE",
                    "ᴀ": "A",
                    "ᴁ": "AE",
                    "ʙ": "B",
                    "ᴃ": "B",
                    "ᴄ": "C",
                    "ᴅ": "D",
                    "ᴇ": "E",
                    "ꜰ": "F",
                    "ɢ": "G",
                    "ʛ": "G",
                    "ʜ": "H",
                    "ɪ": "I",
                    "ʁ": "R",
                    "ᴊ": "J",
                    "ᴋ": "K",
                    "ʟ": "L",
                    "ᴌ": "L",
                    "ᴍ": "M",
                    "ɴ": "N",
                    "ᴏ": "O",
                    "ɶ": "OE",
                    "ᴐ": "O",
                    "ᴕ": "OU",
                    "ᴘ": "P",
                    "ʀ": "R",
                    "ᴎ": "N",
                    "ᴙ": "R",
                    "ꜱ": "S",
                    "ᴛ": "T",
                    "ⱻ": "E",
                    "ᴚ": "R",
                    "ᴜ": "U",
                    "ᴠ": "V",
                    "ᴡ": "W",
                    "ʏ": "Y",
                    "ᴢ": "Z",
                    "á": "a",
                    "ă": "a",
                    "ắ": "a",
                    "ặ": "a",
                    "ằ": "a",
                    "ẳ": "a",
                    "ẵ": "a",
                    "ǎ": "a",
                    "â": "a",
                    "ấ": "a",
                    "ậ": "a",
                    "ầ": "a",
                    "ẩ": "a",
                    "ẫ": "a",
                    "ä": "a",
                    "ǟ": "a",
                    "ȧ": "a",
                    "ǡ": "a",
                    "ạ": "a",
                    "ȁ": "a",
                    "à": "a",
                    "ả": "a",
                    "ȃ": "a",
                    "ā": "a",
                    "ą": "a",
                    "ᶏ": "a",
                    "ẚ": "a",
                    "å": "a",
                    "ǻ": "a",
                    "ḁ": "a",
                    "ⱥ": "a",
                    "ã": "a",
                    "ꜳ": "aa",
                    "æ": "ae",
                    "ǽ": "ae",
                    "ǣ": "ae",
                    "ꜵ": "ao",
                    "ꜷ": "au",
                    "ꜹ": "av",
                    "ꜻ": "av",
                    "ꜽ": "ay",
                    "ḃ": "b",
                    "ḅ": "b",
                    "ɓ": "b",
                    "ḇ": "b",
                    "ᵬ": "b",
                    "ᶀ": "b",
                    "ƀ": "b",
                    "ƃ": "b",
                    "ɵ": "o",
                    "ć": "c",
                    "č": "c",
                    "ç": "c",
                    "ḉ": "c",
                    "ĉ": "c",
                    "ɕ": "c",
                    "ċ": "c",
                    "ƈ": "c",
                    "ȼ": "c",
                    "ď": "d",
                    "ḑ": "d",
                    "ḓ": "d",
                    "ȡ": "d",
                    "ḋ": "d",
                    "ḍ": "d",
                    "ɗ": "d",
                    "ᶑ": "d",
                    "ḏ": "d",
                    "ᵭ": "d",
                    "ᶁ": "d",
                    "đ": "d",
                    "ɖ": "d",
                    "ƌ": "d",
                    "ı": "i",
                    "ȷ": "j",
                    "ɟ": "j",
                    "ʄ": "j",
                    "ǳ": "dz",
                    "ǆ": "dz",
                    "é": "e",
                    "ĕ": "e",
                    "ě": "e",
                    "ȩ": "e",
                    "ḝ": "e",
                    "ê": "e",
                    "ế": "e",
                    "ệ": "e",
                    "ề": "e",
                    "ể": "e",
                    "ễ": "e",
                    "ḙ": "e",
                    "ë": "e",
                    "ė": "e",
                    "ẹ": "e",
                    "ȅ": "e",
                    "è": "e",
                    "ẻ": "e",
                    "ȇ": "e",
                    "ē": "e",
                    "ḗ": "e",
                    "ḕ": "e",
                    "ⱸ": "e",
                    "ę": "e",
                    "ᶒ": "e",
                    "ɇ": "e",
                    "ẽ": "e",
                    "ḛ": "e",
                    "ꝫ": "et",
                    "ḟ": "f",
                    "ƒ": "f",
                    "ᵮ": "f",
                    "ᶂ": "f",
                    "ǵ": "g",
                    "ğ": "g",
                    "ǧ": "g",
                    "ģ": "g",
                    "ĝ": "g",
                    "ġ": "g",
                    "ɠ": "g",
                    "ḡ": "g",
                    "ᶃ": "g",
                    "ǥ": "g",
                    "ḫ": "h",
                    "ȟ": "h",
                    "ḩ": "h",
                    "ĥ": "h",
                    "ⱨ": "h",
                    "ḧ": "h",
                    "ḣ": "h",
                    "ḥ": "h",
                    "ɦ": "h",
                    "ẖ": "h",
                    "ħ": "h",
                    "ƕ": "hv",
                    "í": "i",
                    "ĭ": "i",
                    "ǐ": "i",
                    "î": "i",
                    "ï": "i",
                    "ḯ": "i",
                    "ị": "i",
                    "ȉ": "i",
                    "ì": "i",
                    "ỉ": "i",
                    "ȋ": "i",
                    "ī": "i",
                    "į": "i",
                    "ᶖ": "i",
                    "ɨ": "i",
                    "ĩ": "i",
                    "ḭ": "i",
                    "ꝺ": "d",
                    "ꝼ": "f",
                    "ᵹ": "g",
                    "ꞃ": "r",
                    "ꞅ": "s",
                    "ꞇ": "t",
                    "ꝭ": "is",
                    "ǰ": "j",
                    "ĵ": "j",
                    "ʝ": "j",
                    "ɉ": "j",
                    "ḱ": "k",
                    "ǩ": "k",
                    "ķ": "k",
                    "ⱪ": "k",
                    "ꝃ": "k",
                    "ḳ": "k",
                    "ƙ": "k",
                    "ḵ": "k",
                    "ᶄ": "k",
                    "ꝁ": "k",
                    "ꝅ": "k",
                    "ĺ": "l",
                    "ƚ": "l",
                    "ɬ": "l",
                    "ľ": "l",
                    "ļ": "l",
                    "ḽ": "l",
                    "ȴ": "l",
                    "ḷ": "l",
                    "ḹ": "l",
                    "ⱡ": "l",
                    "ꝉ": "l",
                    "ḻ": "l",
                    "ŀ": "l",
                    "ɫ": "l",
                    "ᶅ": "l",
                    "ɭ": "l",
                    "ł": "l",
                    "ǉ": "lj",
                    "ſ": "s",
                    "ẜ": "s",
                    "ẛ": "s",
                    "ẝ": "s",
                    "ḿ": "m",
                    "ṁ": "m",
                    "ṃ": "m",
                    "ɱ": "m",
                    "ᵯ": "m",
                    "ᶆ": "m",
                    "ń": "n",
                    "ň": "n",
                    "ņ": "n",
                    "ṋ": "n",
                    "ȵ": "n",
                    "ṅ": "n",
                    "ṇ": "n",
                    "ǹ": "n",
                    "ɲ": "n",
                    "ṉ": "n",
                    "ƞ": "n",
                    "ᵰ": "n",
                    "ᶇ": "n",
                    "ɳ": "n",
                    "ñ": "n",
                    "ǌ": "nj",
                    "ó": "o",
                    "ŏ": "o",
                    "ǒ": "o",
                    "ô": "o",
                    "ố": "o",
                    "ộ": "o",
                    "ồ": "o",
                    "ổ": "o",
                    "ỗ": "o",
                    "ö": "o",
                    "ȫ": "o",
                    "ȯ": "o",
                    "ȱ": "o",
                    "ọ": "o",
                    "ő": "o",
                    "ȍ": "o",
                    "ò": "o",
                    "ỏ": "o",
                    "ơ": "o",
                    "ớ": "o",
                    "ợ": "o",
                    "ờ": "o",
                    "ở": "o",
                    "ỡ": "o",
                    "ȏ": "o",
                    "ꝋ": "o",
                    "ꝍ": "o",
                    "ⱺ": "o",
                    "ō": "o",
                    "ṓ": "o",
                    "ṑ": "o",
                    "ǫ": "o",
                    "ǭ": "o",
                    "ø": "o",
                    "ǿ": "o",
                    "õ": "o",
                    "ṍ": "o",
                    "ṏ": "o",
                    "ȭ": "o",
                    "ƣ": "oi",
                    "ꝏ": "oo",
                    "ɛ": "e",
                    "ᶓ": "e",
                    "ɔ": "o",
                    "ᶗ": "o",
                    "ȣ": "ou",
                    "ṕ": "p",
                    "ṗ": "p",
                    "ꝓ": "p",
                    "ƥ": "p",
                    "ᵱ": "p",
                    "ᶈ": "p",
                    "ꝕ": "p",
                    "ᵽ": "p",
                    "ꝑ": "p",
                    "ꝙ": "q",
                    "ʠ": "q",
                    "ɋ": "q",
                    "ꝗ": "q",
                    "ŕ": "r",
                    "ř": "r",
                    "ŗ": "r",
                    "ṙ": "r",
                    "ṛ": "r",
                    "ṝ": "r",
                    "ȑ": "r",
                    "ɾ": "r",
                    "ᵳ": "r",
                    "ȓ": "r",
                    "ṟ": "r",
                    "ɼ": "r",
                    "ᵲ": "r",
                    "ᶉ": "r",
                    "ɍ": "r",
                    "ɽ": "r",
                    "ↄ": "c",
                    "ꜿ": "c",
                    "ɘ": "e",
                    "ɿ": "r",
                    "ś": "s",
                    "ṥ": "s",
                    "š": "s",
                    "ṧ": "s",
                    "ş": "s",
                    "ŝ": "s",
                    "ș": "s",
                    "ṡ": "s",
                    "ṣ": "s",
                    "ṩ": "s",
                    "ʂ": "s",
                    "ᵴ": "s",
                    "ᶊ": "s",
                    "ȿ": "s",
                    "ɡ": "g",
                    "ß": "ss",
                    "ᴑ": "o",
                    "ᴓ": "o",
                    "ᴝ": "u",
                    "ť": "t",
                    "ţ": "t",
                    "ṱ": "t",
                    "ț": "t",
                    "ȶ": "t",
                    "ẗ": "t",
                    "ⱦ": "t",
                    "ṫ": "t",
                    "ṭ": "t",
                    "ƭ": "t",
                    "ṯ": "t",
                    "ᵵ": "t",
                    "ƫ": "t",
                    "ʈ": "t",
                    "ŧ": "t",
                    "ᵺ": "th",
                    "ɐ": "a",
                    "ᴂ": "ae",
                    "ǝ": "e",
                    "ᵷ": "g",
                    "ɥ": "h",
                    "ʮ": "h",
                    "ʯ": "h",
                    "ᴉ": "i",
                    "ʞ": "k",
                    "ꞁ": "l",
                    "ɯ": "m",
                    "ɰ": "m",
                    "ᴔ": "oe",
                    "ɹ": "r",
                    "ɻ": "r",
                    "ɺ": "r",
                    "ⱹ": "r",
                    "ʇ": "t",
                    "ʌ": "v",
                    "ʍ": "w",
                    "ʎ": "y",
                    "ꜩ": "tz",
                    "ú": "u",
                    "ŭ": "u",
                    "ǔ": "u",
                    "û": "u",
                    "ṷ": "u",
                    "ü": "u",
                    "ǘ": "u",
                    "ǚ": "u",
                    "ǜ": "u",
                    "ǖ": "u",
                    "ṳ": "u",
                    "ụ": "u",
                    "ű": "u",
                    "ȕ": "u",
                    "ù": "u",
                    "ủ": "u",
                    "ư": "u",
                    "ứ": "u",
                    "ự": "u",
                    "ừ": "u",
                    "ử": "u",
                    "ữ": "u",
                    "ȗ": "u",
                    "ū": "u",
                    "ṻ": "u",
                    "ų": "u",
                    "ᶙ": "u",
                    "ů": "u",
                    "ũ": "u",
                    "ṹ": "u",
                    "ṵ": "u",
                    "ᵫ": "ue",
                    "ꝸ": "um",
                    "ⱴ": "v",
                    "ꝟ": "v",
                    "ṿ": "v",
                    "ʋ": "v",
                    "ᶌ": "v",
                    "ⱱ": "v",
                    "ṽ": "v",
                    "ꝡ": "vy",
                    "ẃ": "w",
                    "ŵ": "w",
                    "ẅ": "w",
                    "ẇ": "w",
                    "ẉ": "w",
                    "ẁ": "w",
                    "ⱳ": "w",
                    "ẘ": "w",
                    "ẍ": "x",
                    "ẋ": "x",
                    "ᶍ": "x",
                    "ý": "y",
                    "ŷ": "y",
                    "ÿ": "y",
                    "ẏ": "y",
                    "ỵ": "y",
                    "ỳ": "y",
                    "ƴ": "y",
                    "ỷ": "y",
                    "ỿ": "y",
                    "ȳ": "y",
                    "ẙ": "y",
                    "ɏ": "y",
                    "ỹ": "y",
                    "ź": "z",
                    "ž": "z",
                    "ẑ": "z",
                    "ʑ": "z",
                    "ⱬ": "z",
                    "ż": "z",
                    "ẓ": "z",
                    "ȥ": "z",
                    "ẕ": "z",
                    "ᵶ": "z",
                    "ᶎ": "z",
                    "ʐ": "z",
                    "ƶ": "z",
                    "ɀ": "z",
                    "ﬀ": "ff",
                    "ﬃ": "ffi",
                    "ﬄ": "ffl",
                    "ﬁ": "fi",
                    "ﬂ": "fl",
                    "ĳ": "ij",
                    "œ": "oe",
                    "ﬆ": "st",
                    "ₐ": "a",
                    "ₑ": "e",
                    "ᵢ": "i",
                    "ⱼ": "j",
                    "ₒ": "o",
                    "ᵣ": "r",
                    "ᵤ": "u",
                    "ᵥ": "v",
                    "ₓ": "x"
                },
                __nsp = String.prototype,
                __sp = S.prototype = {
                    between: function(left, right) {
                        var s = this.s,
                            startPos = s.indexOf(left),
                            endPos = s.indexOf(right, startPos + left.length);
                        return -1 == endPos && null != right ? new this.constructor("") : -1 == endPos && null == right ? new this.constructor(s.substring(startPos + left.length)) : new this.constructor(s.slice(startPos + left.length, endPos))
                    },
                    camelize: function() {
                        var s = this.trim().s.replace(/(\-|_|\s)+(.)?/g, function(mathc, sep, c) {
                            return c ? c.toUpperCase() : ""
                        });
                        return new this.constructor(s)
                    },
                    capitalize: function() {
                        return new this.constructor(this.s.substr(0, 1).toUpperCase() + this.s.substring(1).toLowerCase())
                    },
                    charAt: function(index) {
                        return this.s.charAt(index)
                    },
                    chompLeft: function(prefix) {
                        var s = this.s;
                        return 0 === s.indexOf(prefix) ? (s = s.slice(prefix.length), new this.constructor(s)) : this
                    },
                    chompRight: function(suffix) {
                        if (this.endsWith(suffix)) {
                            var s = this.s;
                            return s = s.slice(0, s.length - suffix.length), new this.constructor(s)
                        }
                        return this
                    },
                    collapseWhitespace: function() {
                        var s = this.s.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
                        return new this.constructor(s)
                    },
                    contains: function(ss) {
                        return this.s.indexOf(ss) >= 0
                    },
                    count: function(ss) {
                        return require("./_count")(this.s, ss)
                    },
                    dasherize: function() {
                        var s = this.trim().s.replace(/[_\s]+/g, "-").replace(/([A-Z])/g, "-$1").replace(/-+/g, "-").toLowerCase();
                        return new this.constructor(s)
                    },
                    equalsIgnoreCase: function(prefix) {
                        return this.s.toLowerCase() == prefix.toLowerCase()
                    },
                    latinise: function() {
                        var s = this.replace(/[^A-Za-z0-9\[\] ]/g, function(x) {
                            return latin_map[x] || x
                        });
                        return new this.constructor(s)
                    },
                    decodeHtmlEntities: function() {
                        var s = this.s;
                        return s = s.replace(/&#(\d+);?/g, function(_, code) {
                            return String.fromCharCode(code)
                        }).replace(/&#[xX]([A-Fa-f0-9]+);?/g, function(_, hex) {
                            return String.fromCharCode(parseInt(hex, 16))
                        }).replace(/&([^;\W]+;?)/g, function(m, e) {
                            var ee = e.replace(/;$/, ""),
                                target = ENTITIES[e] || e.match(/;$/) && ENTITIES[ee];
                            return "number" == typeof target ? String.fromCharCode(target) : "string" == typeof target ? target : m
                        }), new this.constructor(s)
                    },
                    endsWith: function() {
                        for (var suffixes = Array.prototype.slice.call(arguments, 0), i = 0; i < suffixes.length; ++i) {
                            var l = this.s.length - suffixes[i].length;
                            if (l >= 0 && this.s.indexOf(suffixes[i], l) === l) return !0
                        }
                        return !1
                    },
                    escapeHTML: function() {
                        return new this.constructor(this.s.replace(/[&<>"']/g, function(m) {
                            return "&" + reversedEscapeChars[m] + ";"
                        }))
                    },
                    ensureLeft: function(prefix) {
                        var s = this.s;
                        return 0 === s.indexOf(prefix) ? this : new this.constructor(prefix + s)
                    },
                    ensureRight: function(suffix) {
                        var s = this.s;
                        return this.endsWith(suffix) ? this : new this.constructor(s + suffix)
                    },
                    humanize: function() {
                        if (null === this.s || void 0 === this.s) return new this.constructor("");
                        var s = this.underscore().replace(/_id$/, "").replace(/_/g, " ").trim().capitalize();
                        return new this.constructor(s)
                    },
                    isAlpha: function() {
                        return !/[^a-z\xDF-\xFF]|^$/.test(this.s.toLowerCase())
                    },
                    isAlphaNumeric: function() {
                        return !/[^0-9a-z\xDF-\xFF]/.test(this.s.toLowerCase())
                    },
                    isEmpty: function() {
                        return null === this.s || void 0 === this.s || /^[\s\xa0]*$/.test(this.s)
                    },
                    isLower: function() {
                        return this.isAlpha() && this.s.toLowerCase() === this.s
                    },
                    isNumeric: function() {
                        return !/[^0-9]/.test(this.s)
                    },
                    isUpper: function() {
                        return this.isAlpha() && this.s.toUpperCase() === this.s
                    },
                    left: function(N) {
                        if (N >= 0) {
                            var s = this.s.substr(0, N);
                            return new this.constructor(s)
                        }
                        return this.right(-N)
                    },
                    lines: function() {
                        return this.replaceAll("\r\n", "\n").s.split("\n")
                    },
                    pad: function(len, ch) {
                        if (null == ch && (ch = " "), this.s.length >= len) return new this.constructor(this.s);
                        len -= this.s.length;
                        var left = Array(Math.ceil(len / 2) + 1).join(ch),
                            right = Array(Math.floor(len / 2) + 1).join(ch);
                        return new this.constructor(left + this.s + right)
                    },
                    padLeft: function(len, ch) {
                        return null == ch && (ch = " "), this.s.length >= len ? new this.constructor(this.s) : new this.constructor(Array(len - this.s.length + 1).join(ch) + this.s)
                    },
                    padRight: function(len, ch) {
                        return null == ch && (ch = " "), this.s.length >= len ? new this.constructor(this.s) : new this.constructor(this.s + Array(len - this.s.length + 1).join(ch))
                    },
                    parseCSV: function(delimiter, qualifier, escape, lineDelimiter) {
                        delimiter = delimiter || ",", escape = escape || "\\", void 0 === qualifier && (qualifier = '"');
                        var i = 0,
                            fieldBuffer = [],
                            fields = [],
                            len = this.s.length,
                            inField = !1,
                            inUnqualifiedString = !1,
                            self = this,
                            ca = function(i) {
                                return self.s.charAt(i)
                            };
                        if (void 0 !== lineDelimiter) var rows = [];
                        for (qualifier || (inField = !0); i < len;) {
                            var current = ca(i);
                            switch (current) {
                                case escape:
                                    if (inField && (escape !== qualifier || ca(i + 1) === qualifier)) {
                                        i += 1, fieldBuffer.push(ca(i));
                                        break
                                    }
                                    if (escape !== qualifier) break;
                                case qualifier:
                                    inField = !inField;
                                    break;
                                case delimiter:
                                    inUnqualifiedString && (inField = !1, inUnqualifiedString = !1), inField && qualifier ? fieldBuffer.push(current) : (fields.push(fieldBuffer.join("")), fieldBuffer.length = 0);
                                    break;
                                case lineDelimiter:
                                    inUnqualifiedString ? (inField = !1, inUnqualifiedString = !1, fields.push(fieldBuffer.join("")), rows.push(fields), fields = [], fieldBuffer.length = 0) : inField ? fieldBuffer.push(current) : rows && (fields.push(fieldBuffer.join("")), rows.push(fields), fields = [], fieldBuffer.length = 0);
                                    break;
                                case " ":
                                    inField && fieldBuffer.push(current);
                                    break;
                                default:
                                    inField ? fieldBuffer.push(current) : current !== qualifier && (fieldBuffer.push(current), inField = !0, inUnqualifiedString = !0)
                            }
                            i += 1
                        }
                        return fields.push(fieldBuffer.join("")), rows ? (rows.push(fields), rows) : fields
                    },
                    replaceAll: function(ss, r) {
                        var s = this.s.split(ss).join(r);
                        return new this.constructor(s)
                    },
                    splitLeft: function(sep, maxSplit, limit) {
                        return require("./_splitLeft")(this.s, sep, maxSplit, limit)
                    },
                    splitRight: function(sep, maxSplit, limit) {
                        return require("./_splitRight")(this.s, sep, maxSplit, limit)
                    },
                    strip: function() {
                        for (var ss = this.s, i = 0, n = arguments.length; i < n; i++) ss = ss.split(arguments[i]).join("");
                        return new this.constructor(ss)
                    },
                    stripLeft: function(chars) {
                        var regex, pattern, ss = ensureString(this.s);
                        return void 0 === chars ? pattern = /^\s+/g : (regex = escapeRegExp(chars), pattern = new RegExp("^[" + regex + "]+", "g")), new this.constructor(ss.replace(pattern, ""))
                    },
                    stripRight: function(chars) {
                        var regex, pattern, ss = ensureString(this.s);
                        return void 0 === chars ? pattern = /\s+$/g : (regex = escapeRegExp(chars), pattern = new RegExp("[" + regex + "]+$", "g")), new this.constructor(ss.replace(pattern, ""))
                    },
                    right: function(N) {
                        if (N >= 0) {
                            var s = this.s.substr(this.s.length - N, N);
                            return new this.constructor(s)
                        }
                        return this.left(-N)
                    },
                    setValue: function(s) {
                        return initialize(this, s), this
                    },
                    slugify: function() {
                        var sl = new S(new S(this.s).latinise().s.replace(/[^\w\s-]/g, "").toLowerCase()).dasherize().s;
                        return "-" === sl.charAt(0) && (sl = sl.substr(1)), new this.constructor(sl)
                    },
                    startsWith: function() {
                        for (var prefixes = Array.prototype.slice.call(arguments, 0), i = 0; i < prefixes.length; ++i)
                            if (0 === this.s.lastIndexOf(prefixes[i], 0)) return !0;
                        return !1
                    },
                    stripPunctuation: function() {
                        return new this.constructor(this.s.replace(/[^\w\s]|_/g, "").replace(/\s+/g, " "))
                    },
                    stripTags: function() {
                        var s = this.s;
                        return multiArgs(arguments.length > 0 ? arguments : [""], function(tag) {
                            s = s.replace(RegExp("</?" + tag + "[^<>]*>", "gi"), "")
                        }), new this.constructor(s)
                    },
                    template: function(values, opening, closing) {
                        var s = this.s,
                            opening = opening || Export.TMPL_OPEN,
                            closing = closing || Export.TMPL_CLOSE,
                            open = opening.replace(/[-[\]()*\s]/g, "\\$&").replace(/\$/g, "\\$"),
                            close = closing.replace(/[-[\]()*\s]/g, "\\$&").replace(/\$/g, "\\$"),
                            r = new RegExp(open + "(.+?)" + close, "g");
                        return (s.match(r) || []).forEach(function(match) {
                            var key = match.substring(opening.length, match.length - closing.length).trim(),
                                value = void 0 === values[key] ? "" : values[key];
                            s = s.replace(match, value)
                        }), new this.constructor(s)
                    },
                    times: function(n) {
                        return new this.constructor(new Array(n + 1).join(this.s))
                    },
                    titleCase: function() {
                        var s = this.s;
                        return s && (s = s.replace(/(^[a-z]| [a-z]|-[a-z]|_[a-z])/g, function($1) {
                            return $1.toUpperCase()
                        })), new this.constructor(s)
                    },
                    toBoolean: function() {
                        if ("string" == typeof this.orig) {
                            var s = this.s.toLowerCase();
                            return "true" === s || "yes" === s || "on" === s || "1" === s
                        }
                        return !0 === this.orig || 1 === this.orig
                    },
                    toFloat: function(precision) {
                        var num = parseFloat(this.s);
                        return precision ? parseFloat(num.toFixed(precision)) : num
                    },
                    toInt: function() {
                        return /^\s*-?0x/i.test(this.s) ? parseInt(this.s, 16) : parseInt(this.s, 10)
                    },
                    trim: function() {
                        var s;
                        return s = void 0 === __nsp.trim ? this.s.replace(/(^\s*|\s*$)/g, "") : this.s.trim(), new this.constructor(s)
                    },
                    trimLeft: function() {
                        var s;
                        return s = __nsp.trimLeft ? this.s.trimLeft() : this.s.replace(/(^\s*)/g, ""), new this.constructor(s)
                    },
                    trimRight: function() {
                        var s;
                        return s = __nsp.trimRight ? this.s.trimRight() : this.s.replace(/\s+$/, ""), new this.constructor(s)
                    },
                    truncate: function(length, pruneStr) {
                        var str = this.s;
                        if (length = ~~length, pruneStr = pruneStr || "...", str.length <= length) return new this.constructor(str);
                        var tmpl = function(c) {
                                return c.toUpperCase() !== c.toLowerCase() ? "A" : " "
                            },
                            template = str.slice(0, length + 1).replace(/.(?=\W*\w*$)/g, tmpl);
                        return template = template.slice(template.length - 2).match(/\w\w/) ? template.replace(/\s*\S+$/, "") : new S(template.slice(0, template.length - 1)).trimRight().s, new S((template + pruneStr).length > str.length ? str : str.slice(0, template.length) + pruneStr)
                    },
                    toCSV: function() {
                        var delim = ",",
                            qualifier = '"',
                            escape = "\\",
                            encloseNumbers = !0,
                            keys = !1,
                            dataArray = [];
                        if ("object" == typeof arguments[0] ? (delim = arguments[0].delimiter || delim, delim = arguments[0].separator || delim, qualifier = arguments[0].qualifier || qualifier, encloseNumbers = !!arguments[0].encloseNumbers, escape = arguments[0].escape || escape, keys = !!arguments[0].keys) : "string" == typeof arguments[0] && (delim = arguments[0]), "string" == typeof arguments[1] && (qualifier = arguments[1]), null === arguments[1] && (qualifier = null), this.orig instanceof Array) dataArray = this.orig;
                        else
                            for (var key in this.orig) this.orig.hasOwnProperty(key) && (keys ? dataArray.push(key) : dataArray.push(this.orig[key]));
                        for (var rep = escape + qualifier, buildString = [], i = 0; i < dataArray.length; ++i) {
                            var shouldQualify = function(it) {
                                return null !== it && "" !== it
                            }(qualifier);
                            if ("number" == typeof dataArray[i] && (shouldQualify &= encloseNumbers), shouldQualify && buildString.push(qualifier), null !== dataArray[i] && void 0 !== dataArray[i]) {
                                var d = new S(dataArray[i]).replaceAll(qualifier, rep).s;
                                buildString.push(d)
                            } else buildString.push("");
                            shouldQualify && buildString.push(qualifier), delim && buildString.push(delim)
                        }
                        return buildString.length = buildString.length - 1, new this.constructor(buildString.join(""))
                    },
                    toString: function() {
                        return this.s
                    },
                    underscore: function() {
                        var s = this.trim().s.replace(/([a-z\d])([A-Z]+)/g, "$1_$2").replace(/([A-Z\d]+)([A-Z][a-z])/g, "$1_$2").replace(/[-\s]+/g, "_").toLowerCase();
                        return new this.constructor(s)
                    },
                    unescapeHTML: function() {
                        return new this.constructor(this.s.replace(/\&([^;]+);/g, function(entity, entityCode) {
                            var match;
                            return entityCode in escapeChars ? escapeChars[entityCode] : (match = entityCode.match(/^#x([\da-fA-F]+)$/)) ? String.fromCharCode(parseInt(match[1], 16)) : (match = entityCode.match(/^#(\d+)$/)) ? String.fromCharCode(~~match[1]) : entity
                        }))
                    },
                    valueOf: function() {
                        return this.s.valueOf()
                    },
                    wrapHTML: function(tagName, tagAttrs) {
                        var s = this.s,
                            el = null == tagName ? "span" : tagName,
                            elAttr = "",
                            wrapped = "";
                        if ("object" == typeof tagAttrs)
                            for (var prop in tagAttrs) elAttr += " " + prop + '="' + new this.constructor(tagAttrs[prop]).escapeHTML() + '"';
                        return s = wrapped.concat("<", el, elAttr, ">", this, "</", el, ">"), new this.constructor(s)
                    }
                },
                methodsAdded = [],
                nativeProperties = function() {
                    for (var names = getNativeStringPropertyNames(), retObj = {}, i = 0; i < names.length; ++i) {
                        var name = names[i];
                        if ("to" !== name && "toEnd" !== name) {
                            var func = __nsp[name];
                            try {
                                var type = typeof func.apply("teststring");
                                retObj[name] = type
                            } catch (e) {}
                        }
                    }
                    return retObj
                }();
            for (var name in nativeProperties) ! function(name) {
                var stringProp = __nsp[name];
                "function" == typeof stringProp && (__sp[name] || ("string" === nativeProperties[name] ? __sp[name] = function() {
                    return new this.constructor(stringProp.apply(this, arguments))
                } : __sp[name] = stringProp))
            }(name);
            __sp.repeat = __sp.times, __sp.include = __sp.contains, __sp.toInteger = __sp.toInt, __sp.toBool = __sp.toBoolean, __sp.decodeHTMLEntities = __sp.decodeHtmlEntities, __sp.constructor = S, Export.extendPrototype = extendPrototype, Export.restorePrototype = restorePrototype, Export.VERSION = "3.3.3", Export.TMPL_OPEN = "{{", Export.TMPL_CLOSE = "}}", Export.ENTITIES = ENTITIES, void 0 !== module && void 0 !== module.exports ? module.exports = Export : "function" == typeof define && define.amd ? define([], function() {
                return Export
            }) : window.S = Export;
            var escapeChars = {
                    lt: "<",
                    gt: ">",
                    quot: '"',
                    apos: "'",
                    amp: "&"
                },
                reversedEscapeChars = {};
            for (var key in escapeChars) reversedEscapeChars[escapeChars[key]] = key;
            ENTITIES = {
                amp: "&",
                gt: ">",
                lt: "<",
                quot: '"',
                apos: "'",
                AElig: 198,
                Aacute: 193,
                Acirc: 194,
                Agrave: 192,
                Aring: 197,
                Atilde: 195,
                Auml: 196,
                Ccedil: 199,
                ETH: 208,
                Eacute: 201,
                Ecirc: 202,
                Egrave: 200,
                Euml: 203,
                Iacute: 205,
                Icirc: 206,
                Igrave: 204,
                Iuml: 207,
                Ntilde: 209,
                Oacute: 211,
                Ocirc: 212,
                Ograve: 210,
                Oslash: 216,
                Otilde: 213,
                Ouml: 214,
                THORN: 222,
                Uacute: 218,
                Ucirc: 219,
                Ugrave: 217,
                Uuml: 220,
                Yacute: 221,
                aacute: 225,
                acirc: 226,
                aelig: 230,
                agrave: 224,
                aring: 229,
                atilde: 227,
                auml: 228,
                ccedil: 231,
                eacute: 233,
                ecirc: 234,
                egrave: 232,
                eth: 240,
                euml: 235,
                iacute: 237,
                icirc: 238,
                igrave: 236,
                iuml: 239,
                ntilde: 241,
                oacute: 243,
                ocirc: 244,
                ograve: 242,
                oslash: 248,
                otilde: 245,
                ouml: 246,
                szlig: 223,
                thorn: 254,
                uacute: 250,
                ucirc: 251,
                ugrave: 249,
                uuml: 252,
                yacute: 253,
                yuml: 255,
                copy: 169,
                reg: 174,
                nbsp: 160,
                iexcl: 161,
                cent: 162,
                pound: 163,
                curren: 164,
                yen: 165,
                brvbar: 166,
                sect: 167,
                uml: 168,
                ordf: 170,
                laquo: 171,
                not: 172,
                shy: 173,
                macr: 175,
                deg: 176,
                plusmn: 177,
                sup1: 185,
                sup2: 178,
                sup3: 179,
                acute: 180,
                micro: 181,
                para: 182,
                middot: 183,
                cedil: 184,
                ordm: 186,
                raquo: 187,
                frac14: 188,
                frac12: 189,
                frac34: 190,
                iquest: 191,
                times: 215,
                divide: 247,
                "OElig;": 338,
                "oelig;": 339,
                "Scaron;": 352,
                "scaron;": 353,
                "Yuml;": 376,
                "fnof;": 402,
                "circ;": 710,
                "tilde;": 732,
                "Alpha;": 913,
                "Beta;": 914,
                "Gamma;": 915,
                "Delta;": 916,
                "Epsilon;": 917,
                "Zeta;": 918,
                "Eta;": 919,
                "Theta;": 920,
                "Iota;": 921,
                "Kappa;": 922,
                "Lambda;": 923,
                "Mu;": 924,
                "Nu;": 925,
                "Xi;": 926,
                "Omicron;": 927,
                "Pi;": 928,
                "Rho;": 929,
                "Sigma;": 931,
                "Tau;": 932,
                "Upsilon;": 933,
                "Phi;": 934,
                "Chi;": 935,
                "Psi;": 936,
                "Omega;": 937,
                "alpha;": 945,
                "beta;": 946,
                "gamma;": 947,
                "delta;": 948,
                "epsilon;": 949,
                "zeta;": 950,
                "eta;": 951,
                "theta;": 952,
                "iota;": 953,
                "kappa;": 954,
                "lambda;": 955,
                "mu;": 956,
                "nu;": 957,
                "xi;": 958,
                "omicron;": 959,
                "pi;": 960,
                "rho;": 961,
                "sigmaf;": 962,
                "sigma;": 963,
                "tau;": 964,
                "upsilon;": 965,
                "phi;": 966,
                "chi;": 967,
                "psi;": 968,
                "omega;": 969,
                "thetasym;": 977,
                "upsih;": 978,
                "piv;": 982,
                "ensp;": 8194,
                "emsp;": 8195,
                "thinsp;": 8201,
                "zwnj;": 8204,
                "zwj;": 8205,
                "lrm;": 8206,
                "rlm;": 8207,
                "ndash;": 8211,
                "mdash;": 8212,
                "lsquo;": 8216,
                "rsquo;": 8217,
                "sbquo;": 8218,
                "ldquo;": 8220,
                "rdquo;": 8221,
                "bdquo;": 8222,
                "dagger;": 8224,
                "Dagger;": 8225,
                "bull;": 8226,
                "hellip;": 8230,
                "permil;": 8240,
                "prime;": 8242,
                "Prime;": 8243,
                "lsaquo;": 8249,
                "rsaquo;": 8250,
                "oline;": 8254,
                "frasl;": 8260,
                "euro;": 8364,
                "image;": 8465,
                "weierp;": 8472,
                "real;": 8476,
                "trade;": 8482,
                "alefsym;": 8501,
                "larr;": 8592,
                "uarr;": 8593,
                "rarr;": 8594,
                "darr;": 8595,
                "harr;": 8596,
                "crarr;": 8629,
                "lArr;": 8656,
                "uArr;": 8657,
                "rArr;": 8658,
                "dArr;": 8659,
                "hArr;": 8660,
                "forall;": 8704,
                "part;": 8706,
                "exist;": 8707,
                "empty;": 8709,
                "nabla;": 8711,
                "isin;": 8712,
                "notin;": 8713,
                "ni;": 8715,
                "prod;": 8719,
                "sum;": 8721,
                "minus;": 8722,
                "lowast;": 8727,
                "radic;": 8730,
                "prop;": 8733,
                "infin;": 8734,
                "ang;": 8736,
                "and;": 8743,
                "or;": 8744,
                "cap;": 8745,
                "cup;": 8746,
                "int;": 8747,
                "there4;": 8756,
                "sim;": 8764,
                "cong;": 8773,
                "asymp;": 8776,
                "ne;": 8800,
                "equiv;": 8801,
                "le;": 8804,
                "ge;": 8805,
                "sub;": 8834,
                "sup;": 8835,
                "nsub;": 8836,
                "sube;": 8838,
                "supe;": 8839,
                "oplus;": 8853,
                "otimes;": 8855,
                "perp;": 8869,
                "sdot;": 8901,
                "lceil;": 8968,
                "rceil;": 8969,
                "lfloor;": 8970,
                "rfloor;": 8971,
                "lang;": 9001,
                "rang;": 9002,
                "loz;": 9674,
                "spades;": 9824,
                "clubs;": 9827,
                "hearts;": 9829,
                "diams;": 9830
            }
        }).call(this)
    }, {
        "./_count": 287,
        "./_splitLeft": 288,
        "./_splitRight": 289
    }],
    291: [function(require, module, exports) {
        function validateOptions(options) {
            invariant(_.isObject(options), "Check out our JavaScript SDK Usage Guide: http://docs.treasuredata.com/articles/javascript-sdk"), invariant(_.isString(options.writeKey), "Must provide a writeKey"), invariant(_.isString(options.database), "Must provide a database"), invariant(/^[a-z0-9_]{3,255}$/.test(options.database), "Database must be between 3 and 255 characters and must consist only of lower case letters, numbers, and _")
        }
        var _ = require("./utils/lodash"),
            invariant = require("./utils/misc").invariant;
        exports.DEFAULT_CONFIG = {
            development: !1,
            globalIdCookie: "_td_global",
            host: "in.treasuredata.com",
            logging: !0,
            pathname: "/js/v3/event/",
            protocol: "https:" === document.location.protocol ? "https:" : "http:",
            requestType: "jsonp"
        }, exports.configure = function(options) {
            return this.client = _.assign({
                globals: {}
            }, exports.DEFAULT_CONFIG, options, {
                requestType: "jsonp"
            }), validateOptions(this.client), /:$/.test(this.client.protocol) || (this.client.protocol += ":"), this.client.endpoint || (this.client.endpoint = this.client.protocol + "//" + this.client.host + this.client.pathname), this
        }, exports.set = function(table, property, value) {
            return _.isObject(table) && (property = table, table = "$global"), this.client.globals[table] = this.client.globals[table] || {}, _.isObject(property) ? _.assign(this.client.globals[table], property) : this.client.globals[table][property] = value, this
        }, exports.get = function(table, key) {
            return table = table || "$global", this.client.globals[table] = this.client.globals[table] || {}, key ? this.client.globals[table][key] : this.client.globals[table]
        }
    }, {
        "./utils/lodash": 299,
        "./utils/misc": 300
    }],
    292: [function(require, module, exports) {
        function defaultExtendClickData(event, data) {
            return data
        }

        function configure() {
            this._clickTrackingInstalled = !1
        }

        function trackClicks(trackClicksOptions) {
            function clickTracker(e) {
                var target = elementUtils.getEventTarget(e);
                if (!treeHasIgnoreAttribute(target) && !elementUtils.shouldIgnoreElement(target)) {
                    var elementData = elementUtils.getElementData(target),
                        data = options.extendClickData(e, elementData);
                    data && instance.trackEvent("clicks", data)
                }
            }
            if (!this._clickTrackingInstalled) {
                var instance = this,
                    options = assign({
                        element: window.document,
                        extendClickData: defaultExtendClickData,
                        ignoreAttribute: "td-ignore"
                    }, trackClicksOptions),
                    treeHasIgnoreAttribute = elementUtils.createTreeHasIgnoreAttribute(options.ignoreAttribute),
                    removeClickTracker = elementUtils.addEventListener(options.element, "click", clickTracker);
                return instance._clickTrackingInstalled = !0, disposable(function() {
                    removeClickTracker(), instance._clickTrackingInstalled = !1
                })
            }
        }
        var window = require("global/window"),
            elementUtils = require("../utils/element"),
            assign = require("../utils/lodash").assign,
            disposable = require("../utils/misc").disposable;
        module.exports = {
            configure: configure,
            trackClicks: trackClicks
        }
    }, {
        "../utils/element": 297,
        "../utils/lodash": 299,
        "../utils/misc": 300,
        "global/window": 70
    }],
    293: [function(require, module, exports) {
        function cacheSuccess(result, cookieName) {
            return cookie.set(cookieName, result.global_id, {
                expires: 6e3
            }), result.global_id
        }

        function configure() {}

        function fetchGlobalID(success, error, forceFetch) {
            success = success || noop, error = error || noop;
            var cookieName = this.client.globalIdCookie,
                cachedGlobalId = cookie.get(this.client.globalIdCookie);
            if (cachedGlobalId && !forceFetch) return setTimeout(function() {
                success(cachedGlobalId)
            }, 0);
            var url = this.client.protocol + "//" + this.client.host + "/js/v3/global_id";
            invariant("jsonp" === this.client.requestType, "Request type " + this.client.requestType + " not supported"), jsonp(url, {
                prefix: "TreasureJSONPCallback",
                timeout: 1e4
            }, function(err, res) {
                return err ? error(err) : success(cacheSuccess(res, cookieName))
            })
        }
        var jsonp = require("jsonp"),
            invariant = require("../utils/misc").invariant,
            noop = require("../utils/misc").noop,
            cookie = require("cookies-js");
        module.exports = {
            cacheSuccess: cacheSuccess,
            configure: configure,
            fetchGlobalID: fetchGlobalID
        }
    }, {
        "../utils/misc": 300,
        "cookies-js": 22,
        jsonp: 80
    }],
    294: [function(require, module, exports) {
        function configureValues(track) {
            return _.assign({
                td_version: function() {
                    return version
                },
                td_client_id: function() {
                    return track.uuid
                },
                td_charset: function() {
                    return (document.characterSet || document.charset || "-").toLowerCase()
                },
                td_language: function() {
                    var nav = window.navigator;
                    return (nav && (nav.language || nav.browserLanguage) || "-").toLowerCase()
                },
                td_color: function() {
                    return window.screen ? window.screen.colorDepth + "-bit" : "-"
                },
                td_screen: function() {
                    return window.screen ? window.screen.width + "x" + window.screen.height : "-"
                },
                td_viewport: function() {
                    var clientHeight = document.documentElement && document.documentElement.clientHeight,
                        clientWidth = document.documentElement && document.documentElement.clientWidth,
                        innerHeight = window.innerHeight,
                        innerWidth = window.innerWidth,
                        height = clientHeight < innerHeight ? innerHeight : clientHeight;
                    return (clientWidth < innerWidth ? innerWidth : clientWidth) + "x" + height
                },
                td_title: function() {
                    return document.title
                },
                td_url: function() {
                    return document.location.href.split("#")[0]
                },
                td_user_agent: function() {
                    return window.navigator.userAgent
                },
                td_platform: function() {
                    return window.navigator.platform
                },
                td_host: function() {
                    return document.location.host
                },
                td_path: function() {
                    return document.location.pathname
                },
                td_referrer: function() {
                    return document.referrer
                },
                td_ip: function() {
                    return "td_ip"
                },
                td_browser: function() {
                    return "td_browser"
                },
                td_browser_version: function() {
                    return "td_browser_version"
                },
                td_os: function() {
                    return "td_os"
                },
                td_os_version: function() {
                    return "td_os_version"
                }
            }, track.values)
        }

        function configureTrack(track) {
            return _.assign({
                pageviews: "pageviews",
                events: "events",
                values: {}
            }, track)
        }

        function configureStorage(storage) {
            return "none" !== storage && (storage = _.isObject(storage) ? storage : {}, _.assign({
                    name: "_td",
                    expires: 63072e3,
                    domain: document.location.hostname,
                    customDomain: !!storage.domain,
                    path: "/"
                }, storage))
        }
        /*!
         * ----------------------
         * Treasure Tracker
         * ----------------------
         */
        var window = require("global/window"),
            _ = require("../utils/lodash"),
            cookie = require("cookies-js"),
            generateUUID = require("../utils/generateUUID"),
            version = require("../version"),
            document = window.document;
        exports.configure = function(config) {
            config = _.isObject(config) ? config : {}, this.client.track = config.track = configureTrack(config.track), this.client.storage = config.storage = configureStorage(config.storage), _.isNumber(config.clientId) ? config.clientId = config.clientId.toString() : config.clientId && _.isString(config.clientId) || (config.storage && config.storage.name && (config.clientId = cookie.get(config.storage.name)), config.clientId || (config.clientId = generateUUID())), this.client.track.uuid = config.clientId.replace(/\0/g, "");
            var setCookie = function(storage, uuid) {
                var clone = _.assign({}, storage),
                    is = {
                        ip: storage.domain.match(/\d*\.\d*\.\d*\.\d*$/),
                        local: "localhost" === storage.domain,
                        custom: storage.customDomain
                    };
                if (is.ip || is.local || is.custom) clone.domain = is.local ? null : clone.domain, cookie(storage.name, uuid, clone);
                else
                    for (var domain = storage.domain.split("."), i = domain.length - 1; i >= 0; i--)
                        if (clone.domain = domain.slice(i).join("."), cookie(storage.name, uuid, clone), cookie.get(storage.name) && uuid) {
                            storage.domain = clone.domain;
                            break
                        }
            };
            return config.storage && config.storage.expires && (setCookie(config.storage, void 0), setCookie(config.storage, this.client.track.uuid)), this.client.track.values = _.assign(configureValues(this.client.track), this.client.track.values), this
        }, exports.trackEvent = function(table, record, success, failure) {
            return table || (table = this.client.track.events), record = _.assign(this.getTrackValues(), record), this.addRecord(table, record, success, failure), this
        }, exports.trackPageview = function(table, success, failure) {
            return table || (table = this.client.track.pageviews), this.trackEvent(table, {}, success, failure), this
        }, exports.getTrackValues = function() {
            var result = {};
            return _.forIn(this.client.track.values, function(value, key) {
                value && (result[key] = "function" == typeof value ? value() : value)
            }), result
        }
    }, {
        "../utils/generateUUID": 298,
        "../utils/lodash": 299,
        "../version": 303,
        "cookies-js": 22,
        "global/window": 70
    }],
    295: [function(require, module, exports) {
        function validateRecord(table, record) {
            invariant(_.isString(table), "Must provide a table"), invariant(/^[a-z0-9_]{3,255}$/.test(table), "Table must be between 3 and 255 characters and must consist only of lower case letters, numbers, and _"), invariant(_.isObject(record), "Must provide a record")
        }
        var invariant = require("./utils/misc").invariant,
            noop = require("./utils/misc").noop,
            jsonp = require("jsonp"),
            _ = require("./utils/lodash"),
            objectToBase64 = require("./utils/objectToBase64");
        exports._sendRecord = function(request, success, error) {
            success = success || noop, error = error || noop, invariant("jsonp" === request.type, "Request type " + request.type + " not supported");
            var params = ["api_key=" + encodeURIComponent(request.apikey), "modified=" + encodeURIComponent((new Date).getTime()), "data=" + encodeURIComponent(objectToBase64(request.record))];
            request.time && params.push("time=" + encodeURIComponent(request.time));
            var jsonpUrl = request.url + "?" + params.join("&");
            jsonp(jsonpUrl, {
                prefix: "TreasureJSONPCallback",
                timeout: 1e4
            }, function(err, res) {
                return err ? error(err) : success(res)
            })
        }, exports.applyProperties = function(table, payload) {
            return _.assign({}, this.get("$global"), this.get(table), payload)
        }, exports.addRecord = function(table, record, success, error) {
            validateRecord(table, record);
            var request = {
                apikey: this.client.writeKey,
                record: this.applyProperties(table, record),
                time: null,
                type: this.client.requestType,
                url: this.client.endpoint + this.client.database + "/" + table
            };
            request.record.time && (request.time = request.record.time), this.client.development ? this.log("addRecord", request) : this._sendRecord(request, success, error)
        }, exports._validateRecord = validateRecord
    }, {
        "./utils/lodash": 299,
        "./utils/misc": 300,
        "./utils/objectToBase64": 301,
        jsonp: 80
    }],
    296: [function(require, module, exports) {
        function Treasure(options) {
            return this instanceof Treasure ? (this.init(options), this) : new Treasure(options)
        }
        var record = require("./record"),
            _ = require("./utils/lodash"),
            configurator = require("./configurator"),
            version = require("./version");
        Treasure.prototype.init = function(options) {
            this.configure(options);
            for (var plugin in Treasure.Plugins) Treasure.Plugins.hasOwnProperty(plugin) && Treasure.Plugins[plugin].configure.call(this, options)
        }, Treasure.version = Treasure.prototype.version = version, Treasure.prototype.log = function() {
            for (var args = ["[Treasure]"], i = 0, len = arguments.length - 1; i <= len; i++) args.push(arguments[i]);
            "undefined" != typeof console && this.client.logging
        }, Treasure.prototype.configure = configurator.configure, Treasure.prototype.set = configurator.set, Treasure.prototype.get = configurator.get, Treasure.prototype.ready = require("domready"), Treasure.prototype.applyProperties = record.applyProperties, Treasure.prototype.addRecord = record.addRecord, Treasure.prototype._sendRecord = record._sendRecord, Treasure.prototype._configurator = configurator, Treasure.Plugins = {
            Clicks: require("./plugins/clicks"),
            GlobalID: require("./plugins/globalid"),
            Track: require("./plugins/track")
        }, _.forIn(Treasure.Plugins, function(plugin) {
            _.forIn(plugin, function(method, name) {
                Treasure.prototype[name] || (Treasure.prototype[name] = method)
            })
        }), module.exports = Treasure
    }, {
        "./configurator": 291,
        "./plugins/clicks": 292,
        "./plugins/globalid": 293,
        "./plugins/track": 294,
        "./record": 295,
        "./utils/lodash": 299,
        "./version": 303,
        domready: 28
    }],
    297: [function(require, module, exports) {
        function getEventTarget(event) {
            var target = event.target || event.srcElement || window.document;
            return 3 === target.nodeType ? target.parentNode : target
        }

        function addEventListener(el, type, fn) {
            function handler(event) {
                fn.call(el, event || window.event)
            }
            if (el.addEventListener) return el.addEventListener(type, handler, !1), disposable(function() {
                el.removeEventListener(type, handler, !1)
            });
            if (el.attachEvent) return el.attachEvent("on" + type, handler), disposable(function() {
                el.detachEvent("on" + type, handler)
            });
            throw new Error("addEventListener")
        }

        function shouldIgnoreElement(el) {
            if (!el || !el.tagName) return !0;
            var tag = el.tagName.toLowerCase(),
                type = el.getAttribute("type");
            if ("input" === tag && "password" === type) return !0;
            var role = el.getAttribute("role");
            return "button" !== role && "link" !== role && "a" !== tag && "button" !== tag && "input" !== tag
        }

        function createTreeHasIgnoreAttribute(ignoreAttribute) {
            var dataIgnoreAttribute = "data-" + ignoreAttribute;
            return function treeHasIgnoreAttribute(el) {
                return !(!el || !el.tagName || "html" === el.tagName.toLowerCase()) && (!(!el.hasAttribute(ignoreAttribute) && !el.hasAttribute(dataIgnoreAttribute)) || treeHasIgnoreAttribute(el.parentNode))
            }
        }

        function getElementData(el) {
            var data = {
                tag: el.tagName.toLowerCase(),
                tree: htmlTreeAsString(el)
            };
            return forEach(["alt", "class", "href", "id", "name", "role", "title", "type"], function(attrName) {
                el.hasAttribute(attrName) && (data[attrName] = el.getAttribute(attrName))
            }), data
        }

        function htmlTreeAsString(elem) {
            for (var nextStr, out = [], height = 0, len = 0, sepLength = " > ".length; elem && height++ < 5 && !("html" === (nextStr = htmlElementAsString(elem)) || height > 1 && len + out.length * sepLength + nextStr.length >= 80);) out.push(nextStr), len += nextStr.length, elem = elem.parentNode;
            return out.reverse().join(" > ")
        }

        function htmlElementAsString(elem) {
            var className, classes, key, attr, i, out = [];
            if (!elem || !elem.tagName) return "";
            if (out.push(elem.tagName.toLowerCase()), elem.id && out.push("#" + elem.id), (className = elem.className) && isString(className))
                for (classes = className.split(" "), i = 0; i < classes.length; i++) out.push("." + classes[i]);
            var attrWhitelist = ["type", "name", "title", "alt"];
            for (i = 0; i < attrWhitelist.length; i++) key = attrWhitelist[i], (attr = elem.getAttribute(key)) && out.push("[" + key + '="' + attr + '"]');
            return out.join("")
        }
        var forEach = require("./lodash").forEach,
            isString = require("./lodash").isString,
            disposable = require("./misc").disposable;
        module.exports = {
            addEventListener: addEventListener,
            createTreeHasIgnoreAttribute: createTreeHasIgnoreAttribute,
            getElementData: getElementData,
            getEventTarget: getEventTarget,
            htmlElementAsString: htmlElementAsString,
            htmlTreeAsString: htmlTreeAsString,
            shouldIgnoreElement: shouldIgnoreElement
        }
    }, {
        "./lodash": 299,
        "./misc": 300
    }],
    298: [function(require, module, exports) {
        var window = require("global/window");
        module.exports = function() {
            var d = (new Date).getTime();
            return window.performance && "function" == typeof window.performance.now && (d += window.performance.now()), "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
                var r = (d + 16 * Math.random()) % 16 | 0;
                return d = Math.floor(d / 16), ("x" === c ? r : 3 & r | 8).toString(16)
            })
        }
    }, {
        "global/window": 70
    }],
    299: [function(require, module, exports) {
        module.exports = {
            forEach: require("lodash-compat/collection/forEach"),
            isNumber: require("lodash-compat/lang/isNumber"),
            isObject: require("lodash-compat/lang/isObject"),
            isString: require("lodash-compat/lang/isString"),
            assign: require("lodash-compat/object/assign"),
            forIn: require("lodash-compat/object/forIn"),
            noop: require("lodash-compat/utility/noop")
        }
    }, {
        "lodash-compat/collection/forEach": 82,
        "lodash-compat/lang/isNumber": 112,
        "lodash-compat/lang/isObject": 113,
        "lodash-compat/lang/isString": 114,
        "lodash-compat/object/assign": 115,
        "lodash-compat/object/forIn": 116,
        "lodash-compat/utility/noop": 121
    }],
    300: [function(require, module, exports) {
        function disposable(action) {
            var disposed = !1;
            return function() {
                disposed || (disposed = !0, action())
            }
        }

        function invariant(conditon, text) {
            if (!conditon) throw new Error(text)
        }

        function noop() {}
        module.exports = {
            disposable: disposable,
            invariant: invariant,
            noop: noop
        }
    }, {}],
    301: [function(require, module, exports) {
        var JSON3 = require("json3"),
            toBase64 = require("./toBase64");
        module.exports = function(object) {
            return toBase64(JSON3.stringify(object))
        }
    }, {
        "./toBase64": 302,
        json3: 79
    }],
    302: [function(require, module, exports) {
        function encode(n) {
            var i1, i2, i3, e1, e2, e3, e4, o = "",
                i = 0;
            for (n = utf8Encode(n); i < n.length;) i1 = n.charCodeAt(i++), i2 = n.charCodeAt(i++), i3 = n.charCodeAt(i++), e1 = i1 >> 2, e2 = (3 & i1) << 4 | i2 >> 4, e3 = isNaN(i2) ? 64 : (15 & i2) << 2 | i3 >> 6, e4 = isNaN(i2) || isNaN(i3) ? 64 : 63 & i3, o = o + m.charAt(e1) + m.charAt(e2) + m.charAt(e3) + m.charAt(e4);
            return o
        }

        function utf8Encode(n) {
            for (var c, o = "", i = 0; i < n.length;) c = n.charCodeAt(i++), o += c < 128 ? cc(c) : c > 127 && c < 2048 ? cc(c >> 6 | 192) + cc(63 & c | 128) : cc(c >> 12 | 224) + cc(c >> 6 & 63 | 128) + cc(63 & c | 128);
            return o
        }
        var cc = String.fromCharCode,
            m = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        module.exports = encode
    }, {}],
    303: [function(require, module, exports) {
        module.exports = "1.7.2"
    }, {}],
    304: [function(require, module, exports) {
        function E() {}
        E.prototype = {
            on: function(name, callback, ctx) {
                var e = this.e || (this.e = {});
                return (e[name] || (e[name] = [])).push({
                    fn: callback,
                    ctx: ctx
                }), this
            },
            once: function(name, callback, ctx) {
                function listener() {
                    self.off(name, listener), callback.apply(ctx, arguments)
                }
                var self = this;
                return listener._ = callback, this.on(name, listener, ctx)
            },
            emit: function(name) {
                var data = [].slice.call(arguments, 1),
                    evtArr = ((this.e || (this.e = {}))[name] || []).slice(),
                    i = 0,
                    len = evtArr.length;
                for (i; i < len; i++) evtArr[i].fn.apply(evtArr[i].ctx, data);
                return this
            },
            off: function(name, callback) {
                var e = this.e || (this.e = {}),
                    evts = e[name],
                    liveEvents = [];
                if (evts && callback)
                    for (var i = 0, len = evts.length; i < len; i++) evts[i].fn !== callback && evts[i].fn._ !== callback && liveEvents.push(evts[i]);
                return liveEvents.length ? e[name] = liveEvents : delete e[name], this
            }
        }, module.exports = E
    }, {}],
    305: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Analytics = function() {
            function Analytics() {
                this.is_started = !1, this.loaded_func_list = [], this.profile_id = GA_PROFILE_ID, this.custom_vars = null, this.define_map = {
                    plan: "dimension1",
                    device: "dimension2",
                    lang: "dimension3",
                    fbconnect: "dimension4",
                    gnum: "dimension5",
                    cnum: "dimension6",
                    useday: "dimension7",
                    usestorage: "dimension8",
                    tnum: "dimension9",
                    pnum: "dimension10",
                    dhash: "dimension11"
                }
            }
            return Analytics.prototype.start = function(_custom_vars) {
                var self = this;
                if (!self.is_started) {
                    self.is_started = !0, self.custom_vars = _custom_vars,
                        function(i, s, o, g, r) {
                            i.GoogleAnalyticsObject = r, i[r] = i[r] || function() {
                                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                    (i[r].q = i[r].q || []).push(args)
                                }, i[r].l = Number(new Date);
                            var a = s.createElement(o),
                                m = s.getElementsByTagName(o)[0];
                            a.async = 1, a.src = "//www.google-analytics.com/analytics.js", m.parentNode.insertBefore(a, m)
                        }(window, document, "script", 0, "ga"), ga("create", self.profile_id, "auto"), ga("require", "displayfeatures"), self.trackPageView();
                    for (var i = 0, len = self.loaded_func_list.length; i < len; i++) self.loaded_func_list[i]();
                    return self.loaded_func_list = [], self
                }
            }, Analytics.prototype.trackPageView = function() {
                var self = this;
                if (!self.is_started) return self.loaded_func_list.push(function() {
                    self.trackPageView()
                }), !1;
                for (var key in self.define_map) self.define_map.hasOwnProperty(key) && void 0 !== self.custom_vars[key] && ga("set", self.define_map[key], self.custom_vars[key]);
                ga("send", "pageview", {
                    title: ""
                })
            }, Analytics.prototype.sendEventForKeepSession = function(category, action) {
                var self = this;
                if (!self.is_started) return void self.loaded_func_list.push(function() {
                    self.sendEventForKeepSession(category, action)
                });
                ga("send", "event", {
                    eventCategory: category,
                    eventAction: action,
                    title: ""
                })
            }, Analytics
        }();
        exports.Analytics = Analytics
    }, {}],
    306: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var LocalStorage = function() {
            function LocalStorage() {}
            return LocalStorage.prototype.isEnabled = function() {
                if (this.isEnabledCache) return this.isEnabledCache;
                try {
                    var enabled = Boolean(window.localStorage);
                    return this.isEnabledCache = enabled, enabled
                } catch (e) {
                    return this.isEnabledCache = !1, !1
                }
            }, LocalStorage.prototype.setItem = function(key, value) {
                this.isEnabled() && window.localStorage.setItem(key, value)
            }, LocalStorage.prototype.getItem = function(key) {
                if (this.isEnabled()) return window.localStorage.getItem(key)
            }, LocalStorage.prototype.removeItem = function(key) {
                this.isEnabled() && window.localStorage.removeItem(key)
            }, LocalStorage
        }();
        exports.LocalStorage = LocalStorage
    }, {}],
    307: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Treasure = require("td-js-sdk"),
            TD_KEY_MAP = {
                label: "cw_event",
                time: "cw_event_time",
                before_room_id: "change_room_before_room_id",
                after_room_id: "change_room_after_room_id",
                announce_id: "commercial_announce_id",
                is_amazon_url: "click_url_is_amazon_url"
            },
            TreasureData = function() {
                function TreasureData() {
                    this.default_params = {
                        myid: window.MYID,
                        plan: window.SERVICE_PLAN,
                        cw_language: window.LANGUAGE,
                        chatwork_id: window.ORGANIZATION_ID,
                        td_title: "title_dummy"
                    }, this.database = "chatwork", this.TD = new Treasure({
                        host: "in.treasuredata.com",
                        writeKey: "8125/e009a25851366477cb6884a9958f630709fe9602",
                        database: this.database
                    }), this.TD.set("$global", "td_global_id", "td_global_id"), this.TD.trackClicks()
                }
                return TreasureData.prototype.trackEvent = function(category, action, options) {
                    var label = options.label;
                    if (label) {
                        var event = {
                            cw_event_category: category,
                            cw_event_action: action
                        };
                        Object.keys(options).map(function(key) {
                            var value = options[key];
                            if (void 0 !== value) {
                                event[TD_KEY_MAP[key]] = value
                            }
                        }), Object.assign(event, this.default_params), this.TD.trackEvent("chatwork_app_events", event)
                    }
                }, TreasureData.prototype.trackException = function(params) {
                    Object.assign(params, this.default_params), this.TD.trackEvent("chatwork_app_errors", params)
                }, TreasureData
            }();
        exports.TreasureData = TreasureData
    }, {
        "td-js-sdk": 296
    }],
    308: [function(require, module, exports) {
        "use strict";

        function escape_html(str) {
            return str && str.replace ? (str = str.replace(/&/g, "&amp;"), str = str.replace(/"/g, "&quot;"), str = str.replace(/'/g, "&#039;"), str = str.replace(/</g, "&lt;"), str = str.replace(/>/g, "&gt;")) : str
        }

        function unescape_html(str) {
            return str && str.replace ? (str = str.replace(/&quot;/g, '"'), str = str.replace(/&#039;/g, "'"), str = str.replace(/&lt;/g, "<"), str = str.replace(/&gt;/g, ">"), str = str.replace(/&amp;/g, "&")) : str
        }

        function bytename(size, decimals) {
            if (void 0 === decimals && (decimals = 2), 0 === size) return "0 B";
            var i = Math.floor(Math.log(size) / Math.log(1024));
            return parseFloat((size / Math.pow(1024, i)).toFixed(decimals)).toLocaleString() + " " + BYTE_SIZES[i]
        }

        function bytenameWithUnit(size, unit, decimals) {
            if (void 0 === unit && (unit = "GB"), void 0 === decimals && (decimals = 2), 0 === size) return "0 B";
            var i = BYTE_SIZES.indexOf(unit);
            return parseFloat((size / Math.pow(1024, i)).toFixed(decimals)).toLocaleString() + " " + unit
        }

        function strtotime_format(datestr, dateformat, time) {
            var match_list = dateformat.match(/(Y|m|d)/g),
                dfreg = new RegExp(datestr.replace(/[0-9]+/g, "([0-9]+)"), "g"),
                match = dfreg.exec(datestr),
                parsed = {};
            parsed[match_list[0]] = parseInt(match[1], 10), parsed[match_list[1]] = parseInt(match[2], 10), parsed[match_list[2]] = parseInt(match[3], 10);
            var date;
            if (time) {
                var time_part = time.split(":").map(function(part) {
                    return parseInt(part, 10)
                });
                date = new Date(parsed.Y, parsed.m - 1, parsed.d, time_part[0], time_part[1], time_part[2])
            } else date = new Date(parsed.Y, parsed.m - 1, parsed.d);
            return Math.floor(date.getTime() / 1e3)
        }

        function is_this_year(time) {
            var date = new Date;
            return date.setTime(1e3 * time), date.getFullYear() === (new Date).getFullYear()
        }

        function urlencode(str) {
            return encodeURIComponent(str).replace(/[!'\(\)\*]/g, function(s) {
                return "%" + s.charCodeAt(0).toString(16).toUpperCase()
            }).replace(/%20/g, "+")
        }

        function urldecode(str) {
            return decodeURIComponent(str.replace(/\+/g, "%20"))
        }

        function time() {
            return Math.floor(Date.now() / 1e3)
        }

        function ucfirst(str) {
            return str.charAt(0).toUpperCase() + str.substr(1)
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.escape_html = escape_html, window.escape_html = escape_html, exports.unescape_html = unescape_html;
        var BYTE_SIZES = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
        exports.bytename = bytename, exports.bytenameWithUnit = bytenameWithUnit, exports.strtotime_format = strtotime_format, exports.is_this_year = is_this_year, exports.urlencode = urlencode, exports.urldecode = urldecode, exports.time = time, exports.ucfirst = ucfirst
    }, {}],
    309: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var AccountView_1 = require("../../web-new/view/AccountView"),
            boot_1 = require("../../web-new/controller/boot"),
            language_1 = require("../../web-new/lib/language"),
            DELETE_USER = language_1.Language.getLang("%%%deleted_user%%%"),
            Account = function() {
                function Account(myid) {
                    this.account_dat = {}, this.unknown_flag = {}, this.contact_list = [], this.contact_flag = {}, this.myrequest_dat = {}, this.request_dat = {}, this.facebook_app_id = "", this.avatar_default_map = ["blue", "green", "orange", "red", "violet", "yellow"], this.loaded_flag = {}, this.detail_data_flag = {}, this.myid = parseInt(myid, 10)
                }
                return Account.prototype.prepare = function() {
                    var self = this;
                    boot_1.use_local_comet ? self.facebook_app_id = "194987520565581" : self.facebook_app_id = "270897682951829", self.view = new AccountView_1.AccountView(self), self.view.prepare()
                }, Account.prototype.setName = function(id, name) {
                    this.setParam(id, "nm", name)
                }, Account.prototype.setOrgName = function(id, name) {
                    this.setParam(id, "onm", name)
                }, Account.prototype.setDepartment = function(id, department) {
                    this.setParam(id, "dp", department)
                }, Account.prototype.setTitle = function(id, title) {
                    this.setParam(id, "tt", title)
                }, Account.prototype.setChatWorkId = function(id, cwid) {
                    this.setParam(id, "cwid", cwid)
                }, Account.prototype.setGroupId = function(id, gid) {
                    this.setParam(id, "gid", gid)
                }, Account.prototype.setAvatarId = function(id, avatar_id) {
                    this.setParam(id, "av", avatar_id)
                }, Account.prototype.setCoverId = function(id, cover_id) {
                    this.setParam(id, "cv", cover_id)
                }, Account.prototype.setRoomId = function(id, room_id) {
                    this.setParam(id, "rid", parseInt(room_id, 10))
                }, Account.prototype.setNickName = function(id, nickname) {
                    this.setParam(id, "nn", nickname)
                }, Account.prototype.setMentionNum = function(id, mention_num) {
                    this.setParam(id, "mn", mention_num)
                }, Account.prototype.setSkype = function(id, skype_id) {
                    this.setParam(id, "sp", skype_id)
                }, Account.prototype.setTwitter = function(id, twitter_id) {
                    this.setParam(id, "tw", twitter_id)
                }, Account.prototype.setFacebook = function(id, facebook) {
                    this.setParam(id, "fb", facebook)
                }, Account.prototype.setUrl = function(id, url) {
                    this.setParam(id, "url", url)
                }, Account.prototype.setAddress = function(id, address) {
                    this.setParam(id, "ad", address)
                }, Account.prototype.setIntroduction = function(id, introduction) {
                    this.setParam(id, "intro", introduction)
                }, Account.prototype.setEmail = function(id, email) {
                    this.setParam(id, "mail", email)
                }, Account.prototype.setOrgTel = function(id, tel_organization) {
                    this.setParam(id, "otel", tel_organization)
                }, Account.prototype.setExtensionTel = function(id, tel_extension) {
                    this.setParam(id, "etel", tel_extension)
                }, Account.prototype.setMobileTel = function(id, tel_mobile) {
                    this.setParam(id, "mtel", tel_mobile)
                }, Account.prototype.setUndisclosed = function(id, is_undisclosed) {
                    this.setParam(id, "ud", is_undisclosed)
                }, Account.prototype.setRequestMessage = function(id, message) {
                    this.setParam(id, "requestMessage", message)
                }, Account.prototype.setDeleted = function(id, is_deleted) {
                    this.setParam(id, "is_deleted", is_deleted)
                }, Account.prototype.setParam = function(id, key, val) {
                    var self = this;
                    id = parseInt(id, 10), void 0 == self.account_dat[id] ? (self.account_dat[id] = {}, self.account_dat[id][key] = val) : self.account_dat[id][key] = val
                }, Account.prototype.getName = function(id) {
                    var self = this,
                        name = self.getParam(id, "nm", !1);
                    if (!1 === name) self.unknown_flag[id] = !0, name = "Loading... ";
                    else if ("" == name) return DELETE_USER;
                    return name
                }, Account.prototype.getNameWithSuffix = function(id) {
                    var name = this.getName(id);
                    return "Loading... " === name || name === DELETE_USER ? name : "" + name + language_1.Language.getLang("%%%name_suffix%%%")
                }, Account.prototype.getOrgName = function(id) {
                    return this.getParam(id, "onm", "")
                }, Account.prototype.getDepartment = function(id) {
                    return this.getParam(id, "dp", "")
                }, Account.prototype.getTitle = function(id) {
                    return this.getParam(id, "tt", "")
                }, Account.prototype.getFullName = function(id) {
                    var self = this,
                        orgname = self.getOrgName(id);
                    return orgname && (orgname += " "), orgname + self.getName(id)
                }, Account.prototype.getOrgTitle = function(id) {
                    var self = this,
                        orgname = self.getOrgName(id);
                    return orgname && (orgname += " "), orgname + self.getDepartment(id)
                }, Account.prototype.getChatWorkId = function(id) {
                    return this.getParam(id, "cwid", "")
                }, Account.prototype.getGroupId = function(id) {
                    return this.getParam(id, "gid", 0)
                }, Account.prototype.getNickName = function(id, nickname_only) {
                    var self = this;
                    if (nickname_only) return self.getParam(id, "nn", "");
                    var nn = self.getParam(id, "nn", "");
                    return "" === nn ? language_1.Language.getLang("%%%nickname_prefix%%%") + boot_1.AC.getName(id) + language_1.Language.getLang("%%%nickname_suffix%%%") : nn
                }, Account.prototype.getDefaultNickName = function(id) {
                    return language_1.Language.getLang("%%%nickname_prefix%%%") + boot_1.AC.getName(id) + language_1.Language.getLang("%%%nickname_suffix%%%")
                }, Account.prototype.getMentionNum = function(id) {
                    return this.getParam(id, "mn", 0)
                }, Account.prototype.getAvatarId = function(id) {
                    var self = this,
                        avatar_id = self.getParam(id, "av", "0/.");
                    if ("0/." == avatar_id)
                        if (self.isDeleted(id)) avatar_id = "ico_avatar_notfound.png";
                        else {
                            var idx = id % self.avatar_default_map.length;
                            avatar_id = "ico_default_" + self.avatar_default_map[idx] + ".png"
                        }
                    return avatar_id
                }, Account.prototype.getCoverId = function(id) {
                    var self = this,
                        cover_default_map = ["block_pattern", "check_blue", "flower_blue", "flower_pink", "leaf", "light", "mizutama", "party", "retro", "square", "zebra"],
                        cover_id = self.getParam(id, "cv", "0/.");
                    if ("0/." == cover_id)
                        if (self.isDeleted(id)) cover_id = "not_found.jpg";
                        else {
                            var idx = id % cover_default_map.length;
                            cover_id = cover_default_map[idx] + ".jpg"
                        }
                    return cover_id
                }, Account.prototype.getSkype = function(id) {
                    return this.getParam(id, "sp", "")
                }, Account.prototype.getTwitter = function(id) {
                    return this.getParam(id, "tw", "")
                }, Account.prototype.getFacebook = function(id) {
                    return this.getParam(id, "fb", "")
                }, Account.prototype.getUrl = function(id) {
                    return this.getParam(id, "url", "")
                }, Account.prototype.getAddress = function(id) {
                    return this.getParam(id, "ad", "")
                }, Account.prototype.getIntroduction = function(id) {
                    return this.getParam(id, "intro", "")
                }, Account.prototype.getEmail = function(id) {
                    return this.getParam(id, "mail", "")
                }, Account.prototype.getOrgTel = function(id) {
                    return this.getParam(id, "otel", "")
                }, Account.prototype.getExtensionTel = function(id) {
                    return this.getParam(id, "etel", "")
                }, Account.prototype.getMobileTel = function(id) {
                    return this.getParam(id, "mtel", "")
                }, Account.prototype.getOrgNamePriv = function(id) {
                    return this.getParam(id, "onm_priv", "")
                }, Account.prototype.getDepartmentPriv = function(id) {
                    return this.getParam(id, "dp_priv", "")
                }, Account.prototype.getTitlePriv = function(id) {
                    return this.getParam(id, "tt_priv", "")
                }, Account.prototype.getAvatarPriv = function(id) {
                    return this.getParam(id, "av_priv", "")
                }, Account.prototype.getCoverPriv = function(id) {
                    return this.getParam(id, "cv_priv", "")
                }, Account.prototype.getSkypePriv = function(id) {
                    return this.getParam(id, "sp_priv", "")
                }, Account.prototype.getTwitterPriv = function(id) {
                    return this.getParam(id, "tw_priv", "")
                }, Account.prototype.getFacebookPriv = function(id) {
                    return this.getParam(id, "fb_priv", "")
                }, Account.prototype.getUrlPriv = function(id) {
                    return this.getParam(id, "url_priv", "")
                }, Account.prototype.getAddressPriv = function(id) {
                    return this.getParam(id, "ad_priv", "")
                }, Account.prototype.getIntroductionPriv = function(id) {
                    return this.getParam(id, "intro_priv", "")
                }, Account.prototype.getEmailPriv = function(id) {
                    return this.getParam(id, "mail_priv", "")
                }, Account.prototype.getOrgTelPriv = function(id) {
                    return this.getParam(id, "otel_priv", "")
                }, Account.prototype.getExtensionTelPriv = function(id) {
                    return this.getParam(id, "etel_priv", "")
                }, Account.prototype.getMobileTelPriv = function(id) {
                    return this.getParam(id, "mtel_priv", "")
                }, Account.prototype.isUndisclosed = function(id) {
                    return this.getParam(id, "ud", 0)
                }, Account.prototype.getParam = function(id, key, def_val) {
                    var self = this;
                    return void 0 != id && (id = "number" == typeof id ? id : parseInt(id, 10), id > Number.MAX_SAFE_INTEGER ? def_val : void 0 != self.account_dat[id] && void 0 != self.account_dat[id][key] ? self.account_dat[id][key] : def_val)
                }, Account.prototype.getSortedMemberList = function() {
                    var self = this,
                        mem_list = [];
                    for (var aid in self.account_dat) 0 == aid || aid == boot_1.AC.myid || boot_1.AC.isDeleted(aid) || mem_list.push(aid);
                    return mem_list.sort(function(a, b) {
                        return self.isContact(a) ? self.isContact(b) ? boot_1.AC.getMentionNum(b) - boot_1.AC.getMentionNum(a) : -1 : self.isContact(b) ? 1 : boot_1.AC.getMentionNum(b) - boot_1.AC.getMentionNum(a)
                    }), mem_list
                }, Account.prototype.isContact = function(id) {
                    var self = this;
                    return id = parseInt(id, 10), !!self.contact_flag[id]
                }, Account.prototype.client_addContact = function(aid_list) {
                    for (var aid, self = this, refresh_aid_list = [], i = 0; i < aid_list.length; i++) aid = parseInt(aid_list[i], 10), refresh_aid_list.push(aid), self.account_dat[aid] = void 0, self.isContact(aid) || (self.contact_list.push(aid), self.contact_flag[aid] = !0, void 0 != self.myrequest_dat && void 0 != self.myrequest_dat[aid] && delete self.myrequest_dat[aid], void 0 != self.request_dat && void 0 != self.request_dat[aid] && delete self.request_dat[aid]);
                    refresh_aid_list.length > 0 && self.refreshAccount(refresh_aid_list, !0, function() {
                        self.buildMyContact()
                    })
                }, Account.prototype.client_deleteContact = function(aid_list) {
                    for (var aid, self = this, refresh_aid_list = [], i = 0; i < aid_list.length; i++)
                        if (aid = parseInt(aid_list[i], 10), self.isContact(aid)) {
                            for (var j = 0; j < self.contact_list.length; j++)
                                if (self.contact_list[j] == aid) {
                                    self.contact_list.splice(j, 1);
                                    break
                                }
                            delete self.contact_flag[aid], self.account_dat[aid] = void 0, refresh_aid_list.push(aid)
                        }
                    refresh_aid_list.length > 0 && self.refreshAccount(refresh_aid_list, !1, function() {
                        self.buildMyContact()
                    })
                }, Account.prototype.getRequestMessage = function(id) {
                    return this.getParam(id, "requestMessage", null)
                }, Account.prototype.isDeleted = function(id) {
                    var self = this,
                        is_deleted = self.getParam(id, "is_deleted", null);
                    if (null !== is_deleted) return is_deleted;
                    return function() {
                        return "" == self.getParam(id, "nm", !1)
                    }()
                }, Account.prototype.getRoomId = function(id) {
                    var self = this;
                    return id = parseInt(id, 10), void 0 != self.account_dat[id] && void 0 != self.account_dat[id].rid ? self.account_dat[id].rid : 0
                }, Account.prototype.hasUnknown = function() {
                    var self = this;
                    for (var aid in self.unknown_flag) {
                        if (self.isUnknown(aid)) return !0;
                        delete self.unknown_flag[aid]
                    }
                    return !1
                }, Account.prototype.isUnknown = function(aid) {
                    var self = this;
                    return void 0 == self.account_dat[aid] || void 0 == self.account_dat[aid].nm
                }, Account.prototype.getUnknown = function(callback) {
                    var self = this,
                        unknown_list = [];
                    for (var aid in self.unknown_flag) self.isUnknown(aid) ? void 0 == self.loaded_flag[aid] && (unknown_list.push(parseInt(aid, 10)), self.loaded_flag[aid] = !0) : delete self.unknown_flag[aid];
                    unknown_list.length > 0 ? self.refreshAccount(unknown_list, !1, callback) : "function" == typeof callback && callback()
                }, Account.prototype.refreshAccount = function(aid_list, get_private_data, callback) {
                    var self = this;
                    if (aid_list.length > 0) {
                        get_private_data = get_private_data ? 1 : 0;
                        var result_account_dat = {},
                            _aid_list = Array.prototype.concat(aid_list),
                            get_account_info = function(_aid_list) {
                                var list = _aid_list.splice(0, 5e3);
                                boot_1.CW.post("gateway.php", {
                                    cmd: "get_account_info",
                                    aid: list,
                                    get_private_data: get_private_data
                                }, function(json) {
                                    for (var aid in json.account_dat) self.setAccountDat(aid, json.account_dat[aid]), result_account_dat[aid] = json.account_dat[aid];
                                    if (_aid_list.length) return get_account_info(_aid_list);
                                    self.unknown_flag = {}, "function" == typeof callback && callback(result_account_dat), self.view.updateAvatarAndNameAndCover(aid_list), boot_1.CW.is_business ? self.refreshInternal() : boot_1.RL.build()
                                })
                            };
                        get_account_info(_aid_list)
                    }
                }, Account.prototype.refreshAccountDetailData = function(account_id, get_priv_setting, callback) {
                    var self = this;
                    boot_1.CW.post("gateway.php", {
                        cmd: "get_detail_account_info",
                        aid: account_id,
                        get_priv_setting: get_priv_setting
                    }, function(json) {
                        json.account_dat && self.setAccountDat(account_id, json.account_dat, !0), "function" == typeof callback && callback()
                    })
                }, Account.prototype.setAccountDat = function(aid, account_dat, is_detail) {
                    var self = this,
                        function_map = {
                            nm: self.setName,
                            name: self.setName,
                            onm: self.setOrgName,
                            orgname: self.setOrgName,
                            dp: self.setDepartment,
                            tt: self.setTitle,
                            av: self.setAvatarId,
                            avid: self.setAvatarId,
                            cv: self.setCoverId,
                            gid: self.setGroupId,
                            rid: self.setRoomId,
                            tw: self.setTwitter,
                            fb: self.setFacebook,
                            sp: self.setSkype,
                            cwid: self.setChatWorkId,
                            ad: self.setAddress,
                            url: self.setUrl,
                            intro: self.setIntroduction,
                            mail: self.setEmail,
                            otel: self.setOrgTel,
                            etel: self.setExtensionTel,
                            mtel: self.setMobileTel,
                            ud: self.setUndisclosed,
                            mg: self.setRequestMessage,
                            is_deleted: self.setDeleted
                        },
                        priv_key = "";
                    for (var key in function_map) void 0 != account_dat[key] && (function_map[key].call(self, aid, account_dat[key]), priv_key = key + "_priv", void 0 != account_dat[priv_key] && self.setParam(aid, priv_key, account_dat[priv_key]));
                    self.detail_data_flag[aid] = !!is_detail
                }, Account.prototype.hasDetailData = function(aid) {
                    return !!this.detail_data_flag[aid]
                }, Account.prototype.refreshMentionInfo = function(aid_list) {
                    var self = this;
                    boot_1.CW.get("gateway.php", {
                        cmd: "get_mention_info",
                        a: aid_list
                    }, function(json) {
                        for (var aid in json.mention_dat) self.setNickName(aid, json.mention_dat[aid].nn), self.setMentionNum(aid, json.mention_dat[aid].mn);
                        for (var room_id in boot_1.RL.rooms) {
                            var room = boot_1.RL.rooms[room_id];
                            null != room.sorted_member_list && (room.sorted_member_list = null)
                        }
                    })
                }, Account.prototype.refreshContactList = function() {
                    var self = this;
                    boot_1.CW.get("gateway.php", {
                        cmd: "get_contact_list"
                    }, function(json) {
                        self.updateContactList(json.contact_dat, json.mention_dat, json.myrequest_dat, json.request_dat)
                    })
                }, Account.prototype.updateContactList = function(contact_dat, mention_dat, myrequest_dat, request_dat) {
                    for (var self = this, deleted_contact_flag = {}, current_contact_flag = {}, added_contact_list = [], i = 0; i < self.contact_list.length; i++) deleted_contact_flag[self.contact_list[i]] = !0, current_contact_flag[self.contact_list[i]] = !0;
                    self.contact_list = [], self.contact_flag = {}, self.setName(0, "ChatWork");
                    var aid;
                    for (aid in self.account_dat) self.setRoomId(aid, 0);
                    for (aid in contact_dat) aid = parseInt(aid, 10), self.contact_flag[aid] = !0, boot_1.CW.registerAvatar(aid), self.contact_list.push(aid), self.setAccountDat(aid, contact_dat[aid]), delete deleted_contact_flag[aid], current_contact_flag[aid] || added_contact_list.push(aid);
                    added_contact_list.length && self.view.updateAvatarAndName(added_contact_list);
                    for (aid in mention_dat) self.setNickName(aid, mention_dat[aid].nn), self.setMentionNum(aid, mention_dat[aid].mn);
                    for (aid in myrequest_dat) self.setAccountDat(aid, myrequest_dat[aid]);
                    self.myrequest_dat = myrequest_dat;
                    var requested_aid_list = [];
                    for (aid in request_dat) self.setAccountDat(aid, request_dat[aid]),
                    boot_1.CW.init_loaded && !self.request_dat[aid] && requested_aid_list.push(aid);
                    if (requested_aid_list.length && self.view.updateAvatarAndName(requested_aid_list), boot_1.CW.init_loaded) {
                        var refresh_aid_list = [];
                        for (aid in self.request_dat) request_dat[aid] || contact_dat[aid] || (self.account_dat[aid] = void 0, refresh_aid_list.push(aid));
                        for (aid in deleted_contact_flag) self.account_dat[aid] = void 0, refresh_aid_list.push(aid);
                        refresh_aid_list.length > 0 && self.refreshAccount(refresh_aid_list)
                    }
                    self.request_dat = request_dat, self.refreshInternal(), self.buildMyStatus(), self.buildMyContact()
                }, Account.prototype.showChatWorkIdRequestDialog = function(account_dat) {
                    this.view.showChatWorkIdRequestDialog(account_dat)
                }, Account.prototype.refreshInternal = function() {
                    if (boot_1.CW.is_business) {
                        var has_room = !1;
                        for (var room_id in boot_1.RL.rooms) has_room = !0, boot_1.RL.rooms[room_id].is_internal = -1;
                        has_room && boot_1.RL.build()
                    }
                }, Account.prototype.buildMyStatus = function() {
                    this.view.buildMyStatus()
                }, Account.prototype.buildMyContact = function() {
                    this.view.buildMyContact()
                }, Account.prototype.isMatchedWithKeyList = function(keyword_list, aid) {
                    var self = this,
                        name = self.getSearchKeys(aid).join(" ");
                    return boot_1.CW.isMatchedWithKeyList(keyword_list, name)
                }, Account.prototype.getContactNum = function() {
                    return this.contact_list.length - 1
                }, Account.prototype.getSearchKeys = function(id) {
                    return [boot_1.AC.getName(id), boot_1.AC.getNickName(id, !0), boot_1.AC.getOrgName(id), boot_1.AC.getDepartment(id), boot_1.AC.getChatWorkId(id)]
                }, Account
            }();
        exports.Account = Account
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/language": 384,
        "../../web-new/view/AccountView": 453
    }],
    310: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var ChatSendView_1 = require("../../web-new/view/ChatSendView"),
            common_1 = require("../lib/common"),
            boot_1 = require("../../web-new/controller/boot"),
            language_1 = require("../../web-new/lib/language"),
            ChatSend = function() {
                function ChatSend() {}
                return ChatSend.prototype.prepare = function() {
                    var self = this;
                    self.view = new ChatSendView_1.ChatSendView(self), self.view.prepare()
                }, ChatSend.prototype.initChatText = function() {
                    this.view.initChatText()
                }, ChatSend.prototype.setChatEdit = function(chat_id, room) {
                    this.view.setChatEdit(chat_id, room)
                }, ChatSend.prototype.setChatEditColor = function() {
                    this.view.setChatEditColor()
                }, ChatSend.prototype.clearChatEdit = function(chat_id) {
                    this.view.clearChatEdit(chat_id)
                }, ChatSend.prototype.convertMessageIdToInt = function(chat_list) {
                    return chat_list.map(function(message) {
                        return message.id = parseInt(message.id, 10), message
                    })
                }, ChatSend.prototype.sendMessage = function(room_id, text, option, success_callback, error_callback) {
                    var read, edit_id, self = this;
                    void 0 == option && (option = {}), read = void 0 == option.read || option.read ? 1 : 0, edit_id = option.edit_id ? option.edit_id : 0, boot_1.CW.post("gateway.php", {
                        cmd: "send_chat",
                        text: text,
                        room_id: room_id,
                        read: read,
                        edit_id: edit_id
                    }, function(json) {
                        void 0 != json.storage && void 0 != json.storage_limit && boot_1.FL.updateStorageInfo(json.storage, json.storage_limit, json.storage_limit_time, json.is_storage_limit), edit_id && boot_1.CW.watch(), "function" == typeof success_callback && success_callback(json)
                    }, function(error, json) {
                        json && json.is_storage_limit ? boot_1.CW.showStorageLimitDialog("message") : (json.chat_list && (json.chat_list = self.convertMessageIdToInt(json.chat_list)), "function" == typeof error_callback && error_callback(error, json))
                    })
                }, ChatSend.prototype.sendChat = function(room_id, text, last_chat_id, option, success_callback, error_callback) {
                    return this.sendMessage(room_id, text, option, success_callback, error_callback)
                }, ChatSend.prototype.deleteChat = function(chat_id, room_id, success_callback, error_callback) {
                    boot_1.CW.get("gateway.php", {
                        cmd: "delete_chat",
                        chat_id: chat_id,
                        room_id: room_id
                    }, function(json) {
                        "function" == typeof success_callback && success_callback(json), boot_1.CW.watch()
                    }, function(message) {
                        "function" == typeof error_callback ? error_callback(message) : boot_1.CW.alert(message)
                    })
                }, ChatSend.prototype.sendTask = function(room_id, text, task_limit, assign_list, success_callback, error_callback) {
                    task_limit ? task_limit.toString().match(/^[0-9]+$/) || (task_limit = common_1.strtotime_format(task_limit, boot_1.ST.data.dateformat)) : task_limit = 0, boot_1.CW.post("gateway.php", {
                        cmd: "add_task",
                        task: text,
                        task_limit: task_limit,
                        assign: assign_list,
                        room_id: room_id
                    }, function(json) {
                        success_callback(json), boot_1.CW.watch()
                    }, function(error) {
                        error_callback(error)
                    })
                }, ChatSend.prototype.editTask = function(task_id, assign_to, text, task_limit, success_callback, error_callback) {
                    task_limit ? task_limit.match(/^[0-9]+$/) || (task_limit = common_1.strtotime_format(task_limit, boot_1.ST.data.dateformat)) : task_limit = 0, boot_1.CW.post("gateway.php", {
                        cmd: "edit_task",
                        aid: assign_to,
                        task_id: task_id,
                        task: text,
                        task_limit: task_limit
                    }, function(json) {
                        "function" == typeof success_callback && success_callback(json), boot_1.CW.watch()
                    }, function(error) {
                        "function" == typeof error_callback && error_callback(error)
                    })
                }, ChatSend.prototype.convertToSend = function(text) {
                    return text = text.replace(new RegExp("\\[" + language_1.Language.getLang("%%%chatsend_quote%%%") + " aid=", "g"), "[qt][qtmeta aid="), text = text.replace(new RegExp("\\[" + language_1.Language.getLang("%%%chatsend_quote%%%") + "\\]", "g"), "[qt]"), text = text.replace(new RegExp("\\[/" + language_1.Language.getLang("%%%chatsend_quote%%%") + "\\]", "g"), "[/qt]"), text = text.replace(new RegExp("\\[" + language_1.Language.getLang("%%%chatsend_reply%%%") + " aid=", "g"), "[rp aid=")
                }, ChatSend.prototype.convertToEdit = function(text) {
                    text = text.replace(/\[qt\]\[qtmeta aid=/g, "[" + language_1.Language.getLang("%%%chatsend_quote%%%") + " aid="), text = text.replace(/\[qt\]/g, "[" + language_1.Language.getLang("%%%chatsend_quote%%%") + "]"), text = text.replace(/\[\/qt\]/g, "[/" + language_1.Language.getLang("%%%chatsend_quote%%%") + "]"), text = text.replace(/\[rp aid=/g, "[" + language_1.Language.getLang("%%%chatsend_reply%%%") + " aid=");
                    var dtext_list = text.match(/\[dtext:\w+\]/g);
                    if (dtext_list)
                        for (var i = 0; i < dtext_list.length; i++) {
                            var match = dtext_list[i].match(/\[dtext:(\w+)\]/),
                                dtext_type = match[1],
                                lang = language_1.Language.getLang("%%%" + dtext_type + "%%%");
                            lang && "string" == typeof lang && (text = text.replace("[dtext:" + dtext_type + "]", lang))
                        }
                    return text
                }, ChatSend.prototype.setChatDraft = function(room_id, text, edit_id) {
                    var key = this.getDraftMessageKey(room_id),
                        draft = {
                            edit_id: edit_id,
                            text: text
                        };
                    boot_1.CW.localStorage.setItem(key, JSON.stringify(draft))
                }, ChatSend.prototype.setTaskDraft = function(room_id, task_name, assign_list, limit_date) {
                    var key = this.getDraftTaskKey(room_id),
                        draft = {
                            task_name: task_name,
                            assign_list: assign_list,
                            limit_date: limit_date
                        };
                    boot_1.CW.localStorage.setItem(key, JSON.stringify(draft))
                }, ChatSend.prototype.getChatDraft = function(room_id) {
                    var key = this.getDraftMessageKey(room_id),
                        draft = boot_1.CW.localStorage.getItem(key);
                    return draft ? (this.deleteChatDraft(room_id), JSON.parse(draft)) : {
                        edit_id: 0,
                        text: ""
                    }
                }, ChatSend.prototype.getTaskDraft = function(room_id) {
                    var key = this.getDraftTaskKey(room_id),
                        draft = boot_1.CW.localStorage.getItem(key);
                    return draft ? (this.deleteTaskDraft(room_id), JSON.parse(draft)) : {
                        task_name: "",
                        task_mode: "",
                        assign_list: [],
                        limit_date: ""
                    }
                }, ChatSend.prototype.deleteChatDraft = function(room_id) {
                    var key = this.getDraftMessageKey(room_id);
                    boot_1.CW.localStorage.removeItem(key)
                }, ChatSend.prototype.deleteTaskDraft = function(room_id) {
                    var key = this.getDraftTaskKey(room_id);
                    boot_1.CW.localStorage.removeItem(key)
                }, ChatSend.prototype.getDraftMessageKey = function(room_id) {
                    return "draft_message_" + boot_1.AC.myid + "_" + room_id
                }, ChatSend.prototype.getDraftTaskKey = function(room_id) {
                    return "draft_task_" + boot_1.AC.myid + "_" + room_id
                }, ChatSend
            }();
        exports.ChatSend = ChatSend
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/language": 384,
        "../../web-new/view/ChatSendView": 454,
        "../lib/common": 308
    }],
    311: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var ChatWorkView_1 = require("../../web-new/view/ChatWorkView"),
            Request_1 = require("../../web-new/lib/Request"),
            LocalStorage_1 = require("../lib/LocalStorage"),
            common_1 = require("../lib/common"),
            boot_1 = require("../../web-new/controller/boot"),
            language_1 = require("../../web-new/lib/language"),
            notificationAPI_1 = require("../../web-new/lib/notificationApi/notificationAPI"),
            ChatWork = function() {
                function ChatWork(version) {
                    this.version = version, this.is_online = !0, this.is_login = !0, this.api_version = 5, this.announce_id = void 0, this.is_first_load = !0, this.init_loaded = !1, this.stop_watching = !1, this.watching = !1, this.watch_timer = null, this.online_status_timer = null, this.delay = 1e3, this.last_id = 0, this.enable_popup = !1, this.last_timeline_buildkey = "", this.last_tasklist_buildkey = "", this.last_filelist_buildkey = "", this.ajax_timeout = 3e5, this.ajax_cmd_count = {}, this.error_count = 0, this.reg_cmp = [], this.plan = "", this.is_business = !1, this.is_admin = !1, this.is_admin_user = !1, this.is_security = !1, this.is_enterprise = !1, this.available_biwa = !1, this.switch_biwa = !1, this.first_biwa = !1, this.security_dat = {}, this.localStorage = new LocalStorage_1.LocalStorage, this.account_server_cmd = {}, this.read_timer = {}, this.default_read_time = 4e3, this.first_watch = !0, this.update_notified = !1, this.update_interval = 0, this.has_watch_request_in_update_interval = !1, this.online_checking = !1, this.online_check_timer = null, this.recheck_timeout = 1e4, this.date = new Date, this.avatar_option_default = {
                        hovertip: !0,
                        clicktip: !0,
                        small: !1,
                        ui: !1,
                        src: !1
                    }, this.contact_option_default = {
                        chatlink: !0,
                        webservice: !0,
                        request_contact: !0
                    }, this.file_option_default = {
                        type: "timeline"
                    }, this.task_option_default = {
                        type: "timeline"
                    }
                }
                return ChatWork.prototype.prepare = function() {
                    var self = this;
                    self.view = new ChatWorkView_1.ChatWorkView(self), self.request = new Request_1.Request, self.view.prepare()
                }, ChatWork.prototype.getLiveUrl = function(room_id, aid_list, type) {
                    var url = "./live.php?rid=" + room_id + "&aid=";
                    switch (Array, url += aid_list.join(","), type) {
                        case "voice":
                            url += "&type=voice";
                            break;
                        default:
                            url += "&type=video"
                    }
                    return url
                }, ChatWork.prototype.getLiveUrlById = function(live_id, type) {
                    var url = "./live/" + live_id;
                    switch (type) {
                        case "voice":
                            url += "?type=voice";
                            break;
                        default:
                            url += "?type=video"
                    }
                    return url
                }, ChatWork.prototype.alert = function(msg, ok_callback) {
                    "object" == typeof msg && (msg = msg.length > 0 ? msg.join("\n") : language_1.Language.getLang("%%%raise_error%%%")), msg || (msg = language_1.Language.getLang("%%%raise_error%%%")), boot_1.CW.view.alert(msg, ok_callback)
                }, ChatWork.prototype.confirm = function(msg, ok_callback, cancel_callback) {
                    boot_1.CW.view.confirm(msg, ok_callback, cancel_callback)
                }, ChatWork.prototype.showProgress = function(msg) {
                    boot_1.CW.view.showProgress(msg)
                }, ChatWork.prototype.hideProgress = function() {
                    boot_1.CW.view.hideProgress()
                }, ChatWork.prototype.read = function(read_time, room_id) {
                    var room, self = this;
                    if (void 0 == read_time && (read_time = self.default_read_time), self.isLogin() && (room = void 0 == room_id ? boot_1.RM : boot_1.RL.rooms[room_id]) && 1 != room.read_lock) {
                        self.cancelRead(room.id);
                        var unread_num = room.getUnreadNum();
                        if (unread_num > 0) {
                            var RM_read = boot_1.RL.rooms[room.id],
                                view_stat = RM_read.getViewStat();
                            RM_read.reading = !0, self.read_timer[room.id] = setTimeout(function() {
                                boot_1.RM && boot_1.RM.id == RM_read.id ? view_stat = boot_1.RM.getViewStat() : unread_num = RM_read.getUnreadNum(), unread_num >= view_stat.noview_num && boot_1.CW.get("gateway.php", {
                                    cmd: "read",
                                    room_id: RM_read.id,
                                    mid: RM_read.mid,
                                    last_chat_id: view_stat.last_read_id
                                }, function(json) {
                                    if (json.read_num) {
                                        var before_unread = RM_read.getUnreadNum();
                                        RM_read.read_num = json.read_num;
                                        var now_unread = RM_read.getUnreadNum(),
                                            before_mention = RM_read.getMentionNum();
                                        RM_read.mention_num = json.mention_num;
                                        var cur_mention = RM_read.getMentionNum();
                                        before_unread > 0 && 0 == now_unread ? boot_1.RL.unread_room_sum-- : 0 == before_unread && now_unread > 0 && boot_1.RL.unread_room_sum++, before_mention > 0 && 0 == cur_mention ? boot_1.RL.mention_room_sum-- : 0 == before_mention && cur_mention > 0 && boot_1.RL.mention_room_sum++, boot_1.RL.view.updateUnreadNum(RM_read.id), boot_1.RL.view.updateSumNumbers(), boot_1.RM.id == RM_read.id && RM_read.timeline.read(unread_num)
                                    }
                                    RM_read.reading = !1
                                }, function(error, result) {
                                    if (result && result.error && "no_member" == result.error) {
                                        var room_id = RM_read.id;
                                        boot_1.CW.post("gateway.php", {
                                            cmd: "is_room_member",
                                            rid: room_id
                                        }, function(json) {
                                            0 == json.is_room_member && (boot_1.RL.deleteRoom(room_id), boot_1.RL.build())
                                        })
                                    }
                                    RM_read.reading = !1
                                }), boot_1.RM && boot_1.RM.getUnreadNum() > 0 && boot_1.CW.read()
                            }, read_time)
                        }
                    }
                }, ChatWork.prototype.cancelRead = function(room_id) {
                    var self = this;
                    self.read_timer[room_id] && clearTimeout(self.read_timer[room_id])
                }, ChatWork.prototype.sendFeedback = function(options) {
                    options = $.extend({
                        message: "",
                        version: 1,
                        success: null,
                        error: null
                    }, options);
                    var send_dat = {
                        cmd: "send_feedback",
                        version: options.version,
                        message: options.message
                    };
                    boot_1.CW.post("gateway.php", send_dat, function() {
                        "function" == typeof options.success && options.success()
                    }, function() {
                        "function" == typeof options.error && options.error()
                    })
                }, ChatWork.prototype.popup = function(icon, title, body, room_id) {
                    return this.view.popup(icon, title, body, room_id)
                }, ChatWork.prototype.playSound = function(sound_type, sound_volume) {
                    return this.view.playSound(sound_type, sound_volume)
                }, ChatWork.prototype.stopSound = function(sound_type) {
                    return this.view.stopSound(sound_type)
                }, ChatWork.prototype.watch = function(is_fixed_term) {
                    var self = this;
                    if (self.update_interval) return void(self.has_watch_request_in_update_interval = !0);
                    if (self.update_interval = setTimeout(function() {
                            self.update_interval = 0, self.has_watch_request_in_update_interval && (self.has_watch_request_in_update_interval = !1, self.watch())
                        }, 1e3), !self.watching) {
                        self.watching = !0;
                        var cmd = "get_update";
                        if (self.watch_timer && clearTimeout(self.watch_timer), self.watch_timer = setTimeout(function() {
                                self.watch(!0)
                            }, 3e5), 0 == self.last_id) {
                            if (!boot_1.RL) return;
                            self.first_watch && (self.first_watch = !1, self.view.firstWatch()), boot_1.CW.get("gateway.php", {
                                cmd: "init_load",
                                rid: boot_1.RL.lazy_select,
                                type: boot_1.RL.load_type,
                                new: 1
                            }, function(json) {
                                boot_1.CW.setInitData(json)
                            })
                        } else boot_1.CW.get("gateway.php", {
                            cmd: cmd,
                            account_id: boot_1.AC.myid,
                            last_id: self.last_id,
                            ver: self.version,
                            new: 1
                        }, function(result) {
                            if (self.last_id != result.last_id && (self.last_id = result.last_id, set_update(result.update_info), is_fixed_term && self.comet()), self.announce_id != result.announce_id && (self.announce_id = result.announce_id, boot_1.ST.getAnnounce()), void 0 != result.update) {
                                if (!self.update_notified) {
                                    result.update.replace("a", "");
                                    result.update.includes("a") || self.view.alertUpdated(), self.view.showUpdated()
                                }
                                self.update_notified = !0
                            }
                        });
                        self.watching = !1;
                        var set_update = function(update_info) {
                            var refresh = {};
                            for (var upd_type in update_info) {
                                var upd_dat = update_info[upd_type];
                                switch (upd_type) {
                                    case "room":
                                        for (var room_id in upd_dat)
                                            if (!upd_dat[room_id].rd || (boot_1.RL.deleteRoom(room_id), upd_dat[room_id].a)) {
                                                if (upd_dat[room_id].a && boot_1.RL.isAddedRoomId(room_id) && (boot_1.RL.lazy_select = room_id, boot_1.RL.removeAddedRoomId(room_id)), void 0 != upd_dat[room_id].lt && boot_1.RL.setLastUpdateTime(room_id, upd_dat[room_id].lt), upd_dat[room_id].i && boot_1.RL.setInfoUpdate(room_id), upd_dat[room_id].p && boot_1.RL.setPersonalUpdate(room_id), upd_dat[room_id].d && boot_1.RL.setDescUpdate(room_id), upd_dat[room_id].m && boot_1.RL.setMemberUpdate(room_id), upd_dat[room_id].t && boot_1.RL.setTaskUpdate(room_id), upd_dat[room_id].cd)
                                                    for (var chat_id in upd_dat[room_id].cd) boot_1.RL.rooms[room_id].timeline && (boot_1.RL.rooms[room_id].timeline.deleteChat(chat_id), boot_1.RL.setUpdate(!0)), boot_1.RM && room_id == boot_1.RM.id && (refresh.RM = !0);
                                                if (upd_dat[room_id].ce)
                                                    for (var chat_id in upd_dat[room_id].ce) upd_dat[room_id].cd && upd_dat[room_id].cd[chat_id] || (boot_1.RL.rooms[room_id].timeline && (boot_1.RL.rooms[room_id].timeline.refreshChat(chat_id), boot_1.RL.setUpdate(!0)), boot_1.RM && room_id == boot_1.RM.id && (refresh.RM = !0));
                                                if (upd_dat[room_id].fe)
                                                    for (var file_id in upd_dat[room_id].fe) upd_dat[room_id].fd && upd_dat[room_id].fd[file_id] || boot_1.FL.refreshFile(file_id);
                                                if (upd_dat[room_id].fd)
                                                    for (var file_id in upd_dat[room_id].fd) boot_1.FL.deleteFileStat(file_id), boot_1.RM && room_id == boot_1.RM.id && (refresh.RM = !0);
                                                if (upd_dat[room_id].tc) {
                                                    for (var task_id in upd_dat[room_id].tc) upd_dat[room_id].td && upd_dat[room_id].td[task_id] || boot_1.TK.checkTask(task_id, upd_dat[room_id].tc[task_id], !0);
                                                    boot_1.TK.reflashTaskList(room_id)
                                                }
                                                if (upd_dat[room_id].te)
                                                    for (var task_id in upd_dat[room_id].te) upd_dat[room_id].td && upd_dat[room_id].td[task_id] || boot_1.TK.refreshTask(task_id);
                                                if (upd_dat[room_id].td) {
                                                    for (var task_id in upd_dat[room_id].td) boot_1.TK.deleteTaskStat(task_id);
                                                    boot_1.TK.reflashTaskList(room_id)
                                                }
                                                void 0 != upd_dat[room_id].s && (boot_1.RL.rooms[room_id].sticky = upd_dat[room_id].s, boot_1.RL.setUpdate(!0)), void 0 != upd_dat[room_id].lvc && boot_1.CW.openLiveNotification(upd_dat[room_id].lvc, room_id), void 0 != upd_dat[room_id].lvr && boot_1.CW.closeLiveNotification(upd_dat[room_id].lvr, room_id)
                                            }
                                        break;
                                    case "account":
                                        if (upd_dat.a) {
                                            var aid_list = [];
                                            for (var account_id in upd_dat.a) aid_list.push(parseInt(account_id, 10));
                                            boot_1.AC.refreshAccount(aid_list, !0)
                                        }
                                        if (upd_dat.s && boot_1.ST.getSetting(), upd_dat.r) {
                                            var old_aid = upd_dat.r;
                                            boot_1.AC.account_dat[old_aid] && boot_1.AC.refreshContactList();
                                            for (var room_id in boot_1.RL.rooms) boot_1.RL.rooms[room_id].member_dat[old_aid] && boot_1.RL.setMemberUpdate(room_id)
                                        }
                                        upd_dat.n && boot_1.ST.getAnnounce();
                                        break;
                                    case "contact":
                                        if (upd_dat.l && boot_1.AC.refreshContactList(), upd_dat.m) {
                                            var aid_list = [];
                                            for (var account_id in upd_dat.m) aid_list.push(parseInt(account_id, 10));
                                            boot_1.AC.refreshMentionInfo(aid_list)
                                        }
                                        upd_dat.a && upd_dat.a.length > 0 && boot_1.AC.client_addContact(upd_dat.a), upd_dat.d && upd_dat.d.length > 0 && boot_1.AC.client_deleteContact(upd_dat.d);
                                        break;
                                    case "category":
                                        upd_dat.l && boot_1.RL.refreshCategory()
                                }
                            }
                            refresh.RM && boot_1.RM.build(), boot_1.RL.hasUpdate() && boot_1.RL.build()
                        }
                    }
                }, ChatWork.prototype.comet = function() {
                    this.request.comet()
                }, ChatWork.prototype.postLoad = function() {
                    this.view.postLoad()
                }, ChatWork.prototype.isOnline = function() {
                    return this.is_online
                }, ChatWork.prototype.isLogin = function() {
                    return this.is_login
                }, ChatWork.prototype.setOnline = function() {
                    var self = this;
                    self.is_online = !0, self.is_login = !0, self.view.setOnline()
                }, ChatWork.prototype.setConnectionError = function(type) {
                    var self = this;
                    "NO LOGIN" == type ? (self.is_online = !0, self.is_login = !1) : "INVALID USER" == type ? (self.is_online = !0, self.is_login = !1) : "INVALID TOKEN" == type ? (self.is_online = !0, self.is_login = !1) : "NO TOKEN" == type ? (self.is_online = !0, self.is_login = !1) : "IP ERROR" == type ? (self.is_online = !0, self.is_login = !1) : (self.is_online = !1, self.is_login = !1), self.view.setConnectionError(type)
                }, ChatWork.prototype.post = function(url, data, success_callback, error_callback) {
                    return this.ajax({
                        type: "POST",
                        dataType: "json",
                        async: !0,
                        url: url,
                        data: data,
                        success: success_callback,
                        error: error_callback
                    })
                }, ChatWork.prototype.get = function(url, data, success_callback, error_callback) {
                    return this.ajax({
                        type: "GET",
                        dataType: "json",
                        async: !0,
                        url: url,
                        data: data,
                        success: success_callback,
                        error: error_callback
                    })
                }, ChatWork.prototype.fileUpload = function(cmd, formData) {
                    var self = this;
                    return $.ajax({
                        url: "gateway.php?cmd=" + cmd + "&_f=1&myid=" + MYID + "&_v=" + CLIENT_VER + "&_t=" + ACCESS_TOKEN,
                        type: "POST",
                        processData: !1,
                        contentType: !1,
                        data: formData
                    }).then(function(text) {
                        var content = common_1.unescape_html(text);
                        if (self.hideProgress(), content) {
                            var json;
                            try {
                                json = JSON.parse(content)
                            } catch (e) {
                                return void self.alert(language_1.Language.getLang("%%%raise_error%%%"))
                            }
                            return json.status.success ? json.status.message ? void self.alert(json.status.message) : json.result.header_error ? void self.alert(language_1.Language.getLang("%%%error_upload_" + json.result.header_error + "%%%")) : (self.watch(), json.result) : void self.alert(language_1.Language.getLang("%%%raise_error%%%"))
                        }
                    })
                }, ChatWork.prototype.ajax = function(params) {
                    var self = this;
                    if (boot_1.CW.isOnline() || boot_1.CW.checkOnline(function() {}, 1), boot_1.AC) {
                        var cmd = "";
                        if (params.data.cmd && (params.url += "?cmd=" + params.data.cmd, cmd = params.data.cmd.toString(), delete params.data.cmd), cmd && self.account_server_cmd[cmd] ? (params.dataType = "jsonp", params.url = ACCOUNT_SERVER_PATH + "/" + params.url) : params.url = SERVER_PATH + "/" + params.url, params.url += "&myid=" + boot_1.AC.myid + "&_v=" + self.version + "&_av=" + self.api_version + "&_t=" + ACCESS_TOKEN + "&ln=" + LANGUAGE, params.timeout = self.ajax_timeout, boot_1.CW.isLogin()) {
                            if ("function" != typeof params.error) params.error = function(error_message) {
                                if ("object" == typeof error_message && (error_message = void 0 != error_message.length ? error_message.join("\n") : ""), error_message) switch (error_message) {
                                    case "NO LOGIN":
                                    case "INVALID USER":
                                    case "NO TOKEN":
                                    case "INVALID TOKEN":
                                    case "BAD LOGIN INFO":
                                    case "UUID ERROR":
                                    case "IP ERROR":
                                    case "LOCK":
                                    case "OFFLINE":
                                    case "TIMEOUT":
                                        break;
                                    default:
                                        boot_1.CW.alert(error_message)
                                }
                                boot_1.CW.checkOnline()
                            };
                            else {
                                var org_error_callback = params.error;
                                params.error = function(error_message, result) {
                                    org_error_callback(error_message, result), boot_1.CW.checkOnline()
                                }
                            }
                            if ("function" == typeof params.success) {
                                var org_success_callback = params.success;
                                params.success = function(json) {
                                    if (json && 1 == json.status.success) org_success_callback(json.result);
                                    else {
                                        var error_msg = "";
                                        json && ("NO LOGIN" != (error_msg = json.status.message) && "INVALID USER" != error_msg && "NO TOKEN" != error_msg && "INVALID TOKEN" != error_msg && "IP ERROR" != error_msg || (boot_1.CW.setConnectionError(error_msg), boot_1.CW.checkOnline())), params.error(error_msg, json.result)
                                    }
                                }
                            }
                            return self.request.ajax(params)
                        }
                        "function" == typeof params.error && params.error()
                    }
                }, ChatWork.prototype.checkOnline = function(callback, force) {
                    var self = this;
                    if ("function" != typeof callback && (callback = function() {}), force && (self.online_check_timer && (clearTimeout(self.online_check_timer), self.online_check_timer = null), self.online_checking = !1), !1 === self.online_checking) {
                        self.online_checking = !0;
                        var success_callback = function() {
                                self.online_checking = !1, boot_1.CW.setOnline(), callback()
                            },
                            recheck_callback = function(timeout) {
                                void 0 == timeout && (timeout = self.recheck_timeout), self.recheck_timeout < 10 ? self.recheck_timeout *= 3 : self.recheck_timeout *= 1.2, self.online_check_timer || (self.online_check_timer = setTimeout(function() {
                                    self.online_checking = !1, self.online_check_timer = null, self.checkOnline(callback)
                                }, timeout))
                            };
                        setTimeout(function() {
                            self.request.checkOnline(function() {
                                success_callback(), self.recheck_timeout = 1e4
                            }, function(error_msg) {
                                boot_1.CW.setConnectionError(error_msg), "NO LOGIN" == error_msg || "INVALID USER" == error_msg || "NO TOKEN" == error_msg || "INVALID TOKEN" == error_msg || "BAD LOGIN INFO" == error_msg || "UUID ERROR" == error_msg || "IP ERROR" == error_msg || "LOCK" == error_msg ? boot_1.CW.view.showLoginDialog(success_callback, recheck_callback) : "OFFLINE" == error_msg ? boot_1.CW.view.showOfflineDialog(success_callback, recheck_callback) : "TIMEOUT" == error_msg ? boot_1.CW.view.showTimeoutDialog(success_callback, recheck_callback) : recheck_callback()
                            })
                        }, 1e3)
                    }
                }, ChatWork.prototype.renderMessage = function(message, option) {
                    var self = this;
                    return message && void 0 != message.length ? (void 0 == option && (option = {}), self.view.renderMessage(message, option)) : ""
                }, ChatWork.prototype.getDate = function(time, format) {
                    var self = this;
                    self.date.setTime(1e3 * time);
                    var year = self.date.getFullYear(),
                        month = self.date.getMonth() + 1,
                        day = self.date.getDate(),
                        hour = self.date.getHours(),
                        min = self.date.getMinutes(),
                        sec = self.date.getSeconds();
                    return hour < 10 && (hour = "0" + hour), min < 10 && (min = "0" + min), sec < 10 && (sec = "0" + sec), void 0 == format && (format = boot_1.ST.data.dateformat + " H:i"), format.replace("Y", year).replace("m", month).replace("d", day).replace("H", hour).replace("i", min).replace("s", sec)
                }, ChatWork.prototype.getAvatarPanel = function(account_id, option) {
                    var self = this;
                    if (account_id) {
                        if (void 0 == option) option = self.avatar_option_default;
                        else
                            for (var okey in self.avatar_option_default) void 0 == option[okey] && (option[okey] = self.avatar_option_default[okey]);
                        return self.view.getAvatarPanel(account_id, option)
                    }
                }, ChatWork.prototype.getMessageBadgeAvatarPanel = function(account_id) {
                    var self = this;
                    if (account_id) return self.view.getMessageBadgeAvatarPanel(account_id, self.avatar_option_default)
                }, ChatWork.prototype.getCoverPanel = function(account_id, option) {
                    var self = this,
                        cover_option_default = {
                            src: !1,
                            extraclass: !1
                        };
                    if (account_id) {
                        if (void 0 == option) option = cover_option_default;
                        else
                            for (var okey in cover_option_default) void 0 == option[okey] && (option[okey] = cover_option_default[okey]);
                        return self.view.getCoverPanel(account_id, option)
                    }
                }, ChatWork.prototype.getName = function(account_id) {
                    return this.view.getName(account_id)
                }, ChatWork.prototype.getOrgName = function(account_id) {
                    return this.view.getOrgName(account_id)
                }, ChatWork.prototype.getDepartment = function(account_id) {
                    return this.view.getDepartment(account_id)
                }, ChatWork.prototype.getOrgTitle = function(account_id) {
                    return this.view.getOrgTitle(account_id)
                }, ChatWork.prototype.getFullName = function(account_id) {
                    return this.view.getFullName(account_id)
                }, ChatWork.prototype.getChatWorkId = function(account_id) {
                    return this.view.getChatWorkId(account_id)
                }, ChatWork.prototype.getChatWorkIdLink = function(account_id) {
                    return this.view.getChatWorkIdLink(account_id)
                }, ChatWork.prototype.getRoomName = function(room_id) {
                    var self = this;
                    if (room_id) {
                        var room = boot_1.RL.rooms[room_id];
                        if (room) return "contact" == room.type ? self.getName(room.getAccountId()) : common_1.escape_html(room.getName())
                    }
                }, ChatWork.prototype.getContactPanel = function(account_id, option) {
                    var self = this;
                    if (account_id) {
                        if (void 0 == option) option = self.contact_option_default;
                        else
                            for (var okey in self.contact_option_default) void 0 == option[okey] && (option[okey] = self.contact_option_default[okey]);
                        return self.view.getContactPanel(account_id, option)
                    }
                }, ChatWork.prototype.registerAvatar = function(account_id) {
                    this.view.registerAvatar()
                }, ChatWork.prototype.getFilePanel = function(file_id, option) {
                    var self = this;
                    if (void 0 == option) option = self.file_option_default;
                    else
                        for (var okey in self.file_option_default) void 0 == option[okey] && (option[okey] = self.file_option_default[okey]);
                    var file_dat;
                    return file_dat = void 0 != boot_1.FL.file_id2file_dat[file_id] && boot_1.FL.file_id2file_dat[file_id], self.view.getFilePanel(file_dat, option)
                }, ChatWork.prototype.getTaskPanel = function(task_id, option) {
                    var self = this;
                    if (!task_id) return !1;
                    if (void 0 == option) option = self.task_option_default;
                    else
                        for (var okey in self.task_option_default) void 0 == option[okey] && (option[okey] = self.task_option_default[okey]);
                    var task_dat;
                    return task_dat = void 0 != boot_1.TK.task_id2task_dat[task_id] && boot_1.TK.task_id2task_dat[task_id], self.view.getTaskPanel(task_dat, option)
                }, ChatWork.prototype.openLiveNotification = function(live_id, room_id) {
                    this.view.openLiveNotification(live_id, room_id)
                }, ChatWork.prototype.closeLiveNotification = function(live_id, room_id) {
                    this.view.closeLiveNotification()
                }, ChatWork.prototype.buildLayout = function() {
                    this.view.buildLayout()
                }, ChatWork.prototype.resizeLayout = function() {
                    this.view.resizeLayout()
                }, ChatWork.prototype.showStorageLimitDialog = function(type) {
                    this.view.showStorageLimitDialog(type)
                }, ChatWork.prototype.setLimitDialog = function(limit_message, type) {
                    this.view.setLimitDialog(limit_message, type)
                }, ChatWork.prototype.setInitData = function(data) {
                    var self = this;
                    if (self.last_id = data.last_id, self.announce_id = data.announce_id, self.plan = data.plan, self.is_admin = data.is_admin, self.is_admin_user = data.is_admin_user, self.is_business = data.is_business, self.is_security = data.is_security, self.contact_limit_num = data.contact_limit_num, self.group_limit_num = data.group_limit_num, self.is_enterprise = data.is_enterprise, self.is_security && (self.security_dat = data.security_dat), boot_1.ST.updateSetting(data.setting_data), boot_1.AC.updateContactList(data.contact_dat, data.mention_dat, data.myrequest_dat, data.request_dat), boot_1.RL.updateCategory(data.cat_dat), boot_1.RL.updateRoomData(data.room_dat), data.announce_dat && boot_1.ST.updateAnnounce(data.announce_dat), boot_1.CW.postLoad(), boot_1.FL.updateStorageInfo(data.storage, data.storage_limit, data.storage_limit_time, data.is_storage_limit), !self.init_loaded) {
                        for (var room_list = boot_1.RL.getSortedRoomList(), unread_room_count = 0, i = 0; i < room_list.length; i++) {
                            var room_id = room_list[i];
                            if (boot_1.RL.rooms[room_id].getUnreadNum() > 0 && (unread_room_count++, boot_1.RL.setInfoUpdate(room_id)), unread_room_count > 100) break
                        }
                        boot_1.RL.build()
                    }
                    self.init_loaded = !0, self.comet()
                }, ChatWork.prototype.isMatchedWithKeyList = function(keyword_list, word) {
                    for (var iword = word.toLowerCase(), i = keyword_list.length; i--;)
                        if (!iword.includes(keyword_list[i])) return !1;
                    return !0
                }, ChatWork.prototype.splitWithSpace = function(str) {
                    return str.split(/[ \u3000]+/)
                }, ChatWork.prototype.displayEsetLink = function() {
                    return "ja" === LANGUAGE && !boot_1.CW.is_business
                }, ChatWork.prototype.checkNotificationPermission = function() {
                    boot_1.ST.getSetting(function() {
                        if (notificationAPI_1.NotificationAPI.isSupported) {
                            var desktop_alert = boot_1.ST.data.desktop_alert,
                                notification_permission = notificationAPI_1.NotificationAPI.checkPermission();
                            1 === desktop_alert && 1 === notification_permission && notificationAPI_1.NotificationAPI.requestPermission(function(permission) {
                                0 === permission && (boot_1.CW.enable_popup = !0)
                            })
                        }
                    })
                }, ChatWork
            }();
        exports.ChatWork = ChatWork
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/Request": 341,
        "../../web-new/lib/language": 384,
        "../../web-new/lib/notificationApi/notificationAPI": 391,
        "../../web-new/view/ChatWorkView": 455,
        "../lib/LocalStorage": 306,
        "../lib/common": 308
    }],
    312: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var CheatSheetView_1 = require("../../web-new/view/CheatSheetView"),
            CheatSheet = function() {
                function CheatSheet() {}
                return CheatSheet.prototype.prepare = function() {
                    var self = this;
                    self.view = new CheatSheetView_1.CheatSheetView, self.view.prepare()
                }, CheatSheet
            }();
        exports.CheatSheet = CheatSheet
    }, {
        "../../web-new/view/CheatSheetView": 456
    }],
    313: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var FileView_1 = require("../../web-new/view/FileView"),
            common_1 = require("../lib/common"),
            boot_1 = require("../../web-new/controller/boot"),
            File = function() {
                function File() {
                    this.file_id2file_dat = {}, this.storage = {
                        used: 0,
                        limit: 0,
                        available: 0
                    }, this.myfile_load_flag = {
                        loading: !1,
                        loaded: void 0
                    }
                }
                return File.prototype.prepare = function() {
                    var self = this;
                    self.view = new FileView_1.FileView(self), self.view.prepare()
                }, File.prototype.setFile = function(file_dat) {
                    this.file_id2file_dat[file_dat.id] = file_dat
                }, File.prototype.deleteFile = function(file_id, success_callback, error_callback) {
                    var file_id_list, self = this;
                    file_id_list = file_id instanceof Array ? file_id : [file_id], boot_1.CW.get("gateway.php", {
                        cmd: "delete_file",
                        f: file_id_list
                    }, function(json) {
                        void 0 != json.storage && void 0 != json.storage_limit && self.updateStorageInfo(json.storage, json.storage_limit, json.storage_limit_time, json.is_storage_limit);
                        for (var i = 0, file_len = file_id_list.length; i < file_len; i++) self.deleteFileStat(file_id_list[i]);
                        "function" == typeof success_callback && success_callback(json)
                    }, function(json) {
                        "function" == typeof error_callback && error_callback(json)
                    })
                }, File.prototype.deleteFileStat = function(file_id) {
                    var self = this;
                    self.hasFile(file_id) && "deleted" != self.file_id2file_dat[file_id].st && (self.file_id2file_dat[file_id].st = "deleted", delete self.file_id2file_dat[file_id].fn, self.buildByFileId(file_id))
                }, File.prototype.hasFile = function(file_id) {
                    return void 0 != this.file_id2file_dat[file_id]
                }, File.prototype.sortFileList = function(file_list) {
                    var self = this;
                    file_list.sort(function(a, b) {
                        return self.file_id2file_dat[b].id - self.file_id2file_dat[a].id
                    })
                }, File.prototype.getMyFileList = function() {
                    var file_list = [];
                    for (var file_id in boot_1.FL.file_id2file_dat) boot_1.FL.file_id2file_dat[file_id].aid == boot_1.AC.myid && file_list.push(file_id);
                    return file_list
                }, File.prototype.editFile = function(file_id, filename, success_callback, error_callback) {
                    boot_1.CW.get("gateway.php", {
                        cmd: "edit_file",
                        file_id: file_id,
                        filename: filename
                    }, function(json) {
                        "function" == typeof success_callback && success_callback(json), boot_1.CW.watch()
                    }, function(json) {
                        "function" == typeof error_callback ? error_callback(json) : boot_1.CW.alert(json)
                    })
                }, File.prototype.refreshFile = function(file_id) {
                    var self = this;
                    self.hasFile(file_id) && boot_1.CW.get("gateway.php", {
                        cmd: "get_file",
                        file_id: [file_id]
                    }, function(json) {
                        for (var fid in json.file_dat) {
                            var change = !1;
                            for (var key in json.file_dat[fid]) self.file_id2file_dat[fid][key] != json.file_dat[fid][key] && (self.file_id2file_dat[fid][key] = json.file_dat[fid][key],
                                change = !0);
                            change && self.buildByFileId(file_id)
                        }
                    })
                }, File.prototype.loadAllMyFile = function() {
                    var self = this;
                    if (!self.myfile_load_flag.loading) {
                        self.myfile_load_flag.loading = !0;
                        var file_list = self.getMyFileList(),
                            fid = "";
                        fid = file_list.length > 1e3 ? "" : file_list.join(","), boot_1.CW.post("gateway.php", {
                            cmd: "load_my_file",
                            fid: fid
                        }, function(json) {
                            if (json.file_dat) {
                                for (var file_id in json.file_dat) self.setFile(json.file_dat[file_id]);
                                self.myfile_load_flag.loading = !1, self.myfile_load_flag.loaded = common_1.time(), self.buildAllMyFile()
                            }
                        })
                    }
                }, File.prototype.buildByFileId = function(file_id) {
                    this.view.buildByFileId(file_id)
                }, File.prototype.buildAllMyFile = function() {
                    this.view.buildAllMyFile()
                }, File.prototype.updateStorageInfo = function(storage, storage_limit, limit_time, is_limit) {
                    var self = this;
                    self.view.updateStorageInfo(storage, storage_limit, limit_time, is_limit), self.storage.used = storage.total, self.storage.limit = storage_limit, self.storage.available = self.storage.limit - self.storage.used
                }, File.prototype.isExecutableExtension = function(filename) {
                    var executable_extensions = ["ade", "adp", "bat", "chm", "cmd", "com", "cpl", "exe", "hta", "ins", "isp", "jse", "lib", "mde", "msc", "msp", "mst", "pif", "scr", "sct", "shb", "sys", "vb", "vbe", "vbs", "vxd", "wsc", "wsf", "wsh", "lnk"],
                        match = filename.match(/\.([^\.]+)$/);
                    return !(!match || !executable_extensions.includes(match[1].toLowerCase()))
                }, File.prototype.containIllegalChar = function(filename) {
                    return !!filename.match(/[\\\/:\*\?"<>\|]/)
                }, File
            }();
        exports.File = File
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/view/FileView": 458,
        "../lib/common": 308
    }],
    314: [function(require, module, exports) {
        "use strict";

        function FileList(room) {
            var self = this;
            self.view = new FileListView_1.FileListView(self), self.loaded = !1, self.room = room, self.file_num = void 0
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var FileListView_1 = require("../../web-new/view/FileListView"),
            boot_1 = require("../../web-new/controller/boot");
        exports.FileList = FileList, FileList.prototype = {
            getLastFileId: function() {
                var file_list = this.getFileList();
                if (file_list.length) {
                    for (var max_id = 0, i = 0; i < file_list.length; i++) max_id < file_list[i] && (max_id = file_list[i]);
                    return max_id
                }
                return 0
            },
            getFileList: function() {
                var file_list = [];
                for (var file_id in boot_1.FL.file_id2file_dat) boot_1.FL.file_id2file_dat[file_id].rid == this.room.id && file_list.push(file_id);
                return file_list
            },
            setFileNum: function(file_num) {
                this.file_num = file_num
            },
            getFileNum: function() {
                return this.file_num
            },
            insertFile: function(file_dat) {
                void 0 == boot_1.FL.file_id2file_dat[file_dat.id] && (boot_1.FL.file_id2file_dat[file_dat.id] = file_dat)
            },
            build: function() {
                this.view.build()
            },
            free: function() {
                for (var file_id in boot_1.FL.file_id2file_dat) boot_1.FL.file_id2file_dat[file_id].rid == this.room.id && delete boot_1.FL.file_id2file_dat[file_id]
            }
        }
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/view/FileListView": 457
    }],
    315: [function(require, module, exports) {
        "use strict";

        function Room(room_id) {
            var self = this;
            self.view = new RoomView_1.RoomView(self), self.id = room_id, self.mid = 0, self.timeline = null, self.filelist = null, self.tasklist = null, self.read_num = 0, self.mention_num = 0, self.chat_num = 0, self.file_num = 0, self.task_num = 0, self.mytask_num = 0, self.description = !1, self.member_dat = {}, self.member_request = [], self.sorted_member_list = null, self.is_internal = -1, self.icon = "", self.icon_preset = !1, self.header = "", self.allow_see_member = 0, self.allow_upload_file = 0, self.allow_add_task = 0, self.allow_send_message = 0, self.join_need_accept = 0, self.public = 0, self.public_description = "", self.link_name = "", self.type = "", self.sending_id = 0, self.message_id2sending_id = {}, self.sticky = !1, self.reading = !1, self.rswitch = !1, self.read_lock = !1, self._name = "", self._account_id = 0, self.buildtime = 0
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var RoomView_1 = require("../../web-new/view/RoomView"),
            TimeLine_1 = require("./TimeLine"),
            FileList_1 = require("./FileList"),
            TaskList_1 = require("./TaskList"),
            common_1 = require("../lib/common"),
            boot_1 = require("../../web-new/controller/boot"),
            language_1 = require("../../web-new/lib/language"),
            lifeCycleEvent_1 = require("../../web-new/lib/lifeCycleEvent");
        exports.Room = Room, window.Room = Room,
            function() {
                Room.prototype = {
                    getUnreadNum: function() {
                        var unread_num = parseInt(this.chat_num - this.read_num, 10);
                        if (unread_num > 0 && null !== this.timeline) {
                            var length_1 = this.timeline.chat_list.length,
                                maxIndex = this.timeline.chat_list.length - 1,
                                minIndex = unread_num < length_1 ? length_1 - unread_num : 0;
                            if (0 == boot_1.ST.data.show_delmessage)
                                for (var i = maxIndex; i >= minIndex && !("[deleted]" === this.timeline.chat_list[i].msg && --unread_num <= 0); i--);
                        }
                        return unread_num < 0 && (unread_num = 0), unread_num
                    },
                    getMentionNum: function() {
                        return this.mention_num
                    },
                    getViewStat: function() {
                        return this.view.getViewStat()
                    },
                    isInternal: function() {
                        return -1 == this.is_internal && this.checkInternal(), 1 == this.is_internal
                    },
                    refreshTaskNum: function() {
                        if (this.tasklist) {
                            for (var task_list = this.tasklist.getTaskList("open"), mytask_num = 0, idx = 0, task_len = task_list.length; idx < task_len; idx++) {
                                boot_1.TK.task_id2task_dat[task_list[idx]].aid == boot_1.AC.myid && mytask_num++
                            }
                            this.task_num = task_list.length, this.mytask_num = mytask_num
                        }
                    },
                    getName: function(option) {
                        var aid = this.getAccountId();
                        return aid > 0 ? aid == boot_1.AC.myid ? language_1.Language.getLang("%%%mychat%%%") : void 0 != option && option.nameonly ? boot_1.AC.getName(aid) : boot_1.AC.getFullName(aid) : this._name
                    },
                    getSortedMemberList: function() {
                        if (this.sorted_member_list) return this.sorted_member_list;
                        var mem_list = [];
                        for (var aid in this.member_dat) mem_list.push(aid);
                        return this.sortMember(mem_list), this.sorted_member_list = mem_list, mem_list
                    },
                    sortMember: function(mem_list) {
                        mem_list.sort(function(a, b) {
                            return a == boot_1.AC.myid ? -1 : b == boot_1.AC.myid ? 1 : boot_1.AC.getMentionNum(b) - boot_1.AC.getMentionNum(a)
                        })
                    },
                    setName: function(name) {
                        this._name = name
                    },
                    setMember: function(member_dat) {
                        this.member_dat = member_dat, this.sorted_member_list = null, this.checkInternal(), this._account_id = 0
                    },
                    checkInternal: function() {
                        if (boot_1.CW.is_business) {
                            this.is_internal = 1;
                            var my_gid = boot_1.AC.getGroupId(boot_1.AC.myid);
                            for (var aid in this.member_dat)
                                if (boot_1.AC.getGroupId(aid) != my_gid) {
                                    this.is_internal = 0;
                                    break
                                }
                        }
                    },
                    refreshMember: function() {
                        var self = this,
                            room_id = self.id;
                        boot_1.CW.post("gateway.php", {
                            cmd: "get_room_info",
                            m: [room_id]
                        }, function(json) {
                            void 0 != json.room_dat[room_id].member_dat && (self.member_dat = json.room_dat[room_id].member_dat, self.sorted_member_list = null, self.buildMemberList())
                        })
                    },
                    getIcon: function(type, size) {
                        return void 0 == size && (size = "small"), this.view.getIcon(type, size)
                    },
                    getAccountId: function() {
                        if (0 != this._account_id) return this._account_id;
                        if ("my" == this.type) return boot_1.AC.myid;
                        if ("contact" == this.type)
                            for (var aid in this.member_dat)
                                if (boot_1.AC.myid != aid) return aid;
                        return 0
                    },
                    getJoinLink: function() {
                        return !!this.public && "./g/" + (this.link_name || this.id)
                    },
                    addSendingChat: function(text) {
                        return this.sending_id++, this.timeline.sending_chat_list.push({
                            sid: this.sending_id,
                            aid: boot_1.AC.myid,
                            mn: !1,
                            msg: text,
                            tm: common_1.time(),
                            utm: 0,
                            sent: !1
                        }), this.view.addSendingChat(this.sending_id), this.sending_id
                    },
                    setMessageIdForSendingId: function(sending_id, message_id) {
                        this.message_id2sending_id[message_id] = parseInt(sending_id, 10)
                    },
                    deleteSendingChat: function(sending_id) {
                        for (var idx = 0; idx <= this.timeline.sending_chat_list.length; idx++) {
                            var chat = this.timeline.sending_chat_list[idx];
                            if (chat && chat.sid === sending_id) {
                                this.timeline.sending_chat_list.splice(0, idx + 1);
                                break
                            }
                        }
                    },
                    deleteSendingChatFromMessageId: function(message_id) {
                        message_id = parseInt(message_id, 10);
                        var sending_id = this.message_id2sending_id[message_id];
                        sending_id && (this.deleteSendingChat(sending_id), delete this.message_id2sending_id[message_id])
                    },
                    load: function(user_option, callback) {
                        $.isNumeric(user_option) && (user_option = {
                            jumpTo: user_option
                        });
                        var option = $.extend({
                            jumpTo: 0,
                            autoBuild: !0
                        }, user_option);
                        this.prepareBuild();
                        var req = {
                            cmd: "load_chat",
                            room_id: this.id,
                            last_chat_id: this.timeline.getLastChatId(),
                            first_chat_id: this.timeline.getFirstChatId(),
                            jump_to_chat_id: option.jumpTo,
                            unread_num: this.getUnreadNum(),
                            load_file_version: "2"
                        };
                        "mobile" == boot_1.RL.load_type && (req.limit_num = 20), this.filelist.loaded || (0 == this.file_num ? this.filelist.loaded = !0 : req.file = 1), this.tasklist.loaded || (0 == this.task_num ? this.tasklist.loaded = !0 : req.task = 1), !1 === this.description && (req.desc = 1);
                        var self = this;
                        boot_1.CW.get("gateway.php", req, function(json) {
                            var i, task_id, file_len, chat_len;
                            if (json.chat_list && (json.chat_list = json.chat_list.map(function(message) {
                                    return message.id = parseInt(message.id, 10), message
                                })), json.task_dat)
                                for (task_id in json.task_dat) boot_1.TK.setTask(json.task_dat[task_id]);
                            if (json.file_list)
                                for (i = 0, file_len = json.file_list.length; i < file_len; i++) self.filelist.insertFile(json.file_list[i]);
                            if (self.filelist.setFileNum(json.file_num), option.jumpTo)
                                for (i = 0, chat_len = json.chat_list.length; i < chat_len; i++) self.timeline.insertChat(json.chat_list[i]);
                            else
                                for (i = 0, chat_len = json.chat_list.length; i < chat_len; i++) self.timeline.addChat(json.chat_list[i]);
                            self.timeline.sortChat(), void 0 != json.description && (self.description = json.description), void 0 != json.public_description && (self.public_description = json.public_description), boot_1.RM && boot_1.RM.id == self.id && (self.rswitch = !0, option.autoBuild && (option.autoBuild = !1, self.build(option))), "function" == typeof callback && callback(), lifeCycleEvent_1.LifeCycleEvent.emit("loadRoom")
                        })
                    },
                    prepareBuild: function() {
                        this.timeline || (this.timeline = new TimeLine_1.TimeLine(this)), this.filelist || (this.filelist = new FileList_1.FileList(this)), this.tasklist || (this.tasklist = new TaskList_1.TaskList(this))
                    },
                    build: function(user_option) {
                        boot_1.CW.cancelRead(this.id);
                        var option = $.extend({
                            jumpTo: 0,
                            jumpToCallback: function() {},
                            smoothScroll: !1,
                            highlight: !1
                        }, user_option);
                        if (option.read_lock && (option.readLock = option.read_lock), option.jump_to_chat_id && (option.jumpTo = option.jump_to_chat_id), 0 == this.id) return void this.view.buildHome();
                        this.prepareBuild(), option.readLock ? this.read_lock = !0 : this.read_lock = !1, this.id && (option.jumpTo && this.chat_num > this.timeline.chat_list.length && !this.timeline.chat_id2chat_dat[option.jumpTo] ? this.load(option) : 0 == this.buildtime && this.load(option), this.view.build(option))
                    },
                    buildMemberList: function() {
                        this.view.buildMemberList()
                    },
                    free: function() {
                        for (var key in this) "id" != key && "del" != key && (this[key] && "object" == typeof this[key] && "function" == typeof this[key].free && this[key].free(), delete this[key])
                    }
                }
            }()
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/language": 384,
        "../../web-new/lib/lifeCycleEvent": 385,
        "../../web-new/view/RoomView": 463,
        "../lib/common": 308,
        "./FileList": 314,
        "./TaskList": 321,
        "./TimeLine": 322
    }],
    316: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var RoomDialogView_1 = require("../../web-new/view/RoomDialogView"),
            RoomDialog = function() {
                function RoomDialog() {}
                return RoomDialog.prototype.prepare = function() {
                    var self = this;
                    self.view = new RoomDialogView_1.RoomDialogView(self), self.view.prepare()
                }, RoomDialog
            }();
        exports.RoomDialog = RoomDialog
    }, {
        "../../web-new/view/RoomDialogView": 460
    }],
    317: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Room_1 = require("./Room"),
            RoomListView_1 = require("../../web-new/view/RoomListView"),
            FileList_1 = require("./FileList"),
            TimeLine_1 = require("./TimeLine"),
            TaskList_1 = require("./TaskList"),
            boot_1 = require("../../web-new/controller/boot"),
            language_1 = require("../../web-new/lib/language"),
            SettingView_1 = require("../../web-new/view/SettingView"),
            RoomList = function() {
                function RoomList() {
                    this.rooms = {}, this.lazy_select = 0, this.lazy_select_chat = 0, this.added_room_ids = [], this.has_update = !0, this.rebuild_room = !1, this.update_flag = {}, this.last_update_time_dat = {}, this.category_dat = {}, this.load_type = "", this.focused_room_id = 0, this.filter_word = "", this.filter_readonly = !1, this.filter_toonly = !1, this.filter_taskonly = !1, this.filter_internalonly = !1, this.filter_remain_flag = {}, this.filter_category = "", this.category_defaults = {
                        all: !0,
                        contact: !0,
                        group: !0,
                        mytask: !0
                    }, this.role_map = {
                        1: "admin",
                        2: "member",
                        3: "readonly"
                    }, this.room_type_map = {
                        1: "group",
                        2: "contact",
                        3: "my"
                    }, this.preset_typemap = {
                        1: "group",
                        2: "check",
                        3: "document",
                        4: "meeting",
                        5: "event",
                        6: "project",
                        7: "business",
                        8: "study",
                        9: "security",
                        10: "star",
                        11: "idea",
                        12: "heart",
                        13: "magcup",
                        14: "beer",
                        15: "music",
                        16: "sports",
                        17: "travel"
                    }, this.preset_type = {}, this.filtered_room_list = [], this.unread_total = 0, this.mytask_total = 0, this.unread_room_sum = 0, this.mention_room_sum = 0, this.mytask_room_sum = 0, this.popuped_chat_flag = {}, this.sound_wait = !1;
                    for (var i in this.preset_typemap) this.preset_type[this.preset_typemap[i]] = !0
                }
                return RoomList.prototype.prepare = function() {
                    var self = this;
                    self.view = new RoomListView_1.RoomListView(self), self.view.prepare()
                }, RoomList.prototype.getDefaultRoom = function() {
                    var self = this,
                        room_id = 0;
                    return self.lazy_select && self.rooms[self.lazy_select] && (room_id = self.lazy_select), room_id || (room_id = boot_1.AC.getRoomId(boot_1.AC.myid)), self.rooms[room_id]
                }, RoomList.prototype.getSortedRoomList = function(type) {
                    var self = this,
                        keys = Object.keys(self.rooms),
                        room_list = keys.filter(function(key) {
                            return !self.rooms[key].sticky
                        }),
                        sticky_room_list = keys.filter(function(key) {
                            return self.rooms[key].sticky
                        });
                    return "name" === type ? self.sortByName(sticky_room_list).concat(self.sortByName(room_list)) : self.sortByLastUpdateTime(sticky_room_list).concat(self.sortByLastUpdateTime(room_list))
                }, RoomList.prototype.sortByName = function(room_id_list) {
                    var self = this;
                    return room_id_list.sort(function(a, b) {
                        return self.rooms[a].getName().localeCompare(self.rooms[b].getName())
                    }), room_id_list
                }, RoomList.prototype.sortByLastUpdateTime = function(room_id_list) {
                    var self = this;
                    return room_id_list.sort(function(a, b) {
                        var diff = self.last_update_time_dat[b] - self.last_update_time_dat[a];
                        return diff > 0 ? 1 : 0 == diff ? a - b : -1
                    }), room_id_list
                }, RoomList.prototype.getSortedCategoryList = function() {
                    var self = this,
                        cat_list = [];
                    for (var cat_id in self.category_dat) cat_list.push(cat_id);
                    return cat_list.sort(function(a, b) {
                        return self.category_dat[a].name.localeCompare(self.category_dat[b].name)
                    }), cat_list
                }, RoomList.prototype.setLastUpdateTime = function(room_id, last_update_time) {
                    var self = this;
                    (void 0 == self.last_update_time_dat[room_id] || self.last_update_time_dat[room_id] < last_update_time) && (self.last_update_time_dat[room_id] = parseInt(last_update_time, 10))
                }, RoomList.prototype.setInfoUpdate = function(room_id) {
                    var self = this;
                    self.prepareUpdate(room_id), self.update_flag[room_id].info = !0
                }, RoomList.prototype.setPersonalUpdate = function(room_id) {
                    var self = this;
                    self.prepareUpdate(room_id), self.update_flag[room_id].personal = !0
                }, RoomList.prototype.setTaskUpdate = function(room_id) {
                    var self = this;
                    self.prepareUpdate(room_id), self.update_flag[room_id].task = !0
                }, RoomList.prototype.setMemberUpdate = function(room_id) {
                    var self = this;
                    self.prepareUpdate(room_id), self.update_flag[room_id].member = !0
                }, RoomList.prototype.setDescUpdate = function(room_id) {
                    var self = this;
                    self.prepareUpdate(room_id), self.update_flag[room_id].desc = !0
                }, RoomList.prototype.deleteRoom = function(room_id) {
                    var self = this;
                    self.has_update = !0, boot_1.RM && boot_1.RM.id == room_id && boot_1.RMUpdate(null), void 0 != self.rooms[room_id] && (self.rooms[room_id].free(), delete self.rooms[room_id], self.deleteRoomIdFromCategory(room_id)), boot_1.RL.view.deleteRoom()
                }, RoomList.prototype.deleteRoomIdFromCategory = function(del_room_id) {
                    var category_room_list, self = this;
                    for (var cat_id in self.category_dat) {
                        category_room_list = self.category_dat[cat_id].list;
                        for (var i = 0, len = category_room_list.length; i < len; i++)
                            if (category_room_list[i] == del_room_id) {
                                category_room_list.splice(i, 1);
                                break
                            }
                    }
                }, RoomList.prototype.setUpdate = function(flag) {
                    this.has_update = flag
                }, RoomList.prototype.hasUpdate = function() {
                    return this.has_update
                }, RoomList.prototype.prepareUpdate = function(room_id) {
                    var self = this;
                    void 0 == self.rooms[room_id] && (self.rooms[room_id] = new Room_1.Room(room_id)), self.has_update = !0, void 0 == self.update_flag[room_id] && (self.update_flag[room_id] = {})
                }, RoomList.prototype.prepareRM = function() {
                    var self = this;
                    boot_1.RM || (boot_1.RMUpdate(boot_1.RL.getDefaultRoom()), boot_1.RM && (boot_1.RM.rswitch = !0, self.rebuild_room = !0))
                }, RoomList.prototype.selectRoom = function(room_id, chat_id, user_option) {
                    var self = this;
                    void 0 === user_option && (user_option = {});
                    var option = $.extend({
                        jumpTo: 0,
                        jumpToCallback: function() {},
                        smoothScroll: !1,
                        messageHashUpdate: !0,
                        highlight: !1
                    }, user_option);
                    if (boot_1.RL && room_id) {
                        if (!boot_1.RL.rooms[room_id]) return void boot_1.CW.alert(language_1.Language.getLang("%%%chatroom_error_no_member%%%"));
                        self.view.selectRoom(room_id), boot_1.RL.rooms[room_id].rswitch = !0, chat_id = parseInt(chat_id, 10), chat_id || (chat_id = void 0), chat_id && (option.jumpTo = chat_id, option.jump_to_chat_id = chat_id, void 0 !== user_option.highlight ? option.highlight = user_option.highlight : option.highlight = !0), boot_1.RL.rooms[room_id].build(option), self.focusRoom(room_id), (self.filter_readonly || self.filter_toonly || self.filter_taskonly || self.filter_internalonly) && setTimeout(function() {
                            boot_1.RL.build()
                        })
                    }
                }, RoomList.prototype.selectCategory = function(category_id_or_type) {
                    var self = this;
                    switch (category_id_or_type) {
                        case "all":
                        case "contact":
                        case "group":
                        case "mytask":
                            break;
                        default:
                            if (void 0 == self.category_dat[category_id_or_type]) return
                    }
                    self.filter_category = category_id_or_type, self.filter_remain_flag = {}, self.view.selectCategory()
                }, RoomList.prototype.getCategoryName = function(category_id_or_type) {
                    var self = this;
                    switch (category_id_or_type) {
                        case "all":
                            return language_1.Language.getLang("%%%chat_category_allchat%%%");
                        case "contact":
                            return language_1.Language.getLang("%%%directchat%%%");
                        case "group":
                            return language_1.Language.getLang("%%%groupchat%%%");
                        case "mytask":
                            return language_1.Language.getLang("%%%chat_category_mytaskchat%%%");
                        default:
                            return self.category_dat[category_id_or_type].name
                    }
                }, RoomList.prototype.setReadOnly = function(flag) {
                    var self = this;
                    self.filter_readonly = flag, self.filter_remain_flag = {}, self.view.setReadOnly()
                }, RoomList.prototype.setToOnly = function(flag) {
                    var self = this;
                    self.filter_toonly = flag, self.filter_remain_flag = {}, self.view.setToOnly()
                }, RoomList.prototype.setTaskOnly = function(flag) {
                    var self = this;
                    self.filter_taskonly = flag, self.filter_remain_flag = {}, self.view.setTaskOnly()
                }, RoomList.prototype.stickRoom = function(room_id, stick_on, end_callback) {
                    var self = this;
                    self.rooms[room_id].sticky = stick_on, self.build(), boot_1.CW.post("gateway.php", {
                        cmd: "stick_room",
                        room_id: room_id,
                        stick: stick_on
                    }, function() {
                        "function" == typeof end_callback && end_callback()
                    })
                }, RoomList.prototype.load = function() {
                    var self = this,
                        info_room_id_list = [],
                        personal_room_id_list = [],
                        member_room_id_list = [],
                        desc_room_id_list = [],
                        task_room_id_dat = {},
                        update = !1;
                    for (var room_id in self.update_flag) boot_1.RL.rooms[room_id] && (update = !0, void 0 != self.update_flag[room_id].info && info_room_id_list.push(room_id), void 0 != self.update_flag[room_id].personal && personal_room_id_list.push(room_id), void 0 != self.update_flag[room_id].member && member_room_id_list.push(room_id), void 0 != self.update_flag[room_id].task && (boot_1.RL.rooms[room_id].tasklist ? (task_room_id_dat[room_id] = boot_1.RL.rooms[room_id].tasklist.getTaskList(), 0 == task_room_id_dat[room_id].length && (task_room_id_dat[room_id] = 1)) : task_room_id_dat[room_id] = 1), void 0 != self.update_flag[room_id].desc && desc_room_id_list.push(room_id));
                    if (boot_1.RM && void 0 != self.update_flag[boot_1.RM.id])
                        for (var upd_type in self.update_flag[boot_1.RM.id])
                            if ("personal" != upd_type) {
                                self.rebuild_room = !0;
                                break
                            }
                    if (self.has_update = !1, self.update_flag = {}, update) {
                        var last_chat_id_dat = {};
                        if (info_room_id_list.length)
                            for (var idx = 0, room_len = info_room_id_list.length; idx < room_len; idx++) {
                                var room_id = String(info_room_id_list[idx]);
                                if (last_chat_id_dat[room_id] = {}, self.rooms[room_id]) {
                                    var room = self.rooms[room_id];
                                    if (last_chat_id_dat[room_id].c = room.chat_num, last_chat_id_dat[room_id].u = room.getUnreadNum(), room.timeline ? last_chat_id_dat[room_id].l = self.rooms[room_id].timeline.getLastChatId() : last_chat_id_dat[room_id].l = 0, room.filelist) {
                                        var file_num = room.filelist.getFileNum();
                                        last_chat_id_dat[room_id].f = $.isNumeric(file_num) ? file_num : room.filelist.getFileList().length, last_chat_id_dat[room_id].lf = room.filelist.getLastFileId()
                                    }
                                } else last_chat_id_dat[room_id].c = 0, last_chat_id_dat[room_id].u = 0, last_chat_id_dat[room_id].l = 0;
                                self.last_update_time_dat[room_id] ? last_chat_id_dat[room_id].t = self.last_update_time_dat[room_id] : last_chat_id_dat[room_id].t = 0
                            }
                        boot_1.CW.post("gateway.php", {
                            cmd: "get_room_info",
                            i: last_chat_id_dat,
                            p: personal_room_id_list,
                            m: member_room_id_list,
                            d: desc_room_id_list,
                            t: task_room_id_dat,
                            rid: boot_1.RL.lazy_select,
                            type: self.load_type,
                            load_file_version: "2"
                        }, function(json) {
                            if (json.room_dat)
                                for (var room_id in json.room_dat)
                                    if (json.room_dat.hasOwnProperty(room_id)) {
                                        var room = json.room_dat[room_id];
                                        room.chat_list && (room.chat_list = room.chat_list.map(function(message) {
                                            return message.id = parseInt(message.id, 10), message
                                        }))
                                    }
                            self.updateRoomData(json.room_dat)
                        })
                    } else self.has_update = !1, self.build()
                }, RoomList.prototype.updateRoomData = function(room_dat) {
                    var popup_data, self = this,
                        has_new_chat = !1,
                        has_new_room_chat = !1,
                        aid_flag = {};
                    for (var room_id in room_dat) {
                        var rval = room_dat[room_id];
                        void 0 == boot_1.RL.rooms[room_id] && (boot_1.RL.rooms[room_id] = new Room_1.Room(room_id));
                        var room = boot_1.RL.rooms[room_id],
                            unread_num = room.getUnreadNum();
                        if (room.mid = rval.mid, void 0 != rval.c && (room.chat_num = parseInt(rval.c, 10), room.name = "", room.allow_see_member = 1, room.allow_upload_file = 1, room.allow_add_task = 1, room.allow_send_message = 1, room.join_need_accept = 1, room.public = 0, room.link_name = "", room.header = "", room.icon = self.preset_typemap[1], room.icon_preset = !0), void 0 != rval.f && (room.file_num = parseInt(rval.f, 10)), void 0 != rval.t && (room.task_num = parseInt(rval.t, 10)), void 0 != rval.n && room.setName(rval.n), rval.mid && (room.read_num = 0, room.mytask_num = 0, room.mention_num = 0, room.sticky = 0), void 0 != rval.r && (room.read_num = parseInt(rval.r, 10)), void 0 != rval.mt && (room.mytask_num = parseInt(rval.mt, 10)), void 0 != rval.mn && (room.mention_num = parseInt(rval.mn, 10)), void 0 != rval.s && (room.sticky = parseInt(rval.s, 10)), void 0 != rval.aml && (room.allow_see_member = parseInt(rval.aml, 10)), void 0 != rval.af && (room.allow_upload_file = parseInt(rval.af, 10)), void 0 != rval.at && (room.allow_add_task = parseInt(rval.at, 10)), void 0 != rval.am && (room.allow_send_message = parseInt(rval.am, 10)), void 0 != rval.ja && (room.join_need_accept = parseInt(rval.ja, 10)), void 0 != rval.p && (room.public = parseInt(rval.p, 10)), void 0 != rval.ic && (self.preset_typemap[rval.ic] ? (room.icon = self.preset_typemap[rval.ic], room.icon_preset = !0) : (room.icon = rval.ic, room.icon_preset = !1)), void 0 != rval.hr && (room.header = rval.hr), void 0 != rval.pd && (room.public_description = rval.pd), void 0 != rval.ln && (room.link_name = rval.ln), void 0 != rval.d && (room.description = rval.d), void 0 != rval.m) {
                            for (var aid in rval.m) rval.m[aid] = self.role_map[rval.m[aid]], aid_flag[aid] = !0;
                            room.setMember(rval.m)
                        }
                        if (void 0 != rval.mr) {
                            room.member_request = rval.mr;
                            for (var idx in room.member_request) {
                                var mem_dat = room.member_request[idx];
                                boot_1.AC.isUnknown(mem_dat.id) && boot_1.AC.setAccountDat(mem_dat.id, mem_dat)
                            }
                        }
                        if (void 0 != rval.tp && (room.type = self.room_type_map[rval.tp]), void 0 != rval.lt && boot_1.RL.setLastUpdateTime(room_id, rval.lt), !unread_num && unread_num < room.getUnreadNum() && (has_new_room_chat = !0), rval.task_dat) {
                            room.tasklist || (room.tasklist = new TaskList_1.TaskList(room));
                            var task_id_list = [];
                            for (var task_id in rval.task_dat) boot_1.TK.setTask(rval.task_dat[task_id]), task_id_list.push(task_id);
                            task_id_list.length > 0 && (boot_1.TK.buildByTaskId(task_id_list), room.tasklist.loaded = !0)
                        }
                        if (rval.file_list) {
                            room.filelist || (room.filelist = new FileList_1.FileList(room));
                            for (var idx = 0, file_len = rval.file_list.length; idx < file_len; idx++) room.filelist.insertFile(rval.file_list[idx]);
                            room.filelist.setFileNum(rval.file_num), boot_1.FL.myfile_load_flag.loaded && boot_1.FL.buildAllMyFile()
                        }
                        if (rval.chat_list && rval.chat_list.length > 0) {
                            if (room.timeline || (room.timeline = new TimeLine_1.TimeLine(room)), boot_1.CW.enable_popup && !boot_1.CW.is_first_load)
                                for (var idx = 0, chat_len = rval.chat_list; idx < chat_len; idx++) aid_flag[rval.chat_list[idx].aid] = !0;
                            for (var idx = 0, chat_length = rval.chat_list.length; idx < chat_length; idx++) {
                                has_new_chat = !0;
                                var chat_dat = rval.chat_list[idx];
                                if (room.deleteSendingChatFromMessageId(chat_dat.id), room.timeline.addChat(chat_dat), boot_1.CW.enable_popup && !boot_1.CW.is_first_load) {
                                    var chat = rval.chat_list[idx];
                                    if (self.popuped_chat_flag[chat.id]) continue;
                                    self.popuped_chat_flag[chat.id] = !0, popup_data = chat.msg && boot_1.AC.myid != chat.aid ? {
                                        id: chat.id,
                                        aid: chat.aid,
                                        room_id: room.id,
                                        msg: chat.msg
                                    } : void 0
                                }
                            }
                            room.timeline.sortChat()
                        }
                    }
                    var build_func = function() {
                        if (popup_data && (!boot_1.ST.data.notifier_onlyto || self.rooms[popup_data.room_id].timeline.chat_id2chat_dat[popup_data.id].mn)) {
                            var msg;
                            msg = "1" == boot_1.ST.data.notifier_message ? boot_1.CW.renderMessage(popup_data.msg, {
                                text: !0
                            }) : language_1.Language.getLang("%%%notifier_newmessage%%%"), boot_1.CW.popup(boot_1.CW.getAvatarPanel(popup_data.aid, {
                                src: !0
                            }), boot_1.RL.rooms[popup_data.room_id].getName(), boot_1.AC.getName(popup_data.aid) + ":" + msg, popup_data.room_id)
                        }
                        boot_1.wfocus || !has_new_chat || self.sound_wait || boot_1.CW.is_first_load || 1 != boot_1.ST.data.popup_sound || (self.sound_wait = !0, SettingView_1.SettingView.isMultiSound(boot_1.ST.data.sound_type) ? has_new_room_chat ? boot_1.CW.playSound(boot_1.ST.data.sound_type) : boot_1.CW.playSound(boot_1.ST.data.sound_type + "2") : boot_1.CW.playSound(boot_1.ST.data.sound_type), setTimeout(function() {
                            self.sound_wait = !1
                        }, 1e3)), boot_1.CW.is_first_load && (boot_1.CW.is_first_load = !1), self.build()
                    };
                    for (var aid in aid_flag) boot_1.AC.getName(aid);
                    boot_1.AC.hasUnknown() ? boot_1.AC.getUnknown(build_func) : build_func(), self.view.updateRoomData()
                }, RoomList.prototype.build = function(ignore_rebuild_room) {
                    var self = this;
                    if (ignore_rebuild_room = ignore_rebuild_room || !1, self.has_update) return self.load();
                    var room_list = self.getSortedRoomList();
                    self.filtered_room_list = [];
                    var room = null,
                        filter_category_user = !1,
                        filter_category_flag = {};
                    if (self.filter_category && !self.category_defaults[self.filter_category]) {
                        filter_category_user = !0;
                        for (var i = 0, cat_room_len = self.category_dat[self.filter_category].list.length; i < cat_room_len; i++) filter_category_flag[self.category_dat[self.filter_category].list[i]] = !0
                    }
                    self.unread_room_sum = 0, self.mention_room_sum = 0, self.mytask_room_sum = 0, self.unread_total = 0, self.mytask_total = 0;
                    var filter_word_list = [];
                    self.filter_word && (filter_word_list = boot_1.CW.splitWithSpace(self.filter_word));
                    for (var idx = 0; idx < room_list.length; idx++)
                        if (void 0 != room_list[idx]) {
                            room = self.rooms[room_list[idx]];
                            var unread_num = room.getUnreadNum(),
                                mention_num = 0;
                            if (unread_num > 0 && (self.unread_total += unread_num, self.unread_room_sum++, (mention_num = room.getMentionNum()) > 0 && self.mention_room_sum++), room.mytask_num > 0 && (self.mytask_total += room.mytask_num, self.mytask_room_sum++), filter_word_list.length > 0) {
                                var name = room.getName();
                                if (!name) continue;
                                if ("contact" == room.type) {
                                    if (!boot_1.AC.isMatchedWithKeyList(filter_word_list, room.getAccountId())) continue
                                } else if (!boot_1.CW.isMatchedWithKeyList(filter_word_list, name)) continue
                            } else if (!boot_1.RM || room.id != boot_1.RM.id || void 0 == self.filter_remain_flag[room.id]) {
                                if (filter_category_user) {
                                    if (1 != filter_category_flag[room.id]) continue
                                } else {
                                    if ("contact" == self.filter_category && "contact" != room.type) continue;
                                    if ("group" == self.filter_category && "group" != room.type) continue;
                                    if ("mytask" == self.filter_category && 0 == room.mytask_num) continue
                                }
                                if (self.filter_readonly && 0 == unread_num) continue;
                                if (self.filter_toonly && 0 == mention_num) continue;
                                if (self.filter_taskonly && 0 == room.mytask_num) continue;
                                if (self.filter_internalonly && !room.isInternal()) continue
                            }
                            self.filter_remain_flag[room.id] = !0, self.filtered_room_list.push(room_list[idx])
                        }
                    self.view.build(self.filtered_room_list), self.view.updateSumNumbers(), self.lazy_select ? void 0 != self.rooms[self.lazy_select] ? (self.selectRoom(self.lazy_select, self.lazy_select_chat), self.lazy_select = 0, self.lazy_select_chat = 0) : boot_1.RM && (self.lazy_select = 0, self.lazy_select_chat = 0, boot_1.CW.alert(language_1.Language.getLang("%%%chatroom_error_no_member%%%"), function() {
                        self.selectRoom(boot_1.RM.id)
                    })) : !ignore_rebuild_room && self.rebuild_room && boot_1.RM && boot_1.RM.build(), ignore_rebuild_room || (self.rebuild_room = !1)
                }, RoomList.prototype.refreshCategory = function() {
                    var self = this;
                    boot_1.CW.get("gateway.php", {
                        cmd: "get_category"
                    }, function(json) {
                        self.updateCategory(json.cat_dat)
                    })
                }, RoomList.prototype.updateCategory = function(cat_dat) {
                    var self = this;
                    self.category_dat = {};
                    for (var cat_id in cat_dat) self.category_dat[cat_id] = cat_dat[cat_id];
                    boot_1.RL.buildCategory()
                }, RoomList.prototype.buildCategory = function() {
                    var self = this;
                    self.filter_category && !self.category_defaults[self.filter_category] && void 0 == self.category_dat[self.filter_category] && self.selectCategory("all"), self.view.buildCategory()
                }, RoomList.prototype.getFocusedRoomId = function() {
                    return this.focused_room_id
                }, RoomList.prototype.focusRoom = function(room_id) {
                    var self = this;
                    self.focused_room_id = room_id, self.view.focusRoom(room_id)
                }, RoomList.prototype.clearFocusRoom = function() {
                    var self = this;
                    self.focused_room_id = 0, self.view.clearFocusRoom()
                }, RoomList.prototype.showJoinPublicChatDialog = function(room_id) {
                    var self = this;
                    if (void 0 != self.rooms[room_id]) return void self.selectRoom(room_id);
                    boot_1.CW.get("gateway.php", {
                        cmd: "get_room_public_info",
                        rid: room_id
                    }, function(json) {
                        if (json.error) {
                            switch (json.error) {
                                case "joined":
                                    self.selectRoom(room_id)
                            }
                            json.message && boot_1.CW.alert(json.message)
                        }
                        if (void 0 != json.room_dat) {
                            var room_dat = json.room_dat;
                            room_dat.id = room_id, self.view.showJoinPublicChatDialog(room_dat)
                        }
                    })
                }, RoomList.prototype.joinPublicChat = function(room_id) {
                    var self = this;
                    if (void 0 != self.rooms[room_id]) return void self.selectRoom(room_id);
                    boot_1.CW.post("gateway.php", {
                        cmd: "join_public_room",
                        rid: room_id
                    }, function(json) {
                        if (json.error) {
                            switch (json.error) {
                                case "joined":
                                    return void boot_1.RL.selectRoom(room_id);
                                case "limited":
                                    return void boot_1.CW.view.showLimitErrorDialog(json.title, json.message)
                            }
                            void 0 != json.message && boot_1.CW.alert(json.message)
                        } else void 0 != json.do_request ? boot_1.CW.alert(language_1.Language.getLang("%%%joinpublicchat_request_sent%%%")) : (boot_1.RL.lazy_select = room_id, boot_1.RL.setInfoUpdate(room_id), boot_1.RL.setMemberUpdate(room_id), boot_1.RL.setDescUpdate(room_id))
                    })
                }, RoomList.prototype.getGroupChatNum = function() {
                    var group_chat_num = 0,
                        rooms = this.rooms;
                    for (var room_id in rooms) "group" === rooms[room_id].type && group_chat_num++;
                    return group_chat_num
                }, RoomList.prototype.getStickyRoomNum = function() {
                    var cnt = 0,
                        rooms = this.rooms;
                    for (var room_id in rooms) rooms[room_id].sticky && cnt++;
                    return cnt
                }, RoomList.prototype.isAddedRoomId = function(room_id) {
                    var self = this,
                        room_id_int = parseInt(room_id, 10);
                    return self.added_room_ids.some(function(rid) {
                        return rid === room_id_int
                    })
                }, RoomList.prototype.removeAddedRoomId = function(remove_room_id) {
                    var self = this,
                        remove_room_id_int = parseInt(remove_room_id, 10);
                    self.added_room_ids = self.added_room_ids.filter(function(rid) {
                        return rid !== remove_room_id_int
                    })
                }, RoomList
            }();
        exports.RoomList = RoomList
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/language": 384,
        "../../web-new/view/RoomListView": 461,
        "../../web-new/view/SettingView": 465,
        "./FileList": 314,
        "./Room": 315,
        "./TaskList": 321,
        "./TimeLine": 322
    }],
    318: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var SearchView_1 = require("../../web-new/view/SearchView"),
            boot_1 = require("../../web-new/controller/boot"),
            Search = function() {
                function Search() {
                    this.xhr = null
                }
                return Search.prototype.prepare = function() {
                    var self = this;
                    self.view = new SearchView_1.SearchView(self), self.view.prepare()
                }, Search.prototype.search = function(option, success_callback, error_callback) {
                    var self = this,
                        proxy_prefix = "r";
                    "free" === SERVICE_PLAN && (proxy_prefix = "fs"), self.xhr = boot_1.CW.get(proxy_prefix + "/gateway.php", {
                        cmd: "search_message",
                        opt: option
                    }, function(json) {
                        success_callback(json.msg_dat)
                    }, error_callback)
                }, Search.prototype.cancelSearch = function() {
                    var self = this;
                    self.xhr && self.xhr.abort && (self.xhr.abort(), self.xhr = null)
                }, Search
            }();
        exports.Search = Search
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/view/SearchView": 464
    }],
    319: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var SettingView_1 = require("../../web-new/view/SettingView"),
            boot_1 = require("../../web-new/controller/boot"),
            language_1 = require("../../web-new/lib/language"),
            Setting = function() {
                function Setting() {
                    this.data = {}, this.notification_data = {}, this.loaded = !1, this.announce_dat = {}, this.sound_default = "mallet", this.dateformat2short = {
                        "Y年m月d日": "m月d日",
                        "m/d/Y": "m/d",
                        "d/m/Y": "d/m",
                        "Y/m/d": "m/d",
                        "m-d-Y": "m-d",
                        "d-m-Y": "d-m",
                        "Y-m-d": "m-d",
                        "m.d.Y": "m.d",
                        "d.m.Y": "d.m",
                        "Y.m.d": "m.d",
                        "m/d-Y": "m/d"
                    }
                }
                return Setting.prototype.prepare = function() {
                    var self = this;
                    self.view = new SettingView_1.SettingView(self), self.view.prepare()
                }, Setting.prototype.isLoaded = function() {
                    return this.loaded
                }, Setting.prototype.getSetting = function(callback) {
                    var self = this;
                    boot_1.CW.get("gateway.php", {
                        cmd: "get_setting"
                    }, function(json) {
                        json.setting_data && self.updateSetting(json.setting_data, callback)
                    })
                }, Setting.prototype.updateSetting = function(setting_data, callback) {
                    var self = this,
                        changed_flag = {};
                    for (var key in setting_data) self.data[key] != setting_data[key] && (void 0 == self.data[key] ? changed_flag[key] = 1 : changed_flag[key] = 2), self.data[key] = setting_data[key];
                    if (void 0 == self.data.enter_action && (self.data.enter_action = "br"), void 0 == self.data.desktop_alert ? self.data.desktop_alert = 0 : self.data.desktop_alert = parseInt(self.data.desktop_alert, 10), void 0 == self.data.notifier_message ? self.data.notifier_message = 1 : self.data.notifier_message = parseInt(self.data.notifier_message, 10), void 0 == self.data.popup_sound ? self.data.popup_sound = 1 : self.data.popup_sound = parseInt(self.data.popup_sound, 10), void 0 == self.data.sound_type && (self.data.sound_type = self.sound_default), void 0 == self.data.sound_volume && (self.data.sound_volume = .5), void 0 == self.data.startup_help ? self.data.startup_help = 1 : self.data.startup_help = parseInt(self.data.startup_help, 10), void 0 == self.data.notifier_duration) self.data.notifier_duration = 10;
                    else {
                        var duration = parseInt(self.data.notifier_duration, 10);
                        self.data.notifier_duration = 0 == duration || 30 == duration ? 20 : duration
                    }
                    if (void 0 == self.data.notifier_onlyto ? self.data.notifier_onlyto = 0 : self.data.notifier_onlyto = parseInt(self.data.notifier_onlyto, 10), void 0 == self.data.allow_search ? self.data.allow_search = 1 : self.data.allow_search = parseInt(self.data.allow_search, 10), void 0 == self.data.notify_term ? self.data.notify_term = 1 : self.data.notify_term = parseInt(self.data.notify_term, 10), void 0 == self.data.faviconstat ? self.data.faviconstat = 0 : self.data.faviconstat = parseInt(self.data.faviconstat, 10), void 0 == self.data.show_delmessage ? self.data.show_delmessage = 0 : self.data.show_delmessage = parseInt(self.data.show_delmessage, 10), void 0 == self.data.show_external ? self.data.show_external = 1 : self.data.show_external = parseInt(self.data.show_external, 10), void 0 == self.data.private_nickname ? self.data.private_nickname = 1 : self.data.private_nickname = parseInt(self.data.private_nickname, 10), void 0 == self.data.shorten_url ? self.data.shorten_url = 1 : self.data.shorten_url = parseInt(self.data.shorten_url, 10), void 0 == self.data.show_stepguide ? self.data.show_stepguide = 1 : self.data.show_stepguide = parseInt(self.data.show_stepguide, 10), void 0 == self.data.welcome ? self.data.welcome = 0 : self.data.welcome = parseInt(self.data.welcome, 10), void 0 == self.data.announce ? self.data.announce = 0 : self.data.desktop_alert = parseInt(self.data.desktop_alert, 10), void 0 == self.data.dateformat && (self.data.dateformat = language_1.Language.getLang("%%%dateformat%%%")), self.data.dateformat_short = self.dateformat2short[self.data.dateformat], self.loaded = !0, 2 == changed_flag.announce && self.getAnnounce(), boot_1.CW.init_loaded) {
                        if (void 0 == changed_flag.show_delmessage && void 0 == changed_flag.shorten_url || boot_1.RM && (boot_1.CW.last_timeline_buildkey = "", boot_1.RM.build()), void 0 != changed_flag.faviconstat && boot_1.ST.data.faviconstat) {
                            var room_id = 0;
                            boot_1.RM && boot_1.RM.id && (room_id = boot_1.RM.id), boot_1.RL.view.updateTitle(room_id)
                        }
                        void 0 != changed_flag.show_external && boot_1.RL.build()
                    }
                    boot_1.ST.view.updateSetting(), "function" == typeof callback && callback()
                }, Setting.prototype.sendChatSetting = function(setting_data, callback) {
                    "function" != typeof callback && (callback = function() {}), boot_1.CW.post("gateway.php", {
                        cmd: "send_chat_setting",
                        data: setting_data
                    }, callback)
                }, Setting.prototype.getAnnounce = function() {
                    var self = this;
                    boot_1.CW.get("gateway.php", {
                        cmd: "get_announce",
                        announce: boot_1.ST.data.announce
                    }, function(json) {
                        json.announce_dat && self.updateAnnounce(json.announce_dat)
                    })
                }, Setting.prototype.closeAnnounce = function() {
                    var self = this;
                    void 0 != self.announce_dat.id && (self.sendChatSetting({
                        announce: self.announce_dat.id
                    }), self.announce_dat = {}, self.view.updateAnnounce())
                }, Setting.prototype.updateAnnounce = function(announce_dat) {
                    var self = this;
                    self.announce_dat = announce_dat, self.view.updateAnnounce()
                }, Setting
            }();
        exports.Setting = Setting
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/language": 384,
        "../../web-new/view/SettingView": 465
    }],
    320: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var TaskView_1 = require("../../web-new/view/TaskView"),
            boot_1 = require("../../web-new/controller/boot"),
            Task = function() {
                function Task() {
                    this.task_id2task_dat = {}, this.mytask_load_flag = {
                        loading: {
                            openmy: !1,
                            openassign: !1,
                            donemy: !1,
                            doneassign: !1
                        },
                        loaded: {
                            openmy: 0,
                            openassign: 0,
                            donemy: 0,
                            doneassign: 0
                        }
                    }
                }
                return Task.prototype.prepare = function() {
                    var self = this;
                    self.view = new TaskView_1.TaskView(self), self.view.prepare()
                }, Task.prototype.checkTask = function(task_id, to, only_refresh_view) {
                    var self = this;
                    if (self.hasTask(task_id)) {
                        var status = "open";
                        parseInt(to, 10) > 0 && (status = "done"), self.task_id2task_dat[task_id].st != status && (self.task_id2task_dat[task_id].st = status, only_refresh_view ? self.buildByTaskId(task_id, !0) : self.task_id2task_dat[task_id].aid != boot_1.AC.myid && self.task_id2task_dat[task_id].bid != boot_1.AC.myid || boot_1.CW.get("gateway.php", {
                            cmd: "check_task",
                            task_id: task_id,
                            to: to
                        }, function() {
                            self.reflashTaskList(self.task_id2task_dat[task_id].rid)
                        }))
                    }
                }, Task.prototype.setTask = function(task_dat) {
                    var self = this;
                    task_dat.id = parseInt(task_dat.id, 10), task_dat.aid = parseInt(task_dat.aid, 10), task_dat.bid = parseInt(task_dat.bid, 10), task_dat.rid = parseInt(task_dat.rid, 10), task_dat.cid = parseInt(task_dat.cid, 10), self.task_id2task_dat[task_dat.id] = task_dat
                }, Task.prototype.hasTask = function(task_id) {
                    return void 0 != this.task_id2task_dat[task_id]
                }, Task.prototype.deleteTask = function(task_id, success_callback, error_callback) {
                    var self = this;
                    boot_1.CW.get("gateway.php", {
                        cmd: "delete_task",
                        task_id: task_id
                    }, function(json) {
                        void 0 != json.storage && void 0 != json.storage_limit && boot_1.FL.updateStorageInfo(json.storage, json.storage_limit, json.storage_limit_time, json.is_storage_limit), self.deleteTaskStat(task_id, !0), self.reflashTaskList(self.task_id2task_dat[task_id].rid, !0, function() {
                            self.buildByTaskId(task_id)
                        }), "function" == typeof success_callback && success_callback(json)
                    }, function(json) {
                        "function" == typeof error_callback && error_callback(json)
                    })
                }, Task.prototype.deleteTaskStat = function(task_id, only_reflash_data) {
                    var self = this;
                    self.hasTask(task_id) && "deleted" != self.task_id2task_dat[task_id].st && (self.task_id2task_dat[task_id].st = "deleted", delete self.task_id2task_dat[task_id].tn, only_reflash_data || self.buildByTaskId(task_id))
                }, Task.prototype.refreshTask = function(task_id) {
                    var self = this;
                    self.hasTask(task_id) && boot_1.CW.get("gateway.php", {
                        cmd: "get_task",
                        tid_list: [task_id]
                    }, function(json) {
                        for (var tid in json.task_dat) {
                            var change = !1;
                            for (var key in json.task_dat[tid]) self.task_id2task_dat[tid][key] != json.task_dat[tid][key] && (self.task_id2task_dat[tid][key] = json.task_dat[tid][key], change = !0);
                            change && self.buildByTaskId(task_id)
                        }
                    })
                }, Task.prototype.buildByTaskId = function(task_id, tasknum_refresh) {
                    this.view.buildByTaskId(task_id, tasknum_refresh)
                }, Task.prototype.reflashTaskList = function(room_id, only_refresh_data, callback) {
                    var self = this;
                    boot_1.CW.get("gateway.php", {
                        cmd: "load_task",
                        room_id: room_id,
                        status: "open"
                    }, function(json) {
                        for (var task_id in json.task_dat) self.setTask(json.task_dat[task_id]);
                        boot_1.RL.rooms[room_id].refreshTaskNum(), boot_1.RL.build(!0), boot_1.RM.tasklist.build(), "function" == typeof callback && callback(json)
                    })
                }, Task.prototype.getMyTaskList = function(status, type) {
                    void 0 == type && (type = "my");
                    var task_list = [];
                    for (var task_id in boot_1.TK.task_id2task_dat) {
                        var task_type_id;
                        task_type_id = "my" == type ? boot_1.TK.task_id2task_dat[task_id].aid : boot_1.TK.task_id2task_dat[task_id].bid, task_type_id == boot_1.AC.myid && boot_1.TK.task_id2task_dat[task_id].st == status && task_list.push(task_id)
                    }
                    return task_list
                }, Task.prototype.sortTaskList = function(task_list) {
                    var self = this;
                    task_list.sort(function(a, b) {
                        var a_lt = 0,
                            b_lt = 0;
                        return self.task_id2task_dat[a].lt && (a_lt = parseInt(self.task_id2task_dat[a].lt, 10)), self.task_id2task_dat[b].lt && (b_lt = parseInt(self.task_id2task_dat[b].lt, 10)), a_lt > 0 && 0 == b_lt ? -1 : b_lt > 0 && 0 == a_lt ? 1 : a_lt < b_lt ? -1 : a_lt > b_lt ? 1 : self.task_id2task_dat[a].aid == boot_1.AC.myid && self.task_id2task_dat[b].aid != boot_1.AC.myid ? -1 : self.task_id2task_dat[a].aid != boot_1.AC.myid && self.task_id2task_dat[b].aid == boot_1.AC.myid ? 1 : self.task_id2task_dat[a].id - self.task_id2task_dat[b].id
                    })
                }, Task
            }();
        exports.Task = Task
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/view/TaskView": 467
    }],
    321: [function(require, module, exports) {
        "use strict";

        function TaskList(room) {
            var self = this;
            self.view = new TaskListView_1.TaskListView(self), self.alltask_status = "open", self.loaded = !1, self.room = room
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var TaskListView_1 = require("../../web-new/view/TaskListView"),
            boot_1 = require("../../web-new/controller/boot");
        exports.TaskList = TaskList, TaskList.prototype = {
            getTaskList: function(status) {
                void 0 == status && (status = "open");
                var task_list = [];
                for (var task_id in boot_1.TK.task_id2task_dat) boot_1.TK.task_id2task_dat[task_id].rid == this.room.id && boot_1.TK.task_id2task_dat[task_id].st == status && task_list.push(task_id);
                return task_list
            },
            build: function() {
                this.view.build()
            },
            free: function() {
                for (var task_id in boot_1.TK.task_id2task_dat) boot_1.TK.task_id2task_dat[task_id].rid == this.room.id && delete boot_1.TK.task_id2task_dat[task_id]
            }
        }
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/view/TaskListView": 466
    }],
    322: [function(require, module, exports) {
        "use strict";

        function TimeLine(room) {
            this.view = new TimeLineView_1.TimeLineView(this), this.room = room, this.chat_list = [], this.chat_id2chat_dat = {}, this.sending_chat_list = [], this.has_old = !1, this.has_new_message = !1, this._loading = !1
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var TimeLineView_1 = require("../../web-new/view/TimeLineView"),
            common_1 = require("../lib/common"),
            boot_1 = require("../../web-new/controller/boot");
        exports.TimeLine = TimeLine, TimeLine.prototype = {
            getLastChatId: function() {
                return this.chat_list.length ? this.chat_list[this.chat_list.length - 1].id : 0
            },
            getFirstChatId: function() {
                return this.chat_list.length ? this.chat_list[0].id : 0
            },
            getFirstChatIdOfTimeline: function() {
                if (!this.chat_list.length) return 0;
                var chat_list_without_deleted = this.chat_list.filter(function(chat) {
                    return "[deleted]" !== chat.msg
                });
                return chat_list_without_deleted.length ? 0 === boot_1.ST.data.show_delmessage ? chat_list_without_deleted[0].id : this.chat_list[0].id : 0
            },
            getChatList: function() {
                return this.chat_list
            },
            getChatListWithoutDeleted: function() {
                return this.chat_list.filter(function(chat) {
                    return "[deleted]" !== chat.msg
                })
            },
            addChat: function(chat_dat) {
                void 0 == this.chat_id2chat_dat[chat_dat.id] && (this.chat_list.push(chat_dat), this.chat_id2chat_dat[chat_dat.id] = chat_dat, this.has_new_message = !0, this.setMention(chat_dat.id))
            },
            insertChat: function(chat_dat) {
                void 0 == this.chat_id2chat_dat[chat_dat.id] && (this.chat_list.unshift(chat_dat), this.chat_id2chat_dat[chat_dat.id] = chat_dat, this.setMention(chat_dat.id))
            },
            sortChat: function() {
                this.chat_list.sort(function(a, b) {
                    return a.tm - b.tm || a.id - b.id
                })
            },
            deleteChat: function(chat_id) {
                void 0 != this.chat_id2chat_dat[chat_id] && (this.chat_id2chat_dat[chat_id].msg = "[deleted]", this.chat_id2chat_dat[chat_id].mn = !1, this.chat_id2chat_dat[chat_id].utm = common_1.time())
            },
            editChat: function(chat_id, message) {
                void 0 != this.chat_id2chat_dat[chat_id] && (this.chat_id2chat_dat[chat_id].msg = message, this.chat_id2chat_dat[chat_id].utm = common_1.time())
            },
            refreshChat: function(chat_id) {
                var self = this;
                void 0 != this.chat_id2chat_dat[chat_id] && boot_1.CW.get("gateway.php", {
                    cmd: "get_chat",
                    chat_id: chat_id,
                    rid: this.room.id
                }, function(json) {
                    for (var key in json.chat_dat) self.chat_id2chat_dat[chat_id][key] = json.chat_dat[key];
                    self.setMention(chat_id), boot_1.RM && boot_1.RM.id == self.room.id && self.build()
                })
            },
            setMention: function(chat_id) {
                var msg_dat = this.chat_id2chat_dat[chat_id];
                void 0 != msg_dat && (msg_dat.msg.includes("[To:" + boot_1.AC.myid + "]") || msg_dat.msg.includes("[rp aid=" + boot_1.AC.myid + " to=") ? msg_dat.mn = !0 : msg_dat.mn = !1)
            },
            read: function(before_unread_num) {
                this.view.read(before_unread_num)
            },
            build: function(user_option, scroll_to, highlight, sending_id) {
                if (this.room.id)
                    if (void 0 != user_option && $.isPlainObject(user_option)) {
                        var option = $.extend({
                            smoothScroll: !1,
                            scrollTo: null,
                            everScroll: !1,
                            highlight: !1,
                            sendingId: null,
                            jumpToCallback: function() {}
                        }, user_option);
                        boot_1.CW.view.is_biwa ? this.view.build(option) : this.view.build(option.smoothScroll, option.scrollTo, option.highlight, option.sendingId)
                    } else {
                        var smooth = user_option;
                        this.view.build(smooth, scroll_to, highlight, sending_id)
                    }
            },
            loadOld: function(callback) {
                var self = this;
                if (self._loading) return !1;
                var first_chat_id = self.getFirstChatId(),
                    first_displayed_chat_id = self.getFirstChatIdOfTimeline();
                if (0 == first_chat_id) return !1;
                "function" != typeof callback && (callback = function() {}), self._loading = !0, boot_1.CW.get("gateway.php", {
                    cmd: "load_old_chat",
                    room_id: self.room.id,
                    first_chat_id: first_chat_id
                }, function(json) {
                    json.chat_list.map(function(message) {
                        return message.id = parseInt(message.id, 10), message
                    });
                    for (var scroll_to = first_displayed_chat_id, aid_flag = {}, idx = 0, chat_len = json.chat_list.length; idx < chat_len; idx++) self.insertChat(json.chat_list[idx]), aid_flag[json.chat_list[idx].aid] = !0;
                    self.sortChat();
                    for (var aid in aid_flag) boot_1.AC.getName(aid);
                    var build_func = function() {
                        callback(), boot_1.RM && boot_1.RM.id == self.room.id && self.build({
                            smoothScroll: !1,
                            scrollTo: scroll_to
                        }), self._loading = !1
                    };
                    boot_1.AC.hasUnknown() ? boot_1.AC.getUnknown(build_func) : build_func()
                })
            },
            free: function() {}
        }
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/view/TimeLineView": 468,
        "../lib/common": 308
    }],
    323: [function(require, module, exports) {
        "use strict";

        function memberSearch(list, filter_query) {
            var aid_list = Object.keys(list).map(function(id) {
                return parseInt(id, 10)
            });
            if ("" === filter_query) return aid_list;
            var filter_key_list = filter_query.toLowerCase().replace(/^\s+|\s+$/g, "").split(/\s+/);
            return aid_list.filter(function(account_id) {
                var search_key = list[account_id].map(function(key) {
                    return key.toLowerCase()
                }).join(" ");
                if (filter_key_list.some(function(key) {
                        return search_key.includes(key)
                    })) return account_id
            })
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.memberSearch = memberSearch
    }, {}],
    324: [function(require, module, exports) {
        "use strict";
        require("./polyfills"), require("./web-new/lib/language"), require("./web-new/lib/lifeCycleEvent");
        var _index = require("./web-new/templates/index"),
            _chatworkTokenizerJs = require("chatwork-tokenizer-js"),
            tokenizer = function(obj) {
                if (obj && obj.__esModule) return obj;
                var newObj = {};
                if (null != obj)
                    for (var key in obj) Object.prototype.hasOwnProperty.call(obj, key) && (newObj[key] = obj[key]);
                return newObj.default = obj, newObj
            }(_chatworkTokenizerJs),
            _emoticons = require("./web-new/lib/emoticon/emoticons");
        tokenizer.setEmoticons(_emoticons.emoticons.getAllEmoticons().map(function(emo) {
            return emo.tag
        })), window.tokenizer = tokenizer,
            function() {
                var root = document.createElement("div");
                root.setAttribute("id", "root"), root.innerHTML = _index.template, document.body.appendChild(root)
            }(), document.documentElement.classList.add("svg"), require("./web-new/lib/vendor/jquery.scrollTo-1.4.5b"), require("./web-new/lib/vendor/jquery.markText"), require("./web-new/lib/cwui/cwCore"), require("./web-new/lib/cwui/lang/en"), require("./web-new/lib/cwui/lang/es"), require("./web-new/lib/cwui/lang/ja"), require("./web-new/lib/cwui/lang/th"), require("./web-new/lib/cwui/lang/vi"), require("./web-new/lib/cwui/lang/zh-cn"), require("./web-new/lib/cwui/lang/zh-tw"), require("./web-new/lib/cwui/lang/zz"), $.cwUI.L = $.cwUI.L[LANGUAGE], require("./web-new/lib/cwui/lang/cwDatePicker/en"), require("./web-new/lib/cwui/lang/cwDatePicker/es"), require("./web-new/lib/cwui/lang/cwDatePicker/ja"), require("./web-new/lib/cwui/lang/cwDatePicker/th"), require("./web-new/lib/cwui/lang/cwDatePicker/vi"), require("./web-new/lib/cwui/lang/cwDatePicker/zh-cn"), require("./web-new/lib/cwui/lang/cwDatePicker/zh-tw"), require("./web-new/lib/cwui/lang/cwDatePicker/zz"), $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker[LANGUAGE], require("./web-new/lib/cwui/cwFloatBox"), require("./web-new/lib/cwui/cwResize"), require("./web-new/lib/cwui/cwValidate"), require("./web-new/lib/cwui/widget/cwActionBar"), require("./web-new/lib/cwui/widget/cwButton"), require("./web-new/lib/cwui/widget/cwButtonBar"), require("./web-new/lib/cwui/widget/cwCheckBox"), require("./web-new/lib/cwui/widget/cwDatePicker"), require("./web-new/lib/cwui/widget/cwDialog"), require("./web-new/lib/cwui/widget/cwDropDown"), require("./web-new/lib/cwui/widget/cwElasticTextArea"), require("./web-new/lib/cwui/widget/cwFloatWindow"), require("./web-new/lib/cwui/widget/cwListTip"), require("./web-new/lib/cwui/widget/cwMessageTip"), require("./web-new/lib/cwui/widget/cwScrollTable"), require("./web-new/lib/cwui/widget/cwSearchBox"), require("./web-new/lib/cwui/widget/cwSelectBox"), require("./web-new/lib/cwui/widget/cwTabbedBar"), require("./web-new/lib/cwui/widget/cwToolTip"), require("./web-new/controller/boot")
    }, {
        "./polyfills": 325,
        "./web-new/controller/boot": 340,
        "./web-new/lib/cwui/cwCore": 346,
        "./web-new/lib/cwui/cwFloatBox": 347,
        "./web-new/lib/cwui/cwResize": 348,
        "./web-new/lib/cwui/cwValidate": 349,
        "./web-new/lib/cwui/lang/cwDatePicker/en": 350,
        "./web-new/lib/cwui/lang/cwDatePicker/es": 351,
        "./web-new/lib/cwui/lang/cwDatePicker/ja": 352,
        "./web-new/lib/cwui/lang/cwDatePicker/th": 353,
        "./web-new/lib/cwui/lang/cwDatePicker/vi": 354,
        "./web-new/lib/cwui/lang/cwDatePicker/zh-cn": 355,
        "./web-new/lib/cwui/lang/cwDatePicker/zh-tw": 356,
        "./web-new/lib/cwui/lang/cwDatePicker/zz": 357,
        "./web-new/lib/cwui/lang/en": 358,
        "./web-new/lib/cwui/lang/es": 359,
        "./web-new/lib/cwui/lang/ja": 360,
        "./web-new/lib/cwui/lang/th": 361,
        "./web-new/lib/cwui/lang/vi": 362,
        "./web-new/lib/cwui/lang/zh-cn": 363,
        "./web-new/lib/cwui/lang/zh-tw": 364,
        "./web-new/lib/cwui/lang/zz": 365,
        "./web-new/lib/cwui/widget/cwActionBar": 366,
        "./web-new/lib/cwui/widget/cwButton": 367,
        "./web-new/lib/cwui/widget/cwButtonBar": 368,
        "./web-new/lib/cwui/widget/cwCheckBox": 369,
        "./web-new/lib/cwui/widget/cwDatePicker": 370,
        "./web-new/lib/cwui/widget/cwDialog": 371,
        "./web-new/lib/cwui/widget/cwDropDown": 372,
        "./web-new/lib/cwui/widget/cwElasticTextArea": 373,
        "./web-new/lib/cwui/widget/cwFloatWindow": 374,
        "./web-new/lib/cwui/widget/cwListTip": 375,
        "./web-new/lib/cwui/widget/cwMessageTip": 376,
        "./web-new/lib/cwui/widget/cwScrollTable": 377,
        "./web-new/lib/cwui/widget/cwSearchBox": 378,
        "./web-new/lib/cwui/widget/cwSelectBox": 379,
        "./web-new/lib/cwui/widget/cwTabbedBar": 380,
        "./web-new/lib/cwui/widget/cwToolTip": 381,
        "./web-new/lib/emoticon/emoticons": 382,
        "./web-new/lib/language": 384,
        "./web-new/lib/lifeCycleEvent": 385,
        "./web-new/lib/vendor/jquery.markText": 393,
        "./web-new/lib/vendor/jquery.scrollTo-1.4.5b": 394,
        "./web-new/templates/index": 444,
        "chatwork-tokenizer-js": 18
    }],
    325: [function(require, module, exports) {
        "use strict";
        require("number-to-locale-string"), require("locale-compare-polyfill");
        var _objectAssign = require("object-assign"),
            _objectAssign2 = function(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                }
            }(_objectAssign),
            _es6Promise = require("es6-promise");
        if (Object.assign = Object.assign || _objectAssign2.default, window.Promise = window.Promise || _es6Promise.Promise, require("array.prototype.find").shim(), require("array.from").shim(), require("array-includes").shim(), require("string.prototype.includes"), require("element-closest"), Number.MAX_SAFE_INTEGER || (Number.MAX_SAFE_INTEGER = 9007199254740991), !location.origin) {
            var origin = location.protocol + "//" + location.hostname + (location.port ? ":" + location.port : "");
            try {
                Object.defineProperty(location, "origin", {
                    value: origin,
                    enumerable: !0
                })
            } catch (e) {
                location.origin = origin
            }
        }
    }, {
        "array-includes": 2,
        "array.from": 6,
        "array.prototype.find": 10,
        "element-closest": 29,
        "es6-promise": 41,
        "locale-compare-polyfill": 81,
        "number-to-locale-string": 126,
        "object-assign": 127,
        "string.prototype.includes": 286
    }],
    326: [function(require, module, exports) {
        module.exports = {
            accepting: "Accepting...",
            adding: "Adding...",
            add_contact_confirm_body_with_account_names: "Would you like to send a contact request to %%account_names%%?",
            add_contact_confirm_dialog_title: "Contact Request",
            add_contact_confirm_send_mail_at_same: "* They will also recieve email when your request is sent.",
            admin: "Admin",
            announce_button_close: "Do not show this message again",
            assistant_lp_url: "",
            available: "Available",
            button_accept: "Accept",
            button_accept_long: "Accept",
            button_add: "Add",
            button_add_contact_long: "Send Invitation",
            button_cancel: "Cancel",
            button_change_long: "Change",
            button_close: "Close",
            button_complete: "Done",
            button_create: "Create",
            button_create_long: "Create",
            button_delete: "Delete",
            button_delete_long: "Delete",
            button_edit: "Edit",
            button_incomplete: "Open",
            button_next: "Next",
            button_ok: "OK",
            button_reject: "Not now",
            button_reject_long: "Not now",
            button_return: "Return",
            button_save: "Save",
            button_save_long: "Save",
            button_search: "Search",
            button_send: "Send",
            canceling: "Canceling...",
            chat: "Chat",
            chatroom_added: " joined the group.",
            chatroom_btn_add_member_tooltip: "Add Member",
            chatroom_changed: '".',
            chatroom_chatname_is: 'Group name changed to "',
            chatroom_chat_edited: "Chat info updated.",
            chatroom_chat_joined: "A new member has joined the group chat.",
            chatroom_confirm_leave: 'Do you really want to leave "%%room_name%%"? You will lose access to all the messages, tasks, and files. If you wish to re-join this group chat, you will need an invitation.\n(*The tasks that you\'ve assigned to others, and uploaded files within this group chat will be deleted)',
            chatroom_contact_added: "New contact added.",
            chatroom_contact_added_by_facebook: "Contact has been added through Facebook friends' auto add function",
            chatroom_createchat_same_members: "Create a copy of this group chat",
            chatroom_createchat_same_members_confirm: "There are some user(s) that does not belong in your contact list.\nDo you want to create a new group chat with your existing contacts?",
            chatroom_create_title: "Create a new Group Chat",
            chatroom_delete: "Delete this group chat",
            chatroom_deleted: " has been deleted.",
            chatroom_desc: "Description",
            chatroom_description_is: 'Group description changed to "',
            chatroom_desctip: "Description:",
            chatroom_desc_explain: "Add chat description, notes, or links here.",
            chatroom_desc_none: "No description",
            chatroom_disable_external: " could not be added - does not have permission to communicate with users outside of their organization.",
            chatroom_edit_desc_title: "Edit description",
            chatroom_error_cant_add: "Unable to create the chat.",
            chatroom_error_noadmin: "You need to assign an admin for this group chat.",
            chatroom_error_noself: "You need to add yourself to create a new group chat.",
            chatroom_error_not_found: "The chat doesn't exist.",
            chatroom_error_no_member: "Unable to load messages - requires permission to join this chat",
            chatroom_error_no_name: "Group Chat name required.",
            chatroom_error_planlimit: "Users with %%plan_name%% can only create up to %%limit_num%% group chats. Please consider upgrading your account.",
            chatroom_groupchat_created: "New group chat created.",
            chatroom_icon_type_preset: "Select icon",
            chatroom_icon_type_upload: "Upload",
            chatroom_icon_updated: "Group chat icon updated.",
            chatroom_info_edit: "Edit Chat Info",
            chatroom_invitation_link_setting: "Invitation Link Settings",
            chatroom_leave: "Leave this group chat",
            chatroom_leaved: " has left the chat.",
            chatroom_member_add_contact: "Add All",
            chatroom_member_detail: "Member details",
            chatroom_member_is: "",
            chatroom_member_long: "Chat Members",
            chatroom_member_nocontact: "Members not in your contact list",
            chatroom_member_requests_notice: "Pending Members (%%request_num%%)",
            chatroom_member_rest_number: "...and %%rest_number%% more",
            chatroom_member_role_admin_desc: "Can edit group chat name, description, and add/delete members.",
            chatroom_member_role_member_desc: "Can't edit group chat name, description, or add/delete members.",
            chatroom_member_role_readonly_desc: "Can read but not send messages.",
            chatroom_mychat_created: "My Chat created.",
            chatroom_nametip: "Group Chat Name: ",
            chatroom_not_only_internal: "Chat including users from other organizations",
            chatroom_over_groupchatnum: " was unable to send the group chat invitation as s/he has already reached the limit for the number of group chats.",
            chatroom_priv_changed: " changed roles.",
            chatroom_resigned_priv_change: " has deleted ChatWork account, this direct chat has now been changed to group chat.",
            chatroom_resigned_priv_change_all: "Since this group chat has no admin, everyone in this group chat has been granted the admin role.",
            chatroom_room_permission_setting: "Edit Group Chat Permissions",
            chatroom_search_member: "Search by name",
            chatroom_set: '".',
            chatroom_setting: "Chat settings",
            chatroom_show_limit_member_num: "(Max : %%num%%)",
            chatroom_tasklist_mytaskonly: "Show tasks assigned to me",
            chatsend_button_delete_message_only: "Delete Notification only",
            chatsend_button_delete_with_file: "Delete Notification with File",
            chatsend_button_delete_with_task: "Delete Notification with Task",
            chatsend_chat_explain: "Enter your message here",
            chatsend_confirm_delete: "Do you really want to delete this message?",
            chatsend_confirm_delete_with_file: "Would you delete File with Notification?",
            chatsend_confirm_delete_with_task: "Would you delete Task with Notification?",
            chatsend_delete_filetip: "The File you are deleting :",
            chatsend_delete_tasktip: "The Task you are deleting :",
            chatsend_emoticonalt: "Emoticons: express yourself!",
            chatsend_enter_action_explain: "Press Enter to send",
            chatsend_enter_action_explain_enter: "\n(press Shift + Enter for line break)",
            chatsend_enter_action_explain_enter_send: "\n(press Shift + Enter for send)",
            chatsend_error_no_exist_for_edit: "The message does not exist",
            chatsend_error_no_incharge: "Select the task assignee",
            chatsend_error_send: "Message not sent : Network Error Please send again",
            chatsend_error_send_task: "Task not assigned : Network Error Please send again",
            chatsend_expand_area: "Broaden window",
            chatsend_filealt: "Upload files",
            chatsend_nickname_setting: "Nickname Settings",
            chatsend_not_allow_send_messages: "You don't have permission to send messages in this group chat.",
            chatsend_quote: "Quote",
            chatsend_reply: "Reply",
            chatsend_shift_and_command_hint: '"Shift" to multi-select, "⌘" to send',
            chatsend_shift_and_ctrl_hint: '"Shift" to multi-select, "Ctrl" to send',
            chatsend_shift_multiselect: "Shift-click to select 2 or more",
            chatsend_toalt: "To: Specify who you're talking to",
            chatsetting_faviconstat: "Show unread numbers on browser icon",
            chatsetting_hide_message_box_tags: "",
            chatsetting_hide_message_box_tags_change_confirm: "",
            chatsetting_notifier: "Desktop Notifications",
            chatsetting_notifier_duration: "TIme length for desktop notifications",
            chatsetting_notifier_duration_10sec: "10 seconds",
            chatsetting_notifier_duration_20sec: "20 seconds",
            chatsetting_notifier_duration_5sec: "5 seconds",
            chatsetting_notifier_message: "Include messages within desktop notifications",
            chatsetting_notifier_onlyto: "Notify only when someone mentions you",
            chatsetting_notifier_show: "Turn on desktop notifications",
            chatsetting_popup_sound: "Turn on sound notifications",
            chatsetting_private_nickname: "Do not use nicknames when users outside of your organization are included in the chat.",
            chatsetting_shorten_url: "Shorten URL for display purpose",
            chatsetting_show_delmessage: "Show logs for deleted messages",
            chatsetting_show_external: "Icon to show group chat includes users from other organizations",
            chatsetting_tab_apitoken: "API",
            chatsetting_tab_display: "Display",
            chatsetting_tab_language: "Language",
            chatsetting_tab_login: "Login",
            chatsetting_tab_notification: "Notification",
            chatsetting_test_sound: "Play",
            chatsetting_unread_mail: "Alert me by e-mails for unread messages",
            chatsetting_unread_mail_label: "E-mail Notification",
            chatsetting_unread_mail_term_1: "Every 1 hours",
            chatsetting_unread_mail_term_12: "Every 12 hours",
            chatsetting_unread_mail_term_2: "Every 2 hours",
            chatsetting_unread_mail_term_24: "Every 24 hours",
            chatsetting_unread_mail_term_3: "Every 3 hours",
            chatsetting_unread_mail_term_6: "Every 6 hours",
            chatsetting_unread_mail_term_none: "Never",
            chatwork_do_update: "Update to the latest version",
            chatwork_help_page_path: "http://support-en.chatwork.com/hc/en-us",
            chatwork_service_name: "ChatWork",
            chatwork_update: "ChatWork updated - please reload the page.",
            chat_action_copy: "Copy",
            chat_action_copy_desc: "Show raw text",
            chat_action_copy_title: "Message",
            chat_action_delete: "Delete",
            chat_action_delete_desc: "Delete this message",
            chat_action_edit: "Edit",
            chat_action_edit_desc: "Edit this message",
            chat_action_link: "Link",
            chat_action_link_desc: "Insert a link to this message",
            chat_action_move: "Go to this message",
            chat_action_move_desc: "Go to this message",
            chat_action_quote: "Quote",
            chat_action_quote_desc: "Quote this message",
            chat_action_reply: "Reply",
            chat_action_reply_desc: "Reply to this message",
            chat_action_task: "Task",
            chat_action_task_desc: "Convert this message to task",
            chat_action_unread: "Unread",
            chat_action_unread_desc: "Mark this unread",
            chat_category_allchat: "All Chats",
            chat_category_chatselecttip: "Choose chat:",
            chat_category_confirm_delete: 'Do you really want to delete the Category "%%category_name%%"?',
            chat_category_create: "Create a new Category",
            chat_category_edit: "Edit Category",
            chat_category_error_no_chats: "Please select a group/direct chat.",
            chat_category_error_no_name: "Please enter a category name.",
            chat_category_mytaskchat: "Chats with tasks assigned",
            chat_category_nametip: "Category name:",
            chat_category_select: "Select Category",
            chat_category_selected_chat_num: "Number of selected chats:",
            chat_deleted: "Message deleted.",
            chat_delete_label: "Deleted",
            chat_editing: "Editing",
            chat_editing_label_on_message: "Editing",
            chat_edit_label: "Edited",
            chat_error_not_found: "The message does not exist.",
            chat_filter_readonly: "Unread",
            chat_filter_readonly_empty: "No unread messages",
            chat_filter_taskonly: "Task Assigned",
            chat_filter_taskonly_empty: "No tasks assigned",
            chat_filter_toonly: "Mentioned",
            chat_filter_toonly_empty: "No messages mentioning you",
            chat_loading: "Loading messages...",
            chat_menu_chatlist: "Chat List",
            chat_partial_quote_message: "Quote in message",
            chat_partial_quote_task: "Quote in task",
            chat_post_label: "Posted",
            chat_rest_roomtip: "Group/Direct Chat not displayed:",
            chat_search: "Type to search for chat/message",
            chat_server_error_try_again: "There was an error communicating with the server.\nPlease try again in a few moments.",
            chat_show_more: "Show more",
            cheatsheet_name_notation_code: "Disable emoticon conversion",
            cheatsheet_name_notation_hr: "Ruled line",
            cheatsheet_name_notation_info: "Outer boarder",
            cheatsheet_name_notation_mix_tag: "Combine multiple tags",
            cheatsheet_notation_title: "Message decoration tags",
            cheatsheet_or: "or",
            cheatsheet_short_cut_title: "List of keyboard shortcuts",
            cheatsheet_supplement_text_key_j: '* it\'s "i (I)" and not "j (J)"',
            cheatsheet_text_key_c: "Add contact",
            cheatsheet_text_key_command_arrow_left: "Close or open left column",
            cheatsheet_text_key_command_arrow_right: "Close or open right column",
            cheatsheet_text_key_enter: "Open selected chat",
            cheatsheet_text_key_esc: "Move focus out of message input field",
            cheatsheet_text_key_f: "Move cursor to chat search bar",
            cheatsheet_text_key_g: "Create group chat",
            cheatsheet_text_key_j: "Select the chat below",
            cheatsheet_text_key_k: "Select the chat above",
            cheatsheet_text_key_m: "Move cursor to message input field",
            cheatsheet_text_key_question: "List of shortcuts",
            cheatsheet_text_key_t: "Move cursor to task input field",
            cheatsheet_text_key_tab: "Move focus to send button",
            cheatsheet_text_notation_content: "content",
            cheatsheet_text_notation_index: "header",
            cheatsheet_text_notation_new_line: "(+ new line)",
            cheatsheet_text_notation_on_message_area: "*If you enter",
            cheatsheet_text_notation_replace_code_tag: "in the input box, &#96;&#96;&#96; will be converted to the [code] tag",
            checkall: "All",
            checkall_full: "Check All",
            commercial_announce_read_error_message: "",
            common_role_select_list_default: "Edit all permissions",
            common_role_select_list_default_tooltip: "Edit permissions of all members",
            concierge_lp_url: "",
            connection_error_invalid_user: "You're logged in as a different user.",
            connection_error_logout: "You are currently logged out.",
            connection_error_offline: "You are currently offline.",
            contactpanel_add_contact: "Add Contacts",
            contact_add: "Add Contacts",
            contact_add_all_hint: "Members not in your contacts",
            contact_add_multiple_mailtip: "Enter an e-mail address per line.",
            contact_click_detail: "Select contact for details",
            contact_confirm_delete: "Do you really want to delete %%name%% from your contact? \nYour direct chat will also be permanently deleted.",
            contact_confirm_reject_request: "Do you really want to ignore the contact request from %%name%%?",
            contact_connect_from_ads_complete: "You will be contacted shortly by person in charge.",
            contact_connect_from_ads_confirm: "Please send a contact request for more information.",
            contact_cwid_error_already: 'The ChatWork ID "%%chatwork_id%%" has already been added to your contacts.',
            contact_cwid_error_myself: "You can't add yourself.",
            contact_cwid_error_noexist: 'The ChatWork ID "%%chatwork_id%%" doesn\'t exist.',
            contact_delete: "Delete from your contact",
            contact_doing_invite: "Sending Invitation...",
            contact_done_invite: "Invitation sent",
            contact_do_invite: "Send Invitation",
            contact_error_cantadd: "Unable to add this user to your contact.",
            contact_error_is_disable_external: " could not be added - do not have permission to communicate with users outside of your organization.",
            contact_error_is_not_mailaddress: "aren't valid email addresses.",
            contact_error_is_over_contactnum: " has reached their limit for number of contacts. They can't be added to your contact list.",
            contact_error_planlimit: "Users with %%plan_name%% can only add %%limit_num%% people to their contact list. Please consider upgrading your account.",
            contact_error_search_user_not_found: "Unable to find the user.",
            contact_invite: "Invitation E-mail",
            contact_invite_mail_add_email_address_to_invite: "Add email address to invite",
            contact_invite_mail_add_individually: "Add members individually",
            contact_invite_mail_already_in_your_contacts: "This person is already in your contacts.",
            contact_invite_mail_already_received_request: "Already received contact request.",
            contact_invite_mail_already_send_request: "Already sent contact request.",
            contact_invite_mail_bulk_add: "Bulk-add",
            contact_invite_mail_enter_message: "Type a message",
            contact_invite_mail_enter_your_email_address: "Enter email address",
            contact_invite_mail_failed_sent_following_reasons: "Invitation wasn't sent due to the following reasons.",
            contact_invite_mail_invalid_email_address: "Invalid email address.",
            contact_invite_mail_invitation_sent: "Invitation sent",
            contact_invite_mail_invitation_was_sent: "Invitation was sent successfully.",
            contact_invite_mail_invite_more: "Invite more",
            contact_invite_mail_maximum_contact_requests: "Reached maximum number of contact requests.",
            contact_invite_mail_message_optional: "Message (optional)",
            contact_invite_mail_move_to_direct_chat: "Move to direct chat",
            contact_invite_mail_move_to_incoming_requests: "Move to incoming requests",
            contact_invite_mail_move_to_your_sent_requests: "Move to your sent requests",
            contact_invite_mail_restricted_to_outside_orgaization: "This person is restricted to connect with members outside the orgaization.",
            contact_invite_mail_send: "Send",
            contact_invite_mail_send_your_account: "Unable to send invitation to your account.",
            contact_invite_mail_type_email_addresses: "Type the email addresses of members to invite.",
            contact_is_completed: " has been sent.",
            contact_mail_not_found: "We could not find the user with this e-mail address.<br />Would you like to send an invitation e-mail to join ChatWork?",
            contact_menu_invite_mail: "Invite by Email",
            contact_menu_list: "Contacts",
            contact_menu_myrequest: "Sent Requests",
            contact_menu_norequest: "Not in Contacts",
            contact_menu_request: "Incoming Requests",
            contact_menu_user_search: "User Search",
            contact_multi_adding: "Adding your contacts...",
            contact_multi_add_confirm: "%%num%%users is added in your contacts, is it okay?",
            contact_multi_delete_confirm: "If you remove %%num%% users from your contact list, you will no longer be able to send private messages.\nDo you really want to remove?",
            contact_myrequest: "Contact Request",
            contact_request_cancel: "Cancel request",
            contact_rest_number: "...and %%rest_number%% more",
            contact_search: "Search by name",
            contact_search_introduction: "Search for people you may know",
            contact_search_not_found: "Currently there is no user that you can contact",
            contact_search_placeholder: "Enter name, ChatWork ID, email address here",
            copy_to_clipboard: "Copy to Clipboard",
            dateformat: "m/d/Y",
            datepicker_alt_text: "Choose date",
            deleted_user: "Cancelled User",
            deleting: "Deleting...",
            desktopalert_no_support: "Your browser does not support desktop notifications. Please try Google Chrome to enable desktop notifications.",
            directchat: "Direct Chats",
            emoticon_beer: "Beer",
            emoticon_blush: "Blush",
            emoticon_bow: "Bow",
            emoticon_cake: "Cake",
            emoticon_clap: "Clap",
            emoticon_coffee: "Coffee",
            emoticon_cracker: "Firecracker",
            emoticon_dance: "Dance!",
            emoticon_devil: "Devil",
            emoticon_ec14: "EC14",
            emoticon_flower: "Flower",
            emoticon_gogo: "Go Go!",
            emoticon_grin: "Grin",
            emoticon_handshake: "Handshake",
            emoticon_heart: "Heart",
            emoticon_ikemen: "Emo",
            emoticon_kiss: "Kiss!",
            emoticon_komanechi: "Rock!",
            emoticon_love: "Love",
            emoticon_lucky: "Nice!",
            emoticon_more_smile: "Laugh",
            emoticon_mumu: "Hmm...",
            emoticon_muscle: "Muscle",
            emoticon_ninmari: "Heh, heh, heh",
            emoticon_nod: "Nod",
            emoticon_otaku: "Nerd",
            emoticon_puke: "Bleh!",
            emoticon_roger: "Roger!",
            emoticon_sad: "Sad",
            emoticon_shake: "Shake",
            emoticon_smile: "Smile",
            emoticon_snooze: "Sleeepy",
            emoticon_star: "Star",
            emoticon_surprise: "Shocked!",
            emoticon_sweat: "Worry",
            emoticon_talk: "Talk",
            emoticon_tears: "Cry",
            emoticon_tongueout: "Goofy",
            emoticon_whew: "Whew!",
            emoticon_wink: "Wink",
            emoticon_wonder: "Whaaat?",
            emoticon_wry_smile: "Wry Grin",
            emoticon_yawn: "Yawn",
            emoticon_yes: "Yes",
            error_already_used: "Not available",
            error_cant_login_ip: "IP address check error",
            error_illegal_filename: 'The file name can not contain the following characters\n  / : * ? " < > |',
            error_invalidchar: "Contains invalid characters, we only accept alphabets, - , and _ .",
            error_maxlength: "You can only use up to %%length%% characters.",
            error_no_login_action: "You are not logged in.",
            error_no_select: "Please select a Chat.",
            error_upload: "Upload failed.",
            error_upload_disable_send_file: "File upload failed - requires permission from admin",
            error_upload_executable: "You will not be able to upload exe files for security reasons",
            error_upload_filesize: "File size is too large.",
            error_upload_filetype: "This file type is not supported.",
            error_upload_image: "JPEG, GIF, and PNG only",
            error_upload_over_max_filesize: "Your file (%%size%%) exceeds the limit size (%%max_size%%).",
            fbconnect_blog_url: "http://blog-en.chatwork.com/",
            feedback_desc_noreply: "*Please be aware you won't receive a response.",
            feedback_thankyou: 'Thank you for your thoughts.<br />Your opinion is important to us and it will be used to further improve ChatWork.<br />Happy chatting!<img class="ui_emoticon" alt=":)" title="Smile :)" src="./image/emoticon/emo_smile.gif">',
            file: "Files",
            file_click_detail: "Select a file for details",
            file_confirm_delete: 'Do you really want to delete "%%file_name%%"?',
            file_delete_error_try_again: "Failed to delete the file.\nPlease try again later. ",
            file_delete_hint: "Delete file",
            file_download_hint: "Download",
            file_drop_area: "<span>Drag & drop to attach files</span>",
            file_edited: "File name edited.",
            file_edit_title: "Editing file names",
            file_error_empty: "File name is mandatory.",
            file_loading: "Loading files...",
            file_multi_confirm_delete: "%%num%%files are selected. Do you really want to delete this?",
            file_name: "File name:",
            file_nothing: "No files",
            file_not_found: "This file does not exist.",
            file_preview_download: "Download image",
            file_preview_image_cant_read: "Loading preview failed",
            file_preview_image_hint: "Preview this file",
            file_preview_open_newwindow: "Open in new window",
            file_rename_hint: "Edit file name",
            file_search: "Search for files",
            file_search_not_found: "No file found",
            file_size: "Size",
            file_uploaded: "New file uploaded.",
            file_upload_by: "Uploaded by",
            file_upload_datetime: "Upload date",
            groupchat: "Group Chats",
            imagedrop_tooltip_change_filename: "Change filename",
            imagedrop_tooltip_title: "Paste image from the clipboard",
            invitation_link: "Invitation Link",
            invitation_link_advanced_setting_index: "Advanced Settings",
            invitation_link_advanced_setting_lead: "You can set “Cover Photo” and “Description” of the group chat to provide the members with useful information.",
            invitation_link_code_copy: "Copy",
            invitation_link_help_tool_tip: "You can easily invite people to group chat even if he/she doesn’t have an account or is not on your contact list. ",
            invitation_link_setting_delete_current_header: "Delete current header image",
            invitation_link_setting_error_invalid_link_name: "Invalid link",
            invitation_link_setting_header_limit: "(JPEG/GIF/PNG files allowed, up to 700KB in file size and 600 px in width)",
            invitation_link_setting_join_accept: "Requires confirmation from admin to join",
            invitation_link_setting_status_disable: "Disabled",
            invitation_link_setting_title: "Invitation Link Settings",
            invitation_link_set_groupchat_description_index: "Group Chat Description",
            invitation_link_set_header_image_index: "Invitation Page Cover Photo",
            invitelink: "Invitation Link",
            joinpublicchat_need_accept: "*Requires group chat admin approval to join.",
            joinpublicchat_request_sent: "Your request has been sent to the group chat admin. You will be added when the admin approves your request.",
            joinpublicchat_title: "Join this Group Chat",
            join_groupchat_btn_join_groupchat_label: "Join this group chat",
            join_groupchat_btn_send_join_request_label: "Request to join",
            join_groupchat_invite_message: "You have an invitation to join a group chat. Would you like to join?",
            join_groupchat_my_disable_external: "You are not allowed to communicate with people out of the organization.",
            join_groupchat_not_found: "This chat does not exist or the invitation link is invalid.",
            join_groupchat_other_disable_external: "Someone in this chat is not allowed to communicate with people out of the organization.",
            jump_to_addpoint: "Jump to assignment",
            jump_to_addpoint_not_found: "No message on add point",
            jump_to_message: "Go to this message",
            kddi_manual_name: "Service Guide",
            kddi_manual_path: "http://info-en.kcw.kddi.ne.jp",
            lang_dateformattip: "Date format:",
            lang_typetip: "Language:",
            live_call_chat: "You are invited to join ChatWork Live at %%chat_name%%.",
            live_call_direct: "%%name%% has invited you to ChatWork Live",
            live_invited: "You have an invitation",
            live_join: "Join ChatWork Live",
            live_member_add_introduction: "Select members for ChatWork Live",
            live_member_not_found: "No one available",
            live_start: "Started ChatWork Live",
            live_video: "Video chat",
            live_voice: "Audio call",
            loading: "Loading...",
            login_password_forget_link: "Forgot your password?",
            mailaddress: "Email Address",
            member: "Member",
            member_addition_dialog_title: "Add Member",
            member_addition_edit_member_label: "Edit Member",
            member_detail_edit_member_label: "Edit Member",
            member_edit_add_member_label: "Add Member",
            member_edit_dialog_title: "Edit Member",
            menu_admin_setting: "Admin Settings",
            menu_announcement: "Notification",
            menu_assistant: "",
            menu_change: "Change",
            menu_cheat_sheet: "List of shortcuts",
            menu_concierge: "",
            menu_contact_admin: "Contacts",
            menu_current: "Currently",
            menu_desktopalert: "Desktop Notifications",
            menu_download_app: "Download app",
            menu_feedback: "Feedback",
            menu_file: "Files",
            menu_help: "Help",
            menu_information: "Information",
            menu_logout: "Logout",
            menu_mychat_hint: "Open My Chat",
            menu_mytask: "Tasks",
            menu_personal_setting: "Personal Settings",
            menu_profile_setting: "Profile",
            menu_sound: "Sounds",
            menu_userguide: "Tips",
            message: "Message",
            message_join_groupchat: "Join this group chat",
            message_link: "Link to Message",
            message_open_chat: "Go to this group/direct chat",
            multiselect_label: "selected",
            mychat: "My Chat",
            mychat_default_desc: '"My Chat" is a private chat for your personal stuff. You can take notes, or upload files for private purposes.',
            name_suffix: "",
            newbrowser_check_compatibility_view_ie9: "Please check the Compatibility View if you're on Internet Explorer 9 or higher. To turn them off, click the compatibility view button.",
            newbrowser_desc: "To assure you the best ChatWork experience, please make sure you have the latest version of your browser.",
            newbrowser_download_chrome: "http://www.google.com/chrome/?hl=en",
            newbrowser_download_firefox: "http://www.mozilla.org/en-US/firefox/",
            newbrowser_download_ie: "http://windows.microsoft.com/en-US/internet-explorer/downloads/ie",
            newbrowser_download_safari: "http://www.apple.com/safari/",
            newbrowser_ie9_higher: "For users on Internet Explorer 9 or higher",
            newbrowser_listtip: "Please make sure you have the latest version of the following browsers.",
            newbrowser_recommended: "Recommended Browsers",
            newbrowser_subject: "Your browser is not ChatWork compatible.",
            nickname_desc: 'This nickname will be displayed after <span class="ui_to">To:</span> when you reply to others.',
            nickname_name: "Name",
            nickname_nickname: "Nickname",
            nickname_prefix: "",
            nickname_suffix: "",
            nickname_title: "Set Nickname",
            notifier_newmessage: "You have a new message.",
            off: "Off",
            on: "On",
            open_website: "Open",
            open_window: "Open in new tab ",
            organization_filter_radio_all: "Show all",
            organization_filter_radio_organized: "Show only within organization ",
            pager_first: "Go to first page",
            pager_last: "Go to last page",
            pager_next: "Go to next page",
            pager_prev: "Back to previous page",
            pin_hint: "Pin this chat",
            preview: "Preview",
            preview_needlogin: "(Requires Google account login)",
            preview_video: "Play",
            profile_allow_search: "Allow your profile to show up in search results",
            profile_chatworkidtip: "ChatWork ID:",
            profile_displaynametip: "Display name:",
            profile_edit: "Edit profiles",
            profile_error_invalid_cwid: "Please enter a valid ChatWork ID.",
            profile_error_no_displayname: "Please enter a display name.",
            profile_form_title: "Login Credentials",
            profile_image_limit: "(JPEG, GIF, and PNG files up to 700kb)",
            profile_setting_addresstip: "Address:",
            profile_setting_departmenttip: "Department / Division:",
            profile_setting_ecstudio_account: "Edit your account settings",
            profile_setting_edit_avatar: "Edit",
            profile_setting_edit_cover: "Edit cover photo",
            profile_setting_emailtip: "e-mail:",
            profile_setting_introductiontip: "Bio:",
            profile_setting_note_change_orgname: "Want to change your organization name? click here",
            profile_setting_orgnametip: "Organization name:",
            profile_setting_privacy_contact: "Your Contact Only",
            profile_setting_privacy_public: "Public",
            profile_setting_set_facebook_note: 'Click <a href="https://www.facebook.com/username/" target="_blank">here</a> to learn more about facebook vanity URL.',
            profile_setting_tel_extensiontip: "Ext. number:",
            profile_setting_tel_mobiletip: "Mobile:",
            profile_setting_tel_organizationtip: "Phone (work):",
            profile_setting_titletip: "Title:",
            profile_setting_urltip: "URL:",
            raise_error: "Error - stay calm, we're working on it.",
            readonly: "Readonly",
            read_more: "More...",
            reply_badge_tooltip_label: "View original message",
            role: "Role",
            room_permission_setting_allow_add_task: "Allow assigning tasks",
            room_permission_setting_allow_see_member: "Show group chat members",
            room_permission_setting_allow_send_message: "Allow sending messages",
            room_permission_setting_allow_upload_file: "Allow sending files",
            room_permission_setting_index: "Group chat member role settings",
            room_permission_setting_lead: "will not affect admin users",
            room_permission_setting_title: "Edit Group Chat Permissions",
            room_request_description: "You can add this user to this group chat by accepting the request.",
            room_request_title: "Users requesting to join this group chat",
            saving: "Saving...",
            search_except_wordtip: "Keywords to exclude:",
            search_except_word_placeholder: "Type search exclusions",
            search_group_by_chat: "Arrange by Chat",
            search_group_by_time: "Sort by latest",
            search_group_by_user: "Arrange by User",
            search_loading: "Searching...",
            search_max_results: "(up to %%max_results%% results)",
            search_message_fromtip: "User:",
            search_message_termtip: "Date:",
            search_option: "Options",
            search_placeholder: "Type to search",
            search_resulttip: "Search Results:",
            search_result_bychat_closeall: "Close All Chats",
            search_result_bychat_openall: "Open All Chats",
            search_result_not_found: "No results for %%keyword%%",
            search_result_unit: "",
            search_suggest: 'Search for "%%keyword%%" in messages',
            search_term_30: "Past 30 days",
            search_term_365: "Past 1 year",
            search_term_7: "Past 7 days",
            search_term_90: "Past 90 days",
            search_term_all: "All",
            search_term_separator: "..",
            search_term_specify: "Specify",
            search_title: "Keyword Search",
            selectall_full: "Select All",
            sending: "Sending...",
            serviceadmin_do_upgrade: "Upgrade ChatWork",
            serviceadmin_upgrade: "Upgrade",
            serviceadmin_user_list_label: "Admin Feature",
            sound_type: "Select sound :",
            sound_volume: "Volume :",
            start_chatwork: "Start %%service_name%%",
            storage_activity_ratio_label: "Storage quota",
            storage_add_link: "Purchase additional storage.",
            storage_cancel_add_storage_label: "Purchase additional storage.",
            storage_cancel_send_cancel: "Unable to send %%object%%.",
            storage_cancel_send_object: "Unable to send %%object%% as the file size exceeds the limit of your account.<br />Please delete other files, or ",
            storage_cancel_send_object_suffix_add_storage: "purchase additional storage.",
            storage_cancel_send_object_suffix_tell_admin: "Contact your admin for your plan.",
            storage_cancel_send_object_suffix_upgrade: "upgrade your plan.",
            storage_cancel_upgrade_label: "Upgrade your plan.",
            storage_limit_notice_body: "Unable to send files as you have reached your storage limit.<br />Please delete other files, or ",
            storage_limit_notice_footer: "Please be aware that if you reach the limit and leave them for a week (until %%date%%), you will no longer be able to send messages.",
            storage_limit_notice_message: "[Warning] You have reached your storage limit.",
            storage_limit_notice_title: "You have reached your storage limit.",
            storage_limit_warning_body: "Your message feature have been suspended as a week have passed after you've reached the storage limit. Please delete some files, or ",
            storage_limit_warning_message: "[Important] You can no longer send messages.",
            storage_limit_warning_title: "Your message feature have been suspended.",
            storage_other_user: "Other Users",
            storage_show_all_user: "User list",
            storage_used: "Full",
            task: "Tasks",
            task_added: "Task assigned.",
            task_add_button: "Add Task",
            task_click_detail: "Select task for details",
            task_client: "From",
            task_confirm_delete: "Do you really want to delete this task?",
            task_deleted: "Task deleted",
            task_delete_hint: "Delete task",
            task_done: "Task completed.",
            task_edited: "Task edited.",
            task_edit_hint: "Edit task",
            task_edit_title: "Edit Task",
            task_error_empty: "The task is empty.",
            task_filter_all: "All",
            task_filter_exired: "Past",
            task_filter_inweek: "This week",
            task_filter_nolimit: "No dates",
            task_filter_today: "Today",
            task_incharge: "To",
            task_inchargetip: "To:",
            task_incharge_placeholder: "Assign to",
            task_input_placeholder: "Enter task here",
            task_limit: "Due",
            task_limittip: "Due: ",
            task_limit_placeholder: "Set due date",
            task_loading: "Loading tasks...",
            task_menu_client: "Tasks I've assigned",
            task_menu_close: "Completed Tasks",
            task_menu_incharge: "My Tasks",
            task_menu_open: "Open Tasks",
            task_nothing: "No Tasks",
            task_not_found: "No Tasks",
            task_num: " (more than %%num%%)",
            task_reverted: "Task re-assigned.",
            task_tasktip: "Task:",
            text_copied: "Copied",
            tutorial_addbutton: "From here you can create a new group chat or add new people to the group.",
            tutorial_add_task: "From here you can add new tasks.",
            tutorial_globalsearch: "From here you can search for chat names and message content.",
            tutorial_send_message: "From here you can send messages.",
            uncheckall: "None",
            url_download_app: "http://www.chatwork.com/download/",
            userguide_message: "Messages",
            userguide_message_about: "My Chat",
            userguide_message_about_content1: "<p>My Chat is a place which is only available to you. You can use this as your personal memo, or assign tasks to yourself to remember things.</p>",
            userguide_message_about_content2: "<p>Simply type in your message, memo, or tasks, and click Send.</p>",
            userguide_message_delete: "Deleting messages",
            userguide_message_delete_content1: '<p>You can also delete a message that you have already sent. <br />From the same message menu, click on "..." and then "Delete".</p>',
            userguide_message_delete_content2: '<p>You will be asked to confirm "Do you really want to delete this message?" If you do want to proceed then please click on "OK"</p>',
            userguide_message_edit: "Editing messages",
            userguide_message_edit_content1_biwa: '<p>Hover your mouse over the message that you have already sent and click on "Edit".</p>',
            userguide_message_edit_content2_biwa: '<p>When you click on "Editing" is displayed on the input screen; you can then edit your message.</p>',
            userguide_message_mention: "Mention someone within a message",
            userguide_message_mention_content1: '<p>When you want to mention someone within a group chat, use the "To" feature.</p>',
            userguide_message_mention_select: "Select the person",
            userguide_message_mention_select_content1: "<p>Select the person you want to mention.</p>",
            userguide_message_mention_send: "Send a message",
            userguide_message_mention_send_content1: "<p>When you select the user of your message, the TO tag is inserted at the top of the message box. You can add your message below this tag and send the message.</p>",
            userguide_message_mention_send_content2: "<p>This takes you to the message sent screen.</p>",
            userguide_message_mention_send_content3: '<p>When you are mentioned by someone else, an green "TO" icon badge will show up on the group chat list.</p>',
            userguide_message_quote: "Quoting messages",
            userguide_message_quote_content1_biwa: "<p>As the number of people in your group increases, it becomes more difficult to work out who you are talking to, so you can quote their message to carry out conversations more smoothly. </p><h3>How to display the message menu</h3><p>Hover your mouse over someone else's message (place the cursor over the text)<br />to display the Reply, Quote, Task, Link, and other buttons.</p>",
            userguide_message_quote_content2_biwa: '<p>Click on "Quote" to insert tags and the quoted message into the message text box.</p>',
            userguide_message_quote_content3_biwa: "<p>You can then add your own message to the quoted message before sending it. This makes it clear which message you are replying to.</p>",
            userguide_profile: "Profile Settings",
            userguide_profile_about: "About Profile Settings",
            userguide_profile_about_content_biwa: "<p>You can change your profile pics,cover photo, organization names, contact info, bio, etc within Profile Settings.</p><p>This will help other people find your profile more easier.</p>",
            userguide_profile_chatworkid: "Setting up ChatWork ID",
            userguide_profile_chatworkid_content1: "<p>When you claim your ChatWork ID, you can take advantage of vanity URL so others can find you and connect with you more easier.</p><p>E.g.) %%chatwork_home_path%%/[Your ChatWork ID]</p>",
            userguide_profile_chatworkid_content2: '<p>Simply type in your preferred ChatWork ID in the text field below, and click "Save".</p>',
            userguide_profile_open_setting: "Your profile page",
            userguide_profile_open_setting_content: "<p>You can open Profile Settings by clicking your icon on the upper right corner.</p>",
            userguide_profile_open_setting_content_biwa: '<p>Click on "Edit profiles" to open the edit screen.</p>',
            userguide_profile_upload_image: "Upload profile pic",
            userguide_profile_upload_image_content_biwa: '<p>Click on "Edit" in your profile information.</p>',
            userguide_profile_upload_image_content_biwa2: '<p>Select "Upload", choose the image to upload, and click on "Save" to submit a picture stored in your PC.</p>',
            userguide_task: "Tasks",
            userguide_task_about: "What is tasks?",
            userguide_task_about_content: "<p>Task feature allows you to create a to-do list, and you can even assign yourself.</p><p>Quick tip : go ahead and assign something to yourself in My Chat, so you can get a deeper understanding of how this feature works.</p>",
            userguide_task_add: "Assign tasks",
            userguide_task_add_content1_biwa: '<p>Enter details of a task into the text box labeled with "Enter task here" on the right hand side of the chat screen. Add the person the task is assigned to and the due, and click on the "Add Task" button.</p>',
            userguide_task_add_content2_biwa: "<p>If the task is shown in the timeline, then the task has been added successfully.</p>",
            userguide_task_browse: "Browse tasks",
            userguide_task_browse_content1: "<p>On the right-hand bottom corner, you can see the list of tasks assigned to you.</p>",
            userguide_task_browse_content2_biwa: "<p>The chat list displays the number of tasks assigned to you on the right of the task icon.</p>",
            userguide_task_complete: "Complete tasks",
            userguide_task_complete_content1_biwa: '<p>Once a your task is complete, click on the "Done" button on the top left hand side.</p>',
            userguide_task_complete_content2: '<p>"Task completed." message will automatically be sent to the group chat member.</p>',
            userguide_task_complete_content3: '<p>This is the end of "%%service_name%% Tips" content.</p>',
            userguide_title: "%%service_name%% Tips",
            userguide_welcome_head: "About %%service_name%%",
            userguide_welcome_service_desc_chatwork: "%%service_name%% is a cloud-based, business chat tool that allows you to have group chats, video calls, and manage tasks and files.",
            userguide_welcome_service_desc_kddi: "KDDI ChatWork is a social communication tool that allows you to have group chats, video calls, and manage tasks and files.",
            username: "Username",
            welcome_title: "Welcome to %%service_name%%!",
            word_separator: ",",
            _button_delete_with_agreement: "Delete (I have confirmed)",
            _chatroom_confirm_delete_alert: 'Do you really want to delete "%%room_name%%"?',
            _chatroom_confirm_delete_content: "Please check the followings prior to deleting group chats.",
            _chatroom_confirm_delete_note_1: "This will not only delete from your list, but will be applied for everyone else participating in the group chat.",
            _chatroom_confirm_delete_note_2: "All messages, tasks, and files will be deleted.",
            _chatroom_confirm_delete_note_3: "All deleted data will never be restored.",
            _chatwork_apitoken_caution_1: 'ChatWork API documentation is available <a href="http://link.chat-work.com/api_doc" target="_blank">here</a>.',
            _chatwork_apitoken_caution_2: "Please do not share your API token with third parties.",
            _chatwork_apitoken_caution_3: "We may prohibit the use of the API if there is an unusually high volume of requests and excessive load on our servers.",
            _chatwork_apitoken_caution_4: 'By accessing or using our APIs, you are agreeing to the <a href="http://www.chatwork.com/ja/terms/api.html" target="_blank">ChatWork API Terms of Use (Japanese)</a>.',
            _chatwork_apitoken_confirm_regenerate: "Your existing API token will be invalidated if you regenerate the token. Would you like to proceed?",
            _chatwork_apitoken_copy_btn: "Copy",
            _chatwork_apitoken_display_btn: "Display",
            _chatwork_apitoken_empty_password: "Please enter your password.",
            _chatwork_apitoken_invalid_password: "Invalid password. Please try again.",
            _chatwork_apitoken_password_caption: "Please enter your ChatWork password to display and generate your API token. ",
            _chatwork_apitoken_password_placeholder: "Enter Password",
            _chatwork_apitoken_regenerate_btn: "Regenerate",
            _chatwork_apitoken_token_label: "API:",
            _chatwork_apitoken_token_placeholder: "API",
            _chatwork_file_upload_eset_link: "",
            _chatwork_path_help_file_upload_error: ""
        }
    }, {}],
    327: [function(require, module, exports) {
        module.exports = {
            accepting: "Aceptando...",
            adding: "Añadiendo...",
            add_contact_confirm_body_with_account_names: "¿Quieres enviarle una solicitud de contacto a %%account_names%%?",
            add_contact_confirm_dialog_title: "Solicitud de contacto",
            add_contact_confirm_send_mail_at_same: "* También recibirán un correo electrónico cuando se envíe tu solicitud.",
            admin: "Administrador",
            announce_button_close: "No mostrar este mensaje de nuevo",
            assistant_lp_url: "",
            available: "Disponible",
            button_accept: "Aceptar",
            button_accept_long: "Aceptar",
            button_add: "Añadir",
            button_add_contact_long: "Enviar invitación",
            button_cancel: "Cancelar",
            button_change_long: "Cambiar",
            button_close: "Cerrar",
            button_complete: "Hecho",
            button_create: "Crear",
            button_create_long: "Crear",
            button_delete: "Borrar",
            button_delete_long: "Borrar",
            button_edit: "Editar",
            button_incomplete: "Abrir",
            button_next: "Siguiente",
            button_ok: "OK",
            button_reject: "Ahora no",
            button_reject_long: "Ahora no",
            button_return: "Volver",
            button_save: "Guardar",
            button_save_long: "Guardar",
            button_search: "Buscar",
            button_send: "Enviar",
            canceling: "Cancelando...",
            chat: "Chat",
            chatroom_added: "se ha unido al grupo.",
            chatroom_btn_add_member_tooltip: "Añadir Miembro",
            chatroom_changed: '".',
            chatroom_chatname_is: 'Nombre del grupo cambiado a "',
            chatroom_chat_edited: "Información de chat está actualizada.",
            chatroom_chat_joined: "Se ha unido un nuevo miembro al chat de grupo.",
            chatroom_confirm_leave: '¿De verdad quieres dejar "%%room_name%%"? Perderás el acceso a todos los mensajes, tareas y archivos. Si quieres volver a unirte a este chat de grupo, necesitarás una invitación. \n(*Se eliminarán las tareas que hayas asignado a otras personas y los archivos subidos dentro de este chat de grupo)',
            chatroom_contact_added: "Nuevo contacto ha sido añadido.",
            chatroom_contact_added_by_facebook: "El contacto se ha añadido a través de la función automática de añadir amigos de Facebook",
            chatroom_createchat_same_members: "Crear una copia de este chat de grupo",
            chatroom_createchat_same_members_confirm: "Hay algún(os) usuario(s) que no pertenece(n) a tu lista de contactos.\n¿Quieres crear un nuevo chat de grupo con tus contactos actuales?",
            chatroom_create_title: "Crear nuevo Chat de Grupo",
            chatroom_delete: "Eliminar este chat de grupo",
            chatroom_deleted: "ha sido eliminado.",
            chatroom_desc: "Descripción",
            chatroom_description_is: 'Descripción del grupo cambiada a "',
            chatroom_desctip: "Descripción:",
            chatroom_desc_explain: "Añade descripción del chat, notas o enlaces aquí.",
            chatroom_desc_none: "Sin descripción",
            chatroom_disable_external: "no se pudo añadir - no tiene permiso para comunicarse con los usuarios externos a su organización.",
            chatroom_edit_desc_title: "Editar descripción",
            chatroom_error_cant_add: "No se ha podido crear el chat.",
            chatroom_error_noadmin: "Debes asignar un administrador para este chat de grupo.",
            chatroom_error_noself: "Debes añadirte a ti mismo para crear un nuevo chat de grupo.",
            chatroom_error_not_found: "El chat no existe.",
            chatroom_error_no_member: "No se pueden cargar los mensajes: requiere permiso para unirse a este chat",
            chatroom_error_no_name: "Se requiere el nombre del Chat de Grupo.",
            chatroom_error_planlimit: "Los usuarios con %%plan_name%% solo pueden crear hasta %%limit_num%% chats de grupo. Por favor, considera actualizar tu cuenta.",
            chatroom_groupchat_created: "Nuevo chat de grupo ha sido creado.",
            chatroom_icon_type_preset: "Seleccionar icono",
            chatroom_icon_type_upload: "Subir",
            chatroom_icon_updated: "Icono del chat de grupo está actualizado.",
            chatroom_info_edit: "Editar Información del Chat",
            chatroom_invitation_link_setting: "Configuración del Enlace de Invitación",
            chatroom_leave: "Dejar este chat de grupo",
            chatroom_leaved: "ha dejado el chat.",
            chatroom_member_add_contact: "Añadir Todos",
            chatroom_member_detail: "Detalles del miembro",
            chatroom_member_is: "",
            chatroom_member_long: "Miembros del Chat",
            chatroom_member_nocontact: "Miembros que no están en tu lista de contactos",
            chatroom_member_requests_notice: "Miembros Pendientes (%%request_num%%)",
            chatroom_member_rest_number: "...y %%rest_number%% más",
            chatroom_member_role_admin_desc: "Puedes editar el nombre del chat de grupo, la descripción, y añadir/eliminar miembros.",
            chatroom_member_role_member_desc: "No puedes editar el nombre del chat de grupo, la descripción, y añadir/eliminar miembros.",
            chatroom_member_role_readonly_desc: "Puedes leer pero no enviar mensajes.",
            chatroom_mychat_created: "Mi Chat se ha creado.",
            chatroom_nametip: "Nombre del Chat de Grupo:",
            chatroom_not_only_internal: "Chat que incluye usuarios de otras organizaciones",
            chatroom_over_groupchatnum: "no se ha podido enviar la invitación al chat de grupo porque él/ella ha alcanzado ya el límite de chats de grupo.",
            chatroom_priv_changed: "cambió roles.",
            chatroom_resigned_priv_change: "ha eliminado la cuenta de ChatWork, este chat directo ahora ha sido cambiado a chat de grupo.",
            chatroom_resigned_priv_change_all: "Puesto que este chat de grupo no tiene administrador, a todos los miembros de este chat de grupo se les ha concedido el rol de administrador.",
            chatroom_room_permission_setting: "Editar Permisos del Chat de Grupo",
            chatroom_search_member: "Buscar por nombre",
            chatroom_set: '".',
            chatroom_setting: "Configuración de chat",
            chatroom_show_limit_member_num: "(Máx.: %%num%%)",
            chatroom_tasklist_mytaskonly: "Mostrar tareas asignadas a mí",
            chatsend_button_delete_message_only: "Eliminar solo la Notificación",
            chatsend_button_delete_with_file: "Eliminar Notificación con Archivo",
            chatsend_button_delete_with_task: "Eliminar Notificación con Tarea",
            chatsend_chat_explain: "Introduce tu mensaje aquí",
            chatsend_confirm_delete: "¿Realmente quieres eliminar este mensaje?",
            chatsend_confirm_delete_with_file: "¿Eliminarías el Archivo con Notificación?",
            chatsend_confirm_delete_with_task: "¿Eliminar la Tarea con Notificación?",
            chatsend_delete_filetip: "El Archivo que vas a eliminar:",
            chatsend_delete_tasktip: "La Tarea que vas a eliminar:",
            chatsend_emoticonalt: "Emoticonos: ¡exprésate!",
            chatsend_enter_action_explain: "Pulsa Intro para enviar",
            chatsend_enter_action_explain_enter: "\n(pulsa Mayús + Intro para un salto de línea)",
            chatsend_enter_action_explain_enter_send: "\n(pulsa Mayús + Intro para enviar)",
            chatsend_error_no_exist_for_edit: "El mensaje no existe",
            chatsend_error_no_incharge: "Selecciona la persona responsable de la tarea",
            chatsend_error_send: "Mensaje no enviado : Error de Red, por favor, envíalo de nuevo",
            chatsend_error_send_task: "Tarea no asignada: Error de Red, por favor, envíalo de nuevo",
            chatsend_expand_area: "Ampliar la ventana",
            chatsend_filealt: "Subir archivos",
            chatsend_nickname_setting: "Configuración del Alias",
            chatsend_not_allow_send_messages: "No tienes permiso para enviar mensajes en este chat de grupo.",
            chatsend_quote: "Citar",
            chatsend_reply: "Responder",
            chatsend_shift_and_command_hint: 'Mayús para selección múltiple, "⌘" para enviar',
            chatsend_shift_and_ctrl_hint: 'Mayús para selección múltiple, "Ctrl" para enviar',
            chatsend_shift_multiselect: "Haz clic en Mayús para seleccionar dos o más",
            chatsend_toalt: "Para: especifica con quién estás hablando",
            chatsetting_faviconstat: "Mostrar los números de no leídos en el icono del navegador",
            chatsetting_hide_message_box_tags: "",
            chatsetting_hide_message_box_tags_change_confirm: "",
            chatsetting_notifier: "Notificaciones de Escritorio",
            chatsetting_notifier_duration: "Duración de las notificaciones de escritorio",
            chatsetting_notifier_duration_10sec: "10 segundos",
            chatsetting_notifier_duration_20sec: "20 segundos",
            chatsetting_notifier_duration_5sec: "5 segundos",
            chatsetting_notifier_message: "Incluir mensajes dentro de las notificaciones de escritorio",
            chatsetting_notifier_onlyto: "Notificar solo cuando alguien te mencione",
            chatsetting_notifier_show: "Activa las notificaciones de escritorio",
            chatsetting_popup_sound: "Activa las notificaciones de sonido",
            chatsetting_private_nickname: "No utilizar alias cuando se incluyan usuarios externos a la organización en el chat.",
            chatsetting_shorten_url: "Acortar URL para propósitos de visualización",
            chatsetting_show_delmessage: "Mostrar los registros de los mensajes eliminados",
            chatsetting_show_external: "El icono para mostrar el chat del grupo incluye a los usuarios de otras organizaciones",
            chatsetting_tab_apitoken: "API",
            chatsetting_tab_display: "Mostrar",
            chatsetting_tab_language: "Idioma",
            chatsetting_tab_login: "Iniciar Sesión",
            chatsetting_tab_notification: "Notificación",
            chatsetting_test_sound: "Reproducir",
            chatsetting_unread_mail: "Avísame por correo electrónico de los mensajes no leídos",
            chatsetting_unread_mail_label: "Notificación de Correo Electrónico",
            chatsetting_unread_mail_term_1: "Cada 1 hora",
            chatsetting_unread_mail_term_12: "Cada 12 horas",
            chatsetting_unread_mail_term_2: "Cada 2 horas",
            chatsetting_unread_mail_term_24: "Cada 24 horas",
            chatsetting_unread_mail_term_3: "Cada 3 horas",
            chatsetting_unread_mail_term_6: "Cada 6 horas",
            chatsetting_unread_mail_term_none: "Nunca",
            chatwork_do_update: "Actualizar a la última versión",
            chatwork_help_page_path: "http://support-en.chatwork.com/hc/en-us",
            chatwork_service_name: "ChatWork",
            chatwork_update: "ChatWork actualizado: recarga la página.",
            chat_action_copy: "Copiar",
            chat_action_copy_desc: "Mostrar texto sin formato",
            chat_action_copy_title: "Mensaje",
            chat_action_delete: "Eliminar",
            chat_action_delete_desc: "Eliminar este mensaje",
            chat_action_edit: "Editar",
            chat_action_edit_desc: "Editar este mensaje",
            chat_action_link: "Enlace",
            chat_action_link_desc: "Insertar un enlace en este mensaje",
            chat_action_move: "Ir a este mensaje",
            chat_action_move_desc: "Ir a este mensaje",
            chat_action_quote: "Citar",
            chat_action_quote_desc: "Citar este mensaje",
            chat_action_reply: "Responder",
            chat_action_reply_desc: "Responder a este mensaje",
            chat_action_task: "Tarea",
            chat_action_task_desc: "Convertir este mensaje en tarea",
            chat_action_unread: "No Leído",
            chat_action_unread_desc: "Marcar como no leído",
            chat_category_allchat: "Todos los Chats",
            chat_category_chatselecttip: "Elegir chat:",
            chat_category_confirm_delete: '¿Realmente quieres eliminar la Categoría "%%category_name%%"?',
            chat_category_create: "Crear una nueva Categoría",
            chat_category_edit: "Editar Categoría",
            chat_category_error_no_chats: "Por favor, selecciona un chat de grupo/directo.",
            chat_category_error_no_name: "Por favor, introduce un nombre de categoría.",
            chat_category_mytaskchat: "Chats con tareas asignadas",
            chat_category_nametip: "Nombre de la categoría:",
            chat_category_select: "Seleccionar una Categoría",
            chat_category_selected_chat_num: "Número de chats seleccionados:",
            chat_deleted: "Mensaje borrado.",
            chat_delete_label: "Eliminado",
            chat_editing: "Editando",
            chat_editing_label_on_message: "Editando",
            chat_edit_label: "Editado",
            chat_error_not_found: "El mensaje no existe.",
            chat_filter_readonly: "No Leídos",
            chat_filter_readonly_empty: "No hay mensajes no leídos",
            chat_filter_taskonly: "Tarea Asignada",
            chat_filter_taskonly_empty: "No hay tareas asignadas",
            chat_filter_toonly: "Mencionados",
            chat_filter_toonly_empty: "No hay mensajes que te mencionen",
            chat_loading: "Cargando mensajes...",
            chat_menu_chatlist: "Lista de Chat",
            chat_partial_quote_message: "Citar en el mensaje",
            chat_partial_quote_task: "Citar en la tarea",
            chat_post_label: "Publicado",
            chat_rest_roomtip: "Chat de Grupo/Directo no mostrado:",
            chat_search: "Escribe para buscar el chat/mensaje",
            chat_server_error_try_again: "Se ha producido un error de conexión con el servidor.\nPor favor, inténtalo de nuevo en unos instantes.",
            chat_show_more: "Mostrar más",
            cheatsheet_name_notation_code: "Desactivar la conversión de emoticonos",
            cheatsheet_name_notation_hr: "Línea rayada",
            cheatsheet_name_notation_info: "Borde exterior",
            cheatsheet_name_notation_mix_tag: "Combinar varias etiquetas",
            cheatsheet_notation_title: "Etiquetas de decoración de mensajes",
            cheatsheet_or: "o",
            cheatsheet_short_cut_title: "Lista de accesos directos del teclado",
            cheatsheet_supplement_text_key_j: '* Es "i (I)" y no "j (J)"',
            cheatsheet_text_key_c: "Añadir contacto",
            cheatsheet_text_key_command_arrow_left: "Cerrar o abrir columna izquierda",
            cheatsheet_text_key_command_arrow_right: "Cerrar o abrir columna derecha",
            cheatsheet_text_key_enter: "Abrir chat seleccionado",
            cheatsheet_text_key_esc: "Mover el foco fuera del campo de entrada de mensajes",
            cheatsheet_text_key_f: "Mover el cursor a la barra de búsqueda de chat",
            cheatsheet_text_key_g: "Crear chat de grupo",
            cheatsheet_text_key_j: "Selecciona el chat abajo",
            cheatsheet_text_key_k: "Selecciona el chat arriba",
            cheatsheet_text_key_m: "Mover el cursor al campo de entrada de mensajes",
            cheatsheet_text_key_question: "Lista de accesos directos",
            cheatsheet_text_key_t: "Mover el cursor al campo de entrada de la tarea",
            cheatsheet_text_key_tab: "Mover el foco al botón Enviar",
            cheatsheet_text_notation_content: "contenido",
            cheatsheet_text_notation_index: "encabezamiento",
            cheatsheet_text_notation_new_line: "(+ nueva línea)",
            cheatsheet_text_notation_on_message_area: "* Si introduces",
            cheatsheet_text_notation_replace_code_tag: "en el cuadro de entrada, &#96;&#96;&#96; se convertirá en la etiqueta [código]",
            checkall: "Todos",
            checkall_full: "Seleccionar Todos",
            commercial_announce_read_error_message: "",
            common_role_select_list_default: "Editar permisos",
            common_role_select_list_default_tooltip: "Editar permisos de todos los miembros",
            concierge_lp_url: "",
            connection_error_invalid_user: "Has iniciado sesión con un usuario diferente.",
            connection_error_logout: "Se ha cerrado la sesión.",
            connection_error_offline: "Estás sin conexión en este momento.",
            contactpanel_add_contact: "Añadir Contactos",
            contact_add: "Añadir Contactos",
            contact_add_all_hint: "Miembros que no están en tus contactos",
            contact_add_multiple_mailtip: "Introduce una dirección de correo electrónico por línea.",
            contact_click_detail: "Selecciona contacto para más detalles",
            contact_confirm_delete: "¿De verdad quieres eliminar %%name%% de tus contactos? \nTambién se eliminarán permanentemente tus chats directos.",
            contact_confirm_reject_request: "¿Realmente quieres ignorar tu solicitud de contacto de %%name%%?",
            contact_connect_from_ads_complete: "You will be contacted shortly by person in charge.",
            contact_connect_from_ads_confirm: "Please send a contact request for more information.",
            contact_cwid_error_already: 'El ChatWork ID "%%chatwork_id%%" ya ha sido añadido a tus contactos.',
            contact_cwid_error_myself: "No te puedes añadir a ti mismo.",
            contact_cwid_error_noexist: 'El ChatWork ID "%%chatwork_id%%" no existe.',
            contact_delete: "Eliminar de tus contactos",
            contact_doing_invite: "Enviando invitación...",
            contact_done_invite: "Invitación enviada",
            contact_do_invite: "Enviar invitación",
            contact_error_cantadd: "No se puede añadir a este usuario a tus contactos.",
            contact_error_is_disable_external: "no se pudo añadir: no tiene permiso para comunicarse con los usuarios externos a su organización.",
            contact_error_is_not_mailaddress: "no son direcciones de correo electrónico válidas.",
            contact_error_is_over_contactnum: "han alcanzado su límite de número de contactos. No se pueden añadir a tu lista de contactos.",
            contact_error_planlimit: "Los usuarios con %%plan_name%% solo pueden añadir %%limit_num%% personas a su lista de contactos. Por favor, considera actualizar tu cuenta.",
            contact_error_search_user_not_found: "No se ha podido encontrar el usuario.",
            contact_invite: "Invitación por Correo Electrónico",
            contact_invite_mail_add_email_address_to_invite: "Añade la dirección de correo electrónico a invitar",
            contact_invite_mail_add_individually: "Añadir miembros de forma individual",
            contact_invite_mail_already_in_your_contacts: "Esta persona ya está en tus contactos.",
            contact_invite_mail_already_received_request: "Solicitud de contacto ya recibida.",
            contact_invite_mail_already_send_request: "Solicitud de contacto ya enviada.",
            contact_invite_mail_bulk_add: "Añadir en masa",
            contact_invite_mail_enter_message: "Escribe un mensaje",
            contact_invite_mail_enter_your_email_address: "Introduce la dirección de correo electrónico",
            contact_invite_mail_failed_sent_following_reasons: "La invitación no ha sido enviada debido a las siguientes razones.",
            contact_invite_mail_invalid_email_address: "Dirección de correo electrónico no válida.",
            contact_invite_mail_invitation_sent: "Invitación enviada",
            contact_invite_mail_invitation_was_sent: "La invitación ha sido enviada con éxito.",
            contact_invite_mail_invite_more: "Invitar más",
            contact_invite_mail_maximum_contact_requests: "Alcanzó el número máximo de solicitudes de contacto.",
            contact_invite_mail_message_optional: "Mensaje (opcional)",
            contact_invite_mail_move_to_direct_chat: "Ir al chat directo",
            contact_invite_mail_move_to_incoming_requests: "Ir a las peticiones entrantes",
            contact_invite_mail_move_to_your_sent_requests: "Ir a tus peticiones enviadas",
            contact_invite_mail_restricted_to_outside_orgaization: "Esta persona tiene restricciones para conectar con miembros externos a su organización.",
            contact_invite_mail_send: "Enviar",
            contact_invite_mail_send_your_account: "No se ha podido enviar la invitación a tu cuenta.",
            contact_invite_mail_type_email_addresses: "Escribe las direcciones de correo electrónico de los miembros a invitar.",
            contact_is_completed: "ha sido enviado.",
            contact_mail_not_found: "No hemos podido encontrar el usuario con esta dirección de correo electrónico.<br />¿Te gustaría enviarle un correo electrónico de invitación para que se una a ChatWork?",
            contact_menu_invite_mail: "Invitar por Correo",
            contact_menu_list: "Contactos",
            contact_menu_myrequest: "Peticiones Enviadas",
            contact_menu_norequest: "Nº de contactos",
            contact_menu_request: "Solicitudes Entrantes",
            contact_menu_user_search: "Buscar Usuario",
            contact_multi_adding: "Añadiendo tus contactos...",
            contact_multi_add_confirm: "%%num%% usuarios están añadidos a tus contactos, ¿está bien?",
            contact_multi_delete_confirm: "Si eliminas %%num%% usuarios de tu lista de contactos, ya no podrás enviar mensajes privados.\n ¿Realmente quieres eliminarlos?",
            contact_myrequest: "Solicitud de Contacto",
            contact_request_cancel: "Cancelar petición",
            contact_rest_number: "...y %%rest_number%% más",
            contact_search: "Buscar por nombre",
            contact_search_introduction: "Busca a personas que tal vez conozcas",
            contact_search_not_found: "Actualmente no hay ningún usuario con el que puedas ponerte en contacto",
            contact_search_placeholder: "Escribe nombre, ChatWork ID o correo electrónico",
            copy_to_clipboard: "Copiar al Portapapeles",
            dateformat: "d/m/Y",
            datepicker_alt_text: "Elegir fecha",
            deleted_user: "Usuario Cancelado",
            deleting: "Eliminando...",
            desktopalert_no_support: "Tu navegador no soporta las notificaciones de escritorio. Por favor, prueba Google Chrome para habilitar las notificaciones de escritorio.",
            directchat: "Chats Directos",
            emoticon_beer: "Cerveza",
            emoticon_blush: "Sonrojo",
            emoticon_bow: "Reverencia",
            emoticon_cake: "Pastel",
            emoticon_clap: "Aplaudir",
            emoticon_coffee: "Café",
            emoticon_cracker: "Petardo",
            emoticon_dance: "¡Bailar!",
            emoticon_devil: "Diablo",
            emoticon_ec14: "EC14",
            emoticon_flower: "Flor",
            emoticon_gogo: "¡Vamos!",
            emoticon_grin: "Mueca",
            emoticon_handshake: "Apretón de manos",
            emoticon_heart: "Corazón",
            emoticon_ikemen: "Emo",
            emoticon_kiss: "¡Beso!",
            emoticon_komanechi: "¡Mola!",
            emoticon_love: "Amor",
            emoticon_lucky: "¡Bonito!",
            emoticon_more_smile: "Risa",
            emoticon_mumu: "Mmm...",
            emoticon_muscle: "Músculo",
            emoticon_ninmari: "Je, je, je",
            emoticon_nod: "Asentir",
            emoticon_otaku: "Empollón",
            emoticon_puke: "¡Bah!",
            emoticon_roger: "¡Entendido!",
            emoticon_sad: "Triste",
            emoticon_shake: "Negar",
            emoticon_smile: "Sonrisa",
            emoticon_snooze: "Somnoliento",
            emoticon_star: "Estrella",
            emoticon_surprise: "¡Sorprendido!",
            emoticon_sweat: "Preocupación",
            emoticon_talk: "Hablar",
            emoticon_tears: "Llorar",
            emoticon_tongueout: "Tontorrón",
            emoticon_whew: "¡Uf!",
            emoticon_wink: "Guiño",
            emoticon_wonder: "¿Queeé?",
            emoticon_wry_smile: "Sonrisairónica",
            emoticon_yawn: "Bostezar",
            emoticon_yes: "Sí",
            error_already_used: "No disponible",
            error_cant_login_ip: "Error de comprobación de la dirección IP",
            error_illegal_filename: 'El nombre del archivo no puede contener los siguientes caracteres \n  / : * ? " < > |',
            error_invalidchar: "Contiene caracteres no válidos, solo aceptamos caracteres alfabéticos, - y _.",
            error_maxlength: "Puedes utilizar un máximo de %%length%% caracteres.",
            error_no_login_action: "No has iniciado sesión.",
            error_no_select: "Por favor, selecciona un Chat.",
            error_upload: "Fallo al subir.",
            error_upload_disable_send_file: "Fallo al subir el archivo - necesita permiso del administrador",
            error_upload_executable: "No podrás subir archivos ejecutables por razones de seguridad",
            error_upload_filesize: "El tamaño del archivo es demasiado grande.",
            error_upload_filetype: "Este tipo de archivo no es compatible.",
            error_upload_image: "Solo JPEG, GIF o PNG",
            error_upload_over_max_filesize: "Tu archivo (%%size%%) supera el tamaño máximo (%%max_size%%).",
            fbconnect_blog_url: "http://blog-en.chatwork.com/",
            feedback_desc_noreply: "* Ten en cuenta que no recibirás una respuesta.",
            feedback_thankyou: 'Gracias por decirnos lo que piensas.<br/>Tu opinión es importante para nosotros y se utilizará para mejorar aún más ChatWork.<br/>¡Felices chats!<img class="ui_emoticon" alt=":)" title="Smile :)" src="./image/emoticon/emo_smile.gif">',
            file: "Archivos",
            file_click_detail: "Selecciona un archivo para más detalles",
            file_confirm_delete: '¿De verdad quieres eliminar "%%file_name%%"?',
            file_delete_error_try_again: "No se ha podido eliminar el archivo.\nPor favor, inténtalo de nuevo más tarde.",
            file_delete_hint: "Eliminar archivo",
            file_download_hint: "Descargar",
            file_drop_area: "<span>Arrastra y suelta para adjuntar archivos</span>",
            file_edited: "Nombre del archivo editado.",
            file_edit_title: "Editando nombres de los archivos",
            file_error_empty: "El nombre del archivo es obligatorio.",
            file_loading: "Cargando archivos...",
            file_multi_confirm_delete: "%%num%%archivos están seleccionados. ¿Realmente quieres eliminar esto?",
            file_name: "Nombre del archivo:",
            file_nothing: "Ningún archivo",
            file_not_found: "Este archivo no existe.",
            file_preview_download: "Descargar imagen",
            file_preview_image_cant_read: "Fallo al cargar la vista previa",
            file_preview_image_hint: "Previsualizar este archivo",
            file_preview_open_newwindow: "Abrir en nueva ventana",
            file_rename_hint: "Editar nombre del archivo",
            file_search: "Buscar archivos",
            file_search_not_found: "Ningún archivo encontrado",
            file_size: "Tamaño",
            file_uploaded: "Nuevo archivo subido.",
            file_upload_by: "Subido por",
            file_upload_datetime: "Fecha de subida",
            groupchat: "Chats de Grupo",
            imagedrop_tooltip_change_filename: "Cambiar el nombre del archivo",
            imagedrop_tooltip_title: "Pegar imagen del portapapeles",
            invitation_link: "Enlace de Invitación",
            invitation_link_advanced_setting_index: "Configuración Avanzada",
            invitation_link_advanced_setting_lead: 'Puedes establecer la "Foto de Portada" y la "Descripción" del chat de grupo para proporcionar a los miembros información útil.',
            invitation_link_code_copy: "Copiar",
            invitation_link_help_tool_tip: "Puedes invitar a personas al chat de grupo fácilmente, incluso si él/ella no tiene una cuenta o no está en tu lista de contactos.",
            invitation_link_setting_delete_current_header: "Borrar la imagen de cabecera actual",
            invitation_link_setting_error_invalid_link_name: "Vínculo no válido",
            invitation_link_setting_header_limit: "(Se permiten los archivos JPEG/GIF/PNG, hasta 700 KB de tamaño de archivo y 600 px de ancho)",
            invitation_link_setting_join_accept: "Requiere la confirmación del administrador para unirse",
            invitation_link_setting_status_disable: "Desactivado",
            invitation_link_setting_title: "Configuración del Enlace de Invitación",
            invitation_link_set_groupchat_description_index: "Descripción del Chat de Grupo",
            invitation_link_set_header_image_index: "Foto de Portada de la Página de Invitación",
            invitelink: "Enlace de Invitación",
            joinpublicchat_need_accept: "*Se requiere la aprobación del administrador del chat de grupo para unirse.",
            joinpublicchat_request_sent: "Tu solicitud ha sido enviada al administrador del chat de grupo. Serás añadido cuando el administrador apruebe tu solicitud.",
            joinpublicchat_title: "Únete a este Chat de Grupo",
            join_groupchat_btn_join_groupchat_label: "Unirse a este grupo de chat",
            join_groupchat_btn_send_join_request_label: "Solicitud para unirse",
            join_groupchat_invite_message: "Tienes una invitación para unirte a un chat de grupo. ¿Te gustaría unirte?",
            join_groupchat_my_disable_external: "No se te permite comunicar con personas externas a la organización.",
            join_groupchat_not_found: "Este chat no existe o el enlace de invitación no es válido.",
            join_groupchat_other_disable_external: "Alguien en este chat no tiene permiso para comunicarse con personas externas a la organización.",
            jump_to_addpoint: "Ir a la tarea",
            jump_to_addpoint_not_found: "No hay ningún mensaje para añadir",
            jump_to_message: "Ir a este mensaje",
            kddi_manual_name: "Guía del Servicio",
            kddi_manual_path: "http://info-en.kcw.kddi.ne.jp",
            lang_dateformattip: "Formato de fecha:",
            lang_typetip: "Idioma:",
            live_call_chat: "Estás invitado a unirte a ChatWork Live en %%chat_name%%.",
            live_call_direct: "%%name%% te ha invitado a ChatWork Live",
            live_invited: "Tienes una invitación",
            live_join: "Únete a ChatWork Live",
            live_member_add_introduction: "Selecciona a miembros de ChatWork Live",
            live_member_not_found: "Nadie disponible",
            live_start: "ChatWork Live iniciado",
            live_video: "Chat de vídeo",
            live_voice: "Llamada de audio",
            loading: "Cargando...",
            login_password_forget_link: "¿Olvidaste tu contraseña?",
            mailaddress: "Correo Electrónico",
            member: "Miembro",
            member_addition_dialog_title: "Añadir Miembro",
            member_addition_edit_member_label: "Editar Miembro",
            member_detail_edit_member_label: "Editar Miembro",
            member_edit_add_member_label: "Añadir Miembro",
            member_edit_dialog_title: "Editar Miembro",
            menu_admin_setting: "Configuración Admin",
            menu_announcement: "Notificación",
            menu_assistant: "",
            menu_change: "Cambio",
            menu_cheat_sheet: "Lista de accesos directos",
            menu_concierge: "",
            menu_contact_admin: "Contactos",
            menu_current: "Actualmente",
            menu_desktopalert: "Notificaciones de Escritorio",
            menu_download_app: "Descargar aplicación",
            menu_feedback: "Comentarios",
            menu_file: "Archivos",
            menu_help: "Ayuda",
            menu_information: "Información",
            menu_logout: "Cerrar sesión",
            menu_mychat_hint: "Abrir Mi Chat",
            menu_mytask: "Tareas",
            menu_personal_setting: "Configuración Personal",
            menu_profile_setting: "Perfil",
            menu_sound: "Sonidos",
            menu_userguide: "Consejos",
            message: "Mensaje",
            message_join_groupchat: "Unirse a este grupo de chat",
            message_link: "Enlace al Mensaje",
            message_open_chat: "Ir a este chat de grupo/directo",
            multiselect_label: "seleccionado",
            mychat: "Mi Chat",
            mychat_default_desc: "Mi Chat es un chat privado para tus asuntos personales. Puedes tomar notas o subir archivos con fines privados.",
            name_suffix: "",
            newbrowser_check_compatibility_view_ie9: "Por favor, comprueba la vista de compatibilidad si estás en Internet Explorer 9 o superior. Para desactivarlas, haz clic en el botón de vista de compatibilidad.",
            newbrowser_desc: "Para asegurar la mejor experiencia de ChatWork, asegúrate de tener la última versión de tu navegador.",
            newbrowser_download_chrome: "http://www.google.com/chrome/?hl=en",
            newbrowser_download_firefox: "http://www.mozilla.org/en-US/firefox/",
            newbrowser_download_ie: "http://windows.microsoft.com/en-US/internet-explorer/downloads/ie",
            newbrowser_download_safari: "http://www.apple.com/safari/",
            newbrowser_ie9_higher: "Para los usuarios en Internet Explorer 9 o superior",
            newbrowser_listtip: "Por favor, asegúrate de tener la versión más reciente de los siguientes navegadores.",
            newbrowser_recommended: "Navegadores recomendados",
            newbrowser_subject: "Tu navegador no es compatible con ChatWork.",
            nickname_desc: 'Este alias se mostrará después de <span class = "ui_to"> Para: </ span> cuando respondas a otros.',
            nickname_name: "Nombre",
            nickname_nickname: "Alias",
            nickname_prefix: "",
            nickname_suffix: "",
            nickname_title: "Establecer Alias",
            notifier_newmessage: "Tienes un nuevo mensaje.",
            off: "Apagado",
            on: "Encendido",
            open_website: "Abrir",
            open_window: "Abrir en una pestaña nueva",
            organization_filter_radio_all: "Mostrar todo",
            organization_filter_radio_organized: "Mostrar solo dentro de la organización",
            pager_first: "Ir a la primera página",
            pager_last: "Ir a la última página",
            pager_next: "Ir a la página siguiente",
            pager_prev: "Volver a la página anterior",
            pin_hint: "Marcar este chat",
            preview: "Vista Previa",
            preview_needlogin: "(Se requiere acceso a la cuenta Google)",
            preview_video: "Reproducir",
            profile_allow_search: "Permite que tu perfil aparezca en los resultados de búsqueda",
            profile_chatworkidtip: "ChatWork ID:",
            profile_displaynametip: "Nombre para mostrar:",
            profile_edit: "Editar perfiles",
            profile_error_invalid_cwid: "Por favor, introduce un ChatWork ID válido.",
            profile_error_no_displayname: "Por favor, introduce un nombre para mostrar.",
            profile_form_title: "Credenciales de Inicio de Sesión",
            profile_image_limit: "(Archivos JPEG, GIF y PNG hasta 700 Kb)",
            profile_setting_addresstip: "Dirección:",
            profile_setting_departmenttip: "Departamento / División:",
            profile_setting_ecstudio_account: "Editar la configuración de tu cuenta",
            profile_setting_edit_avatar: "Editar",
            profile_setting_edit_cover: "Editar foto de portada",
            profile_setting_emailtip: "Correo electrónico:",
            profile_setting_introductiontip: "Biografía:",
            profile_setting_note_change_orgname: "¿Quieres cambiar el nombre de tu organización? Haz clic aquí",
            profile_setting_orgnametip: "Nombre de la organización:",
            profile_setting_privacy_contact: "Tus Contactos Solamente",
            profile_setting_privacy_public: "Público",
            profile_setting_set_facebook_note: 'Haz clic <a href="https://www.facebook.com/username/" target="_blank">aquí</a> para saber más sobre la URL de vanidad de Facebook.',
            profile_setting_tel_extensiontip: "Número de ext.:",
            profile_setting_tel_mobiletip: "Móvil:",
            profile_setting_tel_organizationtip: "Teléfono (trabajo):",
            profile_setting_titletip: "Cargo:",
            profile_setting_urltip: "URL:",
            raise_error: "Error: mantén la calma, estamos trabajando en ello.",
            readonly: "Solo Lectura",
            read_more: "Más...",
            reply_badge_tooltip_label: "Ver el mensaje original",
            role: "Rol",
            room_permission_setting_allow_add_task: "Permitir la asignación de tareas",
            room_permission_setting_allow_see_member: "Mostrar miembros del chat de grupo",
            room_permission_setting_allow_send_message: "Permitir el envío de mensajes",
            room_permission_setting_allow_upload_file: "Permitir el envío de archivos",
            room_permission_setting_index: "Configuración del rol de miembro del chat de grupo",
            room_permission_setting_lead: "no afectará a los usuarios administradores",
            room_permission_setting_title: "Editar Permisos del Chat de Grupo",
            room_request_description: "Puede añadir este usuario a este chat de grupo aceptando la solicitud.",
            room_request_title: "Usuarios que solicitan a unirse a este chat de grupo",
            saving: "Guardando...",
            search_except_wordtip: "Palabras clave a excluir:",
            search_except_word_placeholder: "Escribe las exclusiones de la búsqueda",
            search_group_by_chat: "Ordenar por Chats",
            search_group_by_time: "Ordenar por último",
            search_group_by_user: "Ordenar por Usuarios",
            search_loading: "Buscando...",
            search_max_results: "(hasta %%max_results%% resultados)",
            search_message_fromtip: "Usuario:",
            search_message_termtip: "Fecha:",
            search_option: "Opciones",
            search_placeholder: "Escribe para buscar",
            search_resulttip: "Resultados de la Búsqueda:",
            search_result_bychat_closeall: "Cerrar Todos los Chats",
            search_result_bychat_openall: "Abrir Todos los Chats",
            search_result_not_found: "No hay resultados para %%keyword%%",
            search_result_unit: "",
            search_suggest: 'Buscar "%%keyword%%" en los mensajes',
            search_term_30: "Últimos 30 días",
            search_term_365: "Último año",
            search_term_7: "Últimos 7 días",
            search_term_90: "Últimos 90 días",
            search_term_all: "Todas",
            search_term_separator: "..",
            search_term_specify: "Especificar",
            search_title: "Búsqueda por Palabra Clave",
            selectall_full: "Seleccionar Todos",
            sending: "Enviando...",
            serviceadmin_do_upgrade: "Actualizar ChatWork",
            serviceadmin_upgrade: "Actualizar",
            serviceadmin_user_list_label: "Función del administrador",
            sound_type: "Seleccionar sonido:",
            sound_volume: "Volumen:",
            start_chatwork: "Comienza %%service_name%%",
            storage_activity_ratio_label: "Cuota de almacenamiento",
            storage_add_link: "Comprar almacenamiento adicional.",
            storage_cancel_add_storage_label: "Compra almacenamiento adicional.",
            storage_cancel_send_cancel: "No se ha podido enviar %%object%%.",
            storage_cancel_send_object: "No se puede enviar %%object%% porque el tamaño del archivo supera el límite de tu cuenta. <br /> Por favor, borra otros archivos, o",
            storage_cancel_send_object_suffix_add_storage: "compra almacenamiento adicional.",
            storage_cancel_send_object_suffix_tell_admin: "Ponte en contacto con el administrador de tu plan.",
            storage_cancel_send_object_suffix_upgrade: "actualiza tu plan.",
            storage_cancel_upgrade_label: "Actualiza tu plan.",
            storage_limit_notice_body: "No se pueden enviar archivos puesto que has alcanzado tu límite de almacenamiento.<br /> Por favor, elimina otros archivos, o",
            storage_limit_notice_footer: "Ten en cuenta que si llegas al límite y permaneces así una semana (hasta el %%date%%), ya no podrás enviar mensajes.",
            storage_limit_notice_message: "[Aviso] Has alcanzado el límite de almacenamiento.",
            storage_limit_notice_title: "Has llegado a tu límite de almacenamiento.",
            storage_limit_warning_body: "Tu función de mensajes ha sido suspendida puesto que ha pasado una semana tras haber alcanzado el límite de almacenamiento. Por favor, elimina algunos archivos o",
            storage_limit_warning_message: "[Importante] Ya no puedes enviar mensajes.",
            storage_limit_warning_title: "Tu función de mensajes ha sido suspendida.",
            storage_other_user: "Otros Usuarios",
            storage_show_all_user: "Lista de usuarios",
            storage_used: "Completo",
            task: "Tareas",
            task_added: "Tarea asignada.",
            task_add_button: "Añadir Tarea",
            task_click_detail: "Selecciona la tarea para más detalles",
            task_client: "De",
            task_confirm_delete: "¿De verdad quieres eliminar esta tarea?",
            task_deleted: "Tarea eliminada",
            task_delete_hint: "Eliminar tarea",
            task_done: "Tarea terminada.",
            task_edited: "Tarea editada.",
            task_edit_hint: "Editar tarea",
            task_edit_title: "Editar tarea",
            task_error_empty: "La tarea está vacía.",
            task_filter_all: "Todos",
            task_filter_exired: "Anteriores",
            task_filter_inweek: "Esta semana",
            task_filter_nolimit: "Sin fecha",
            task_filter_today: "Hoy",
            task_incharge: "Para",
            task_inchargetip: "Para:",
            task_incharge_placeholder: "Asignar a",
            task_input_placeholder: "Introduce la tarea aquí",
            task_limit: "Fecha fin",
            task_limittip: "Fecha fin:",
            task_limit_placeholder: "Fijar fecha fin tarea",
            task_loading: "Cargando tareas...",
            task_menu_client: "Tareas que he asignado",
            task_menu_close: "Tareas Completadas",
            task_menu_incharge: "Mis Tareas",
            task_menu_open: "Tareas Abiertas",
            task_nothing: "Sin Tareas",
            task_not_found: "Sin Tareas",
            task_num: "(más de %%num%%)",
            task_reverted: "Tarea reasignada.",
            task_tasktip: "Tarea:",
            text_copied: "Copiado",
            tutorial_addbutton: "Desde aquí puedes crear un nuevo chat de grupo o añadir nuevas personas al grupo.",
            tutorial_add_task: "Desde aquí puedes añadir nuevas tareas.",
            tutorial_globalsearch: "Desde aquí puedes buscar nombres de chat y el contenido del mensaje.",
            tutorial_send_message: "Desde aquí puedes enviar mensajes.",
            uncheckall: "Ninguno",
            url_download_app: "http://www.chatwork.com/es/download/",
            userguide_message: "Mensajes",
            userguide_message_about: "Mi Chat",
            userguide_message_about_content1: "<p>Mi Chat es un lugar que solo está disponible para ti. Puedes utilizarlo para notas personales, o asignarte tareas a ti mismo para recordarte asuntos.</p>",
            userguide_message_about_content2: "<p>Simplemente escribe tu mensaje, nota, o tareas y haz clic en Enviar. </p>",
            userguide_message_delete: "Eliminar mensajes",
            userguide_message_delete_content1: '<p>También puedes eliminar un mensaje que ya has enviado. <br/>Desde el mismo menú de mensajes, haz clic en "..." y luego "Eliminar".</p>',
            userguide_message_delete_content2: '<p>Se te pedirá que confirmes "¿Realmente quieres eliminar este mensaje?" Si no quieres continuar, por favor, haz clic en "OK"</p>',
            userguide_message_edit: "Editar mensajes",
            userguide_message_edit_content1_biwa: '<p>Pasa el cursor del ratón sobre el mensaje que ya has enviado y haz clic en "Editar".</p>',
            userguide_message_edit_content2_biwa: '<p>Cuando haces clic en "Editando" se visualiza en la pantalla de entrada; entonces, puedes editar tu mensaje.</p>',
            userguide_message_mention: "Mencionar a alguien dentro de un mensaje",
            userguide_message_mention_content1: '<p>Cuando quieras mencionar a alguien en un chat de grupo, utiliza la función "Para".</p>',
            userguide_message_mention_select: "Seleccionar la persona",
            userguide_message_mention_select_content1: "<p>Selecciona la persona que quieres mencionar. </p>",
            userguide_message_mention_send: "Enviar un mensaje",
            userguide_message_mention_send_content1: "<p>Cuando seleccionas el usuario de tu mensaje, la etiqueta PARA se inserta en la parte superior del cuadro de mensaje. Puedes añadir tu mensaje debajo de esta etiqueta y enviar el mensaje.</p>",
            userguide_message_mention_send_content2: "<p>Esto te llevará a la pantalla de mensaje enviado.</p>",
            userguide_message_mention_send_content3: '<p>Cuando eres mencionado por otra persona, una insignia de icono verde "PARA" se mostrará en la lista de chats de grupo.</p>',
            userguide_message_quote: "Citar mensajes",
            userguide_message_quote_content1_biwa: "<p>A medida que aumenta el número de personas de tu grupo, se hace más difícil saber con quién estás hablando, así que puedes citar su mensaje para llevar a cabo conversaciones sin problemas.</p><h3>Cómo visualizar el menú de mensajes</h3><p>Pasa el cursor del ratón sobre el mensaje de otra persona (coloca el cursor sobre el texto)<br />para mostrar la Respuesta, Cita, Tarea, Enlace y otros botones.</p>",
            userguide_message_quote_content2_biwa: '<p>Haz clic en "Citar" para insertar etiquetas y el mensaje citado en el cuadro de texto del mensaje.</p>',
            userguide_message_quote_content3_biwa: "<p>A continuación, puedes añadir tu propio mensaje al mensaje citado antes de enviarlo. Esto deja claro cuál es el mensaje al que estás respondiendo.</p>",
            userguide_profile: "Configuración del Perfil",
            userguide_profile_about: "Acerca de la Configuración del Perfil",
            userguide_profile_about_content_biwa: "<p>Puedes cambiar la fotografía del Perfil, la foto de la portada, los nombres de las organizaciones, la información de contacto, la biografía, etc. en la Configuración del Perfil.</p><p>Esto ayudará a otras personas a encontrar tu perfil más fácilmente.</p>",
            userguide_profile_chatworkid: "Configuración de ChatWork ID",
            userguide_profile_chatworkid_content1: "<p>Al reclamar tu ChatWork ID, puedes aprovechar tu URL de vanidad personalizada para que otros puedan encontrarte y conectarse contigo más fácilmente.</p><p>Por ejemplo,) %%chatwork_home_path%%/[Tu ChatWork ID]</p>",
            userguide_profile_chatworkid_content2: '<p>Simplemente escribe tu ChatWork ID preferido en el campo de texto que aparece a continuación, y haz clic en "Guardar".</p>',
            userguide_profile_open_setting: "Tu página de perfil",
            userguide_profile_open_setting_content: "<p>Puedes abrir Configuración del Perfil haciendo clic en tu icono en la esquina superior derecha.</p>",
            userguide_profile_open_setting_content_biwa: '<p>Haz clic en "Editar perfiles" para abrir la pantalla de edición.</p>',
            userguide_profile_upload_image: "Subir foto del perfil",
            userguide_profile_upload_image_content_biwa: '<p>Haz clic en "Editar" en tu información de perfil. </p>',
            userguide_profile_upload_image_content_biwa2: '<p>Selecciona "Subir", elige la imagen que quieres cargar y haz clic en "Guardar" para enviar una imagen almacenada en tu PC.</p>',
            userguide_task: "Tareas",
            userguide_task_about: "¿Qué son las tareas?",
            userguide_task_about_content: "<p>La función de tareas te permite crear una lista de tareas pendientes, e incluso puedes asignártelas a ti.mismo.</p><p>Consejo rápido: continúa y asígnate algo a ti mismo en Mi Chat, para que puedas tener mejor comprensión de cómo usar esta función.</p>",
            userguide_task_add: "Asignar tareas",
            userguide_task_add_content1_biwa: '<p>Introduce los detalles de una tarea en el cuadro de texto etiquetado con "Introduce la tarea aquí" en el lado derecho de la pantalla del chat. Añade a la persona la tarea asignada y la fecha de vencimiento, y haz clic en el botón "Añadir Tarea".</p>',
            userguide_task_add_content2_biwa: "<p>Si la tarea se muestra en la línea de tiempo, entonces la tarea ha sido añadida con éxito.</p>",
            userguide_task_browse: "Recorrer las tareas",
            userguide_task_browse_content1: "<p>En la esquina inferior derecha, puedes ver la lista de las tareas que tienes asignadas.</p>",
            userguide_task_browse_content2_biwa: "<p>La lista de chats muestra el número de tareas que tienes asignadas a la derecha del icono de la tarea.</p>",
            userguide_task_complete: "Completar tareas",
            userguide_task_complete_content1_biwa: '<p>Una vez que se ha terminado una tarea, haz clic en el botón "Hecho" en la parte superior izquierda.</p>',
            userguide_task_complete_content2: '<p>El mensaje "Tarea terminada." será enviado automáticamente al miembro del chat de grupo.</p>',
            userguide_task_complete_content3: '<p>Este es el final del contenido de "Consejos de %%service_name%%".</p>',
            userguide_title: "Consejos de %%service_name%%",
            userguide_welcome_head: "Acerca de %%service_name%%",
            userguide_welcome_service_desc_chatwork: "%%service_name%% es una herramienta de chat de negocios basada en la nube que te permite tener chats de grupo, llamadas de vídeo y administrar tareas y archivos.",
            userguide_welcome_service_desc_kddi: "KDDI ChatWork es una herramienta de comunicación social que te permite tener chats de grupo, llamadas de vídeo y administrar las tareas y archivos.",
            username: "Nombre de Usuario",
            welcome_title: "¡Bienvenido a %%service_name%%!",
            word_separator: ",",
            _button_delete_with_agreement: "Eliminar (he confirmado)",
            _chatroom_confirm_delete_alert: '¿De verdad quieres eliminar la "%%room_name%%"?',
            _chatroom_confirm_delete_content: "Por favor, comprueba lo siguiente antes de eliminar los chats de grupo.",
            _chatroom_confirm_delete_note_1: "Esto no solo lo eliminará de tu lista, sino que será aplicado a todos los demás participantes del chat de grupo.",
            _chatroom_confirm_delete_note_2: "Se borrarán todos los mensajes, tareas y archivos.",
            _chatroom_confirm_delete_note_3: "Nunca se restaurarán todos los datos eliminados.",
            _chatwork_apitoken_caution_1: 'La documentación de la API de ChatWork está disponible en <a href="http://link.chat-work.com/api_doc" target="_blank">aquí</a>.',
            _chatwork_apitoken_caution_2: "Por favor, no compartas el token de tu API con terceros.",
            _chatwork_apitoken_caution_3: "Podemos prohibir el uso de la API si hay un volumen inusualmente alto de solicitudes y una carga excesiva en nuestros servidores.",
            _chatwork_apitoken_caution_4: 'Al acceder o utilizar nuestras API, aceptas los <a href="http://www.chatwork.com/ja/terms/api.html" target="_blank"> Términos de Uso de la API de ChatWork (en japonés) </a>.',
            _chatwork_apitoken_confirm_regenerate: "Tu token de la API actual será invalidado si vuelves a generar el token. ¿Quieres continuar?",
            _chatwork_apitoken_copy_btn: "Copiar",
            _chatwork_apitoken_display_btn: "Mostrar",
            _chatwork_apitoken_empty_password: "Por favor, introduce tu contraseña.",
            _chatwork_apitoken_invalid_password: "Contraseña no válida. Por favor, inténtalo de nuevo.",
            _chatwork_apitoken_password_caption: "Por favor, introduce tu contraseña de ChatWork para visualizar y generar el token de tu API.",
            _chatwork_apitoken_password_placeholder: "Introducir contraseña",
            _chatwork_apitoken_regenerate_btn: "Regenerar",
            _chatwork_apitoken_token_label: "API:",
            _chatwork_apitoken_token_placeholder: "API",
            _chatwork_file_upload_eset_link: "",
            _chatwork_path_help_file_upload_error: ""
        }
    }, {}],
    328: [function(require, module, exports) {
        module.exports = {
            accepting: "承認中...",
            adding: "追加中...",
            add_contact_confirm_body_with_account_names: "%%account_names%%にコンタクト承認依頼を送信しますか？",
            add_contact_confirm_dialog_title: "コンタクト承認依頼",
            add_contact_confirm_send_mail_at_same: "※ メールも同時に送信されます。",
            admin: "管理者",
            announce_button_close: "この告知を非表示にする",
            assistant_lp_url: "http://lp.chatwork.com/ja/assistant/?adcode=fspfnononcwwolpjp0001",
            available: "使用できます",
            button_accept: "承認",
            button_accept_long: "承認する",
            button_add: "追加",
            button_add_contact_long: "コンタクトに追加する",
            button_cancel: "キャンセル",
            button_change_long: "変更する",
            button_close: "閉じる",
            button_complete: "完了",
            button_create: "作成",
            button_create_long: "作成する",
            button_delete: "削除",
            button_delete_long: "削除する",
            button_edit: "編集",
            button_incomplete: "未完了",
            button_next: "次へ",
            button_ok: "OK",
            button_reject: "拒否",
            button_reject_long: "拒否する",
            button_return: "改行",
            button_save: "保存",
            button_save_long: "保存する",
            button_search: "検索",
            button_send: "送信",
            canceling: "キャンセル中...",
            chat: "チャット",
            chatroom_added: "」を追加しました。",
            chatroom_btn_add_member_tooltip: "メンバーを追加",
            chatroom_changed: "」に変更しました。",
            chatroom_chatname_is: "チャット名を「",
            chatroom_chat_edited: "チャット情報を変更しました。",
            chatroom_chat_joined: "チャットに参加しました。",
            chatroom_confirm_leave: "本当に「%%room_name%%」から退席しますか？\n退席するとこのチャットの内容を閲覧できなくなります。\n再度参加したい場合は参加メンバーに招待してもらう必要があります。\n(※このチャットにある自分が担当者のタスク、および送信したファイルは削除されます)",
            chatroom_contact_added: "コンタクトを追加しました。",
            chatroom_contact_added_by_facebook: "Facebookの友達追加設定によりコンタクトが追加されました。",
            chatroom_createchat_same_members: "同じメンバーでチャットを新規作成",
            chatroom_createchat_same_members_confirm: "このチャットのメンバーにはコンタクトではないメンバーが含まれています。\nコンタクトになっているメンバーのみでチャットを新規作成しますか？",
            chatroom_create_title: "グループチャットを新規作成",
            chatroom_delete: "グループチャットを削除する",
            chatroom_deleted: "」を削除しました。",
            chatroom_desc: "概要",
            chatroom_description_is: "概要を「",
            chatroom_desctip: "概要：",
            chatroom_desc_explain: "このチャットの説明やメモ、関連するリンクなどを記入することができます",
            chatroom_desc_none: "概要はありません",
            chatroom_disable_external: "は組織外ユーザーとのやりとりが禁止されているため追加できませんでした。",
            chatroom_edit_desc_title: "概要の編集",
            chatroom_error_cant_add: "チャットを作成できませんでした",
            chatroom_error_noadmin: "1人以上の管理者がいる必要があります",
            chatroom_error_noself: "自分が入っていないチャットを作成することはできません",
            chatroom_error_not_found: "そのチャットは存在しません",
            chatroom_error_no_member: "自分がメンバーに入っていないチャットのため、表示できません",
            chatroom_error_no_name: "グループチャット名が入力されていません",
            chatroom_error_planlimit: "%%plan_name%%では%%limit_num%%個までしかグループチャットを作成することができません。<br>新しくグループチャットを作成する場合はアップグレードをご検討ください。",
            chatroom_groupchat_created: "新しくグループチャットを作成しました。",
            chatroom_icon_type_preset: "アイコンを選択する",
            chatroom_icon_type_upload: "アップロードする",
            chatroom_icon_updated: "グループチャットのアイコンを変更しました。",
            chatroom_info_edit: "チャット情報の編集",
            chatroom_invitation_link_setting: "招待リンクの設定",
            chatroom_leave: "グループチャットから退席する",
            chatroom_leaved: "」が退席しました。",
            chatroom_member_add_contact: "コンタクトに一括追加",
            chatroom_member_detail: "メンバー詳細",
            chatroom_member_is: "メンバー「",
            chatroom_member_long: "このチャットのメンバー",
            chatroom_member_nocontact: "コンタクト未追加",
            chatroom_member_requests_notice: "参加未承認のメンバーがいます (%%request_num%%件)",
            chatroom_member_rest_number: "...他%%rest_number%%人",
            chatroom_member_role_admin_desc: "グループチャット名、概要、メンバーの変更ができます。",
            chatroom_member_role_member_desc: "グループチャット名、概要、メンバーの変更はできません。",
            chatroom_member_role_readonly_desc: "閲覧のみできます。メッセージの送信はできません。",
            chatroom_mychat_created: "マイチャットを作成しました。",
            chatroom_nametip: "チャット名：",
            chatroom_not_only_internal: "組織外ユーザーが含まれているチャット",
            chatroom_over_groupchatnum: "はグループチャット制限数を越えているため追加できませんでした。",
            chatroom_priv_changed: "」の権限を変更しました。",
            chatroom_resigned_priv_change: "」がチャットワークを解約したため、このチャットをダイレクトチャットからグループチャットへと変更しました。",
            chatroom_resigned_priv_change_all: "このチャットの管理者が存在しないため、メンバー全員の権限を管理者へと変更しました。",
            chatroom_room_permission_setting: "グループチャットの権限設定",
            chatroom_search_member: "メンバー名を検索",
            chatroom_set: "」に設定しました。",
            chatroom_setting: "チャットの設定",
            chatroom_show_limit_member_num: "(最大%%num%%人表示)",
            chatroom_tasklist_mytaskonly: "自分のタスクのみ表示",
            chatsend_button_delete_message_only: "通知メッセージのみ削除",
            chatsend_button_delete_with_file: "ファイルも一緒に削除",
            chatsend_button_delete_with_task: "タスクも一緒に削除",
            chatsend_chat_explain: "ここにメッセージ内容を入力",
            chatsend_confirm_delete: "本当にこのメッセージを削除しますか？",
            chatsend_confirm_delete_with_file: "通知メッセージと一緒にファイルも削除しますか？",
            chatsend_confirm_delete_with_task: "通知メッセージと一緒にタスクも削除しますか？",
            chatsend_delete_filetip: "削除対象のファイル：",
            chatsend_delete_tasktip: "削除対象のタスク：",
            chatsend_emoticonalt: "エモーティコン：気持ちを表現できます",
            chatsend_enter_action_explain: "Enterキーでメッセージを送信",
            chatsend_enter_action_explain_enter: "\n(Shift + Enterキーで改行)",
            chatsend_enter_action_explain_enter_send: "\n(Shift + Enterキーで送信)",
            chatsend_error_no_exist_for_edit: "編集しようとしたメッセージが存在しません",
            chatsend_error_no_incharge: "担当者を指定してください",
            chatsend_error_send: "ネットワークが不安定でチャットを送信できませんでした。再度送信ボタンを押して送信してください。",
            chatsend_error_send_task: "ネットワークが不安定でタスクを送信できませんでした。再度送信ボタンを押して送信してください。",
            chatsend_expand_area: "ウインドウを拡大表示",
            chatsend_filealt: "ファイルを送信できます",
            chatsend_nickname_setting: "ニックネームの設定",
            chatsend_not_allow_send_messages: "このチャットでは権限がないため発言することはできません。",
            chatsend_quote: "引用",
            chatsend_reply: "返信",
            chatsend_shift_and_command_hint: "Shiftで連続選択、⌘ですぐ送信",
            chatsend_shift_and_ctrl_hint: "Shiftで連続選択、Ctrlですぐ送信",
            chatsend_shift_multiselect: "Shiftで連続選択",
            chatsend_toalt: "To：相手に呼びかけることができます",
            chatsetting_faviconstat: "未読チャット数をブラウザアイコンに表示する",
            chatsetting_hide_message_box_tags: "メッセージ入力欄にタグを表示しない",
            chatsetting_hide_message_box_tags_change_confirm: "メッセージ入力欄のタグ表示を変更しました。ブラウザを再読み込みすると反映されます。\nいますぐ再読み込みしますか？",
            chatsetting_notifier: "デスクトップ通知",
            chatsetting_notifier_duration: "デスクトップ通知の表示時間",
            chatsetting_notifier_duration_10sec: "10秒",
            chatsetting_notifier_duration_20sec: "20秒",
            chatsetting_notifier_duration_5sec: "5秒",
            chatsetting_notifier_message: "メッセージ内容をデスクトップ通知に表示する",
            chatsetting_notifier_onlyto: "Toがあった時のみ通知する",
            chatsetting_notifier_show: "デスクトップ通知を表示する",
            chatsetting_popup_sound: "新しいメッセージが届いたらサウンドを鳴らす",
            chatsetting_private_nickname: "組織外ユーザーが含まれているチャットではニックネームを使用しない",
            chatsetting_shorten_url: "長いURLを省略して表示する",
            chatsetting_show_delmessage: "メッセージが削除されたログを表示する",
            chatsetting_show_external: "組織外ユーザーが含まれているチャットにアイコンを表示",
            chatsetting_tab_apitoken: "API発行",
            chatsetting_tab_display: "表示設定",
            chatsetting_tab_language: "言語設定",
            chatsetting_tab_login: "ログイン設定",
            chatsetting_tab_notification: "通知設定",
            chatsetting_test_sound: "再生テスト",
            chatsetting_unread_mail: "一定時間見ていない未読チャットをメールで通知する",
            chatsetting_unread_mail_label: "メール通知",
            chatsetting_unread_mail_term_1: "1時間ごと",
            chatsetting_unread_mail_term_12: "12時間ごと",
            chatsetting_unread_mail_term_2: "2時間ごと",
            chatsetting_unread_mail_term_24: "24時間ごと",
            chatsetting_unread_mail_term_3: "3時間ごと",
            chatsetting_unread_mail_term_6: "6時間ごと",
            chatsetting_unread_mail_term_none: "通知しない",
            chatwork_do_update: "最新版へアップデート",
            chatwork_help_page_path: "http://help.chatwork.com/hc/ja",
            chatwork_service_name: "チャットワーク",
            chatwork_update: "チャットワークがアップデートされました。アップデートを反映させるにはブラウザを再読み込み(更新)してください",
            chat_action_copy: "コピー",
            chat_action_copy_desc: "テキストをコピーする",
            chat_action_copy_title: "メッセージ内容",
            chat_action_delete: "削除",
            chat_action_delete_desc: "このメッセージを削除する",
            chat_action_edit: "編集",
            chat_action_edit_desc: "このメッセージを編集する",
            chat_action_link: "リンク",
            chat_action_link_desc: "このメッセージへのリンクを挿入する",
            chat_action_move: "このメッセージへ移動",
            chat_action_move_desc: "このメッセージへ移動",
            chat_action_quote: "引用",
            chat_action_quote_desc: "このメッセージを引用する",
            chat_action_reply: "返信",
            chat_action_reply_desc: "このメッセージに返信する",
            chat_action_task: "タスク",
            chat_action_task_desc: "このメッセージをタスク化する",
            chat_action_unread: "未読",
            chat_action_unread_desc: "このメッセージまでを未読にする",
            chat_category_allchat: "すべてのチャット",
            chat_category_chatselecttip: "チャットを選択：",
            chat_category_confirm_delete: "本当にこのカテゴリ「%%category_name%%」を削除しますか？",
            chat_category_create: "カテゴリを新規作成",
            chat_category_edit: "カテゴリの編集",
            chat_category_error_no_chats: "チャットが選択されていません",
            chat_category_error_no_name: "カテゴリ名が入力されていません",
            chat_category_mytaskchat: "マイタスクがあるチャット",
            chat_category_nametip: "カテゴリ名：",
            chat_category_select: "カテゴリを選択",
            chat_category_selected_chat_num: "選択中のチャット数：",
            chat_deleted: "メッセージは削除されました",
            chat_delete_label: "削除",
            chat_editing: "メッセージを編集中です",
            chat_editing_label_on_message: "メッセージ編集中",
            chat_edit_label: "編集",
            chat_error_not_found: "そのメッセージは存在しません",
            chat_filter_readonly: "未読があるチャットのみ表示",
            chat_filter_readonly_empty: "未読のチャットはありません",
            chat_filter_taskonly: "自分のタスクがあるチャットのみ表示",
            chat_filter_taskonly_empty: "自分のタスクがあるチャットはありません",
            chat_filter_toonly: "自分宛ての未読メッセージがあるチャットのみ表示",
            chat_filter_toonly_empty: "自分宛の未読メッセージがあるチャットはありません",
            chat_loading: "メッセージを読み込んでいます...",
            chat_menu_chatlist: "チャット一覧",
            chat_partial_quote_message: "メッセージに引用",
            chat_partial_quote_task: "タスクに引用",
            chat_post_label: "投稿",
            chat_rest_roomtip: "残りのチャット数:",
            chat_search: "チャット名、メッセージ内容を検索",
            chat_server_error_try_again: "サーバーとの通信に失敗しました。\n時間をおいて再度ご送信ください。",
            chat_show_more: "さらに表示",
            cheatsheet_name_notation_code: "エモーティコンの変換を無効にする",
            cheatsheet_name_notation_hr: "罫線",
            cheatsheet_name_notation_info: "囲み枠",
            cheatsheet_name_notation_mix_tag: "複数タグの組み合わせ",
            cheatsheet_notation_title: "メッセージ装飾用記法（タグ）一覧",
            cheatsheet_or: "または、",
            cheatsheet_short_cut_title: "キーボードショートカット一覧",
            cheatsheet_supplement_text_key_j: "※「 i（アイ）」でなく「 j（ジェイ）」キーです",
            cheatsheet_text_key_c: "コンタクトを追加",
            cheatsheet_text_key_command_arrow_left: "左カラムを閉じる、または開く",
            cheatsheet_text_key_command_arrow_right: "右カラムを閉じる、または開く",
            cheatsheet_text_key_enter: "現在選択されているチャットを開く",
            cheatsheet_text_key_esc: "メッセージ入力欄に入っているカーソルをキャンセル",
            cheatsheet_text_key_f: "チャット名検索にカーソル移動",
            cheatsheet_text_key_g: "グループチャットを作成",
            cheatsheet_text_key_j: "一つ下のチャットを選択",
            cheatsheet_text_key_k: "一つ上のチャットを選択",
            cheatsheet_text_key_m: "メッセージ入力欄にカーソル移動",
            cheatsheet_text_key_question: "ショートカット一覧",
            cheatsheet_text_key_t: "タスク入力欄にカーソル移動",
            cheatsheet_text_key_tab: "送信ボタンにフォーカス",
            cheatsheet_text_notation_content: "内容",
            cheatsheet_text_notation_index: "見出し",
            cheatsheet_text_notation_new_line: "（+改行）",
            cheatsheet_text_notation_on_message_area: "※メッセージ入力欄に",
            cheatsheet_text_notation_replace_code_tag: "と入力すると、&#96;&#96;&#96;が[code]タグに変換されます。",
            checkall: "すべて",
            checkall_full: "すべて選択",
            commercial_announce_read_error_message: "サーバーエラーが発生したため、お知らせを閉じるのに失敗しました。しばらくしてから再度お試しください。",
            common_role_select_list_default: "権限一括設定",
            common_role_select_list_default_tooltip: "メンバーの権限を一括設定",
            concierge_lp_url: "http://lp.chatwork.com/ja/concierge.html",
            connection_error_invalid_user: "現在別のユーザーでログインしています",
            connection_error_logout: "現在ログアウトされています",
            connection_error_offline: "現在オフラインになっています",
            contactpanel_add_contact: "コンタクトに追加",
            contact_add: "コンタクトを追加",
            contact_add_all_hint: "自分と同じグループチャットにいる、コンタクトに追加していないメンバーです",
            contact_add_multiple_mailtip: "メールアドレス：（改行区切りで複数入力可）",
            contact_click_detail: "コンタクトをクリックして詳細表示",
            contact_confirm_delete: "本当に「%%name%%」をコンタクトから削除しますか？\nダイレクトチャットも同時に削除されます。※元に戻せません！",
            contact_confirm_reject_request: "本当に「%%name%%」からの承認依頼を拒否しますか？",
            contact_connect_from_ads_complete: "担当よりチャットにてご連絡させていただきますので、しばらくお待ちください",
            contact_connect_from_ads_confirm: "お問い合わせ窓口にコンタクト承認依頼を送信しますか？",
            contact_cwid_error_already: "チャットワークID:%%chatwork_id%% はすでにコンタクト追加済みです",
            contact_cwid_error_myself: "自分自身をコンタクトに追加することはできません",
            contact_cwid_error_noexist: "チャットワークID:%%chatwork_id%% は存在しません",
            contact_delete: "コンタクトから削除",
            contact_doing_invite: "招待メールを送信しています...",
            contact_done_invite: "招待メールを送信しました",
            contact_do_invite: "招待メールを送信",
            contact_error_cantadd: "コンタクトを追加できませんでした",
            contact_error_is_disable_external: "は\n組織外ユーザーとのやりとりが禁止されているため追加することができません",
            contact_error_is_not_mailaddress: "は\nメールアドレスではありません",
            contact_error_is_over_contactnum: "は\n利用しているプランのコンタクト数制限を越えているため追加することができません。",
            contact_error_planlimit: "%%plan_name%%では%%limit_num%%人までしかコンタクトを追加することができません。<br>新しくコンタクトを追加する場合はアップグレードをご検討ください。",
            contact_error_search_user_not_found: "該当ユーザーが見つかりませんでした",
            contact_invite: "招待メールの送信",
            contact_invite_mail_add_email_address_to_invite: "招待するメールアドレスを追加",
            contact_invite_mail_add_individually: "個別追加",
            contact_invite_mail_already_in_your_contacts: "コンタクトに追加済みのため送信できませんでした",
            contact_invite_mail_already_received_request: "すでにコンタクト承認依頼が届いています",
            contact_invite_mail_already_send_request: "既に招待済みのため送信できませんでした",
            contact_invite_mail_bulk_add: "一括追加",
            contact_invite_mail_enter_message: "メッセージを入力",
            contact_invite_mail_enter_your_email_address: "メールアドレスを入力",
            contact_invite_mail_failed_sent_following_reasons: "下記の理由によりメールが送信されませんでした",
            contact_invite_mail_invalid_email_address: "無効なメールアドレスのため送信できませんでした",
            contact_invite_mail_invitation_sent: "送信したメールアドレス",
            contact_invite_mail_invitation_was_sent: "招待メールを送信しました",
            contact_invite_mail_invite_more: "他の人を招待する",
            contact_invite_mail_maximum_contact_requests: "コンタクト承認依頼の上限数に達したため送信できませんでした",
            contact_invite_mail_message_optional: "メッセージ（任意）",
            contact_invite_mail_move_to_direct_chat: "ダイレクトチャットへ移動",
            contact_invite_mail_move_to_incoming_requests: "未承認一覧へ移動",
            contact_invite_mail_move_to_your_sent_requests: "承認依頼中一覧へ移動",
            contact_invite_mail_restricted_to_outside_orgaization: "組織外ユーザーとのやりとりが禁止されているため送信されませんでした",
            contact_invite_mail_send: "招待メールを送信",
            contact_invite_mail_send_your_account: "ご利用中のメールアドレスのため送信できませんでした",
            contact_invite_mail_type_email_addresses: "招待するメールアドレスを入力してください",
            contact_is_completed: "をしました",
            contact_mail_not_found: "指定されたメールアドレスを利用しているユーザーは存在しません。<br />チャットワークへの登録を案内する招待メールをこのメールアドレスに送信しますか？",
            contact_menu_invite_mail: "メールで招待",
            contact_menu_list: "コンタクト一覧",
            contact_menu_myrequest: "承認依頼中",
            contact_menu_norequest: "未追加",
            contact_menu_request: "未承認",
            contact_menu_user_search: "ユーザーを検索",
            contact_multi_adding: "コンタクトに追加しています...",
            contact_multi_add_confirm: "%%num%%人のユーザーをコンタクトに追加します。本当に追加しますか？",
            contact_multi_delete_confirm: "%%num%%人のユーザーをコンタクトから削除します。\nコンタクトから削除するとダイレクトチャットも同時に削除され、元に戻すことはできません。\n本当に削除しますか？",
            contact_myrequest: "コンタクト承認依頼",
            contact_request_cancel: "承認依頼をキャンセル",
            contact_rest_number: "...他%%rest_number%%件",
            contact_search: "コンタクト名を検索",
            contact_search_introduction: "コンタクトに追加したいユーザーを検索しましょう",
            contact_search_not_found: "現在コンタクトになっているユーザーはいません",
            contact_search_placeholder: "名前、チャットワークID、メールアドレスを入力",
            copy_to_clipboard: "クリップボードへコピー",
            dateformat: "Y年m月d日",
            datepicker_alt_text: "日付を選択",
            deleted_user: "解約済ユーザー",
            deleting: "削除中...",
            desktopalert_no_support: "このブラウザではデスクトップ通知をサポートしていません。\n(Google Chromeでサポートされています)",
            directchat: "ダイレクトチャット",
            emoticon_beer: "ビール",
            emoticon_blush: "恥ずかしい",
            emoticon_bow: "おじぎ",
            emoticon_cake: "ケーキ",
            emoticon_clap: "拍手",
            emoticon_coffee: "コーヒー",
            emoticon_cracker: "クラッカー",
            emoticon_dance: "ダンス",
            emoticon_devil: "悪魔",
            emoticon_ec14: "EC14",
            emoticon_flower: "花",
            emoticon_gogo: "いけいけ！",
            emoticon_grin: "ニヤッ",
            emoticon_handshake: "握手",
            emoticon_heart: "ハート",
            emoticon_ikemen: "イケメン",
            emoticon_kiss: "チュ！",
            emoticon_komanechi: "コマネチ",
            emoticon_love: "恋してます",
            emoticon_lucky: "やったね",
            emoticon_more_smile: "もっとスマイル",
            emoticon_mumu: "むむ",
            emoticon_muscle: "筋肉モリモリ",
            emoticon_ninmari: "ニンマリ",
            emoticon_nod: "うんうん",
            emoticon_otaku: "オタク",
            emoticon_puke: "ゲーッ",
            emoticon_roger: "了解！",
            emoticon_sad: "悲しい",
            emoticon_shake: "いやいや",
            emoticon_smile: "笑顔",
            emoticon_snooze: "眠い",
            emoticon_star: "星",
            emoticon_surprise: "びっくり",
            emoticon_sweat: "汗",
            emoticon_talk: "話す",
            emoticon_tears: "ウェ～ん",
            emoticon_tongueout: "べー",
            emoticon_whew: "やれやれ",
            emoticon_wink: "ウィンク",
            emoticon_wonder: "何なに",
            emoticon_wry_smile: "苦笑い",
            emoticon_yawn: "あくび",
            emoticon_yes: "はい",
            error_already_used: "すでに使用されています",
            error_cant_login_ip: "このネットワーク(IPアドレス)からのアクセスは、管理者設定により許可されていません。許可されているネットワークから接続してください。",
            error_illegal_filename: 'ファイル名には次の文字は使えません\n  / : * ? " < > |',
            error_invalidchar: "半角の英数字と - _ のみ使用できます",
            error_maxlength: "%%length%%文字以内で入力してください",
            error_no_login_action: "正常にログインされていない為操作を実行できません",
            error_no_select: "チャットが選択されていません",
            error_upload: "アップロードできませんでした",
            error_upload_disable_send_file: "ファイル送信が管理者により禁止されているため、アップロードできませんでした",
            error_upload_executable: "セキュリティ上の理由により、実行形式のファイルはアップロードできません",
            error_upload_filesize: "ファイルサイズが大きすぎるため、ファイルをアップロードできませんでした",
            error_upload_filetype: "サポートされていない形式のため、ファイルをアップロードできませんでした",
            error_upload_image: "画像形式のファイルを指定してください (JPEG,GIF,PNGが使えます)",
            error_upload_over_max_filesize: "ファイルサイズが %%max_size%%より大きいファイルはアップロードできません。\n（アップロードしようとしたファイルサイズ：%%size%%）",
            fbconnect_blog_url: "http://blog-ja.chatwork.com/",
            feedback_desc_noreply: "※個別の回答はいたしかねますので、あらかじめご了承ください",
            feedback_thankyou: '送信ありがとうございました。<br /><br />送信いただいた貴重なご意見は、今後の改善の参考とさせていただきます。<br />今後ともどうぞよろしくお願いいたします。<img class="ui_emoticon" alt="(bow)" title="おじぎ (bow)" src="./image/emoticon/emo_bow.gif">',
            file: "ファイル",
            file_click_detail: "ファイルをクリックして詳細表示",
            file_confirm_delete: "本当にこのファイル「%%file_name%%」を削除しますか？",
            file_delete_error_try_again: "ファイルの削除に失敗しました。\n時間をおいて再度お試しください。",
            file_delete_hint: "ファイルを削除する",
            file_download_hint: "ダウンロードする",
            file_drop_area: "<span>このエリアにドロップしてください</span><br />（複数ファイル送信可能）",
            file_edited: "ファイル名を編集しました。",
            file_edit_title: "ファイル名の編集",
            file_error_empty: "ファイル名が入力されていません",
            file_loading: "ファイルを読み込んでいます...",
            file_multi_confirm_delete: "%%num%%個のファイルが選択されています。本当に削除しますか？",
            file_name: "ファイル名:",
            file_nothing: "現在ファイルはありません",
            file_not_found: "ファイルが存在しません",
            file_preview_download: "画像をダウンロード",
            file_preview_image_cant_read: "プレビューを読み込みませんでした",
            file_preview_image_hint: "このファイルをプレビュー表示する",
            file_preview_open_newwindow: "画像を新しいウィンドウで表示",
            file_rename_hint: "ファイル名を編集する",
            file_search: "ファイル名を検索",
            file_search_not_found: "該当ファイルは見つかりませんでした",
            file_size: "サイズ",
            file_uploaded: "ファイルをアップロードしました。",
            file_upload_by: "アップロード者",
            file_upload_datetime: "アップロード日",
            groupchat: "グループチャット",
            imagedrop_tooltip_change_filename: "ファイル名を変更",
            imagedrop_tooltip_title: "クリップボードのイメージを貼り付け",
            invitation_link: "招待リンク",
            invitation_link_advanced_setting_index: "詳細設定",
            invitation_link_advanced_setting_lead: "グループチャットの内容を参加するユーザーに伝えるために、「ヘッダー画像」と「説明文」を設定できます。",
            invitation_link_code_copy: "コピー",
            invitation_link_help_tool_tip: "アカウントを持っていない、コンタクトがつながっていない相手でも、簡単にグループチャットに招待できます",
            invitation_link_setting_delete_current_header: "現在のヘッダー画像を削除する",
            invitation_link_setting_error_invalid_link_name: "使用できないリンクが指定されています",
            invitation_link_setting_header_limit: "（最大 700KBまで。JPEG,GIF,PNGが使えます。横幅最大600pxまで）",
            invitation_link_setting_join_accept: "参加には管理者の承認が必要",
            invitation_link_setting_status_disable: "無効",
            invitation_link_setting_title: "招待リンクの設定",
            invitation_link_set_groupchat_description_index: "説明文",
            invitation_link_set_header_image_index: "ヘッダー画像",
            invitelink: "グループチャットに招待する",
            joinpublicchat_need_accept: "※このグループチャットへの参加には管理者の承認が必要です",
            joinpublicchat_request_sent: "グループチャットの管理者へ参加依頼を送りました。管理者が承認すると、そのグループチャットへ参加できます。",
            joinpublicchat_title: "グループチャットへの参加",
            join_groupchat_btn_join_groupchat_label: "このグループチャットへ参加する",
            join_groupchat_btn_send_join_request_label: "参加権限をリクエスト",
            join_groupchat_invite_message: "グループチャットへの招待が届いています。参加しますか？",
            join_groupchat_my_disable_external: "組織外ユーザーとのやりとりが禁止されています",
            join_groupchat_not_found: "チャットが存在しないか招待リンクが無効です",
            join_groupchat_other_disable_external: "チャットに所属する誰かが組織外ユーザーとのやりとりを禁止されています",
            jump_to_addpoint: "追加時点へ移動",
            jump_to_addpoint_not_found: "追加時点のメッセージがありません",
            jump_to_message: "このメッセージへ移動",
            kddi_manual_name: "サービスガイド",
            kddi_manual_path: "http://info-ja.kcw.kddi.ne.jp",
            lang_dateformattip: "日付の書式:",
            lang_typetip: "使用する言語:",
            live_call_chat: "%%chat_name%%のChatWork Liveに招待されています",
            live_call_direct: "%%name%%さんからChatWork Liveに招待されています",
            live_invited: "招待が届いています",
            live_join: "ChatWork Liveを開始",
            live_member_add_introduction: "ChatWork Liveに追加したいメンバーを選択してください",
            live_member_not_found: "ChatWork Live可能なメンバーはいません",
            live_start: "ChatWork Liveを開始しました",
            live_video: "ビデオ通話",
            live_voice: "音声通話",
            loading: "読み込み中...",
            login_password_forget_link: "パスワードを忘れた方の再発行はこちら",
            mailaddress: "メールアドレス",
            member: "メンバー",
            member_addition_dialog_title: "メンバーの追加",
            member_addition_edit_member_label: "メンバーの編集",
            member_detail_edit_member_label: "メンバーの編集",
            member_edit_add_member_label: "メンバーの追加",
            member_edit_dialog_title: "メンバーの編集",
            menu_admin_setting: "管理者設定",
            menu_announcement: "お知らせ",
            menu_assistant: "ChatWork アシスタント",
            menu_change: "変更",
            menu_cheat_sheet: "ショートカット一覧",
            menu_concierge: "ChatWorkコンシェルジュ",
            menu_contact_admin: "コンタクト管理",
            menu_current: "現在：",
            menu_desktopalert: "デスクトップ通知",
            menu_download_app: "アプリをダウンロード",
            menu_feedback: "ご意見・ご要望",
            menu_file: "ファイル管理",
            menu_help: "ヘルプ",
            menu_information: "インフォメーション",
            menu_logout: "ログアウト",
            menu_mychat_hint: "マイチャットを表示",
            menu_mytask: "タスク管理",
            menu_personal_setting: "動作設定",
            menu_profile_setting: "プロフィール",
            menu_sound: "通知音",
            menu_userguide: "基本的な使い方",
            message: "メッセージ",
            message_join_groupchat: "グループチャットへ参加",
            message_link: "メッセージリンク",
            message_open_chat: "このチャットへ移動",
            multiselect_label: "個選択中",
            mychat: "マイチャット",
            mychat_default_desc: "マイチャットは自分専用のチャットです。自分用のメモやタスク管理、ファイルサーバーとして利用することができます。",
            name_suffix: "さん",
            newbrowser_check_compatibility_view_ie9: "Internet Explorer 9以上でご利用の場合は、互換性表示の設定をご確認ください。<br />互換表示をオフにするには、[互換表示] ボタンをクリックして、下記の状態にしてください。 ",
            newbrowser_desc: "チャットワークを快適にご利用いただくには、<br />各ブラウザの最新バージョンをお使いいただくことを推奨します。",
            newbrowser_download_chrome: "http://www.google.com/chrome/?hl=ja",
            newbrowser_download_firefox: "http://www.mozilla.org/ja/firefox/",
            newbrowser_download_ie: "http://windows.microsoft.com/ja-JP/internet-explorer/downloads/ie",
            newbrowser_download_safari: "http://www.apple.com/jp/safari/",
            newbrowser_ie9_higher: "Internet Explorer 9以上をお使いの場合",
            newbrowser_listtip: "下記ブラウザの最新バージョンをご利用ください。",
            newbrowser_recommended: "推奨ブラウザ",
            newbrowser_subject: "お使いのブラウザは推奨ブラウザではありません。",
            nickname_desc: 'ニックネームを設定すると、<span class="ui_to">To:</span>で指定した時の表記が変わります',
            nickname_name: "名前",
            nickname_nickname: "ニックネーム",
            nickname_prefix: "",
            nickname_suffix: "さん",
            nickname_title: "ニックネームの設定",
            notifier_newmessage: "メッセージが届きました",
            off: "オフ",
            on: "オン",
            open_website: "サイトを開く",
            open_window: "別ウインドウで開く",
            organization_filter_radio_all: "すべて表示",
            organization_filter_radio_organized: "組織内のみ表示",
            pager_first: "最初のページへ移動",
            pager_last: "最後のページへ移動",
            pager_next: "次のページへ移動",
            pager_prev: "前のページへ移動",
            pin_hint: "このチャットをピン留めしてチャット一覧の上に固定できます",
            preview: "プレビュー",
            preview_needlogin: "(表示するにはGoogleにログインしている必要があります)",
            preview_video: "プレビュー",
            profile_allow_search: "コンタクト検索の対象にする",
            profile_chatworkidtip: "チャットワークID：",
            profile_displaynametip: "表示名：",
            profile_edit: "プロフィールを編集",
            profile_error_invalid_cwid: "使用できないチャットワークIDが指定されています",
            profile_error_no_displayname: "表示名を入力してください",
            profile_form_title: "ログイン情報",
            profile_image_limit: "(最大 700KBまで。JPEG,GIF,PNGが使えます)",
            profile_setting_addresstip: "所在地:",
            profile_setting_departmenttip: "所属:",
            profile_setting_ecstudio_account: "ログイン情報の設定",
            profile_setting_edit_avatar: "写真を変更する",
            profile_setting_edit_cover: "カバー写真の変更",
            profile_setting_emailtip: "メールアドレス:",
            profile_setting_introductiontip: "自己紹介:",
            profile_setting_note_change_orgname: "共通の組織名変更はこちら",
            profile_setting_orgnametip: "組織名:",
            profile_setting_privacy_contact: "コンタクトのみ",
            profile_setting_privacy_public: "公開",
            profile_setting_set_facebook_note: 'facebookのユーザーネームについては<a href="https://www.facebook.com/username/" target="_blank">こちら</a>',
            profile_setting_tel_extensiontip: "電話番号（内線）:",
            profile_setting_tel_mobiletip: "電話番号（携帯）:",
            profile_setting_tel_organizationtip: "電話番号（勤務先）:",
            profile_setting_titletip: "役職:",
            profile_setting_urltip: "URL:",
            raise_error: "エラーが発生しました",
            readonly: "閲覧のみ",
            read_more: "続きを見る…",
            reply_badge_tooltip_label: "返信元を見る",
            role: "権限",
            room_permission_setting_allow_add_task: "タスク追加を許可する",
            room_permission_setting_allow_see_member: "チャットの参加者一覧を表示する",
            room_permission_setting_allow_send_message: "メッセージの送信を許可する",
            room_permission_setting_allow_upload_file: "ファイル送信を許可する",
            room_permission_setting_index: "権限の設定",
            room_permission_setting_lead: "管理者権限のユーザーには適用されません",
            room_permission_setting_title: "グループチャットの権限設定",
            room_request_description: "承認することで、このグループチャットに参加させることができます",
            room_request_title: "グループチャットへの参加リクエスト一覧",
            saving: "保存中...",
            search_except_wordtip: "除外キーワード：",
            search_except_word_placeholder: "除外キーワードを入力",
            search_group_by_chat: "チャット別に表示",
            search_group_by_time: "新着順に表示",
            search_group_by_user: "ユーザー別に表示",
            search_loading: "検索しています...",
            search_max_results: "（最大%%max_results%%件まで）",
            search_message_fromtip: "発言者：",
            search_message_termtip: "発言日：",
            search_option: "検索オプション",
            search_placeholder: "検索キーワードを入力",
            search_resulttip: "検索結果:",
            search_result_bychat_closeall: "すべて閉じる",
            search_result_bychat_openall: "すべて開く",
            search_result_not_found: "%%keyword%% に一致する検索結果は見つかりませんでした",
            search_result_unit: "件",
            search_suggest: '"%%keyword%%"でメッセージを検索',
            search_term_30: "30日以内",
            search_term_365: "1年以内",
            search_term_7: "7日以内",
            search_term_90: "90日以内",
            search_term_all: "すべて",
            search_term_separator: "～",
            search_term_specify: "指定する",
            search_title: "メッセージ検索",
            selectall_full: "すべて選択",
            sending: "送信中...",
            serviceadmin_do_upgrade: "チャットワークをアップグレードする",
            serviceadmin_upgrade: "アップグレード",
            serviceadmin_user_list_label: "ユーザー管理",
            sound_type: "サウンドの種類",
            sound_volume: "サウンドのボリューム",
            start_chatwork: "使い方を学ぶ",
            storage_activity_ratio_label: "ストレージ使用率",
            storage_add_link: "ストレージ容量を追加する",
            storage_cancel_add_storage_label: "ストレージ容量を追加",
            storage_cancel_send_cancel: "%%object%%が送信できませんでした",
            storage_cancel_send_object: "送信しようとした%%object%%は、現在利用可能なストレージ容量を超える%%object%%サイズのため、送信がキャンセルされました。<br /><br />この%%object%%を送信するためには、ファイル管理より不要なファイルの削除を行うか、",
            storage_cancel_send_object_suffix_add_storage: "追加ストレージをご利用ください。",
            storage_cancel_send_object_suffix_tell_admin: "ご利用プランの管理者にお問い合わせください。",
            storage_cancel_send_object_suffix_upgrade: "現在の利用プランをアップグレードしてください。",
            storage_cancel_upgrade_label: "利用プランをアップグレード",
            storage_limit_notice_body: "現在のご利用プランではこれ以上ファイル送信を行うことはできません。<br /><br />ご利用を継続する場合には、ファイル管理より不要なファイルの削除を行うか、<br />",
            storage_limit_notice_footer: "ストレージ容量制限に達したまま1週間(%%date%%)が経過すると、<br />メッセージの送信が行えなくなりますのでご注意ください。",
            storage_limit_notice_message: "[注意]ストレージ容量の上限に達しました",
            storage_limit_notice_title: "ストレージ容量上限に達しました",
            storage_limit_warning_body: "ストレージ容量制限の上限に達してから1週間が経過したため、<br />チャットのメッセージ送信機能を停止しました。<br /><br />ご利用を継続する場合には、ファイル管理より不要なファイルの削除を行うか、<br />",
            storage_limit_warning_message: "[重要]チャットのメッセージ送信機能を停止しました",
            storage_limit_warning_title: "チャットのメッセージ送信機能を停止しました",
            storage_other_user: "他のユーザー",
            storage_show_all_user: "一覧を表示",
            storage_used: "使用",
            task: "タスク",
            task_added: "タスクを追加しました。",
            task_add_button: "タスクを追加",
            task_click_detail: "タスクをクリックして詳細表示",
            task_client: "依頼者",
            task_confirm_delete: "本当にこのタスクを削除しますか？",
            task_deleted: "このタスクは削除されました",
            task_delete_hint: "タスクを削除する",
            task_done: "タスクを完了しました。",
            task_edited: "タスクを編集しました。",
            task_edit_hint: "タスクを編集する",
            task_edit_title: "タスクの編集",
            task_error_empty: "タスク内容が入力されていません",
            task_filter_all: "すべて",
            task_filter_exired: "期限切れ",
            task_filter_inweek: "1週間以内",
            task_filter_nolimit: "期限なし",
            task_filter_today: "本日",
            task_incharge: "担当者",
            task_inchargetip: "担当：",
            task_incharge_placeholder: "担当を選択してください",
            task_input_placeholder: "タスク内容を入力してください",
            task_limit: "期限",
            task_limittip: "期限：",
            task_limit_placeholder: "期限を設定してください",
            task_loading: "タスクを読み込んでいます...",
            task_menu_client: "自分が依頼者",
            task_menu_close: "完了タスク",
            task_menu_incharge: "自分が担当者",
            task_menu_open: "未完了タスク",
            task_nothing: "現在タスクはありません",
            task_not_found: "タスクが存在しません",
            task_num: " (%%num%%以上)",
            task_reverted: "タスクを未完了に戻しました。",
            task_tasktip: "タスク：",
            text_copied: "コピーしました",
            tutorial_addbutton: "「部署」「プロジェクト」「取引先」とのやり取りなど、議題や目的ごとにグループチャットを作成することで、関係者や話す内容を簡単に整理することができます。",
            tutorial_add_task: "チャット中に生まれた「やること」をタスク化することにより、期限を決めて管理をすることができます。",
            tutorial_globalsearch: "ここからチャット名の検索、メッセージ内容の検索を行うことができます",
            tutorial_send_message: "TOをつけてメッセージ相手の明確化、絵文字、音声・ビデオによるチャット、ファイルのアップロードなど、多様なコミュニケーションが可能となります。",
            uncheckall: "はずす",
            url_download_app: "http://www.chatwork.com/ja/download/",
            userguide_message: "メッセージの送信",
            userguide_message_about: "マイチャットについて",
            userguide_message_about_content1: "<p>「マイチャット」について説明しましょう。これは自分ひとりだけが見られるチャットです。<br />ここでメッセージの練習や自分だけのタスク管理ができます。</p>",
            userguide_message_about_content2: "<p>メッセージの送信は、画面下にある「ここにメッセージを入力」と書かれた箇所に入力します。メッセージを入力したら、送信ボタンを押すか、もしくは Shift + Enter キーを押すことでメッセージを送信できます。</p>",
            userguide_message_delete: "メッセージを削除する",
            userguide_message_delete_content1: "<p>自分が発言したメッセージを削除することもできます。<br />同じくメッセージメニューから「...」をクリックして「削除」をクリックします。</p>",
            userguide_message_delete_content2: "<p>「本当にこのメッセージを削除しますか？」と確認をされますので、削除したい場合は「OK」をクリックしてください。</p>",
            userguide_message_edit: "メッセージを編集する",
            userguide_message_edit_content1_biwa: "<p>自分がすでに発言したメッセージにマウスオーバーし、「編集」をクリックします。</p>",
            userguide_message_edit_content2_biwa: "<p>「編集」をクリックすると、入力画面に「メッセージを編集中です」と表示され、編集することができます。</p>",
            userguide_message_mention: "TO機能を利用する",
            userguide_message_mention_content1: "<p>グループチャットの中で個別にメッセージを送りたい場合、TO機能を使うと便利です。</p>",
            userguide_message_mention_select: "メッセージの送り先を選ぶ",
            userguide_message_mention_select_content1: "<p>「TO」マークをクリックすると、グループチャットに参加しているメンバーの一覧が出てきますので、その中からメッセージを送りたい人を選択します。</p>",
            userguide_message_mention_send: "メッセージを送信する",
            userguide_message_mention_send_content1: "<p>送り先を選ぶとメッセージ欄にTOタグが挿入されるので、その下にメッセージを入力して送信します。</p>",
            userguide_message_mention_send_content2: "<p>選んだ相手宛にメッセージを送った画面になります。</p>",
            userguide_message_mention_send_content3: "<p>自分宛のTOがある場合はチャット一覧に緑色のTOアイコンで表示されます。</p>",
            userguide_message_quote: "メッセージを引用する",
            userguide_message_quote_content1_biwa: "<p>グループの人数が増えてくると誰に対して発言しているのかがわかりにくくなってきますので、引用を使うとスムーズにやり取りができます。</p><h3>メッセージメニューの表示方法</h3><p>他の人のメッセージにマウスオーバーする（文章の上にカーソルを乗せる）と、<br />「返信、引用、タスク、リンク」などのボタンが出てきます。</p>",
            userguide_message_quote_content2_biwa: "<p>その中の「引用」をクリックすると、メッセージ入力欄に引用された文章とタグが出ます。</p>",
            userguide_message_quote_content3_biwa: "<p>引用した文章にメッセージを追加して送信すると、どのメッセージに対して発言しているのかがわかりやすくなります。</p>",
            userguide_profile: "プロフィールの設定",
            userguide_profile_about: "プロフィール設定とは",
            userguide_profile_about_content_biwa: "<p>プロフィール設定ではプロフィール画像、カバー写真、組織名、連絡先、自己紹介などを設定することができます。</p><p>プロフィールを設定することで、チャット検索やコンタクト検索で検索がしやすくなります。</p>",
            userguide_profile_chatworkid: "チャットワークIDの設定",
            userguide_profile_chatworkid_content1: "<p>チャットワークIDを設定することで、独自のURLでアクセスできるマイページを利用できるようになり、他のユーザーからのコンタクト依頼が簡単になります。</p><p>(例)　%%chatwork_home_path%%/[設定したチャットワークID]</p>",
            userguide_profile_chatworkid_content2: "<p>また、設定したチャットワークIDでコンタクト検索ができるので、コンタクトを取りたい相手が見つけやすくなります。<br />チャットワークIDの登録は「チャットワークID」の箇所に、任意の半角英数字を入力し、「保存する」をクリックすると設定は完了です。</p>",
            userguide_profile_open_setting: "プロフィール画面を開く",
            userguide_profile_open_setting_content: "<p>画面右上の自分の名前をクリックし、プルダウンメニューの「プロフィール」をクリックすると、プロフィールの設定画面が開きます。</p>",
            userguide_profile_open_setting_content_biwa: "<p>「プロフィールを編集」をクリックすると編集画面を開くことができます。</p>",
            userguide_profile_upload_image: "画像をアップロードする",
            userguide_profile_upload_image_content_biwa: "<p>プロフィール情報にある「写真を変更する」をクリックします。</p>",
            userguide_profile_upload_image_content_biwa2: "<p>「アップロードする」を選択し、アップロードする画像を指定し「保存する」をクリックすると、PCに保存している画像を設定できます。</p>",
            userguide_task: "タスク機能の利用",
            userguide_task_about: "タスク機能とは",
            userguide_task_about_content: "<p>タスク（やることリスト）管理では、自分の業務を忘れないようにクリップしておくことができます。また、自分以外のほかの人にタスクを依頼することもできます。</p><p>タスク機能の使い方は、マイチャットの自分専用の画面で、自分用のタスクを追加して練習してみましょう。</p>",
            userguide_task_add: "タスクを追加する",
            userguide_task_add_content1_biwa: "<p>チャット画面右側にある「タスク内容を入力してください」と書かれた箇所にタスク内容を入力し、担当者と期限を選択して「タスクを追加」ボタンをクリックします。</p>",
            userguide_task_add_content2_biwa: "<p>タイムラインにタスク内容が送信されると、タスク追加の完了です。</p>",
            userguide_task_browse: "タスクを確認する",
            userguide_task_browse_content1: "<p>チャットワークの画面右に追加したタスクを見ることができます。<br />これでよりタスクを忘れないようになっています。</p>",
            userguide_task_browse_content2_biwa: "<p>チャット一覧には、自分のタスクの数がタスクアイコンの右側に数字で表示されます。</p>",
            userguide_task_complete: "タスクを完了する",
            userguide_task_complete_content1_biwa: "<p>タスクが完了したら、左上の「完了」ボタンをクリックします。</p>",
            userguide_task_complete_content2: "<p>すると、「タスクを完了しました。」と出ます。これでタスクが完了します。</p>",
            userguide_task_complete_content3: '<p>以上で、「%%service_name%%の基本的な使い方」のご案内は終了です。<br />より詳細な使い方をご覧になりたい方は「<a href="http://help.chatwork.com/hc/ja" target="_blank">ヘルプ</a>」をご活用ください</p>',
            userguide_title: "%%service_name%%の基本的な使い方",
            userguide_welcome_head: "%%service_name%%とは…",
            userguide_welcome_service_desc_chatwork: "社内外のコミュニケーションを円滑にし、普段の業務をより効率的に行うためのプロダクト。<br />チャットとビデオ会議でやりとりをしながら、期日のあるものはタスク化して進捗管理、<br />ファイルもクラウドで自動管理できます。またスマートフォンでもサービスをご利用いただけます。",
            userguide_welcome_service_desc_kddi: "KDDI ChatWorkは、グループチャット、タスク管理、ファイル管理、ビデオ通話が利用できる<br />「ソーシャル型コミュニケーションツール」です。",
            username: "ユーザーネーム",
            welcome_title: "%%service_name%%へようこそ",
            word_separator: "・",
            _button_delete_with_agreement: "理解した上で削除する",
            _chatroom_confirm_delete_alert: "本当に「%%room_name%%」を削除しますか？",
            _chatroom_confirm_delete_content: "削除する前に以下の内容を確認し、チェックを入れてください。",
            _chatroom_confirm_delete_note_1: "自分だけではなく、メンバー全員のチャット一覧から削除されます。",
            _chatroom_confirm_delete_note_2: "すべてのメッセージ、タスク、ファイルのデータが削除されます。",
            _chatroom_confirm_delete_note_3: "削除されたデータは二度と元に戻すことはできません。",
            _chatwork_apitoken_caution_1: 'チャットワークAPIの<a href="http://developer.chatwork.com/" target="_blank">ドキュメントはこちら</a>をご確認ください。',
            _chatwork_apitoken_caution_2: "APIトークンは第三者に開示しないよう、取り扱いにご注意ください。",
            _chatwork_apitoken_caution_3: "システム負荷が懸念される過度なリクエストがある場合は、APIの利用を停止する場合がございますので、あらかじめご了承ください。",
            _chatwork_apitoken_caution_4: 'APIのご利用については<a href="http://www.chatwork.com/ja/terms/api.html" target="_blank">チャットワークAPI利用規約</a>が適用されますので、あらかじめご確認ください。',
            _chatwork_apitoken_confirm_regenerate: "APIトークンを再発行すると現在発行されているAPIトークンは無効になります。本当に再発行しますか？",
            _chatwork_apitoken_copy_btn: "コピー",
            _chatwork_apitoken_display_btn: "表示",
            _chatwork_apitoken_empty_password: "パスワードが入力されていません",
            _chatwork_apitoken_invalid_password: "パスワードが間違っています",
            _chatwork_apitoken_password_caption: "APIトークンを発行、表示する場合は、<br />チャットワークのパスワードを入力してください。",
            _chatwork_apitoken_password_placeholder: "パスワードを入力",
            _chatwork_apitoken_regenerate_btn: "再発行",
            _chatwork_apitoken_token_label: "API：",
            _chatwork_apitoken_token_placeholder: "API",
            _chatwork_file_upload_eset_link: "推奨セキュリティソフト",
            _chatwork_path_help_file_upload_error: '\n\nMac OSの場合はヘルプページをご確認ください\n<a href="http://link.chat-work.com/h_file_upload_ja" target="_blank">http://link.chat-work.com/h_file_upload_ja</a>'
        }
    }, {}],
    329: [function(require, module, exports) {
        module.exports = {
            accepting: "กำลังยอมรับ...",
            adding: "กำลังเพิ่ม...",
            add_contact_confirm_body_with_account_names: "คุณต้องการส่งคำขอติดต่อไปยัง %%account_names%% หรือไม่",
            add_contact_confirm_dialog_title: "คำขอติดต่อ",
            add_contact_confirm_send_mail_at_same: "* พวกเขาจะยังได้รับอีเมลเมื่อคำขอของคุณถูกส่ง",
            admin: "ผู้ดูแล",
            announce_button_close: "ไม่ต้องแสดงข้อความนี้อีก",
            assistant_lp_url: "",
            available: "พร้อมใช้งาน",
            button_accept: "ยอมรับ",
            button_accept_long: "ยอมรับ",
            button_add: "เพิ่ม",
            button_add_contact_long: "ส่งคำเชิญ",
            button_cancel: "ยกเลิก",
            button_change_long: "เปลี่ยน",
            button_close: "ปิด",
            button_complete: "เสร็จสิ้น",
            button_create: "สร้าง",
            button_create_long: "สร้าง",
            button_delete: "ลบ",
            button_delete_long: "ลบ",
            button_edit: "แก้ไข",
            button_incomplete: "เปิด",
            button_next: "ถัดไป",
            button_ok: "ตกลง",
            button_reject: "ไม่ใช่ตอนนี้",
            button_reject_long: "ไม่ใช่ตอนนี้",
            button_return: "กลับ",
            button_save: "บันทึก",
            button_save_long: "บันทึก",
            button_search: "ค้นหา",
            button_send: "ส่ง",
            canceling: "กำลังยกเลิก...",
            chat: "สนทนา",
            chatroom_added: "ได้เข้าร่วมกลุ่มแล้ว",
            chatroom_btn_add_member_tooltip: "เพิ่มสมาชิก",
            chatroom_changed: '"',
            chatroom_chatname_is: 'ชื่อกลุ่มถูกเปลี่ยนเป็น "',
            chatroom_chat_edited: "ข้อมูลบทสนทนาถูกอัพเดทแล้ว",
            chatroom_chat_joined: "สมาชิกใหม่ได้เข้าร่วมในกลุ่มสนทนาแล้ว",
            chatroom_confirm_leave: 'คุณต้องการออกจาก "%%room_name%%" ใช่ไหม? คุณจะไม่สามารถเข้าถึงข้อความ, งาน และไฟล์ทั้งหมดได้อีก คุณจะต้องได้รับคำเชิญก่อนหากคุณต้องการจะเข้าร่วมกลุ่มสนทนานี้อีกครั้ง\n(*งานที่คุณได้มอบหมายให้กับคนอื่น ๆ และไฟล์ที่ถูกอัพโหลดภายในกลุ่มสนทนานี้จะถูกลบ)',
            chatroom_contact_added: "รายชื่อถูกเพิ่มแล้ว",
            chatroom_contact_added_by_facebook: "รายชื่อได้ถูกเพิ่มผ่านทางฟังก์ชั่นเพิ่มเพื่อนใน Facebook แบบอัตโนมัติ",
            chatroom_createchat_same_members: "สร้างสำเนาของกลุ่มสนทนานี้",
            chatroom_createchat_same_members_confirm: "มีผู้ใช้บางคนไม่อยู่ในรายชื่อของคุณ\nคุณต้องการสร้างกลุ่มสนทนาใหม่ด้วยรายชื่อที่คุณมีอยู่ใช่ไหม?",
            chatroom_create_title: "สร้างกลุ่มสนทนาใหม่",
            chatroom_delete: "ลบกลุ่มสนทนานี้",
            chatroom_deleted: "ได้ถูกลบแล้ว",
            chatroom_desc: "คำอธิบาย",
            chatroom_description_is: 'คำอธิบายกลุ่มถูกเปลี่ยนเป็น "',
            chatroom_desctip: "คำอธิบาย:",
            chatroom_desc_explain: "เพิ่มคำอธิบายบทสนทนา, บันทึก หรือลิงก์ที่นี่",
            chatroom_desc_none: "ไม่มีคำอธิบาย",
            chatroom_disable_external: "ไม่สามารถเพิ่มได้ - ไม่ได้รับอนุญาตให้สื่อสารกับพวกผู้ใช้ภายนอกองค์กร",
            chatroom_edit_desc_title: "แก้ไขคำอธิบาย",
            chatroom_error_cant_add: "ไม่สามารถสร้างบทสนทนาได้",
            chatroom_error_noadmin: "คุณจำเป็นต้องตั้งผู้ดูแลสำหรับกลุ่มสนทนานี้",
            chatroom_error_noself: "คุณจำเป็นต้องเพิ่มตัวเองเพื่อสร้างกลุ่มสนทนาใหม่",
            chatroom_error_not_found: "ไม่มีบทสนทนานี้",
            chatroom_error_no_member: "ไม่สามารถโหลดข้อความได้ - ต้องได้รับอนุญาตให้เข้าร่วมบทสนทนานี้",
            chatroom_error_no_name: "ต้องมีชื่อกลุ่มสนทนา",
            chatroom_error_planlimit: "ใน%%plan_name%% คุณสามารถสร้างกลุ่มสนทนาได้มากที่สุด %%limit_num%% กลุ่มเท่านั้น ได้โปรดพิจารณาการอัพเกรดบัญชีผู้ใช้ของคุณ",
            chatroom_groupchat_created: "กลุ่มสนทนาใหม่ถูกสร้างแล้ว",
            chatroom_icon_type_preset: "เลือกไอคอน",
            chatroom_icon_type_upload: "อัพโหลด",
            chatroom_icon_updated: "ไอคอนกลุ่มสนทนาถูกอัพเดทแล้ว",
            chatroom_info_edit: "แก้ไขข้อมูลบทสนทนา",
            chatroom_invitation_link_setting: "การตั้งค่าลิงก์คำเชิญ",
            chatroom_leave: "ออกจากกลุ่มสนทนานี้",
            chatroom_leaved: "ได้ออกจากบทสนทนาแล้ว",
            chatroom_member_add_contact: "เพิ่มทั้งหมด",
            chatroom_member_detail: "รายละเอียดสมาชิก",
            chatroom_member_is: "",
            chatroom_member_long: "สมาชิกบทสนทนา",
            chatroom_member_nocontact: "สมาชิกไม่อยู่ในรายชื่อของคุณ",
            chatroom_member_requests_notice: "สมาชิกที่กำลังรอค้างอยู่ (%%request_num%%)",
            chatroom_member_rest_number: "... และอีก %%rest_number%% ราย",
            chatroom_member_role_admin_desc: "สามารถแก้ไขชื่อกลุ่มสนทนา, คำอธิบาย และเพิ่ม/ลบสมาชิกได้",
            chatroom_member_role_member_desc: "ไม่สามารถแก้ไขชื่อกลุ่มสนทนา, คำอธิบาย หรือเพิ่ม/ลบสมาชิกได้",
            chatroom_member_role_readonly_desc: "สามารถอ่านแต่ไม่สามารถส่งข้อความได้",
            chatroom_mychat_created: "สนทนาส่วนตัวถูกสร้างแล้ว",
            chatroom_nametip: "ชื่อกลุ่มสนทนา:",
            chatroom_not_only_internal: "บทสนทนาที่มีผู้ใช้จากองค์กรอื่น ๆ",
            chatroom_over_groupchatnum: "ไม่สามารถส่งคำชวนเข้าร่วมแชตกลุ่มได้เนื่องจากผู้ใช้อยู่ในแชตกลุ่มเกินจำนวนที่กำหนดแล้ว",
            chatroom_priv_changed: "เปลี่ยนบทบาทแล้ว",
            chatroom_resigned_priv_change: "ได้ลบบัญชีผู้ใช้ของ ChatWork แล้ว ขณะนี้บทสนทนาตรงอันนี้ได้ถูกเปลี่ยนเป็นกลุ่มสนทนาแล้ว",
            chatroom_resigned_priv_change_all: "เนื่องจากกลุ่มสนทนานี้ไม่มีผู้ดูแล ทุกคนในกลุ่มสนทนานี้จึงได้รับสิทธิ์เป็นผู้ดูแล",
            chatroom_room_permission_setting: "แก้ไขการอนุญาตของกลุ่มสนทนา",
            chatroom_search_member: "ค้นหาด้วยชื่อ",
            chatroom_set: '"',
            chatroom_setting: "การตั้งค่าบทสนทนา",
            chatroom_show_limit_member_num: "(สูงสุด : %%num%%)",
            chatroom_tasklist_mytaskonly: "แสดงงานที่ฉันได้รับมอบหมาย",
            chatsend_button_delete_message_only: "ลบเฉพาะการแจ้งเตือนเท่านั้น",
            chatsend_button_delete_with_file: "ลบไฟล์พร้อมกับการแจ้งเตือน",
            chatsend_button_delete_with_task: "ลบงานพร้อมกับการแจ้งเตือน",
            chatsend_chat_explain: "พิมพ์ข้อความของคุณที่นี่",
            chatsend_confirm_delete: "คุณต้องการลบข้อความนี้จริงหรือไม่?",
            chatsend_confirm_delete_with_file: "คุณต้องการลบไฟล์พร้อมกับการแจ้งเตือนใช่ไหม?",
            chatsend_confirm_delete_with_task: "คุณต้องการลบงานพร้อมกับการแจ้งเตือนใช่ไหม?",
            chatsend_delete_filetip: "ไฟล์ที่คุณกำลังลบ :",
            chatsend_delete_tasktip: "งานที่คุณกำลังลบ :",
            chatsend_emoticonalt: "อิโมติคอน: บ่งบอกตัวของคุณ!",
            chatsend_enter_action_explain: "กดปุ่ม Enter เพื่อส่ง",
            chatsend_enter_action_explain_enter: "\n(กด Shift + Enter เพื่อขึ้นบรรทัดใหม่)",
            chatsend_enter_action_explain_enter_send: "\n(กด Shift + Enter เพื่อส่ง)",
            chatsend_error_no_exist_for_edit: "ไม่มีข้อความดังกล่าว",
            chatsend_error_no_incharge: "เลือกผู้รับมอบหมายงาน",
            chatsend_error_send: "ข้อความไม่ถูกส่ง : ข้อผิดพลาดของเครือข่าย กรุณาส่งอีกครั้ง",
            chatsend_error_send_task: "งานไม่ถูกมอบหมาย : ข้อผิดพลาดของเครือข่าย กรุณาส่งอีกครั้ง",
            chatsend_expand_area: "ขยายหน้าต่าง",
            chatsend_filealt: "อัพโหลดไฟล์",
            chatsend_nickname_setting: "การตั้งค่าชื่อเล่น",
            chatsend_not_allow_send_messages: "คุณไม่ได้รับอนุญาตให้ส่งข้อความภายในกลุ่มสนทนานี้",
            chatsend_quote: "อ้างอิง",
            chatsend_reply: "ตอบกลับ",
            chatsend_shift_and_command_hint: 'กด Shift เพื่อเลือกมากกว่าหนึ่งรายการ, "⌘" เพื่อส่ง',
            chatsend_shift_and_ctrl_hint: 'กด Shift เพื่อเลือกมากกว่าหนึ่งรายการ, "Ctrl" เพื่อส่ง',
            chatsend_shift_multiselect: "กด Shift และคลิกเพื่อเลือก 2 รายการขึ้นไป",
            chatsend_toalt: "ถึง: ระบุคนที่คุณกำลังจะคุยด้วย",
            chatsetting_faviconstat: "แสดงจำนวนที่ยังไม่ได้อ่านบนไอคอนของเว็บบราวเซอร์",
            chatsetting_hide_message_box_tags: "",
            chatsetting_hide_message_box_tags_change_confirm: "",
            chatsetting_notifier: "การแจ้งเตือนบนเดสก์ท็อป",
            chatsetting_notifier_duration: "ระยะเวลาการแจ้งเตือนบนหน้าจอ",
            chatsetting_notifier_duration_10sec: "10 วินาที",
            chatsetting_notifier_duration_20sec: "20 วินาที",
            chatsetting_notifier_duration_5sec: "5 วินาที",
            chatsetting_notifier_message: "รวมข้อความไว้ในการแจ้งเตือนบนเดสก์ท็อป",
            chatsetting_notifier_onlyto: "แจ้งเตือนเฉพาะเมื่อมีคนกล่าวถึงคุณ",
            chatsetting_notifier_show: "เปิดการแจ้งเตือนบนเดสก์ท็อป",
            chatsetting_popup_sound: "เปิดการแจ้งเตือนด้วยเสียง",
            chatsetting_private_nickname: "ไม่ใช้ชื่อเล่นเมื่อมีพวกผู้ใช้ภายนอกองค์กรอยู่ในบทสนทนา",
            chatsetting_shorten_url: "ย่อ URL สำหรับการแสดงผล",
            chatsetting_show_delmessage: "แสดงประวัติของข้อความที่ถูกลบ",
            chatsetting_show_external: "ไอคอนเพื่อแสดงกลุ่มสนทนาที่มีผู้ใช้จากองค์กรอื่น",
            chatsetting_tab_apitoken: "API",
            chatsetting_tab_display: "แสดง",
            chatsetting_tab_language: "ภาษา",
            chatsetting_tab_login: "เข้าสู่ระบบ",
            chatsetting_tab_notification: "การแจ้งเตือน",
            chatsetting_test_sound: "เล่น",
            chatsetting_unread_mail: "แจ้งเตือนฉันผ่านอีเมลเมื่อมีข้อความที่ยังไม่ได้อ่าน",
            chatsetting_unread_mail_label: "การแจ้งเตือนผ่านอีเมล",
            chatsetting_unread_mail_term_1: "ทุก 1 ชั่วโมง",
            chatsetting_unread_mail_term_12: "ทุก 12 ชั่วโมง",
            chatsetting_unread_mail_term_2: "ทุก 2 ชั่วโมง",
            chatsetting_unread_mail_term_24: "ทุก 24 ชั่วโมง",
            chatsetting_unread_mail_term_3: "ทุก 3 ชั่วโมง",
            chatsetting_unread_mail_term_6: "ทุก 6 ชั่วโมง",
            chatsetting_unread_mail_term_none: "ไม่ต้องเตือน",
            chatwork_do_update: "อัพเดทเป็นรุ่นล่าสุด",
            chatwork_help_page_path: "http://support-en.chatwork.com/hc/en-us",
            chatwork_service_name: "ChatWork",
            chatwork_update: "ChatWork ถูกอัพเดทแล้ว กรุณาโหลดหน้านี้อีกครั้ง",
            chat_action_copy: "คัดลอก",
            chat_action_copy_desc: "แสดงข้อความธรรมดา",
            chat_action_copy_title: "ข้อความ",
            chat_action_delete: "ลบ",
            chat_action_delete_desc: "ลบข้อความนี้",
            chat_action_edit: "แก้ไข",
            chat_action_edit_desc: "แก้ไขข้อความนี้",
            chat_action_link: "ลิงก์",
            chat_action_link_desc: "แทรกลิงก์ไปที่ข้อความนี้",
            chat_action_move: "ไปที่ข้อความนี้",
            chat_action_move_desc: "ไปที่ข้อความนี้",
            chat_action_quote: "อ้างอิง",
            chat_action_quote_desc: "อ้างอิงข้อความนี้",
            chat_action_reply: "ตอบกลับ",
            chat_action_reply_desc: "ตอบกลับข้อความนี้",
            chat_action_task: "งาน",
            chat_action_task_desc: "แปลงข้อความนี้เป็นงาน",
            chat_action_unread: "ยังไม่ได้อ่าน",
            chat_action_unread_desc: "ทำเครื่องหมายว่ายังไม่ได้อ่าน",
            chat_category_allchat: "บทสนทนาทั้งหมด",
            chat_category_chatselecttip: "เลือกบทสนทนา:",
            chat_category_confirm_delete: 'คุณต้องการลบหมวดหมู่ "%%category_name%%" จริงหรือไม่?',
            chat_category_create: "สร้างหมวดหมู่ใหม่",
            chat_category_edit: "แก้ไขหมวดหมู่",
            chat_category_error_no_chats: "กรุณาเลือก กลุ่มสนทนา/สนทนาตรง",
            chat_category_error_no_name: "กรุณาพิมพ์ชื่อหมวดหมู่",
            chat_category_mytaskchat: "บทสนทนาพร้อมงานที่ถูกมอบหมาย",
            chat_category_nametip: "ชื่อหมวดหมู่:",
            chat_category_select: "เลือกหมวดหมู่",
            chat_category_selected_chat_num: "จำนวนบทสนทนาที่ถูกเลือก:",
            chat_deleted: "ข้อความถูกลบแล้ว",
            chat_delete_label: "ลบแล้ว",
            chat_editing: "กำลังแก้ไข",
            chat_editing_label_on_message: "กำลังแก้ไข",
            chat_edit_label: "แก้ไขแล้ว",
            chat_error_not_found: "ไม่มีข้อความดังกล่าว",
            chat_filter_readonly: "ยังไม่ได้อ่าน",
            chat_filter_readonly_empty: "ไม่มีข้อความที่ยังไม่ได้อ่าน",
            chat_filter_taskonly: "งานที่ถูกมอบหมาย",
            chat_filter_taskonly_empty: "ไม่มีงานที่ถูกมอบหมาย",
            chat_filter_toonly: "ถูกกล่าวถึง",
            chat_filter_toonly_empty: "ไม่มีข้อความที่กล่าวถึงคุณ",
            chat_loading: "กำลังโหลดข้อความ...",
            chat_menu_chatlist: "รายการสนทนา",
            chat_partial_quote_message: "อ้างอิงในข้อความ",
            chat_partial_quote_task: "อ้างอิงในงาน",
            chat_post_label: "โพสต์แล้ว",
            chat_rest_roomtip: "กลุ่มสนทนา/สนทนาตรงที่ไม่ถูกแสดง:",
            chat_search: "พิมพ์เพื่อค้นหาบทสนทนา/ข้อความ",
            chat_server_error_try_again: "เกิดข้อผิดพลาดในการสื่อสารกับเซิร์ฟเวอร์\nกรุณาลองใหม่ในอีกสักครู่",
            chat_show_more: "แสดงเพิ่มเติม",
            cheatsheet_name_notation_code: "ปิดการสนทนาอิโมติคอน",
            cheatsheet_name_notation_hr: "เส้นบรรทัด",
            cheatsheet_name_notation_info: "ขอบด้านนอก",
            cheatsheet_name_notation_mix_tag: "รวมหลายแท็ก",
            cheatsheet_notation_title: "แท็กตกแต่งข้อความ",
            cheatsheet_or: "หรือ",
            cheatsheet_short_cut_title: "รายการปุ่มพิมพ์ลัด",
            cheatsheet_supplement_text_key_j: '* สิ่งนี้คือ "j (J)" ไม่ใช่ "i (I)"',
            cheatsheet_text_key_c: "เพิ่มรายชื่อ",
            cheatsheet_text_key_command_arrow_left: "ปิดหรือเปิดแถวด้านซ้าย",
            cheatsheet_text_key_command_arrow_right: "ปิดหรือเปิดแถวด้านขวา",
            cheatsheet_text_key_enter: "เปิดบทสนทนาที่ถูกเลือก",
            cheatsheet_text_key_esc: "เลื่อนเคอร์เซอร์ออกจากช่องพิมพ์ข้อความ",
            cheatsheet_text_key_f: "เลื่อนเคอร์เซอร์ไปที่แถบค้นหาบทสนทนา",
            cheatsheet_text_key_g: "สร้างกลุ่มสนทนา",
            cheatsheet_text_key_j: "เลือกบทสนทนาด้านล่าง",
            cheatsheet_text_key_k: "เลือกบทสนทนาด้านบน",
            cheatsheet_text_key_m: "เลื่อนเคอร์เซอร์ไปที่ช่องพิมพ์ข้อความ",
            cheatsheet_text_key_question: "รายการทางลัด",
            cheatsheet_text_key_t: "เลื่อนเคอร์เซอร์ไปที่ช่องพิมพ์งาน",
            cheatsheet_text_key_tab: "โฟกัสที่ปุ่มส่ง",
            cheatsheet_text_notation_content: "เนื้อหา",
            cheatsheet_text_notation_index: "หัวเรื่อง",
            cheatsheet_text_notation_new_line: "(+ บรรทัดใหม่)",
            cheatsheet_text_notation_on_message_area: "*หากคุณกรอก",
            cheatsheet_text_notation_replace_code_tag: "ในกล่องพิมพ์ข้อความ &#96;&#96;&#96; จะถูกแปลงเป็นแท็ก [code]",
            checkall: "ทั้งหมด",
            checkall_full: "เลือกทั้งหมด",
            commercial_announce_read_error_message: "",
            common_role_select_list_default: "แก้ไขการอนุญาต",
            common_role_select_list_default_tooltip: "แก้ไขการอนุญาตของสมาชิกทั้งหมด",
            concierge_lp_url: "",
            connection_error_invalid_user: "คุณเข้าสู่ระบบในฐานะผู้ใช้คนอื่น",
            connection_error_logout: "ขณะนี้คุณได้ออกจากระบบแล้ว",
            connection_error_offline: "ขณะนี้คุณกำลังออฟไลน์",
            contactpanel_add_contact: "เพิ่มรายชื่อ",
            contact_add: "เพิ่มรายชื่อ",
            contact_add_all_hint: "สมาชิกไม่อยู่ในรายชื่อของคุณ",
            contact_add_multiple_mailtip: "กรอก 1 ที่อยู่อีเมลต่อ 1 บรรทัด",
            contact_click_detail: "เลือกรายชื่อเพื่อดูรายละเอียด",
            contact_confirm_delete: "คุณต้องการลบ %%name%% จากรายชื่อของคุณ ใช่ไหม?\nการสนทนาตรงของคุณจะถูกลบอย่างถาวร",
            contact_confirm_reject_request: "คุณต้องการเพิกเฉยคำร้องขอติดต่อจาก %%name%% ใช่ไหม?",
            contact_connect_from_ads_complete: "You will be contacted shortly by person in charge.",
            contact_connect_from_ads_confirm: "Please send a contact request for more information.",
            contact_cwid_error_already: 'ChatWork ID "%%chatwork_id%%" ได้ถูกเพิ่มเข้าในรายชื่อของคุณแล้ว',
            contact_cwid_error_myself: "คุณไม่สามารถเพิ่มตัวเองได้",
            contact_cwid_error_noexist: 'ไม่มี ChatWork ID "%%chatwork_id%%"',
            contact_delete: "ลบจากรายชื่อของคุณ",
            contact_doing_invite: "กำลังส่งคำเชิญ...",
            contact_done_invite: "คำเชิญถูกส่งแล้ว",
            contact_do_invite: "ส่งคำเชิญ",
            contact_error_cantadd: "ไม่สามารถเพิ่มผู้ใช้รายนี้เข้าในรายชื่อของคุณได้",
            contact_error_is_disable_external: "ไม่สามารถเพิ่มได้ - ไม่ได้รับอนุญาตให้สื่อสารกับพวกผู้ใช้ภายนอกองค์กร",
            contact_error_is_not_mailaddress: "ไม่ใช่ที่อยู่อีเมลที่ถูกต้อง",
            contact_error_is_over_contactnum: "มีจำนวนรายชื่อเต็มจำนวนที่กำหนดไว้แล้ว พวกเขาไม่สามารถถูกเพิ่มเข้าในรายชื่อของคุณได้",
            contact_error_planlimit: "สำหรับ %%plan_name%% คุณสามารถเพิ่มรายชื่อได้ถึง %%limit_num%% คนเท่านั้น ได้โปรดพิจารณาการอัพเกรดบัญชีผู้ใช้ของคุณ",
            contact_error_search_user_not_found: "ไม่สามารถค้นหาผู้ใช้ได้",
            contact_invite: "อีเมลคำเชิญ",
            contact_invite_mail_add_email_address_to_invite: "เพิ่มที่อยู่อีเมลเพื่อเชิญ",
            contact_invite_mail_add_individually: "เพิ่มสมาชิกรายคน",
            contact_invite_mail_already_in_your_contacts: "บุคคลนี้อยู่ในรายชื่อของคุณอยู่แล้ว",
            contact_invite_mail_already_received_request: "ได้รับคำร้องขอติดต่อเรียบร้อยแล้ว",
            contact_invite_mail_already_send_request: "ส่งคำร้องขอติดต่อไปเรียบร้อยแล้ว",
            contact_invite_mail_bulk_add: "เพิ่มทีละมาก ๆ",
            contact_invite_mail_enter_message: "พิมพ์ข้อความ",
            contact_invite_mail_enter_your_email_address: "กรอกที่อยู่อีเมล",
            contact_invite_mail_failed_sent_following_reasons: "คำเชิญไม่ถูกส่งเนื่องจากเหตุผลต่อไปนี้",
            contact_invite_mail_invalid_email_address: "ที่อยู่อีเมลไม่ถูกต้อง",
            contact_invite_mail_invitation_sent: "คำเชิญถูกส่งแล้ว",
            contact_invite_mail_invitation_was_sent: "คำเชิญถูกส่งสำเร็จแล้ว",
            contact_invite_mail_invite_more: "เชิญเพิ่ม",
            contact_invite_mail_maximum_contact_requests: "คำร้องขอติดต่อครบจำนวนที่กำหนดไว้แล้ว",
            contact_invite_mail_message_optional: "ข้อความ (ไม่จำเป็น)",
            contact_invite_mail_move_to_direct_chat: "ย้ายไปที่การสนทนาตรง",
            contact_invite_mail_move_to_incoming_requests: "ย้ายไปที่คำร้องขอที่เข้ามา",
            contact_invite_mail_move_to_your_sent_requests: "ย้ายไปยังคำร้องขอที่คุณส่งไป",
            contact_invite_mail_restricted_to_outside_orgaization: "บุคคลนี้ถูกจำกัดการติดต่อกับสมาชิกภายนอกองค์กร",
            contact_invite_mail_send: "ส่ง",
            contact_invite_mail_send_your_account: "ไม่สามารถส่งคำเชิญไปที่บัญชีผู้ใช้ของคุณเองได้",
            contact_invite_mail_type_email_addresses: "พิมพ์ที่อยู่อีเมลของสมาชิกเพื่อเชิญ",
            contact_is_completed: "ได้ถูกส่งแล้ว",
            contact_mail_not_found: "เราไม่พบผู้ใช้จากที่อยู่อีเมลนี้<br />คุณต้องการส่งอีเมลเชิญให้มาเข้าร่วม ChatWork ไหม?",
            contact_menu_invite_mail: "เชิญผ่านอีเมล",
            contact_menu_list: "รายชื่อ",
            contact_menu_myrequest: "คำร้องขอที่ส่งไป",
            contact_menu_norequest: "ไม่อยู่ในรายชื่อ",
            contact_menu_request: "คำร้องขอที่เข้ามา",
            contact_menu_user_search: "ค้นหาผู้ใช้",
            contact_multi_adding: "กำลังเพิ่มรายชื่อของคุณ...",
            contact_multi_add_confirm: "ผู้ใช้ %%num%% คนถูกเพิ่มเข้าในรายชื่อของคุณ ตกลงหรือไม่?",
            contact_multi_delete_confirm: "หากคุณลบผู้ใช้ %%num%% คนออกจากรายชื่อของคุณ คุณจะไม่สามารถส่งข้อความส่วนตัวได้อีกต่อไป\nคุณต้องการลบใช่ไหม?",
            contact_myrequest: "คำร้องขอติดต่อ",
            contact_request_cancel: "ยกเลิกคำร้องขอ",
            contact_rest_number: "... และอีก %%rest_number%% ราย",
            contact_search: "ค้นหาด้วยชื่อ",
            contact_search_introduction: "ค้นหาคนที่คุณอาจรู้จัก",
            contact_search_not_found: "ขณะนี้ไม่มีผู้ใช้ที่คุณสามารถติดต่อได้",
            contact_search_placeholder: "พิมพ์ชื่อ, ChatWork ID, ที่อยู่อีเมลที่นี่",
            copy_to_clipboard: "คัดลอกไปคลิปบอร์ด",
            dateformat: "d/m/Y",
            datepicker_alt_text: "เลือกวันที่",
            deleted_user: "ผู้ใช้ที่ยกเลิกแล้ว",
            deleting: "กำลังลบ...",
            desktopalert_no_support: "เว็บบราวเซอร์ของคุณไม่รองรับการแจ้งเตือนบนเดสก์ท็อป กรุณาลองใช้งาน Google Chrome เพื่อเปิดใช้งานการแจ้งเตือนบนเดสก์ท็อป",
            directchat: "การสนทนาตรง",
            emoticon_beer: "เบียร์",
            emoticon_blush: "เขิน",
            emoticon_bow: "คำนับ",
            emoticon_cake: "เค้ก",
            emoticon_clap: "ตบมือ",
            emoticon_coffee: "กาแฟ",
            emoticon_cracker: "ประทัด",
            emoticon_dance: "เต้น!",
            emoticon_devil: "ปิศาจ",
            emoticon_ec14: "EC14",
            emoticon_flower: "ดอกไม้",
            emoticon_gogo: "สู้ สู้!",
            emoticon_grin: "ยิ้มเจ้าเล่ห์",
            emoticon_handshake: "จับมือ",
            emoticon_heart: "หัวใจ",
            emoticon_ikemen: "อีโม",
            emoticon_kiss: "จุ๊บ!",
            emoticon_komanechi: "ร็อค!",
            emoticon_love: "รัก",
            emoticon_lucky: "ดีจัง!",
            emoticon_more_smile: "หัวเราะ",
            emoticon_mumu: "อืม...",
            emoticon_muscle: "เบ่งกล้าม",
            emoticon_ninmari: "แหะ ๆ",
            emoticon_nod: "พยักหน้า",
            emoticon_otaku: "เนิร์ด",
            emoticon_puke: "แหวะ!",
            emoticon_roger: "รับทราบ!",
            emoticon_sad: "เศร้า",
            emoticon_shake: "สั่น",
            emoticon_smile: "ยิ้ม",
            emoticon_snooze: "ง่วง",
            emoticon_star: "ดาว",
            emoticon_surprise: "ตกใจ!",
            emoticon_sweat: "กังวล",
            emoticon_talk: "คุย",
            emoticon_tears: "ร้องไห้",
            emoticon_tongueout: "ยิ้มแฉ่ง",
            emoticon_whew: "เฮ้อ!",
            emoticon_wink: "ขยิบตา",
            emoticon_wonder: "ว่าไงนะะะ?",
            emoticon_wry_smile: "ยิ้มอ่อน",
            emoticon_yawn: "หาว",
            emoticon_yes: "ใช่",
            error_already_used: "ไม่พร้อมใช้งาน",
            error_cant_login_ip: "ข้อผิดพลาดในการตรวจสอบที่อยู่ IP",
            error_illegal_filename: 'ชื่อไฟล์ไม่สามารถประกอบด้วยอักขระดังต่อไปนี้ \n  / : * ? " < > |',
            error_invalidchar: "มีอักขระที่ใช้งานไม่ได้ เราอนุญาตเฉพาะตัวอักษร, - และ _ เท่านั้น",
            error_maxlength: "คุณสามารถใช้อักขระได้มากที่สุด %%length%% ตัว",
            error_no_login_action: "คุณยังไม่ได้เข้าสู่ระบบ",
            error_no_select: "กรุณาเลือกบทสนทนา",
            error_upload: "การอัพโหลดล้มเหลว",
            error_upload_disable_send_file: "การอัพโหลดไฟล์ล้มเหลว - ต้องได้รับอนุญาตจากผู้ดูแล",
            error_upload_executable: "คุณไม่สามารถอัพโหลดไฟล์ exe ได้ด้วยเหตุผลด้านความปลอดภัย",
            error_upload_filesize: "ขนาดของไฟล์ใหญ่เกินไป",
            error_upload_filetype: "ไม่รองรับไฟล์ประเภทนี้",
            error_upload_image: "เฉพาะ JPEG, GIF และ PNG เท่านั้น",
            error_upload_over_max_filesize: "ไฟล์ของคุณ (%%size%%) มีขนาดใหญ่เกินกว่าที่กำหนดไว้ (%%max_size%%)",
            fbconnect_blog_url: "http://blog-en.chatwork.com/",
            feedback_desc_noreply: "*โปรดทราบว่าคุณจะไม่ได้รับการตอบรับ",
            feedback_thankyou: 'ขอบคุณสำหรับความคิดเห็นของคุณ<br />ความคิดเห็นของคุณสำคัญสำหรับเรา และมันจะถูกนำไปใช้เพื่อปรับปรุง ChatWork ต่อไป<br />สนทนาอย่างมีความสุข!<img class="ui_emoticon" alt=":)" title="Smile :)" src="./image/emoticon/emo_smile.gif">',
            file: "ไฟล์",
            file_click_detail: "เลือกไฟล์เพื่อดูรายละเอียด",
            file_confirm_delete: 'คุณต้องการลบ "%%file_name%%" ใช่ไหม?',
            file_delete_error_try_again: "การลบไฟล์ล้มเหลว\nกรุณาลองใหม่ในอีกสักครู่",
            file_delete_hint: "ลบไฟล์",
            file_download_hint: "ดาวน์โหลด",
            file_drop_area: "<span>ลากและวางเพื่อแนบไฟล์</span>",
            file_edited: "ชื่อไฟล์ถูกแก้ไขแล้ว",
            file_edit_title: "กำลังแก้ไขชื่อไฟล์",
            file_error_empty: "จำเป็นต้องใส่ชื่อไฟล์",
            file_loading: "กำลังโหลดไฟล์...",
            file_multi_confirm_delete: "ไฟล์จำนวน %%num%% ไฟล์ถูกเลือก คุณต้องการลบใช่ไหม?",
            file_name: "ชื่อไฟล์:",
            file_nothing: "ไม่มีไฟล์",
            file_not_found: "ไม่มีไฟล์นี้",
            file_preview_download: "ดาวน์โหลดรูปภาพ",
            file_preview_image_cant_read: "โหลดตัวอย่างไม่สำเร็จ",
            file_preview_image_hint: "ดูตัวอย่างไฟล์นี้",
            file_preview_open_newwindow: "เปิดในหน้าต่างใหม่",
            file_rename_hint: "แก้ไขชื่อไฟล์",
            file_search: "ค้นหาไฟล์",
            file_search_not_found: "ไม่พบไฟล์",
            file_size: "ขนาด",
            file_uploaded: "ไฟล์ใหม่ถูกอัพโหลดแล้ว",
            file_upload_by: "อัพโหลดโดย",
            file_upload_datetime: "วันที่อัพโหลด",
            groupchat: "สนทนากลุ่ม",
            imagedrop_tooltip_change_filename: "เปลี่ยนชื่อไฟล์",
            imagedrop_tooltip_title: "วางรูปภาพจากคลิปบอร์ด",
            invitation_link: "ลิงก์คำเชิญ",
            invitation_link_advanced_setting_index: "การตั้งค่าขั้นสูง",
            invitation_link_advanced_setting_lead: "คุณสามารถกำหนด “รูปหน้าปก” และ “คำอธิบาย” ของกลุ่มสนทนาเพื่อแจ้งข้อมูลที่มีประโยชน์แก่สมาชิกได้",
            invitation_link_code_copy: "คัดลอก",
            invitation_link_help_tool_tip: "คุณสามารถเชิญคนอื่น ๆ มาเข้าร่วมกลุ่มสนทนานี้อย่างง่ายดาย แม้ว่าเขาจะไม่มีบัญชีผู้ใช้หรือไม่อยู่ในรายชื่อของคุณ",
            invitation_link_setting_delete_current_header: "ลบภาพหัวเรื่องปัจจุบัน",
            invitation_link_setting_error_invalid_link_name: "ลิงก์ไม่ถูกต้อง",
            invitation_link_setting_header_limit: "(อนุญาตไฟล์ JPEG/GIF/PNG ขนาดไฟล์สูงสุด 700KB และกว้าง 600 px)",
            invitation_link_setting_join_accept: "ต้องได้รับการยืนยันจากผู้ดูแลเพื่อเข้าร่วม",
            invitation_link_setting_status_disable: "ปิดใช้งานแล้ว",
            invitation_link_setting_title: "การตั้งค่าลิงก์คำเชิญ",
            invitation_link_set_groupchat_description_index: "คำอธิบายกลุ่มสนทนา",
            invitation_link_set_header_image_index: "รูปหน้าปกของหน้าคำเชิญ",
            invitelink: "ลิงก์คำเชิญ",
            joinpublicchat_need_accept: "*จำเป็นต้องได้รับการอนุมัติจากผู้ดูแลกลุ่มสนทนาเพื่อเข้าร่วม",
            joinpublicchat_request_sent: "คำร้องขอของคุณได้ถูกส่งไปยังผู้ดูแลกลุ่มสนทนาแล้ว คุณจะถูกเพิ่มเข้าไปเมื่อผู้ดูแลอนุมัติคำร้องขอของคุณ",
            joinpublicchat_title: "เข้าร่วมกลุ่มสนทนา",
            join_groupchat_btn_join_groupchat_label: "เข้าร่วมกลุ่มสนทนานี้",
            join_groupchat_btn_send_join_request_label: "ร้องขอเข้าร่วม",
            join_groupchat_invite_message: "คุณได้รับคำเชิญให้เข้าร่วมกลุ่มสนทนา คุณต้องการเข้าร่วมหรือไม่?",
            join_groupchat_my_disable_external: "คุณไม่ได้รับอนุญาตให้สื่อสารกับบุคคลภายนอกองค์กร",
            join_groupchat_not_found: "ไม่มีบทสนทนานี้หรือลิงก์คำเชิญไม่ถูกต้อง",
            join_groupchat_other_disable_external: "บางคนในบทสนทนานี้ไม่ได้รับอนุญาตให้สื่อสารกับบุคคลภายนอกองค์กร",
            jump_to_addpoint: "ไปยังงานที่ได้รับมอบหมาย",
            jump_to_addpoint_not_found: "ไม่มีข้อความที่จุดเพิ่ม",
            jump_to_message: "ไปยังข้อความนี้",
            kddi_manual_name: "คู่มือการบริการ",
            kddi_manual_path: "http://info-en.kcw.kddi.ne.jp",
            lang_dateformattip: "รูปแบบของวันที่:",
            lang_typetip: "ภาษา:",
            live_call_chat: "คุณได้รับเชิญเข้าร่วม ChatWork Live ที่ %%chat_name%%",
            live_call_direct: "%%name%% ได้เชิญคุณมาเข้าร่วม ChatWork Live",
            live_invited: "คุณได้รับคำเชิญ",
            live_join: "เข้าร่วม ChatWork Live",
            live_member_add_introduction: "เลือกสมาชิกสำหรับ ChatWork Live",
            live_member_not_found: "ไม่มีสมาชิกที่สามารถใช้ ChatWork Live ได้",
            live_start: "เริ่มต้น ChatWork Live แล้ว",
            live_video: "วิดีโอสนทนา",
            live_voice: "โทรผ่านเสียง",
            loading: "กำลังโหลด...",
            login_password_forget_link: "ลืมรหัสผ่านของคุณ?",
            mailaddress: "ที่อยู่อีเมล",
            member: "สมาชิก",
            member_addition_dialog_title: "เพิ่มสมาชิก",
            member_addition_edit_member_label: "แก้ไขสมาชิก",
            member_detail_edit_member_label: "แก้ไขสมาชิก",
            member_edit_add_member_label: "เพิ่มสมาชิก",
            member_edit_dialog_title: "แก้ไขสมาชิก",
            menu_admin_setting: "การตั้งค่าของผู้ดูแล",
            menu_announcement: "การแจ้งเตือน",
            menu_assistant: "",
            menu_change: "เปลี่ยน",
            menu_cheat_sheet: "รายการทางลัด",
            menu_concierge: "",
            menu_contact_admin: "รายชื่อ",
            menu_current: "ในปัจจุบัน",
            menu_desktopalert: "การแจ้งเตือนบนเดสก์ท็อป",
            menu_download_app: "ดาวน์โหลดแอพ",
            menu_feedback: "คำติชม",
            menu_file: "ไฟล์",
            menu_help: "ความช่วยเหลือ",
            menu_information: "ข้อมูล",
            menu_logout: "ออกจากระบบ",
            menu_mychat_hint: "เปิดสนทนาส่วนตัว",
            menu_mytask: "งาน",
            menu_personal_setting: "การตั้งค่าส่วนบุคคล",
            menu_profile_setting: "โปรไฟล์",
            menu_sound: "เสียง",
            menu_userguide: "เคล็ดลับ",
            message: "ข้อความ",
            message_join_groupchat: "เข้าร่วมกลุ่มสนทนานี้",
            message_link: "ลิงก์ไปยังข้อความ",
            message_open_chat: "ไปที่กลุ่มสนทนา/สนทนาตรงอันนี้",
            multiselect_label: "ถูกเลือกแล้ว",
            mychat: "สนทนาส่วนตัว",
            mychat_default_desc: "สนทนาส่วนตัว เป็นการสนทนาแบบส่วนตัวสำหรับเรื่องต่าง ๆ ของคุณเอง คุณสามารถบันทึกหรืออัพโหลดไฟล์เพื่อจุดประสงค์ส่วนตัวได้",
            name_suffix: "",
            newbrowser_check_compatibility_view_ie9: 'กรุณาตรวจสอบมุมมองที่เข้ากันได้ หากคุณใช้งาน Internet Explorer 9 หรือสูงกว่า สำหรับการปิดมุมมองที่เข้ากันได้ กรุณาคลิกที่ปุ่ม "มุมมองที่เข้ากันได้" ทำตามที่ระบุไว้ด้านล่าง',
            newbrowser_desc: "เพื่อการรับรองว่าคุณจะได้สัมผัสประสบการณ์ ChatWork ที่ดีที่สุด กรุณาตรวจสอบว่าคุณกำลังใช้เว็บบราวเซอร์รุ่นล่าสุด",
            newbrowser_download_chrome: "http://www.google.com/chrome/?hl=en",
            newbrowser_download_firefox: "http://www.mozilla.org/en-US/firefox/",
            newbrowser_download_ie: "http://windows.microsoft.com/en-US/internet-explorer/downloads/ie",
            newbrowser_download_safari: "http://www.apple.com/safari/",
            newbrowser_ie9_higher: "สำหรับผู้ที่ใช้ Internet Explorer 9 หรือสูงกว่า",
            newbrowser_listtip: "กรุณาตรวจสอบว่าคุณใช้เว็บบราวเซอร์ต่อไปนี้ในรุ่นล่าสุด",
            newbrowser_recommended: "เว็บบราวเซอร์ที่แนะนำ",
            newbrowser_subject: "เว็บบราวเซอร์ของคุณไม่สามารถทำงานร่วมกับ ChatWork ได้",
            nickname_desc: 'ชื่อเล่นนี้จะถูกแสดงหลังจาก <span class="ui_to">ถึง:</span> เมื่อคุณตอบกลับคนอื่น ๆ',
            nickname_name: "ชื่อ",
            nickname_nickname: "ชื่อเล่น",
            nickname_prefix: "",
            nickname_suffix: "",
            nickname_title: "ตั้งชื่อเล่น",
            notifier_newmessage: "คุณมีหนึ่งข้อความใหม่",
            off: "ปิด",
            on: "เปิด",
            open_website: "เปิด",
            open_window: "เปิดในแท็บใหม่",
            organization_filter_radio_all: "แสดงทั้งหมด",
            organization_filter_radio_organized: "แสดงเฉพาะภายในองค์กร",
            pager_first: "ไปที่หน้าแรก",
            pager_last: "ไปที่หน้าสุดท้าย",
            pager_next: "ไปที่หน้าถัดไป",
            pager_prev: "กลับไปหน้าก่อน",
            pin_hint: "ปักหมุดบทสนทนานี้",
            preview: "ตัวอย่าง",
            preview_needlogin: "(ต้องเข้าสู่ระบบด้วยบัญชี Google)",
            preview_video: "เล่น",
            profile_allow_search: "อนุญาตให้โปรไฟล์ของคุณแสดงในผลการค้นหา",
            profile_chatworkidtip: "ChatWork ID:",
            profile_displaynametip: "ชื่อที่แสดง:",
            profile_edit: "แก้ไขโปรไฟล์",
            profile_error_invalid_cwid: "กรุณากรอก ChatWork ID ที่ถูกต้อง",
            profile_error_no_displayname: "กรุณากรอกชื่อที่แสดง",
            profile_form_title: "ข้อมูลการเข้าสู่ระบบ",
            profile_image_limit: "(ไฟล์ JPEG, GIF และ PNG ขนาดสูงสุด 700kb)",
            profile_setting_addresstip: "ที่อยู่:",
            profile_setting_departmenttip: "แผนก / ฝ่าย:",
            profile_setting_ecstudio_account: "แก้ไขการตั้งค่าบัญชีผู้ใช้ของคุณ",
            profile_setting_edit_avatar: "แก้ไข",
            profile_setting_edit_cover: "แก้ไขรูปหน้าปก",
            profile_setting_emailtip: "อีเมล:",
            profile_setting_introductiontip: "ประวัติ:",
            profile_setting_note_change_orgname: "ต้องการเปลี่ยนชื่อองค์กรเหรอ? คลิกที่นี่",
            profile_setting_orgnametip: "ชื่อองค์กร:",
            profile_setting_privacy_contact: "รายชื่อของคุณเท่านั้น",
            profile_setting_privacy_public: "สาธารณะ",
            profile_setting_set_facebook_note: 'คลิก <a href="https://www.facebook.com/username/" target="_blank">ที่นี่</a> เพื่อเรียนรู้เพิ่มเติมเกี่ยวกับชื่อผู้ใช้บน Facebook',
            profile_setting_tel_extensiontip: "หมายเลขภายใน:",
            profile_setting_tel_mobiletip: "มือถือ:",
            profile_setting_tel_organizationtip: "โทรศัพท์ (ที่ทำงาน):",
            profile_setting_titletip: "ตำแหน่ง:",
            profile_setting_urltip: "URL:",
            raise_error: "ข้อผิดพลาด - ไม่ต้องตกใจ เรากำลังแก้ไขมันอยู่",
            readonly: "อ่านเท่านั้น",
            read_more: "อื่นๆ ...",
            reply_badge_tooltip_label: "ดูข้อความเดิม",
            role: "บทบาท",
            room_permission_setting_allow_add_task: "อนุญาตให้มอบหมายงาน",
            room_permission_setting_allow_see_member: "แสดงสมาชิกกลุ่มสนทนา",
            room_permission_setting_allow_send_message: "อนุญาตให้ส่งข้อความ",
            room_permission_setting_allow_upload_file: "อนุญาตให้ส่งไฟล์",
            room_permission_setting_index: "การตั้งค่าบทบาทสมาชิกกลุ่มสนทนา",
            room_permission_setting_lead: "จะไม่มีผลต่อผู้ดูแล",
            room_permission_setting_title: "แก้ไขการอนุญาตของกลุ่มสนทนา",
            room_request_description: "คุณสามารถเพิ่มผู้ใช้รายนี้เข้าในกลุ่มสนทนาได้โดยการยอมรับคำร้องขอ",
            room_request_title: "ผู้ใช้ที่ร้องขอเข้าร่วมกลุ่มสนทนานี้",
            saving: "กำลังบันทึก...",
            search_except_wordtip: "คีย์เวิร์ดที่ไม่รวม:",
            search_except_word_placeholder: "พิมพ์คำที่ต้องการตัดออกจากผลการค้นหา",
            search_group_by_chat: "จัดเรียงตามบทสนทนา",
            search_group_by_time: "เรียงตามลำดับล่าสุด",
            search_group_by_user: "จัดเรียงตามผู้ใช้",
            search_loading: "กำลังค้นหา...",
            search_max_results: "(ผลการค้นหาสูงสุด %%max_results%% รายการ)",
            search_message_fromtip: "ผู้ใช้:",
            search_message_termtip: "วันที่:",
            search_option: "ตัวเลือก",
            search_placeholder: "พิมพ์เพื่อค้นหา",
            search_resulttip: "ผลการค้นหา:",
            search_result_bychat_closeall: "ปิดบทสนทนาทั้งหมด",
            search_result_bychat_openall: "เปิดบทสนทนาทั้งหมด",
            search_result_not_found: "ไม่พบผลการค้นหาสำหรับ %%keyword%%",
            search_result_unit: "",
            search_suggest: 'ค้นหา "%%keyword%%" ในข้อความ',
            search_term_30: "30 วันที่ผ่านมา",
            search_term_365: "1 ปีที่ผ่านมา",
            search_term_7: "7 วันที่ผ่านมา",
            search_term_90: "90 วันที่ผ่านมา",
            search_term_all: "ทั้งหมด",
            search_term_separator: "..",
            search_term_specify: "ระบุ",
            search_title: "ค้นหาด้วยคีย์เวิร์ด",
            selectall_full: "เลือกทั้งหมด",
            sending: "กำลังส่ง...",
            serviceadmin_do_upgrade: "อัพเกรด ChatWork",
            serviceadmin_upgrade: "อัพเกรด",
            serviceadmin_user_list_label: "ลักษณะพิเศษสำหรับผู้ดูแล",
            sound_type: "เลือกเสียง :",
            sound_volume: "ระดับเสียง :",
            start_chatwork: "เริ่มต้น %%service_name%%",
            storage_activity_ratio_label: "อัตราส่วนการใช้งานพื้นที่จัดเก็บ",
            storage_add_link: "ซื้อพื้นที่จัดเก็บเพิ่มเติม",
            storage_cancel_add_storage_label: "ซื้อพื้นที่จัดเก็บเพิ่มเติม",
            storage_cancel_send_cancel: "ไม่สามารถส่ง %%object%% ได้",
            storage_cancel_send_object: "ไม่สามารถส่ง %%object%% ได้ เนื่องจากขนาดไฟล์ใหญ่เกินกว่าที่กำหนดไว้ในบัญชีผู้ใช้ของคุณ<br />กรุณาลบไฟล์อื่น ๆ หรือ",
            storage_cancel_send_object_suffix_add_storage: "ซื้อพื้นที่จัดเก็บเพิ่มเติม",
            storage_cancel_send_object_suffix_tell_admin: "ติดต่อผู้ดูแลสำหรับแผนบริการที่คุณใช้อยู่",
            storage_cancel_send_object_suffix_upgrade: "อัพเกรดแผนบริการของคุณ",
            storage_cancel_upgrade_label: "อัพเกรดแผนบริการของคุณ",
            storage_limit_notice_body: "ไม่สามารถส่งไฟล์ได้ เนื่องจากคุณใช้งานพื้นที่จัดเก็บครบตามที่กำหนดไว้แล้ว<br/>กรุณาลบไฟล์อื่น ๆ หรือ",
            storage_limit_notice_footer: "โปรดทราบว่าหากคุณใช้งานครบตามจำนวนที่กำหนดไว้แล้วและปล่อยทิ้งไว้นาน 1 สัปดาห์ (จนถึง %%date%%) คุณจะไม่สามารถส่งข้อความได้อีก",
            storage_limit_notice_message: "[คำเตือน] คุณใช้งานพื้นที่จัดเก็บครบตามที่กำหนดไว้แล้ว",
            storage_limit_notice_title: "คุณใช้งานพื้นที่จัดเก็บครบตามที่กำหนดไว้แล้ว",
            storage_limit_warning_body: "การส่งข้อความของคุณได้ถูกระงับแล้ว เนื่องจากครบเวลาหนึ่งสัปดาห์แล้วหลังจากที่คุณใช้งานพื้นที่จัดเก็บครบตามจำนวนที่กำหนดไว้ กรุณาลบไฟล์ หรือ",
            storage_limit_warning_message: "[สำคัญ] คุณจะไม่สามารถส่งข้อความได้อีก",
            storage_limit_warning_title: "การส่งข้อความของคุณได้ถูกระงับแล้ว",
            storage_other_user: "ผู้ใช้คนอื่น ๆ",
            storage_show_all_user: "รายชื่อผู้ใช้",
            storage_used: "เต็ม",
            task: "งาน",
            task_added: "งานถูกมอบหมายแล้ว",
            task_add_button: "เพิ่มงาน",
            task_click_detail: "เลือกงานเพื่อดูรายละเอียด",
            task_client: "จาก",
            task_confirm_delete: "คุณต้องการลบงานนี้ใช่ไหม?",
            task_deleted: "งานถูกลบแล้ว",
            task_delete_hint: "ลบงาน",
            task_done: "งานเสร็จแล้ว",
            task_edited: "งานถูกแก้ไขแล้ว",
            task_edit_hint: "แก้ไขงาน",
            task_edit_title: "แก้ไขงาน",
            task_error_empty: "งานว่างเปล่า",
            task_filter_all: "ทั้งหมด",
            task_filter_exired: "อดีต",
            task_filter_inweek: "สัปดาห์นี้",
            task_filter_nolimit: "ไม่มีวันที่",
            task_filter_today: "วันนี้",
            task_incharge: "ถึง:",
            task_inchargetip: "ถึง:",
            task_incharge_placeholder: "มอบหมายให้กับ",
            task_input_placeholder: "พิมพ์งานที่นี่",
            task_limit: "วันกำหนดส่ง",
            task_limittip: "วันกำหนดส่ง:",
            task_limit_placeholder: "ตั้งวันกำหนดส่ง",
            task_loading: "กำลังโหลดงาน...",
            task_menu_client: "งานที่ฉันมอบหมายไป",
            task_menu_close: "งานที่เสร็จแล้ว",
            task_menu_incharge: "งานของฉัน",
            task_menu_open: "เปิดงาน",
            task_nothing: "ไม่มีงาน",
            task_not_found: "ไม่มีงาน",
            task_num: "(มากกว่า %%num%%)",
            task_reverted: "งานถูกมอบหมายใหม่แล้ว",
            task_tasktip: "งาน:",
            text_copied: "คัดลอกแล้ว",
            tutorial_addbutton: "จากจุดนี้คุณสามารถสร้างกลุ่มสนทนาใหม่หรือเพิ่มคนอื่น ๆ เข้ามาในกลุ่มได้แล้ว",
            tutorial_add_task: "จากจุดนี้คุณสามารถเพิ่มงานใหม่ได้แล้ว",
            tutorial_globalsearch: "จากจุดนี้คุณสามารถค้นหาชื่อบทสนทนาและเนื้อหาข้อความได้แล้ว",
            tutorial_send_message: "จากจุดนี้คุณสามารถส่งข้อความได้แล้ว",
            uncheckall: "ไม่มี",
            url_download_app: "http://www.chatwork.com/th/download/",
            userguide_message: "ข้อความ",
            userguide_message_about: "บทสนทนาส่วนตัว",
            userguide_message_about_content1: "<p>สนทนาส่วนตัว คือที่ที่มีเพียงคุณเท่านั้นที่สามารถใช้งานได้ คุณสามารถใช้มันเป็นสมุดบันทึกส่วนตัว หรือมอบหมายงานให้ตัวคุณเองเพื่อจดจำสิ่งต่าง ๆ</p>",
            userguide_message_about_content2: "<p>เพียงพิมพ์ลงในไปข้อความ, บันทึก หรืองานของคุณ จากนั้นคลิก ส่ง</p>",
            userguide_message_delete: "การลบข้อความ",
            userguide_message_delete_content1: '<p>คุณยังสามารถลบข้อความที่คุณได้ส่งไปแล้วได้ด้วย<br />จากเมนูเดียวกันของข้อความ คลิกที่ "..." จากนั้นคลิก "ลบ"</p>',
            userguide_message_delete_content2: '<p>คุณจะได้รับการขอให้ยืนยัน "คุณต้องการลบข้อความนี้จริงหรือไม่?" หากคุณต้องการดำเนินการต่อ กรุณาคลิกที่ "ตกลง"</p>',
            userguide_message_edit: "การแก้ไขข้อความ",
            userguide_message_edit_content1_biwa: '<p>วางเมาส์เหนือข้อความที่คุณได้ส่งไปแล้ว จากนั้นคลิกที่ "แก้ไข"</p>',
            userguide_message_edit_content2_biwa: '<p>เมื่อคุณคลิกที่ "กำลังแก้ไข" จะเรียกแสดงหน้าจอสำหรับกรอกข้อมูล จากนั้นคุณก็สามารถแก้ไขข้อความของคุณได้</p>',
            userguide_message_mention: "การกล่าวถึงผู้อื่นภายในข้อความ",
            userguide_message_mention_content1: '<p>เมื่อคุณต้องการกล่าวถึงผู้อื่นในกลุ่มสนทนา ใช้การทำงานของ "ถึง"</p>',
            userguide_message_mention_select: "เลือกบุคคล",
            userguide_message_mention_select_content1: "<p>เลือกคนที่คุณต้องการจะกล่าวถึง</p>",
            userguide_message_mention_send: "ส่งข้อความ",
            userguide_message_mention_send_content1: '<p>เมื่อคุณเลือกผู้ใช้เพื่อระบุในข้อความของคุณ แท็ก "ถึง" จะถูกแทรกเข้ามาที่ด้านบนของกล่องข้อความ คุณสามารถเพิ่มข้อความของคุณข้างใต้แท็กนี้และส่งข้อความ</p>',
            userguide_message_mention_send_content2: "<p>สิ่งนี้จะนำคุณไปยังหน้าจอของข้อความที่ถูกส่งไปแล้ว</p>",
            userguide_message_mention_send_content3: '<p>เมื่อมีผู้อื่นกล่าวถึงคุณ ตราไอคอน "ถึง" สีเขียวจะปรากฏขึ้นบนรายการของกลุ่มสนทนา</p>',
            userguide_message_quote: "การอ้างอิงข้อความ",
            userguide_message_quote_content1_biwa: "<p>เมื่อจำนวนสมาชิกในกลุ่มของคุณเพิ่มมากขึ้น มันก็เป็นเรื่องที่ยากขึ้นที่จะรู้ว่าคุณกำลังพูดอยู่กับใคร ดังนั้นคุณสามารถอ้างอิงข้อความของพวกเขาเพื่อให้การสนทนาดำเนินต่อไปได้อย่างราบรื่น</p><h3>วิธีเรียกแสดงเมนูของข้อความ</h3><p>วางเมาส์ของคุณเหนือข้อความของคนอื่น ๆ (วางเคอร์เซอร์บนข้อความ)<br />เพื่อเรียกแสดงปุ่มตอบ, ปุ่มอ้างอิง, ปุ่มงาน, ปุ่มลิงก์ และปุ่มอื่น ๆ</p>",
            userguide_message_quote_content2_biwa: '<p>คลิกที่ "อ้างอิง" เพื่อแทรกแท็กและข้อความที่ถูกอ้างอิงเข้ามาในกล่องข้อความ</p>',
            userguide_message_quote_content3_biwa: "<p>จากนั้นคุณสามารถเพิ่มข้อความของคุณเองไปที่ข้อความที่ถูกอ้างอิงก่อนจะส่ง สิ่งนี้จะช่วยให้ทุกคนเข้าใจได้อย่างชัดเจนว่าคุณกำลังตอบข้อความไหนอยู่</p>",
            userguide_profile: "การตั้งค่าโปรไฟล์",
            userguide_profile_about: "เกี่ยวกับการตั้งค่าโปรไฟล์",
            userguide_profile_about_content_biwa: "<p>คุณสามารถเปลี่ยนภาพโปรไฟล์, รูปหน้าปก, ชื่อองค์กร, ข้อมูลติดต่อ, ประวัติ และอื่น ๆ ภายในการตั้งค่าโปรไฟล์</p><p>สิ่งนี้จะช่วยให้คนอื่น ๆ ค้นหาโปรไฟล์ของคุณได้ง่ายดายยิ่งขึ้น</p>",
            userguide_profile_chatworkid: "การตั้งค่า ChatWork ID",
            userguide_profile_chatworkid_content1: "<p>เมื่อคุณได้รับ ChatWork ID ของคุณแล้ว คุณสามารถใช้ประโยชน์จาก URL ส่วนบุคคลเพื่อช่วยให้ผู้อื่นสามารถค้นหาและติดต่อกับคุณได้ง่ายดายยิ่งขึ้น</p><p>เช่น %%chatwork_home_path%%/[ChatWork ID ของคุณ]</p>",
            userguide_profile_chatworkid_content2: '<p>เพียงแค่พิมพ์ ChatWork ID ที่คุณอยากได้ลงในกล่องข้อความด้านล่าง แล้วคลิก "บันทึก"</p>',
            userguide_profile_open_setting: "หน้าโปรไฟล์ของคุณ",
            userguide_profile_open_setting_content: "<p>คุณสามารถเปิดหน้าการตั้งค่าโปรไฟล์ได้โดยการคลิกที่ไอคอนมุมขวาบน</p>",
            userguide_profile_open_setting_content_biwa: '<p>คลิกที่ "แก้ไขโปรไฟล์" เพื่อเปิดหน้าจอแก้ไข</p>',
            userguide_profile_upload_image: "อัพโหลดรูปโปรไฟล์",
            userguide_profile_upload_image_content_biwa: '<p>คลิกบน "แก้ไข" ในข้อมูลโปรไฟล์ของคุณ</p>',
            userguide_profile_upload_image_content_biwa2: '<p>เลือก "อัพโหลด" เลือกรูปที่ต้องการอัพโหลด จากนั้นคลิกที่ "บันทึก" เพื่อส่งรูปซึ่งจัดเก็บอยู่ในคอมพิวเตอร์ของคุณ</p>',
            userguide_task: "งาน",
            userguide_task_about: "งานคืออะไร?",
            userguide_task_about_content: "<p>การทำงานของงาน จะช่วยให้คุณสร้างรายการสิ่งที่ต้องทำ และคุณยังสามารถมอบหมายงานนั้นให้แม้กระทั่งตัวคุณเองได้</p><p>เคล็ดลับด่วน : ลองมอบหมายงานให้กับตัวคุณเองในสนทนาส่วนตัวเพื่อให้คุณเข้าใจมากยิ่งขึ้นว่าสิ่งนี้มีการทำงานอย่างไร</p>",
            userguide_task_add: "มอบหมายงาน",
            userguide_task_add_content1_biwa: '<p>กรอกรายละเอียดของงานในกล่องข้อความที่ติดป้าย "พิมพ์งานที่นี่" ที่ด้านขวาของหน้าจอสนทนา เพิ่มคนที่คุณต้องการมอบหมายงานให้และวันกำหนดส่ง จากนั้นคลิกที่ปุ่ม "เพิ่มงาน"</p>',
            userguide_task_add_content2_biwa: "<p>หากงานนั้นแสดงอยู่บนไทม์ไลน์ แสดงว่างานนั้นถูกเพิ่มสำเร็จแล้ว</p>",
            userguide_task_browse: "ค้นหางาน",
            userguide_task_browse_content1: "<p>ที่มุมขวาล่าง คุณจะเห็นรายการของงานที่คุณได้รับมอบหมาย</p>",
            userguide_task_browse_content2_biwa: "<p>รายการสนทนาแสดงจำนวนงานที่ถูกมอบหมายให้กับคุณที่ด้านขวาของไอคอน งาน</p>",
            userguide_task_complete: "ทำงานให้เสร็จ",
            userguide_task_complete_content1_biwa: '<p>เมื่อคุณทำงานเสร็จแล้ว คลิกที่ปุ่ม "เสร็จสิ้น" ที่ด้านซ้ายบน</p>',
            userguide_task_complete_content2: '<p>ข้อความ "งานเสร็จแล้ว" จะถูกส่งไปยังสมาชิกกลุ่มสนทนาโดยอัตโนมัติ</p>',
            userguide_task_complete_content3: '<p>เนื้อหา "เคล็ดลับของ %%service_name%%" มีเพียงเท่านี้</p>',
            userguide_title: "เคล็ดลับของ %%service_name%%",
            userguide_welcome_head: "เกี่ยวกับ %%service_name%%",
            userguide_welcome_service_desc_chatwork: "%%service_name%% คือเครื่องมือสนทนาเชิงธุรกิจที่อยู่บนระบบคลาวด์ มันช่วยให้คุณสามารถสนทนาแบบกลุ่ม, โทรผ่านวิดีโอ รวมไปถึงจัดการงานและไฟล์ต่าง ๆ ได้",
            userguide_welcome_service_desc_kddi: "KDDI ChatWork คือเครื่องมือสื่อสารแบบโซเชียลที่ช่วยให้คุณสามารถสนทนาแบบกลุ่ม, โทรผ่านวิดีโอ รวมไปถึงจัดการงานและไฟล์ต่าง ๆ ได้",
            username: "ชื่อผู้ใช้",
            welcome_title: "ยินดีต้อนรับสู่ %%service_name%%!",
            word_separator: ",",
            _button_delete_with_agreement: "ลบ (ฉันได้ยืนยันแล้ว)",
            _chatroom_confirm_delete_alert: 'คุณต้องการลบ "%%room_name%%" ใช่ไหม?',
            _chatroom_confirm_delete_content: "กรุณาตรวจสอบหัวข้อต่อไปนี้ก่อนที่จะลบกลุ่มสนทนา",
            _chatroom_confirm_delete_note_1: "สิ่งนี่จะไม่เพียงถูกลบจากรายการของคุณ แต่จะมีผลต่อคนอื่น ๆ ที่เข้าร่วมในกลุ่มสนทนาด้วย",
            _chatroom_confirm_delete_note_2: "ข้อความ, งาน และไฟล์ทั้งหมดจะถูกลบ",
            _chatroom_confirm_delete_note_3: "ข้อมูลที่ถูกลบทั้งหมดจะไม่สามารถกู้คืนได้",
            _chatwork_apitoken_caution_1: 'การสร้างเอกสาร ChatWork API พร้อมให้บริการ <a href="http://link.chat-work.com/api_doc" target="_blank">ที่นี่</a>.',
            _chatwork_apitoken_caution_2: "กรุณาอย่าแบ่งปันโทเคน API กับระบบอื่น",
            _chatwork_apitoken_caution_3: "เราอาจระงับการใช้งาน API หากมีคำร้องขอที่มากผิดปกติหรือมีมากเกินขีดความสามารถของเซิร์ฟเวอร์",
            _chatwork_apitoken_caution_4: 'ในการเข้าถึงหรือใช้งาน API ของเรา คุณได้ยอมรับ <a href="http://www.chatwork.com/ja/terms/api.html" target="_blank">ข้อตกลงการใช้งาน ChatWork API (ภาษาญี่ปุ่น)</a>',
            _chatwork_apitoken_confirm_regenerate: "โทเคน API ที่มีอยู่ของคุณจะกลายเป็นโมฆะ หากคุณสร้างโทเคนใหม่ คุณต้องการดำเนินการต่อใช่ไหม?",
            _chatwork_apitoken_copy_btn: "คัดลอก",
            _chatwork_apitoken_display_btn: "แสดง",
            _chatwork_apitoken_empty_password: "กรุณากรอกรหัสผ่านของคุณ",
            _chatwork_apitoken_invalid_password: "รหัสผ่านไม่ถูกต้อง กรุณาลองอีกครั้ง",
            _chatwork_apitoken_password_caption: "กรุณากรอกรหัสผ่าน ChatWork ของคุณเพื่อแสดงและสร้างโทเคน API",
            _chatwork_apitoken_password_placeholder: "กรอกรหัสผ่าน",
            _chatwork_apitoken_regenerate_btn: "สร้างขึ้นใหม่",
            _chatwork_apitoken_token_label: "API:",
            _chatwork_apitoken_token_placeholder: "API",
            _chatwork_file_upload_eset_link: "",
            _chatwork_path_help_file_upload_error: ""
        }
    }, {}],
    330: [function(require, module, exports) {
        module.exports = {
            accepting: "Đang chấp nhận...",
            adding: "Đang thêm vào...",
            add_contact_confirm_body_with_account_names: "Bạn có muốn gửi yêu cầu liên hệ đến %%account_names%%?",
            add_contact_confirm_dialog_title: "Yêu cầu Liên hệ",
            add_contact_confirm_send_mail_at_same: "* Họ cũng sẽ nhận được email khi yêu cầu của bạn được gửi đi.",
            admin: "Người quản lý",
            announce_button_close: "Không hiển thị thông báo này",
            assistant_lp_url: "",
            available: "Có thể sử dụng",
            button_accept: "Đồng ý",
            button_accept_long: "Đồng ý",
            button_add: "Thêm",
            button_add_contact_long: "Thêm vào danh sách liên lạc",
            button_cancel: "Hủy",
            button_change_long: "Thay đổi",
            button_close: "Đóng",
            button_complete: "Hoàn thành",
            button_create: "Tạo mới",
            button_create_long: "Thực hiện tạo mới",
            button_delete: "Xóa",
            button_delete_long: "Tiến hành xóa",
            button_edit: "Chỉnh sửa",
            button_incomplete: "Mở",
            button_next: "Kế tiếp",
            button_ok: "OK",
            button_reject: "Từ chối",
            button_reject_long: "Từ chối",
            button_return: "Đính chính",
            button_save: "Lưu",
            button_save_long: "Tiến hành lưu",
            button_search: "Tìm kiếm",
            button_send: "Gửi",
            canceling: "Đang hủy bỏ...",
            chat: "Trò chuyện",
            chatroom_added: "] đã đuợc thêm.",
            chatroom_btn_add_member_tooltip: "Thêm thành viên",
            chatroom_changed: "] đã được thay đổi.",
            chatroom_chatname_is: "Tên cuộc trò chuyện [",
            chatroom_chat_edited: "Đã thay đổi thông tin cuộc trò chuyện.",
            chatroom_chat_joined: "Thành viên mới đã tham gia vào cuộc trò chuyện",
            chatroom_confirm_leave: 'Bạn có thực sự muốn thoát khỏi "%%room_name%%"?\n Khi đã thoát khỏi nhóm thì  bạn không thể đọc được nội dung cuộc trò chuyện này. \n Trong trường hợp bạn muốn quay lại cuộc trò chuyện nhóm nhóm trò chuyện bạn phải được mời trở thành thành viên nhóm. \n(*Công việc mà bạn đã giao cho người khác, cũng như tệp tin mà bạn đã gửi cũng sẽ bị xóa)',
            chatroom_contact_added: "Đã thêm liên lạc.",
            chatroom_contact_added_by_facebook: "Đã bổ sung số liên lạc thông qua chức năng tự động kết bạn của Facebook",
            chatroom_createchat_same_members: "Tạo một bản sao của nhóm trò chuyện này",
            chatroom_createchat_same_members_confirm: "Có một vài người dùng không thuộc danh bạ của bạn.\nBạn có muốn tạo một cuộc trò chuyện nhóm mới với danh bạ hiện tại của mình không?",
            chatroom_create_title: "Tạo một nhóm trò chuyện mới",
            chatroom_delete: "Xóa nhóm trò chuyện",
            chatroom_deleted: "] đã được xóa.",
            chatroom_desc: "Tóm lược",
            chatroom_description_is: "Tóm lược [",
            chatroom_desctip: "Tóm lược:",
            chatroom_desc_explain: "Bạn có thể điền thêm chú thích, ghi chú và đường dẫn liên quan vào mỗi cuộc trò chuyện này",
            chatroom_desc_none: "Không có mô tả",
            chatroom_disable_external: "không thể bổ sung - không có quyền giao tiếp với người dùng bên ngoài tổ chức của họ.",
            chatroom_edit_desc_title: "Chỉnh sửa mô tả",
            chatroom_error_cant_add: "Không thể tạo được cuộc trò chuyện",
            chatroom_error_noadmin: "Cần phải có ít nhất 1 người là quản lý",
            chatroom_error_noself: "Bạn không thể tạo được cuộc trò chuyện nếu bạn không phải là thành viên cuộc trò chuyện đó.",
            chatroom_error_not_found: "Cuộc trò chuyện đó không tồn tại",
            chatroom_error_no_member: "Không thể tải tin nhắn - cần có quyền tham gia trò chuyện này",
            chatroom_error_no_name: "Tên cuộc trò chuyện nhóm trò chuyện chưa được nhập",
            chatroom_error_planlimit: "%%plan_name%% chỉ cho phép bạn tạo được cuôc trò chuyện nhóm có tối đa %%limit_num%% thành viên. <br />Nếu bạn muốn tạo thêm cuộc trò chuyện nhóm mới thì bạn phải nâng cấp phiên bản hiện tại.",
            chatroom_groupchat_created: "Đã tạo cuộc nhóm trò chuyện nhóm mới vừa được tạo.",
            chatroom_icon_type_preset: "Chọn biểu tượng",
            chatroom_icon_type_upload: "Tải lên",
            chatroom_icon_updated: "Đã thay đổi biểu tượng của cuộc trò chuyện nhóm trò chuyện.",
            chatroom_info_edit: "Thay đổi thông tin cuộc trò chuyện",
            chatroom_invitation_link_setting: "Cài đặt liên kết lời mời",
            chatroom_leave: "Thoát khỏi nhóm trò chuyện",
            chatroom_leaved: "] đã rời khỏi chỗ.",
            chatroom_member_add_contact: "Thêm tất cả",
            chatroom_member_detail: "Chi tiết thành viên",
            chatroom_member_is: "Thành viên [",
            chatroom_member_long: "Thành viên của cuộc trò chuyện này.",
            chatroom_member_nocontact: "Chưa thêm vào danh sách",
            chatroom_member_requests_notice: "Có (%%request_num%%) thành viên chưa đồng ý tham gia vào cuộc trò chuyện",
            chatroom_member_rest_number: "…và %%rest_number%% người nữa",
            chatroom_member_role_admin_desc: "Bạn có thể thay đổi tên cuộc trò chuyện nhóm trò chuyện, tóm lược và các thành viên tham gia vào nhóm.",
            chatroom_member_role_member_desc: "Bạn không thể thay đổi  tên cuộc trò chuyện nhóm trò chuyện, tóm lược và các thành viên tham gia vào nhóm.",
            chatroom_member_role_readonly_desc: "Chỉ có thể đọc.Không thể gửi tin nhắn",
            chatroom_mychat_created: 'Đã tạo "My Chat".',
            chatroom_nametip: "Tên cuộc trò chuyện:",
            chatroom_not_only_internal: "Trò chuyện bao gồm cả người dùng từ các tổ chức khác",
            chatroom_over_groupchatnum: "không thể thêm thành viên vào cuộc trò chuyện nhóm do đã vượt quá số lượng cho phép.",
            chatroom_priv_changed: "] đã thay đổi quyền hạn.",
            chatroom_resigned_priv_change: "] đã xóa tài khoản ChatWork, nên đã chuyển cuộc nói chuyện này từ nói chuyện trực tiếp sang nói chuyện theo nhóm.",
            chatroom_resigned_priv_change_all: "Cuộc trò chuyện nhóm trò chuyện này không có người quản trị nên tất cả thành viên đều có quyền hạn như được đổi thành người quản trị.",
            chatroom_room_permission_setting: "Chỉnh sửa Quyền trò chuyện nhóm",
            chatroom_search_member: "Tìm kiếm tên thành viên bằng tên",
            chatroom_set: "] đã được cài đặt.",
            chatroom_setting: "Cài đặt trò chuyện",
            chatroom_show_limit_member_num: "(Tối đa: %%num%%)",
            chatroom_tasklist_mytaskonly: "Chỉ hiển thị công việc của bản thân",
            chatsend_button_delete_message_only: "Chỉ xóa tin nhắn thông báo",
            chatsend_button_delete_with_file: "Xóa tệp tin đính kèm",
            chatsend_button_delete_with_task: "Xóa tin nhắn cùng công vệc",
            chatsend_chat_explain: "Nhập nội dung tin nhắn vào đây",
            chatsend_confirm_delete: "Bạn có thực sự muốn xóa tin nhắn này hay không?",
            chatsend_confirm_delete_with_file: "Bạn có muốn xóa tin nhắn này kèm tệp tin không",
            chatsend_confirm_delete_with_task: "Bạn có muốn xóa công việc và tin nhắn thông báo không?",
            chatsend_delete_filetip: "Tệp tin cần xóa:",
            chatsend_delete_tasktip: "Công việc cần xóa:",
            chatsend_emoticonalt: "Hình biểu tượng: để biểu hiện cảm xúc",
            chatsend_enter_action_explain: "Nhấn Enter để gửi",
            chatsend_enter_action_explain_enter: "\n (Nhấn phím Shift+Enter để xuống dòng)",
            chatsend_enter_action_explain_enter_send: "\nPhím Shift+Enter = Gửi",
            chatsend_error_no_exist_for_edit: "Tin nhắn bạn muốn sửa không tồn tại",
            chatsend_error_no_incharge: "Hãy chỉ định người đảm nhận công việc",
            chatsend_error_send: 'Không thể gửi tin nhắn do hệ thống mạng không ổn định.Hãy ấn nút "Gửi lại" để tiến hành gửi.',
            chatsend_error_send_task: 'Không thể gửi công việc do hệ thống mạng không ổn định.Hãy ấn nút "Gửi lại" để tiến hành gửi.',
            chatsend_expand_area: "Mở rộng cửa sổ",
            chatsend_filealt: "Tải tập tin lên",
            chatsend_nickname_setting: "Cài đặt nickname",
            chatsend_not_allow_send_messages: "Không được phép gửi tin nhắn trong cuộc trò chuyện này do lỗi cài đặt Không thể gửi tin nhắn vì không có quyền gửi tin nhắn trong cuộc trò chuyện này.",
            chatsend_quote: "Trích dẫn",
            chatsend_reply: "Trả lời",
            chatsend_shift_and_command_hint: "Shift để chọn nhiều",
            chatsend_shift_and_ctrl_hint: "Shift để chọn nhiều",
            chatsend_shift_multiselect: "Nhấn phím Shift để lựa chọn liên tiếp",
            chatsend_toalt: "Tới: Có thể gọi đối phương",
            chatsetting_faviconstat: "Hiện số cuộc trò chuyện chưa đọc trên biểu tượng trình duyệt",
            chatsetting_hide_message_box_tags: "",
            chatsetting_hide_message_box_tags_change_confirm: "",
            chatsetting_notifier: "Thông báo trên màn hình",
            chatsetting_notifier_duration: "Thời gian hiển thị thông báo trên màn hình",
            chatsetting_notifier_duration_10sec: "10 giây",
            chatsetting_notifier_duration_20sec: "20 giây",
            chatsetting_notifier_duration_5sec: "5 giây",
            chatsetting_notifier_message: "Hiển thị nội dung tin nhắn trên màn hình",
            chatsetting_notifier_onlyto: "Chỉ thông báo khi ai đó đề cập đến bạn",
            chatsetting_notifier_show: "Hiển thị thông báo trên màn hình",
            chatsetting_popup_sound: "Khi có tin nhắn mới thì có tiếng báo",
            chatsetting_private_nickname: "Không sử dụng biệt danh khi người dùng bên ngoài tổ chức của bạn có mặt trong cuộc trò chuyện.",
            chatsetting_shorten_url: "Rút gọn URL rồi hiển thị",
            chatsetting_show_delmessage: "Hiển thị lịch sử những tin nhắn đã xóa",
            chatsetting_show_external: "Biểu tượng để hiển thị trò chuyện nhóm bao gồm người dùng từ các tổ chức khác",
            chatsetting_tab_apitoken: "API",
            chatsetting_tab_display: "Hiển thị",
            chatsetting_tab_language: "Ngôn ngữ",
            chatsetting_tab_login: "Đăng nhập",
            chatsetting_tab_notification: "Thông báo",
            chatsetting_test_sound: "Kiểm tra chạy lại",
            chatsetting_unread_mail: "Thông báo tin nhắn chưa đọc trong khoảng thời gian nhất định qua thư",
            chatsetting_unread_mail_label: "Thông báo Email",
            chatsetting_unread_mail_term_1: "Cứ 1 giờ",
            chatsetting_unread_mail_term_12: "Cứ 12 giờ",
            chatsetting_unread_mail_term_2: "Cứ 2 giờ",
            chatsetting_unread_mail_term_24: "Cứ 24 giờ",
            chatsetting_unread_mail_term_3: "Cứ 3 giờ",
            chatsetting_unread_mail_term_6: "Cứ 6 giờ",
            chatsetting_unread_mail_term_none: "Không thông báo",
            chatwork_do_update: "Cập nhật phiên bản mới nhất",
            chatwork_help_page_path: "http://help.chatwork.com/hc/vi",
            chatwork_service_name: "ChatWork",
            chatwork_update: "Chatwork đã được cập nhật. Hãy tải lại Phải làm mới trình duyệt để cập nhập được kích hoạt.",
            chat_action_copy: "Sao chép",
            chat_action_copy_desc: "Hiển thị văn bản thô",
            chat_action_copy_title: "Tin nhắn",
            chat_action_delete: "Xóa",
            chat_action_delete_desc: "Xóa tin nhắn này",
            chat_action_edit: "Sửa",
            chat_action_edit_desc: "Sửa tin nhắn này",
            chat_action_link: "Đường dẫn",
            chat_action_link_desc: "Chèn Thêm đường dẫn vào tin nhắn này",
            chat_action_move: "Di chuyển đến tin nhắn này",
            chat_action_move_desc: "Di chuyển đến tin nhắn này",
            chat_action_quote: "Trích dẫn",
            chat_action_quote_desc: "Trích dẫn tin nhắn này",
            chat_action_reply: "Trả lời",
            chat_action_reply_desc: "Trả lời tin nhắn này",
            chat_action_task: "Công việc",
            chat_action_task_desc: "Chuyển đổi tin nhắn này thành công việc",
            chat_action_unread: "Chưa đọc",
            chat_action_unread_desc: "Đánh dấu tin chưa đọc cho tin nhắn này",
            chat_category_allchat: "Toàn bộ trò chuyện",
            chat_category_chatselecttip: "Chọn trò chuyện:",
            chat_category_confirm_delete: "Bạn có thực sự muốn xóa thư mục [%%category_name%%] này không?",
            chat_category_create: "Tạo thư mục mới",
            chat_category_edit: "Sửa thư mục",
            chat_category_error_no_chats: "Bạn chưa lựa chọn cuộc trò chuyện nào.",
            chat_category_error_no_name: "Hãy điền tên thư mục",
            chat_category_mytaskchat: "Các cuộc trò chuyện có gắn công việc",
            chat_category_nametip: "Tên thư mục:",
            chat_category_select: "Lựa chọn thư mục",
            chat_category_selected_chat_num: "Số cuộc trò chuyện đã chọn:",
            chat_deleted: "Đã xóa tin nhắn.",
            chat_delete_label: "Xóa",
            chat_editing: "Đang chỉnh sửa",
            chat_editing_label_on_message: "Đang chỉnh sửa",
            chat_edit_label: "Đã chỉnh sửa",
            chat_error_not_found: "Tin nhắn đó không tồn tại",
            chat_filter_readonly: "Chưa đọc",
            chat_filter_readonly_empty: "Không có tin nhắn nào chưa đọc",
            chat_filter_taskonly: "Công việc được giao",
            chat_filter_taskonly_empty: "Không có công việc nào được giao",
            chat_filter_toonly: "Đã đề cập",
            chat_filter_toonly_empty: "Không có tin nhắn nào nhắc đến bạn",
            chat_loading: "Đang tải tin nhắn...",
            chat_menu_chatlist: "Các cuộc trò chuyện",
            chat_partial_quote_message: "Trích dẫn trong tin nhắn",
            chat_partial_quote_task: "Trích dẫn trong công việc",
            chat_post_label: "Chỉnh sửa",
            chat_rest_roomtip: "Số cuộc trò chuyện chưa đọc:",
            chat_search: "Tìm kiếm tên cuộc trò chuyện",
            chat_server_error_try_again: "Có lỗi khi giao tiếp với máy chủ.\nVui lòng thử lại trong vài phút.",
            chat_show_more: "Hiển thị thêm",
            cheatsheet_name_notation_code: "Vô hiệu hóa chuyển đổi biểu tượng cảm xúc",
            cheatsheet_name_notation_hr: "Dòng thước kẻ",
            cheatsheet_name_notation_info: "Viền ngoài",
            cheatsheet_name_notation_mix_tag: "Kết hợp nhiều thẻ",
            cheatsheet_notation_title: "Thẻ trang trí tin nhắn",
            cheatsheet_or: "hoặc",
            cheatsheet_short_cut_title: "Danh sách các phím tắt",
            cheatsheet_supplement_text_key_j: '* đó là "i(I)" chứ không phải "j (J)"',
            cheatsheet_text_key_c: "Thêm liên lạc",
            cheatsheet_text_key_command_arrow_left: "Đóng hoặc mở cột bên trái",
            cheatsheet_text_key_command_arrow_right: "Đóng hoặc mở cột bên phải",
            cheatsheet_text_key_enter: "Mở trò chuyện đã chọn",
            cheatsheet_text_key_esc: "Di chuyển con trỏ ra khỏi ô nhập tin nhắn",
            cheatsheet_text_key_f: "Di chuyển con trỏ đến thanh tìm kiếm trò chuyện",
            cheatsheet_text_key_g: "Tạo nhóm trò chuyện",
            cheatsheet_text_key_j: "Chọn trò chuyện ở dưới",
            cheatsheet_text_key_k: "Chọn trò chuyện ở trên",
            cheatsheet_text_key_m: "Di chuyển con trỏ tới ô nhập tin nhắn",
            cheatsheet_text_key_question: "Danh sách các phím tắt",
            cheatsheet_text_key_t: "Di chuyển con trỏ tới ô nhập công việc",
            cheatsheet_text_key_tab: "Di chuyển con trỏ vào nút gửi",
            cheatsheet_text_notation_content: "nội dung",
            cheatsheet_text_notation_index: "tiêu đề trang",
            cheatsheet_text_notation_new_line: "(+ dòng mới)",
            cheatsheet_text_notation_on_message_area: "*Nếu bạn nhập",
            cheatsheet_text_notation_replace_code_tag: "trong ô nhập liệu, &#96;&#96;&#96; sẽ được chuyển đổi thành thẻ [mã]",
            checkall: "Tất cả",
            checkall_full: "Chọn tất cả",
            commercial_announce_read_error_message: "",
            common_role_select_list_default: "Sửa tất cả quyền",
            common_role_select_list_default_tooltip: "Chỉnh sửa quyền của tất cả thành viên",
            concierge_lp_url: "",
            connection_error_invalid_user: "Hiện tại tài khoản của bạn đang bị đăng nhập bởi một người khác",
            connection_error_logout: "Bạn đã đăng xuất.",
            connection_error_offline: "Hiện tại bạn đang ở chế độ ngoại tuyến",
            contactpanel_add_contact: "Thêm vào danh sách liên lạc.",
            contact_add: "Thêm liên lạc",
            contact_add_all_hint: "Thành viên không nằm trong danh bạ của bạn",
            contact_add_multiple_mailtip: "Địa chỉ mail: (có thể nhập nhiều địa chỉ mail phân chia bằng cách xuống dòng dấu cách)",
            contact_click_detail: "Chọn số liên lạc để biết chi tiết",
            contact_confirm_delete: "Bạn có thực sự muốn xóa %%name%% khỏi danh sách liên lạc không? \n Khi xóa liên lạc khỏi danh sách thì đồng thời cuộc trò chuyện trực tiếp cũng sẽ bị xóa. *Không thể quay lại trạng thái ban đầu",
            contact_confirm_reject_request: "Bạn có thực sự muốn từ chối yêu cầu chấp nhận từ  [%%name%%] không?",
            contact_connect_from_ads_complete: "Người phụ trách của chúng tôi sẽ liên lạc với bạn qua chatwork. Xin vui lòng chờ.",
            contact_connect_from_ads_confirm: "Vui lòng gửi yêu cầu liên lạc để biết thêm thông tin.",
            contact_cwid_error_already: 'ChatworkID:"%%chatwork_id%%"đã được thêm vào danh sách liên lạc',
            contact_cwid_error_myself: "Bạn không thể thêm chính mình vào danh sách liên lạc",
            contact_cwid_error_noexist: 'Chatwork ID:"%%chatwork_id%%" không tồn tại',
            contact_delete: "Xóa khỏi danh sách",
            contact_doing_invite: "Đang gửi Lời mời...",
            contact_done_invite: "Đã gửi lời mời",
            contact_do_invite: "Gửi thư mời",
            contact_error_cantadd: "Không thể thêm vào danh sách",
            contact_error_is_disable_external: "không thể thêm vào - không có quyền giao tiếp với thành viên bên ngoài tổ chức của bạn.",
            contact_error_is_not_mailaddress: "] không phải là địa chỉ thư",
            contact_error_is_over_contactnum: "] không thể thêm vào danh sách bởi vì vượt quá giới hạn số lượng cho phép của gói dịch vụ đang sử dụng",
            contact_error_planlimit: "%%plan_name%% chỉ cho phép bạn thêm được tối đa %%limit_num%% người vào danh sách liên lạc.<br />Nếu bạn muốn thêm nhiều liên lạc mới thì bạn phải nâng cấp gói hiện thời.",
            contact_error_search_user_not_found: "Không tìm thấy người dùng Chatwork phù hợp yêu cầu",
            contact_invite: "Gửi thư mời",
            contact_invite_mail_add_email_address_to_invite: "Thêm địa chỉ email muốn mời",
            contact_invite_mail_add_individually: "Thêm thành viên từng người một",
            contact_invite_mail_already_in_your_contacts: "Người này đã có trong danh bạ của bạn.",
            contact_invite_mail_already_received_request: "Đã nhận được yêu cầu liên lạc.",
            contact_invite_mail_already_send_request: "Đã gửi yêu cầu liên lạc.",
            contact_invite_mail_bulk_add: "Thêm hàng loạt",
            contact_invite_mail_enter_message: "Nhập tin nhắn",
            contact_invite_mail_enter_your_email_address: "Nhập địa chỉ email",
            contact_invite_mail_failed_sent_following_reasons: "Lời mời không được gửi vì các lý do sau đây.",
            contact_invite_mail_invalid_email_address: "Địa chỉ email không hợp lệ.",
            contact_invite_mail_invitation_sent: "Địa chỉ email đã gửi",
            contact_invite_mail_invitation_was_sent: "Đã gửi lời mời thành công.",
            contact_invite_mail_invite_more: "Mời thêm",
            contact_invite_mail_maximum_contact_requests: "Đã đạt số lượng yêu cầu liên lạc tối đa.",
            contact_invite_mail_message_optional: "Tin nhắn (tùy chọn)",
            contact_invite_mail_move_to_direct_chat: "Di chuyển đến trò chuyện trực tiếp",
            contact_invite_mail_move_to_incoming_requests: "Di chuyển đến yêu cầu đang chờ",
            contact_invite_mail_move_to_your_sent_requests: "Di chuyển đến yêu cầu mà bạn đã gửi",
            contact_invite_mail_restricted_to_outside_orgaization: "Người này bị hạn chế kết nối với các thành viên bên ngoài tổ chức.",
            contact_invite_mail_send: "Gửi",
            contact_invite_mail_send_your_account: "Không thể gửi lời mời đến tài khoản của bạn.",
            contact_invite_mail_type_email_addresses: "Nhập địa chỉ email của thành viên muốn mời.",
            contact_is_completed: "đã được gửi",
            contact_mail_not_found: "Không có người sử dụng địa chỉ thư điện tử đã được chỉ định này. <br />Bạn có muốn gửi thư mời tham gia Chatwork vào địa chỉ thư này không?",
            contact_menu_invite_mail: "Mời qua Email",
            contact_menu_list: "Danh sách liên lạc",
            contact_menu_myrequest: "Đang yêu cầu xác nhận",
            contact_menu_norequest: "Chưa thêm/ Không có trong danh bạ",
            contact_menu_request: "Chưa đồng ý",
            contact_menu_user_search: "Tìm kiếm Người dùng",
            contact_multi_adding: "Đang bổ sung danh bạ của bạn...",
            contact_multi_add_confirm: "%%num%% thành viên sẽ được bổ sung vào trong danh bạ của bạn, có được không?",
            contact_multi_delete_confirm: "Nếu bạn xóa %%num%% người dùng khỏi danh bạ của mình, bạn sẽ không thể gửi tin nhắn được nữa..\nBạn có thực sự muốn xóa không?",
            contact_myrequest: "Yêu cầu đồng ý thêm vào danh sách liên lạc",
            contact_request_cancel: "Hủy yêu cầu",
            contact_rest_number: "...còn lại %%rest_number%% liên lạc",
            contact_search: "Tìm kiếm theo tên liên lạc",
            contact_search_introduction: "Tìm kiếm những người bạn có thể biết",
            contact_search_not_found: "Hiện không có thành viên nào để bạn có thể liên lạc",
            contact_search_placeholder: "Nhập tên, ChatWork ID, địa chỉ email ở đây",
            copy_to_clipboard: "Đã sao chép vào Clipboard",
            dateformat: "d/m/Y",
            datepicker_alt_text: "Chọn ngày",
            deleted_user: "Người dùng đã hủy sử dụng",
            deleting: "Đang xóa...",
            desktopalert_no_support: "Trình duyệt này không hỗ trợ thông báo trên desktop.\n (Hãy thử lại bằng trình duyệt Google Chrome)",
            directchat: "Trò chuyện trực tiếp",
            emoticon_beer: "Cốc bia",
            emoticon_blush: "Xấu hổ",
            emoticon_bow: "Cúi chào",
            emoticon_cake: "Bánh ngọt",
            emoticon_clap: "Vỗ tay",
            emoticon_coffee: "cà phê",
            emoticon_cracker: "Pháo",
            emoticon_dance: "Nhảy múa",
            emoticon_devil: "Mặt quỷ",
            emoticon_ec14: "EC14",
            emoticon_flower: "Bông hoa",
            emoticon_gogo: "Tiến lên!",
            emoticon_grin: "Nhe răng",
            emoticon_handshake: "cái bắt tay",
            emoticon_heart: "Trái tim",
            emoticon_ikemen: "Lạnh lùng Đẹp trai",
            emoticon_kiss: "Hôn",
            emoticon_komanechi: "nói đùa",
            emoticon_love: "Yêu",
            emoticon_lucky: "Tốt",
            emoticon_more_smile: "Cười to",
            emoticon_mumu: "Phân vân",
            emoticon_muscle: "cơ bắp",
            emoticon_ninmari: "Cười nham hiểm",
            emoticon_nod: "Gật đầu",
            emoticon_otaku: "Mọt sách",
            emoticon_puke: "Nôn",
            emoticon_roger: "Hiểu rồi",
            emoticon_sad: "Mặt buồn",
            emoticon_shake: "Lắc đầu",
            emoticon_smile: "Cười mỉm",
            emoticon_snooze: "buồn ngủ",
            emoticon_star: "Ngôi sao",
            emoticon_surprise: "Bất ngờ",
            emoticon_sweat: "Lo lắng",
            emoticon_talk: "Nói chuyện",
            emoticon_tears: "Khóc",
            emoticon_tongueout: "Ngốc",
            emoticon_whew: "Phù",
            emoticon_wink: "Nháy mắt",
            emoticon_wonder: "Cái gì?",
            emoticon_wry_smile: "Cười gượng",
            emoticon_yawn: "Ngáp",
            emoticon_yes: "Đúng",
            error_already_used: "Đã được sử dụng",
            error_cant_login_ip: "Lỗi kiểm tra địa chỉ IP",
            error_illegal_filename: 'Tên tập tin không thể chứa các ký tự sau\n  / : * ? " < > |',
            error_invalidchar: "Chỉ có thể sử dụng các kí tự tiếng anh và - _",
            error_maxlength: "Được phép nhập tối đa %%length%% kí tự.",
            error_no_login_action: "Bạn chưa đăng nhập.Không thực hiện được xử lý do đăng nhập không đúng",
            error_no_select: "Bạn chưa lựa chọn cuộc trò chuyện",
            error_upload: "Không thể tải lên upload.",
            error_upload_disable_send_file: "Không thể tải tập tin lên - yêu cầu sự cho phép của quản trị viên",
            error_upload_executable: "Bạn không thể tải các tập tin exe lên vì lý do bảo mật",
            error_upload_filesize: "Không thể tải được tệp tin vì kích cỡ tệp tin quá lớn.",
            error_upload_filetype: "Không thể tải được tệp tin lên vì định dạng không được hỗ trợ.",
            error_upload_image: "Chỉ chấp nhận JPEG, GIF, và PNG",
            error_upload_over_max_filesize: "Tập tin (%%size%%) của bạn vượt quá dung lượng giới hạn (%%max_size%%).",
            fbconnect_blog_url: "http://blog-en.chatwork.com/",
            feedback_desc_noreply: "*Xin lưu ý là bạn sẽ không nhận được trả lời.",
            feedback_thankyou: 'Cảm ơn ý kiến của bạn.<br />Ý kiến của bạn rất quan trọng đối với chúng tôi và nó sẽ được sử dụng để cải thiện ChatWork hơn nữa.<br />Chúc bạn trò chuyện vui vẻ! <img class="ui_emoticon" alt=":)" title="Smile :)" src="./image/emoticon/emo_smile.gif">',
            file: "Tệp tin",
            file_click_detail: "Chọn tập tin để hiển thị chi tiết",
            file_confirm_delete: "Bạn có thực sự muốn xóa tệp tin [%%file_name%%] không?",
            file_delete_error_try_again: "Không thể xóa tập tin. \nVui lòng thử lại sau.",
            file_delete_hint: "Xóa tập tin",
            file_download_hint: "Tải về",
            file_drop_area: "<span>Kéo và thả để đính kèm tập tin</span>",
            file_edited: "Đã chỉnh sửa tên tập tin.",
            file_edit_title: "Đang chỉnh sửa tên tập tin",
            file_error_empty: "Tên tập tin là bắt buộc.",
            file_loading: "Đang tải tệp tin",
            file_multi_confirm_delete: "%%num%% tập tin được chọn. Bạn có thực sự muốn xóa không?",
            file_name: "Tên tập tin:",
            file_nothing: "Hiện tại không có tệp tin.",
            file_not_found: "Không tồn tại Chưa lưu tệp tin",
            file_preview_download: "Tải hình ảnh về.",
            file_preview_image_cant_read: "Không thể tải bản xem trước",
            file_preview_image_hint: "Xem trước tập tin này",
            file_preview_open_newwindow: "Hiển thị hình ảnh được hiển thị trên cửa sổ mới khác.",
            file_rename_hint: "Chỉnh sửa tên tập tin",
            file_search: "Tìm kiếm tập tin",
            file_search_not_found: "Không tìm thấy tập tin",
            file_size: "Kích cỡ",
            file_uploaded: "Tệp tin đã được tải lên.",
            file_upload_by: "Đã tải lên bởi",
            file_upload_datetime: "Ngày tải lên cập nhật",
            groupchat: "Trò chuyện theo nhóm",
            imagedrop_tooltip_change_filename: "Đổi tên tập tin",
            imagedrop_tooltip_title: "Dán ảnh từ clipboard",
            invitation_link: "Liên kết lời mời",
            invitation_link_advanced_setting_index: "Cài đặt nâng cao",
            invitation_link_advanced_setting_lead: 'Bạn có thể thiết lập "Ảnh bìa" và "Mô tả" của nhóm trò chuyện để cung cấp thông tin hữu ích cho các thành viên.',
            invitation_link_code_copy: "Sao chép",
            invitation_link_help_tool_tip: "Bạn có thể dễ dàng mời mọi người vào trò chuyện nhóm ngay cả khi anh ấy/cô ấy chưa có tài khoản hoặc không nằm trong danh bạ của bạn.",
            invitation_link_setting_delete_current_header: "Xóa ảnh tiêu đề đường viền trên",
            invitation_link_setting_error_invalid_link_name: "Đường dẫn không thể sử dụng",
            invitation_link_setting_header_limit: "(Có thể sử dụng tệp tin JPEG,GIF và PNG. Dung lượng ảnh tối đa có thể sử dụng là 700KB và tối đa bề ngang là 600px)",
            invitation_link_setting_join_accept: "Cần sự đồng ý của người phụ trách mới có thể tham gia.",
            invitation_link_setting_status_disable: "Đã vô hiệu hóa",
            invitation_link_setting_title: "Cài đặt liên kết lời mời",
            invitation_link_set_groupchat_description_index: "Mô tả nhóm Trò chuyện",
            invitation_link_set_header_image_index: "Ảnh bìa Trang lời mời",
            invitelink: "Đường dẫn mời bạn",
            joinpublicchat_need_accept: "*Để tham gia vào nhóm trò chuyện này cần có sự đồng ý của người quản lý nhóm",
            joinpublicchat_request_sent: "Yêu cầu đã được gửi đến người quản lý nhóm trò chuyện. Bạn có thể tham gia vào cuộc trò chuyện nhóm sẽ trở thành thành viên nhóm sau khi người phụ trách đồng ý",
            joinpublicchat_title: "Tham gia vào cuộc nhóm trò chuyện nhóm",
            join_groupchat_btn_join_groupchat_label: "Tham gia nhóm trò chuyện này",
            join_groupchat_btn_send_join_request_label: "Yêu cầu tham gia",
            join_groupchat_invite_message: "Bạn có lời mời tham gia nhóm trò chuyện. Bạn có muốn tham gia không?",
            join_groupchat_my_disable_external: "Bạn không được phép liên lạc với mọi người ngoài tổ chức.",
            join_groupchat_not_found: "Trò chuyện này không tồn tại hoặc liên kết lời mời không hợp lệ.",
            join_groupchat_other_disable_external: "Một người nào đó trong trò chuyện này không được phép liên lạc với người ngoài tổ chức.",
            jump_to_addpoint: "Dẫn đến thời điểm thêm",
            jump_to_addpoint_not_found: "Không có tin nhắn nào vào thời điểm thêm vào.",
            jump_to_message: "Di chuyển đến tin nhắn này",
            kddi_manual_name: "Hướng Dẫn Dịch Vụ",
            kddi_manual_path: "http://info-en.kcw.kddi.ne.jp",
            lang_dateformattip: "Kiểu ngày giờ:",
            lang_typetip: "Ngôn ngữ:",
            live_call_chat: "Bạn được mời tham gia ChatWork Live với %%chat_name%%.",
            live_call_direct: "%%name%% đã mời bạn vào ChatWork Live",
            live_invited: "Bạn có một lời mời",
            live_join: "Tham gia ChatWork Live",
            live_member_add_introduction: "Chọn thành viên cho ChatWork Live",
            live_member_not_found: "Không có người dùng nào có thể ChatWork Live",
            live_start: "Đã bắt đầu ChatWork Live",
            live_video: "Tán gẫu truyền hình",
            live_voice: "Cuộc gọi chỉ có tiếng",
            loading: "Đang tải...",
            login_password_forget_link: "Quên mật khẩu?",
            mailaddress: "Địa chỉ Email",
            member: "Thành viên",
            member_addition_dialog_title: "Thêm thành viên",
            member_addition_edit_member_label: "Chỉnh sửa thành viên",
            member_detail_edit_member_label: "Chỉnh sửa thành viên",
            member_edit_add_member_label: "Thêm thành viên",
            member_edit_dialog_title: "Chỉnh sửa thành viên",
            menu_admin_setting: "Cài đặt quản trị",
            menu_announcement: "Thông báo",
            menu_assistant: "",
            menu_change: "Thay đổi",
            menu_cheat_sheet: "Danh sách phím tắt",
            menu_concierge: "",
            menu_contact_admin: "Quản lý liên lạc",
            menu_current: "Hiện tại:",
            menu_desktopalert: "Thông báo trên màn hình",
            menu_download_app: "Tải ứng dụng",
            menu_feedback: "Ý kiến",
            menu_file: "Quản lý tệp tin",
            menu_help: "Trợ giúp",
            menu_information: "Thông tin",
            menu_logout: "Thoát",
            menu_mychat_hint: "Mở My Chat",
            menu_mytask: "Quản lý công việc",
            menu_personal_setting: "Cài đặt cá nhân",
            menu_profile_setting: "Cài đặt tài khoản",
            menu_sound: "Âm thanh thông báo",
            menu_userguide: "Mẹo",
            message: "Tin nhắn",
            message_join_groupchat: "Tham gia nhóm trò chuyện này",
            message_link: "Liên kết đến Tin nhắn",
            message_open_chat: "Di chuyển tới cuộc trò chuyện này",
            multiselect_label: "Đang chọn",
            mychat: "My Chat",
            mychat_default_desc: "My Chat là chức năng trò chuyện thư mục dành riêng cho cá nhân.Bạn có thể sử dụng để viết ghi nhớ, quản lý công việc, v.v... hoặc sử dụng như một máy chủ chứa tập tin,...",
            name_suffix: "",
            newbrowser_check_compatibility_view_ie9: "Vui lòng đánh dấu Compatibility View nếu bạn đang sử dụng Internet Explorer 9 hoặc cao hơn. Để tắt, hãy nhấn nút compatibility view.",
            newbrowser_desc: "Để có thể sử dụng được tối đa các chức năng của Chatwork, khuyến khích bạn sử dụng những phiên bản trình duyệt mới nhất.",
            newbrowser_download_chrome: "http://www.google.com/chrome/?hl=vi",
            newbrowser_download_firefox: "http://www.mozilla.org/vi/firefox/",
            newbrowser_download_ie: "http://windows.microsoft.com/vi-VN/internet-explorer/downloads/ie",
            newbrowser_download_safari: "http://www.apple.com/vn/safari/",
            newbrowser_ie9_higher: "Dành cho người đang sử dụng Internet Explorer 9 trở lên.",
            newbrowser_listtip: "Bạn hãy sử dụng phiên bản mới nhất của những phiên bản trình duyệt sau đây.",
            newbrowser_recommended: "Các trình duyệt khuyên dùng",
            newbrowser_subject: "Trình duyệt bạn đang dùng không phải là trình duyệt khuyến khích nên dùng tối ưu cho ChatWork.",
            nickname_desc: 'Nếu cài đặt biệt danh thì hiển thị sau <span class="ui_to">[To:]</span> sẽ thay đổi thành chính biệt danh này.',
            nickname_name: "Tên",
            nickname_nickname: "Biệt danh",
            nickname_prefix: "",
            nickname_suffix: "",
            nickname_title: "Cài đặt biệt danh",
            notifier_newmessage: "Bạn có thư mới",
            off: "Tắt",
            on: "Bật",
            open_website: "Mở",
            open_window: "Mở trong thẻ mới",
            organization_filter_radio_all: "Hiển thị tất cả",
            organization_filter_radio_organized: "Chỉ hiển thị trong phạm vi tổ chức",
            pager_first: "Đến trang đầu tiên",
            pager_last: "Đến trang cuối cùng",
            pager_next: "Đến trang kế tiếp",
            pager_prev: "Quay lại trang trước",
            pin_hint: "Gắn ghim trò chuyện này",
            preview: "Xem trước",
            preview_needlogin: "(Yêu cầu đăng nhập tài khoản Google)",
            preview_video: "Chơi",
            profile_allow_search: "Cho phép hồ sơ của bạn hiển thị trong kết quả tìm kiếm",
            profile_chatworkidtip: "Chatwork ID:",
            profile_displaynametip: "Tên hiển thị:",
            profile_edit: "Chỉnh sửa hồ sơ",
            profile_error_invalid_cwid: "Hãy nhập ChatworkID hợp lệ",
            profile_error_no_displayname: "Hãy nhập tên hiển thị",
            profile_form_title: "Thông tin Đăng nhập",
            profile_image_limit: "(Tối đa đến 700 KB. Có thể dùng file ảnh có định dạng JPEG,GIF,PNG)",
            profile_setting_addresstip: "Địa chỉ nhà:",
            profile_setting_departmenttip: "Phòng / Bộ phận:",
            profile_setting_ecstudio_account: "Cài đặt thông tin tài khoản ở đây",
            profile_setting_edit_avatar: "Chỉnh sửa",
            profile_setting_edit_cover: "Chỉnh sửa ảnh bìa",
            profile_setting_emailtip: "e-mail:",
            profile_setting_introductiontip: "Tiểu sử:",
            profile_setting_note_change_orgname: "Muốn đổi tên tổ chức của bạn không? Hãy nhấn vào đây",
            profile_setting_orgnametip: "Tên tổ chức:",
            profile_setting_privacy_contact: "Chỉ cho danh bạ của bạn",
            profile_setting_privacy_public: "Công khai",
            profile_setting_set_facebook_note: 'Nhấn vào <a href="https://www.facebook.com/username/" target="_blank">đây</a> để tìm hiểu thêm về username (tên người dùng) của facebook.',
            profile_setting_tel_extensiontip: "Điện thoại (Nội bộ):",
            profile_setting_tel_mobiletip: "Di động:",
            profile_setting_tel_organizationtip: "Điện thoại (công việc):",
            profile_setting_titletip: "Chức vụ:",
            profile_setting_urltip: "URL:",
            raise_error: "Có lỗi xảy ra!",
            readonly: "Chỉ đọc",
            read_more: "Chi tiết hơn...",
            reply_badge_tooltip_label: "Xem tin nhắn gốc",
            role: "Quyền hạn",
            room_permission_setting_allow_add_task: "Cho phép thêm công việc",
            room_permission_setting_allow_see_member: "Hiển thị danh sách thành viên tham gia vào cuộc trò chuyện.",
            room_permission_setting_allow_send_message: "Cho phép gửi tin nhắn",
            room_permission_setting_allow_upload_file: "Cho phép gửi tệp tin",
            room_permission_setting_index: "Cài đặt quyền hạn",
            room_permission_setting_lead: "không áp dụng cho người dùng có quyền quản trị",
            room_permission_setting_title: "Chỉnh sửa Quyền trò chuyện nhóm",
            room_request_description: "Bằng việc chấp nhận lời yêu cầu, bạn có thể cho phép người khác tham gia vào cuộc trò chuyện nhóm trò chuyện.",
            room_request_title: "Danh sách yêu cầu tham gia vào cuộc trò chuyện nhóm trò chuyện",
            saving: "Đang lưu...",
            search_except_wordtip: "Từ khóa loại trừ:",
            search_except_word_placeholder: "Nhập nội dung loại trừ tìm kiếm",
            search_group_by_chat: "Sắp xếp theo trò chuyện",
            search_group_by_time: "Sắp xếp theo mới nhất",
            search_group_by_user: "Sắp xếp theo Thành viên",
            search_loading: "Đang tìm...",
            search_max_results: "(Tối đa %%max_results%% trường hợp)",
            search_message_fromtip: "Tác giả:",
            search_message_termtip: "Ngày:",
            search_option: "Lựa chọn",
            search_placeholder: "Nhập để tìm kiếm",
            search_resulttip: "Kết quả tìm kiếm:",
            search_result_bychat_closeall: "Đóng tất cả",
            search_result_bychat_openall: "Mở tất cả",
            search_result_not_found: "Không tìm thấy kết quả phù hợp với %%keyword%%",
            search_result_unit: "",
            search_suggest: 'Tìm kiếm "%%keyword%%" trong các tin nhắn',
            search_term_30: "Trong vòng 30 ngày",
            search_term_365: "Trong vòng 1 năm",
            search_term_7: "Trong vòng 7 ngày",
            search_term_90: "Trong vòng 90 ngày",
            search_term_all: "Tất cả",
            search_term_separator: "~",
            search_term_specify: "Chỉ định",
            search_title: "Tìm kiếm tin nhắn",
            selectall_full: "Chọn tất cả",
            sending: "Đang gửi...",
            serviceadmin_do_upgrade: "Nâng cấp Chatwork",
            serviceadmin_upgrade: "Nâng cấp",
            serviceadmin_user_list_label: "Quản lý người dùng",
            sound_type: "Loại âm thanh",
            sound_volume: "Âm lượng",
            start_chatwork: "Khởi động %%service_name%%",
            storage_activity_ratio_label: "Tỉ lệ sử dụng kho lưu trữ Bộ nhớ đã dùng",
            storage_add_link: "Thêm dung lượng kho lưu trữ bộ nhớ",
            storage_cancel_add_storage_label: "Thêm dung lượng kho lưu trữ bộ nhớ",
            storage_cancel_send_cancel: "Không thể gửi được %%object%%",
            storage_cancel_send_object: "Bạn không thể gửi được %%object%% vì kích cỡ %%object%% vượt quá giới hạn dung lượng kho lưu trữ có thể sử dụng cho phép. <br /><br />Để tiếp tục gửi  %%object%% này  bạn nên xóa bớt các tệp tin không cần thiết ra khỏi thư mục quản lý tệp tin, hoặc là",
            storage_cancel_send_object_suffix_add_storage: "Hãy sử dụng kho lưu trữ bộ nhớ bổ sung.",
            storage_cancel_send_object_suffix_tell_admin: "Hãy liên hệ lạc với người quản lý ban quản trị gói dịch vụ doanh nghiệp của bạn đang dùng.",
            storage_cancel_send_object_suffix_upgrade: "Hãy nâng cấp gói cước đang dùng.",
            storage_cancel_upgrade_label: "Nâng cấp gói cước đang dùng",
            storage_limit_notice_body: "Với gói dịch vụ hiện tại bạn không thể gửi thêm tệp tin.<br /><br />Nếu muốn tiếp tục bạn cần phải xóa bớt các tệp tin không cần thiết trong thư mục quản lý tệp tin hoặc là",
            storage_limit_notice_footer: "Hãy chú ý là khi dung lượng kho lưu trữ đã đạt đến giới hạn sử dụng, nếu để nguyên như vậy quá 1 tuần Nếu để dung lương bộ nhớ đầy quá 1 tuần (%%date%%) thì bạn sẽ không thể gửi tin nhắn được nữa.",
            storage_limit_notice_message: "Cảnh báo: Kho lưu trữ bộ nhớ của bạn đã đầy đã hết.",
            storage_limit_notice_title: "Kho lưu trữ đã Bộ nhớ đầy",
            storage_limit_warning_body: "Vì đã quá một tuần sau khi dung lượng kho lưu trữ đạt đến giới hạn sử dụng, <br /> nên Bộ nhớ bị đầy sau 1 tuần chức năng gửi tin nhắn đến cuộc trò chuyện đã bị tạm dừng. <br /><br />  Để tiếp tục sử dụng bạn cần phải xóa bớt những tệp tin không cần thiết trong thư mục quản lý tệp tin, hoặc là",
            storage_limit_warning_message: "[Quan Nghiêm trọng] Chức năng gửi tin nhắn của bạn bị tạm dừng.",
            storage_limit_warning_title: "Chức năng gửi tin nhắn của bạn bị tạm dừng",
            storage_other_user: "Người dùng khác",
            storage_show_all_user: "Hiển thị danh sách người dùng sử dụng",
            storage_used: "đã sử dụng",
            task: "Công việc",
            task_added: "Đã thêm công việc.",
            task_add_button: "Thêm công việc",
            task_click_detail: "Chọn công việc để xem chi tiết",
            task_client: "Từ:",
            task_confirm_delete: "Bạn có thực sự muốn xóa công việc này hay không?",
            task_deleted: "Công việc này đã được xóa",
            task_delete_hint: "Xóa công việc",
            task_done: "Đã hoàn thành công việc.",
            task_edited: "Đã sửa công việc.",
            task_edit_hint: "Chỉnh sửa công việc",
            task_edit_title: "Chỉnh sửa công việc",
            task_error_empty: "Chưa điền nội dung công việc",
            task_filter_all: "Tất cả",
            task_filter_exired: "Hết hạn",
            task_filter_inweek: "Tuần này",
            task_filter_nolimit: "Không kỳ hạn",
            task_filter_today: "Hôm nay",
            task_incharge: "Đến",
            task_inchargetip: "Đến:",
            task_incharge_placeholder: "Giao cho",
            task_input_placeholder: "Nhập công việc ở đây",
            task_limit: "Thời hạn",
            task_limittip: "Thời hạn:",
            task_limit_placeholder: "Đặt ngày hết hạn",
            task_loading: "Đang tải công việc...",
            task_menu_client: "Bản thân là người yêu cầu",
            task_menu_close: "Hoàn thành",
            task_menu_incharge: "Bản thân là người phụ trách",
            task_menu_open: "Chưa hoàn thành",
            task_nothing: "Không có công việc",
            task_not_found: "Không có công việc",
            task_num: "(hơn %%num%%)",
            task_reverted: 'Đã đổi thành "công việc chưa hoàn thành".',
            task_tasktip: "Công việc:",
            text_copied: "Đã sao chép",
            tutorial_addbutton: "Từ đây bạn có thể tạo nhóm trò chuyện mới hoặc thêm thành viên mới vào nhóm.",
            tutorial_add_task: "Từ đây bạn có thể thêm công việc mới.",
            tutorial_globalsearch: "Từ đây bạn có thể tìm kiếm tên cuộc trò chuyện và nội dung tin nhắn.",
            tutorial_send_message: "Từ đây bạn có thể gửi tin nhắn.",
            uncheckall: "Bỏ chọn",
            url_download_app: "http://www.chatwork.com/vi/download/",
            userguide_message: "Tin nhắn",
            userguide_message_about: "My Chat",
            userguide_message_about_content1: "<p>My Chat là nơi chỉ dành cho bạn. Bạn có thể sử dụng làm sổ tay cá nhân của mình, hoặc tự giao việc cho chính mình để nhớ mọi thứ.</p>",
            userguide_message_about_content2: "<p>Đơn giản chỉ cần nhập tin nhắn, ghi chú, hoặc công việc của bạn, và nhấn Gửi.</p>",
            userguide_message_delete: "Xóa tin nhắn",
            userguide_message_delete_content1: '<p>Bạn cũng có thể xóa tin nhắn mà bạn đã gửi.<br />Từ cùng một trình đơn nhắn tin, hãy nhấn vào nút "..." và sau đó "Xóa".</p>',
            userguide_message_delete_content2: '<p>Bạn sẽ được yêu cầu xác nhận "Bạn có thực sự muốn xóa tin nhắn này hay không?" Nếu bạn muốn tham gia thảo luận thì bạn hãy nhấn "OK" </p>',
            userguide_message_edit: "Chỉnh sửa tin nhắn",
            userguide_message_edit_content1_biwa: '<p>Di chuột qua tin nhắn mà bạn đã gửi và nhấn vào "Sửa".</p>',
            userguide_message_edit_content2_biwa: '<p>Khi bạn nhấn vào "Đang chỉnh sửa" được hiển thị trên màn hình nhập liệu; thì bạn có thể chỉnh sửa tin nhắn của mình.</p>',
            userguide_message_mention: "Đề cập đến một ai đó trong tin nhắn",
            userguide_message_mention_content1: '<p>Khi bạn muốn đề cập đến một ai đó trong nhóm trò chuyện, hãy sử dụng tính năng "Đến".</p>',
            userguide_message_mention_select: "Chọn người",
            userguide_message_mention_select_content1: "<p>Chọn người mà bạn muốn đề cập đến.</p>",
            userguide_message_mention_send: "Gửi tin nhắn",
            userguide_message_mention_send_content1: "<p>Khi bạn chọn thành viên nhận tin nhắn của mình, thẻ ĐẾN được chèn trên cùng hộp thoại tin nhắn. Bạn có thể bổ sung tin nhắn của mình bên dưới thẻ này và gửi tin nhắn.</p>",
            userguide_message_mention_send_content2: "<p>Thao tác này sẽ chuyển bạn đến màn hình tin nhắn đã gửi.</p>",
            userguide_message_mention_send_content3: '<p>Khi bạn được người khác đề cập đến, một biểu tượng có màu xanh lá "ĐẾN" sẽ hiển thị trong danh sách nhóm trò chuyện.</p>',
            userguide_message_quote: "Trích dẫn tin nhắn",
            userguide_message_quote_content1_biwa: "<p>Khi số lượng người trong nhóm của bạn tăng lên, việc tìm ra người mà bạn đang nói chuyện trở nên khó khăn hơn, vì vậy bạn có thể trích dẫn tin nhắn của họ để cuộc trò chuyện trở nên dễ dàng hơn.</p><h3>Cách hiển thị trình đơn tin nhắn</h3><p>Di chuột của bạn qua tin nhắn của người khác (đặt con trỏ trên đoạn văn bản)<br />để hiển thị nút Trả lời, Trích dẫn, Công việc, Liên kết, và các nút khác.</p>",
            userguide_message_quote_content2_biwa: '<p>Nhấn vào nút "Trích dẫn" để chèn các thẻ và tin nhắn được trích dẫn vào hộp thoại tin nhắn văn bản.</p>',
            userguide_message_quote_content3_biwa: "<p>Sau đó bạn có thể thêm tin nhắn của riêng bạn để được thông báo trích dẫn trước khi gửi đi. Điều này làm cho nó rõ ràng những tin nhắn bạn đang trả lời.</p>",
            userguide_profile: "Cài đặt Hồ sơ",
            userguide_profile_about: "Giới thiệu về Cài đặt Hồ sơ",
            userguide_profile_about_content_biwa: "<p>Bạn có thể thay đổi ảnh đại diện, tên tổ chức, thông tin liên lạc, tiểu sử của mình... trong Cài đặt Hồ sơ.</p><p>Thao tác này sẽ giúp người khác dễ dàng tìm được hồ sơ của bạn hơn.</p>",
            userguide_profile_chatworkid: "Thiết lập ChatWork ID",
            userguide_profile_chatworkid_content1: "<p>Khi bạn lấy được ChatWork ID của mình, bạn có thể tận dụng lợi thế của liên kết tùy biến để người khác có thể tìm thấy bạn và kết nối với bạn dễ dàng hơn.</p><p>Ví dụ %%chatwork_home_path%%/[ChatWork ID của bạn]</p>",
            userguide_profile_chatworkid_content2: '<p>Đơn giản chỉ cần gõ vào ChatWork ID ưa thích của bạn trong ô văn bản dưới đây và nhấn "Tiến hành lưu".</p>',
            userguide_profile_open_setting: "Trang Hồ sơ của bạn",
            userguide_profile_open_setting_content: "<p>Bạn có thể mở Cài đặt hồ sơ bằng cách nhấn vào biểu tượng trên góc trên bên phải.</p>",
            userguide_profile_open_setting_content_biwa: '<p>Nhấn "Chỉnh sửa hồ sơ" để mở màn hình chỉnh sửa.</p>',
            userguide_profile_upload_image: "Tải hình ảnh lên",
            userguide_profile_upload_image_content_biwa: '<p>Nhấn vào "Chỉnh sửa" trong thông tin cá nhân của bạn.</p>',
            userguide_profile_upload_image_content_biwa2: '<p>Chọn "Tải lên", chọn ảnh muốn tải lên, và nhấn vào "Tiến hành lưu" để gửi ảnh được lưu trong máy tính của bạn.</p>',
            userguide_task: "Công việc",
            userguide_task_about: "Công việc là gì?",
            userguide_task_about_content: "<p>Tính năng công việc cho phép bạn tạo danh sách những việc cần làm, và thậm chí bạn có thể tự phân công cho chính mình.</p><p>Mẹo nhỏ: hãy cứ thử giao một việc gì đó cho chính bạn trong My Chat, để bạn có thể hiểu rõ hơn về tính năng này hoạt động như thế nào.</p>",
            userguide_task_add: "Thêm công việc",
            userguide_task_add_content1_biwa: '<p>Nhập thông tin chi tiết công việc vào hộp thoại văn bản với "Nhập công việc ở đây" ở bên tay phải màn hình trò chuyện. Thêm người được giao công việc và ngày hết hạn rồi nhấn vào nút "Thêm công việc".</p>',
            userguide_task_add_content2_biwa: "<p>Nếu công việc được hiển thị trên dòng thời gian, thì công việc đã được thêm vào thành công.</p>",
            userguide_task_browse: "Kiểm tra công việc",
            userguide_task_browse_content1: "<p>Ở góc dưới cùng bên phải ở màn hình ChatWork, bạn có thể xem danh sách công việc được giao cho mình.</p>",
            userguide_task_browse_content2_biwa: "<p>Danh sách cuộc trò chuyện sẽ hiển thị số công việc đã giao cho bạn ở bên phải biểu tượng công việc.</p>",
            userguide_task_complete: "Hoàn thành công việc",
            userguide_task_complete_content1_biwa: '<p>Khi bạn hoàn thành công việc của mình, hãy nhấn vào nút "Hoàn thành" ở trên cùng phía bên tay trái.</p>',
            userguide_task_complete_content2: '<p>Tin nhắn "Đã hoàn thành công việc." sẽ tự động được gửi đến thành viên trong nhóm trò chuyện.</p>',
            userguide_task_complete_content3: '<p>Đây là phần kết thúc nội dung " Cách sử dụng cơ bản %%service_name%%".</p>',
            userguide_title: "Cách sử dụng cơ bản cho %%service_name%%",
            userguide_welcome_head: "Giới thiệu về %%service_name%%",
            userguide_welcome_service_desc_chatwork: "%%service_name%% công cụ tán gẫu cho doanh nghiệp dựa trên đám mây, cho phép bạn tán gẫu theo nhóm, cuộc gọi truyền hình, và quản lý công việc cũng như tập tin.",
            userguide_welcome_service_desc_kddi: "KDDI ChatWork là một công cụ truyền thông xã hội cho phép bạn có thể có trò chuyện theo nhóm, gọi video, quản lý các công việc và các tập tin.",
            username: "Tên đăng nhập",
            welcome_title: "Chào mừng bạn đến %%service_name%%!",
            word_separator: ",",
            _button_delete_with_agreement: "Xóa (Tôi đã xác nhận)",
            _chatroom_confirm_delete_alert: 'Bạn có thực sự muốn xóa "%%room_name%%" không?',
            _chatroom_confirm_delete_content: "Vui lòng kiểm tra thông tin sau trước khi xóa các trò chuyện nhóm.",
            _chatroom_confirm_delete_note_1: "Thao tác này không chỉ xóa khỏi danh sách của bạn, mà còn áp dụng cho tất cả mọi người tham gia trò chuyện nhóm.",
            _chatroom_confirm_delete_note_2: "Tất cả tin nhắn, công việc, và tập tin đều sẽ bị xóa.",
            _chatroom_confirm_delete_note_3: "Tất cả dữ liệu bị xóa sẽ không bao giờ được phục hồi.",
            _chatwork_apitoken_caution_1: 'Tài liệu API của ChatWork có <a href="http://link.chat-work.com/api_doc" target="_blank">ở đây</a>.',
            _chatwork_apitoken_caution_2: "Vui lòng đừng chia sẻ mã API của bạn cho người thứ ba.",
            _chatwork_apitoken_caution_3: "Chúng tôi có thể ngăn cấm việc sử dụng API nếu có một số lượng yêu cầu lớn bất thường và lượt tải quá mức vào các máy chủ của chúng tôi.",
            _chatwork_apitoken_caution_4: 'Khi truy cập hoặc sử dụng API của chúng tôi, bạn đồng ý với <a href="http://www.chatwork.com/ja/terms/api.html" target="_blank">Điều khoản Sử dụng API của ChatWork (tiếng Nhật)</a>.',
            _chatwork_apitoken_confirm_regenerate: "Mã API hiện tại của bạn sẽ không còn giá trị nếu bạn tạo lại mã. Bạn có muốn tiếp tục không?",
            _chatwork_apitoken_copy_btn: "Sao chép",
            _chatwork_apitoken_display_btn: "Hiển thị",
            _chatwork_apitoken_empty_password: "Vui lòng nhập mật khẩu của bạn.",
            _chatwork_apitoken_invalid_password: "Mật khẩu không hợp lệ. Vui lòng thử lại.",
            _chatwork_apitoken_password_caption: "Vui lòng nhập mật khẩu ChatWork của bạn để hiển thị và tạo mã API của bạn.",
            _chatwork_apitoken_password_placeholder: "Nhập mật khẩu",
            _chatwork_apitoken_regenerate_btn: "Tạo lại",
            _chatwork_apitoken_token_label: "API:",
            _chatwork_apitoken_token_placeholder: "API",
            _chatwork_file_upload_eset_link: "",
            _chatwork_path_help_file_upload_error: ""
        }
    }, {}],
    331: [function(require, module, exports) {
        module.exports = {
            accepting: "正在确认...",
            adding: "添加中...",
            add_contact_confirm_body_with_account_names: "Would you like to send a contact request to %%account_names%%?",
            add_contact_confirm_dialog_title: "Contact Request",
            add_contact_confirm_send_mail_at_same: "* They will also recieve email when your request is sent.",
            admin: "管理员",
            announce_button_close: "将此通知设置为非显示",
            assistant_lp_url: "",
            available: "可使用",
            button_accept: "接受",
            button_accept_long: "接受",
            button_add: "添加",
            button_add_contact_long: "添加联系人",
            button_cancel: "取消",
            button_change_long: "变更",
            button_close: "关闭",
            button_complete: "完成",
            button_create: "创建",
            button_create_long: "创建",
            button_delete: "删除",
            button_delete_long: "删除",
            button_edit: "编辑",
            button_incomplete: "未完成",
            button_next: "下一个",
            button_ok: "OK",
            button_reject: "拒绝",
            button_reject_long: "拒绝",
            button_return: "改行",
            button_save: "保存",
            button_save_long: "保存",
            button_search: "搜索",
            button_send: "发送",
            canceling: "正在取消...",
            chat: "聊天",
            chatroom_added: "”添加了。",
            chatroom_btn_add_member_tooltip: "Add Member",
            chatroom_changed: "”更改成了。",
            chatroom_chatname_is: "将聊天名“",
            chatroom_chat_edited: "更改了聊天信息。",
            chatroom_chat_joined: "加入聊天。",
            chatroom_confirm_leave: "确定要退出“%%room_name%%”吗？\n一旦退出后即不能浏览该聊天的内容。\n再次加入该群时需要群中成员的邀请。",
            chatroom_contact_added: "联系人已添加。",
            chatroom_contact_added_by_facebook: "Contact has been added through Facebook friends' auto add function",
            chatroom_createchat_same_members: "同一用户新建聊天记录",
            chatroom_createchat_same_members_confirm: "这些聊天记录中不包括没有建立联系的用户。\n只有成为联系人的用户才能新建聊天记录吗？",
            chatroom_create_title: "新建群聊",
            chatroom_delete: "删除群聊",
            chatroom_deleted: "”删除了。",
            chatroom_desc: "概要",
            chatroom_description_is: "将概要“",
            chatroom_desctip: "概要：",
            chatroom_desc_explain: "可以写入关于该聊天的说明，备忘及相关的链接等。",
            chatroom_desc_none: "无概要",
            chatroom_disable_external: "无法加入-没有和组外成员交流的权限",
            chatroom_edit_desc_title: "编辑概要",
            chatroom_error_cant_add: "创建聊天失败",
            chatroom_error_noadmin: "至少需要一个管理员",
            chatroom_error_noself: "不能创建不包括自己的聊天",
            chatroom_error_not_found: "该聊天不存在",
            chatroom_error_no_member: "无法载入消息-加入该聊天需要许可",
            chatroom_error_no_name: "没有输入群聊名",
            chatroom_error_planlimit: "%%plan_name%%只能创建%%limit_num%%个群聊。<br />要创建新的群聊的话请考虑升级。",
            chatroom_groupchat_created: "新建了群聊。",
            chatroom_icon_type_preset: "选择图标",
            chatroom_icon_type_upload: "上传",
            chatroom_icon_updated: "更改群头像。",
            chatroom_info_edit: "编辑聊天信息",
            chatroom_invitation_link_setting: "Invitation Link Settings",
            chatroom_leave: "退出群聊",
            chatroom_leaved: "”退出了。",
            chatroom_member_add_contact: "添加所有",
            chatroom_member_detail: "用户详情",
            chatroom_member_is: "将成员“",
            chatroom_member_long: "聊天成员",
            chatroom_member_nocontact: "未添加联系人",
            chatroom_member_requests_notice: "有(%%request_num%%个未接受的成员)",
            chatroom_member_rest_number: "...其他%%rest_number%%人",
            chatroom_member_role_admin_desc: "可以更改群聊名，概要及成员。",
            chatroom_member_role_member_desc: "不能更改群聊名，概要及成员。",
            chatroom_member_role_readonly_desc: "只能查看。不可发送信息。",
            chatroom_mychat_created: "创建了我的聊天。",
            chatroom_nametip: "聊天名：",
            chatroom_not_only_internal: "包含组织外用户的聊天",
            chatroom_over_groupchatnum: "因超出了群聊限制数邀请失败。",
            chatroom_priv_changed: "”的权限更改了。",
            chatroom_resigned_priv_change: "因解除了与ChatWork的合约，该聊天由1对1聊天更改为了群聊。",
            chatroom_resigned_priv_change_all: "因该聊天不存在管理员，所有成员的权限更改成了管理员。",
            chatroom_room_permission_setting: "Edit Group Chat Permissions",
            chatroom_search_member: "搜索成员名",
            chatroom_set: "”设定成了。",
            chatroom_setting: "设定聊天模式",
            chatroom_show_limit_member_num: "(Max : %%num%%)",
            chatroom_tasklist_mytaskonly: "只显示我的任务",
            chatsend_button_delete_message_only: "只删除消息",
            chatsend_button_delete_with_file: "连同消息一起删除文件",
            chatsend_button_delete_with_task: "连同消息一起删除任务",
            chatsend_chat_explain: "在此处输入信息内容",
            chatsend_confirm_delete: "确定要删除这条信息吗？",
            chatsend_confirm_delete_with_file: "是否连同通知消息一起删除文件？",
            chatsend_confirm_delete_with_task: "是否连同通知消息一起删除任务？",
            chatsend_delete_filetip: "删除对象：",
            chatsend_delete_tasktip: "删除对象：",
            chatsend_emoticonalt: "表情文字：可以表达自己的心情",
            chatsend_enter_action_explain: "按Enter键发送信息",
            chatsend_enter_action_explain_enter: "\n(按Shift+Enter键改行)",
            chatsend_enter_action_explain_enter_send: "\n(按Shift+Enter键发送)",
            chatsend_error_no_exist_for_edit: "您要编辑的信息不存在",
            chatsend_error_no_incharge: "请指定负责人",
            chatsend_error_send: "发送聊天失败",
            chatsend_error_send_task: "发送任务失败",
            chatsend_expand_area: "放大窗口显示",
            chatsend_filealt: "可以发送文件",
            chatsend_nickname_setting: "设置昵称",
            chatsend_not_allow_send_messages: "由于此聊天设置原因无法发送信息",
            chatsend_quote: "引用",
            chatsend_reply: "回信",
            chatsend_shift_and_command_hint: "按Shift連續選取，再按⌘立即傳送",
            chatsend_shift_and_ctrl_hint: "按Shift键可连续选择，按Ctrl键立即发送",
            chatsend_shift_multiselect: "按shift键连续选择",
            chatsend_toalt: "To：可以唤起对方注意",
            chatsetting_faviconstat: "在浏览器图标处显示未读消息数目",
            chatsetting_hide_message_box_tags: "",
            chatsetting_hide_message_box_tags_change_confirm: "",
            chatsetting_notifier: "桌面通知",
            chatsetting_notifier_duration: "桌面通知的显示时间",
            chatsetting_notifier_duration_10sec: "10秒",
            chatsetting_notifier_duration_20sec: "20秒",
            chatsetting_notifier_duration_5sec: "5秒",
            chatsetting_notifier_message: "桌面通知时显示信息内容",
            chatsetting_notifier_onlyto: "只是在提到我时通知我",
            chatsetting_notifier_show: "显示桌面通知",
            chatsetting_popup_sound: "收到新信息后有提示音",
            chatsetting_private_nickname: "当您的组织以外的成员在对话中时，请勿使用昵称。",
            chatsetting_shorten_url: "Shorten URL for display purpose",
            chatsetting_show_delmessage: "显示信息被删除的记号",
            chatsetting_show_external: "用于显示组外成员在群聊中的图标",
            chatsetting_tab_apitoken: "API",
            chatsetting_tab_display: "设定显示",
            chatsetting_tab_language: "语言设定",
            chatsetting_tab_login: "设定登录",
            chatsetting_tab_notification: "设定通知",
            chatsetting_test_sound: "播放测试",
            chatsetting_unread_mail: "一定时间内未读的聊天记录，以邮件形式通知",
            chatsetting_unread_mail_label: "邮件通知",
            chatsetting_unread_mail_term_1: "毎1小时",
            chatsetting_unread_mail_term_12: "毎12小时",
            chatsetting_unread_mail_term_2: "毎2小时",
            chatsetting_unread_mail_term_24: "毎24小时",
            chatsetting_unread_mail_term_3: "毎3小时",
            chatsetting_unread_mail_term_6: "毎6小时",
            chatsetting_unread_mail_term_none: "不通知",
            chatwork_do_update: "升级为最新版",
            chatwork_help_page_path: "http://support-en.chatwork.com/hc/en-us",
            chatwork_service_name: "ChatWork",
            chatwork_update: "ChatWork已被升级。为了显示升级内容，请进行浏览器的刷新。",
            chat_action_copy: "Copy",
            chat_action_copy_desc: "Show raw text",
            chat_action_copy_title: "消息",
            chat_action_delete: "删除",
            chat_action_delete_desc: "删除这条信息",
            chat_action_edit: "编辑",
            chat_action_edit_desc: "编辑这条信息",
            chat_action_link: "链接",
            chat_action_link_desc: "插入跳转至这条信息的链接",
            chat_action_move: "进入此信息",
            chat_action_move_desc: "进入此信息",
            chat_action_quote: "引用",
            chat_action_quote_desc: "引用这条信息",
            chat_action_reply: "回信",
            chat_action_reply_desc: "给这条信息回信",
            chat_action_task: "Task",
            chat_action_task_desc: "Convert this message to task",
            chat_action_unread: "未读",
            chat_action_unread_desc: "将这条信息标记为未读",
            chat_category_allchat: "所有聊天",
            chat_category_chatselecttip: "选择聊天：",
            chat_category_confirm_delete: "确定要删除类别“%%category_name%%”吗？",
            chat_category_create: "新建类别",
            chat_category_edit: "编辑类别",
            chat_category_error_no_chats: "没有选择聊天",
            chat_category_error_no_name: "没有输入类别名",
            chat_category_mytaskchat: "有我的任务的聊天",
            chat_category_nametip: "类别名：",
            chat_category_select: "选择类别",
            chat_category_selected_chat_num: "正在选择的聊天记录",
            chat_deleted: "信息已删除",
            chat_delete_label: "刪除",
            chat_editing: "编辑留言",
            chat_editing_label_on_message: "编辑留言",
            chat_edit_label: "编辑",
            chat_error_not_found: "不存在该信息",
            chat_filter_readonly: "显示未读聊天记录",
            chat_filter_readonly_empty: "无未读留言",
            chat_filter_taskonly: "只显示自己任务的聊天信息",
            chat_filter_taskonly_empty: "没有显示自己任务的聊天记录",
            chat_filter_toonly: "只显示自己的聊天内容",
            chat_filter_toonly_empty: "聊天记录中没有自己的留言",
            chat_loading: "正在读取信息...",
            chat_menu_chatlist: "聊天列表",
            chat_partial_quote_message: "引用留言",
            chat_partial_quote_task: "引用任务",
            chat_post_label: "投稿",
            chat_rest_roomtip: "剩下的聊天数：",
            chat_search: "搜索在线聊天用户名和留言信息",
            chat_server_error_try_again: "There was an error communicating with the server.\nPlease try again in a few moments.",
            chat_show_more: "显示更多",
            cheatsheet_name_notation_code: "Disable emoticon conversion",
            cheatsheet_name_notation_hr: "Ruled line",
            cheatsheet_name_notation_info: "Outer boarder",
            cheatsheet_name_notation_mix_tag: "Combine multiple tags",
            cheatsheet_notation_title: "Message decoration tags",
            cheatsheet_or: "or",
            cheatsheet_short_cut_title: "List of keyboard shortcuts",
            cheatsheet_supplement_text_key_j: '* it\'s "i (I)" and not "j (J)"',
            cheatsheet_text_key_c: "Add contact",
            cheatsheet_text_key_command_arrow_left: "Close or open left column",
            cheatsheet_text_key_command_arrow_right: "Close or open right column",
            cheatsheet_text_key_enter: "Open selected chat",
            cheatsheet_text_key_esc: "Move focus out of message input field",
            cheatsheet_text_key_f: "Move cursor to chat search bar",
            cheatsheet_text_key_g: "Create group chat",
            cheatsheet_text_key_j: "Select the chat below",
            cheatsheet_text_key_k: "Select the chat above",
            cheatsheet_text_key_m: "Move cursor to message input field",
            cheatsheet_text_key_question: "List of shortcuts",
            cheatsheet_text_key_t: "Move cursor to task input field",
            cheatsheet_text_key_tab: "Move focus to send button",
            cheatsheet_text_notation_content: "content",
            cheatsheet_text_notation_index: "header",
            cheatsheet_text_notation_new_line: "(+ new line)",
            cheatsheet_text_notation_on_message_area: "*If you enter",
            cheatsheet_text_notation_replace_code_tag: "in the input box, &#96;&#96;&#96; will be converted to the [code] tag",
            checkall: "全部",
            checkall_full: "全选",
            commercial_announce_read_error_message: "",
            common_role_select_list_default: "Edit all permissions",
            common_role_select_list_default_tooltip: "Edit permissions of all members",
            concierge_lp_url: "",
            connection_error_invalid_user: "现在别的用户正在登录。",
            connection_error_logout: "现在已退出",
            connection_error_offline: "现在处于下线状态",
            contactpanel_add_contact: "添加联系人",
            contact_add: "添加联系人",
            contact_add_all_hint: "成员不在你的联系人中",
            contact_add_multiple_mailtip: "邮箱地址：（以改行断开的格式输入多个邮箱）",
            contact_click_detail: "点击联系人了解详情",
            contact_confirm_delete: "真的把“%%name%%”从联系人中删除吗？\n直接聊天也将同时被删除。注：无法恢复至初始状态。",
            contact_confirm_reject_request: "真的拒绝“%%name%%”发来的成为联系人的请求吗？",
            contact_connect_from_ads_complete: "You will be contacted shortly by person in charge.",
            contact_connect_from_ads_confirm: "Please send a contact request for more information.",
            contact_cwid_error_already: "已经在联系人中添加了ChatWorkID:%%chatwork_id%%",
            contact_cwid_error_myself: "无法在联系人中添加自己",
            contact_cwid_error_noexist: "ChatWorkID:%%chatwork_id%%不存在",
            contact_delete: "从联系人删除",
            contact_doing_invite: "正在发送邀请信...",
            contact_done_invite: "已经发送邀请信",
            contact_do_invite: "发送邀请信",
            contact_error_cantadd: "无法添加联系人",
            contact_error_is_disable_external: "无法加入-没有和组外成员交流的权限",
            contact_error_is_not_mailaddress: "不是正确的邮箱地址。",
            contact_error_is_over_contactnum: "所利用的套餐，可使用的联系人已达上限，无法进行添加。",
            contact_error_planlimit: "%%plan_name%%最多只能添加%%limit_num%%人联系人。<br />若需新增联系人，请判断是否进行升级。",
            contact_error_search_user_not_found: "未发现相符用户",
            contact_invite: "发送邀请邮件",
            contact_invite_mail_add_email_address_to_invite: "Add email address to invite",
            contact_invite_mail_add_individually: "Add members individually",
            contact_invite_mail_already_in_your_contacts: "This person is already in your contacts.",
            contact_invite_mail_already_received_request: "Already received contact request.",
            contact_invite_mail_already_send_request: "Already sent contact request.",
            contact_invite_mail_bulk_add: "Bulk-add",
            contact_invite_mail_enter_message: "Type a message",
            contact_invite_mail_enter_your_email_address: "Enter email address",
            contact_invite_mail_failed_sent_following_reasons: "Invitation wasn't sent due to the following reasons.",
            contact_invite_mail_invalid_email_address: "Invalid email address.",
            contact_invite_mail_invitation_sent: "Invitation sent",
            contact_invite_mail_invitation_was_sent: "Invitation was sent successfully.",
            contact_invite_mail_invite_more: "Invite more",
            contact_invite_mail_maximum_contact_requests: "Reached maximum number of contact requests.",
            contact_invite_mail_message_optional: "Message (optional)",
            contact_invite_mail_move_to_direct_chat: "Move to direct chat",
            contact_invite_mail_move_to_incoming_requests: "Move to incoming requests",
            contact_invite_mail_move_to_your_sent_requests: "Move to your sent requests",
            contact_invite_mail_restricted_to_outside_orgaization: "This person is restricted to connect with members outside the orgaization.",
            contact_invite_mail_send: "Send",
            contact_invite_mail_send_your_account: "Unable to send invitation to your account.",
            contact_invite_mail_type_email_addresses: "Type the email addresses of members to invite.",
            contact_is_completed: "已完成",
            contact_mail_not_found: "所指定的邮箱不存在。<br />是否向该邮箱发送关于注册ChatWork的向导邮件？",
            contact_menu_invite_mail: "Invite by Email",
            contact_menu_list: "联系人一览表",
            contact_menu_myrequest: "等待对方确认中",
            contact_menu_norequest: "未联系",
            contact_menu_request: "未确认",
            contact_menu_user_search: "User Search",
            contact_multi_adding: "正在添加联系人...",
            contact_multi_add_confirm: "添加%%num%%名用户为联系人。确认添加吗？",
            contact_multi_delete_confirm: "从联系人中删除%%num%%人。确认要删除吗？",
            contact_myrequest: "请求成为联系人",
            contact_request_cancel: "取消确认",
            contact_rest_number: "...其他%%rest_number%%件",
            contact_search: "根据联系人名进行检索",
            contact_search_introduction: "搜索希望添加的联系人",
            contact_search_not_found: "目前没有成为联系人的用户",
            contact_search_placeholder: "输入姓名、ChatWorkID和邮箱地址",
            copy_to_clipboard: "复制到剪贴板",
            dateformat: "Y年m月d日",
            datepicker_alt_text: "选择日期",
            deleted_user: "已解除合约的用户",
            deleting: "正在删除...",
            desktopalert_no_support: "此浏览器不支持桌面通知功能。\n（支持GoogleChrome。）",
            directchat: "1对1聊天",
            emoticon_beer: "啤酒",
            emoticon_blush: "害羞",
            emoticon_bow: "鞠躬",
            emoticon_cake: "蛋糕",
            emoticon_clap: "鼓掌",
            emoticon_coffee: "咖啡",
            emoticon_cracker: "爆竹",
            emoticon_dance: "跳舞",
            emoticon_devil: "恶魔",
            emoticon_ec14: "EC14",
            emoticon_flower: "花",
            emoticon_gogo: "Go Go!",
            emoticon_grin: "不出声的笑",
            emoticon_handshake: "握手",
            emoticon_heart: "爱心",
            emoticon_ikemen: "帅哥",
            emoticon_kiss: "亲亲",
            emoticon_komanechi: "摇滚！",
            emoticon_love: "恋爱",
            emoticon_lucky: "太好啦",
            emoticon_more_smile: "大笑",
            emoticon_mumu: "嗯...",
            emoticon_muscle: "肌肉",
            emoticon_ninmari: "得意地笑",
            emoticon_nod: "点头",
            emoticon_otaku: "宅男宅女",
            emoticon_puke: "吐",
            emoticon_roger: "知道啦！",
            emoticon_sad: "悲伤",
            emoticon_shake: "摇头",
            emoticon_smile: "微笑",
            emoticon_snooze: "困",
            emoticon_star: "星星",
            emoticon_surprise: "吃惊",
            emoticon_sweat: "汗",
            emoticon_talk: "说话",
            emoticon_tears: "哭",
            emoticon_tongueout: "傻瓜",
            emoticon_whew: "松口气",
            emoticon_wink: "眨眼",
            emoticon_wonder: "什么什么？",
            emoticon_wry_smile: "苦笑",
            emoticon_yawn: "打呵欠",
            emoticon_yes: "好的",
            error_already_used: "已经在使用",
            error_cant_login_ip: "IP address check error",
            error_illegal_filename: 'The file name can not contain the following characters\n  / : * ? " < > |',
            error_invalidchar: "只适用半角的英数字和 - _ ",
            error_maxlength: "请输入%%length%%个以内的字符",
            error_no_login_action: "没有正常登录无法实现操作",
            error_no_select: "没有选择聊天",
            error_upload: "上传失败",
            error_upload_disable_send_file: "File upload failed - requires permission from admin",
            error_upload_executable: "由于安全原因，您无法上传exe文件。",
            error_upload_filesize: "文件大小过大，无法上传文件(文件过大，无法上传文件)",
            error_upload_filetype: "不支持该格式，无法上传文件",
            error_upload_image: "仅限JPEG,GIF和PNG",
            error_upload_over_max_filesize: "您的文件(%%size%%)超过了文件大小限制(%%max_size%%)",
            fbconnect_blog_url: "http://blog-en.chatwork.com/",
            feedback_desc_noreply: "*请注意，您不会因为留意见而受到回信)",
            feedback_thankyou: '感谢分享您的想法<br/>您的意见对我们非常宝贵，我们将依此来改进ChatWork<br/>Happy chatting!<img class="ui_emoticon" alt=":)" title="Smile :)" src="./image/emoticon/emo_smile.gif">',
            file: "文件",
            file_click_detail: "点击文件显示详情",
            file_confirm_delete: "真的要删除“%%file_name%%”此文件吗？",
            file_delete_error_try_again: "Failed to delete the file.\nPlease try again later. ",
            file_delete_hint: "删除文件",
            file_download_hint: "下载",
            file_drop_area: "<span>请在此区域进行操作</span><br />（可发送多个文件）",
            file_edited: "File name edited.",
            file_edit_title: "Editing file names",
            file_error_empty: "File name is mandatory.",
            file_loading: "正在读取文件...",
            file_multi_confirm_delete: "正在选择%%num%%个文件。确认删除吗？",
            file_name: "File name:",
            file_nothing: "现在没有文件",
            file_not_found: "文件不存在",
            file_preview_download: "下载图像",
            file_preview_image_cant_read: "无法查看预览",
            file_preview_image_hint: "文件预览",
            file_preview_open_newwindow: "在新窗口显示图像",
            file_rename_hint: "编辑文件名",
            file_search: "搜索文件名",
            file_search_not_found: "没有找到希望搜索的文件",
            file_size: "文件大小",
            file_uploaded: "上传了文件。",
            file_upload_by: "上传者",
            file_upload_datetime: "上传日期",
            groupchat: "群聊",
            imagedrop_tooltip_change_filename: "Change filename",
            imagedrop_tooltip_title: "Paste image from the clipboard",
            invitation_link: "Invitation Link",
            invitation_link_advanced_setting_index: "Advanced Settings",
            invitation_link_advanced_setting_lead: "You can set “Cover Photo” and “Description” of the group chat to provide the members with useful information.",
            invitation_link_code_copy: "Copy",
            invitation_link_help_tool_tip: "You can easily invite people to group chat even if he/she doesn’t have an account or is not on your contact list. ",
            invitation_link_setting_delete_current_header: "删除此标题图像",
            invitation_link_setting_error_invalid_link_name: "此链接不可使用",
            invitation_link_setting_header_limit: "（最大 700KB。可以使用JPEG,GIF,PNG。宽最大为600px）",
            invitation_link_setting_join_accept: "需要通过管理员认证后才可加入",
            invitation_link_setting_status_disable: "Disabled",
            invitation_link_setting_title: "Invitation Link Settings",
            invitation_link_set_groupchat_description_index: "Group Chat Description",
            invitation_link_set_header_image_index: "Invitation Page Cover Photo",
            invitelink: "邀请链接",
            joinpublicchat_need_accept: "※参加此聊天组需要管理员的认证",
            joinpublicchat_request_sent: "已向此聊天组的管理员提交了参加申请。\n通过管理员认证以后，即可加入此聊天组。",
            joinpublicchat_title: "加入聊天组",
            join_groupchat_btn_join_groupchat_label: "Join this group chat",
            join_groupchat_btn_send_join_request_label: "Request to join",
            join_groupchat_invite_message: "You have an invitation to join a group chat. Would you like to join?",
            join_groupchat_my_disable_external: "You are not allowed to communicate with people out of the organization.",
            join_groupchat_not_found: "This chat does not exist or the invitation link is invalid.",
            join_groupchat_other_disable_external: "Someone in this chat is not allowed to communicate with people out of the organization.",
            jump_to_addpoint: "移动至追加时点",
            jump_to_addpoint_not_found: "没有添加时的留言信息",
            jump_to_message: "进入此信息",
            kddi_manual_name: "服务向导",
            kddi_manual_path: "http://info-en.kcw.kddi.ne.jp",
            lang_dateformattip: "日期的显示方式：",
            lang_typetip: "使用语言：",
            live_call_chat: "%%chat_name%%的%%name%%先生/小姐邀請ChatWork Live",
            live_call_direct: "您正被%%name%%邀请参加ChatWork Live",
            live_invited: "正收到邀请",
            live_join: "开始ChatWork Live",
            live_member_add_introduction: "请选择希望添加的ChatWork Live用户",
            live_member_not_found: "没有可能成为ChatWork Live联系人的用户",
            live_start: "已经开始ChatWork Live",
            live_video: "视频通话",
            live_voice: "语音通话",
            loading: "正在读取数据...",
            login_password_forget_link: "Forgot your password?",
            mailaddress: "电子邮箱",
            member: "成员",
            member_addition_dialog_title: "Add Member",
            member_addition_edit_member_label: "Edit Member",
            member_detail_edit_member_label: "Edit Member",
            member_edit_add_member_label: "Add Member",
            member_edit_dialog_title: "Edit Member",
            menu_admin_setting: "管理设定",
            menu_announcement: "通知",
            menu_assistant: "",
            menu_change: "更改",
            menu_cheat_sheet: "List of shortcuts",
            menu_concierge: "",
            menu_contact_admin: "联系人管理",
            menu_current: "现在：",
            menu_desktopalert: "桌面通知",
            menu_download_app: "Download app",
            menu_feedback: "客户意见及要求",
            menu_file: "文件管理",
            menu_help: "帮助",
            menu_information: "信息",
            menu_logout: "退出",
            menu_mychat_hint: "打开我的聊天记录",
            menu_mytask: "任务管理",
            menu_personal_setting: "个人设定",
            menu_profile_setting: "设置个人资料",
            menu_sound: "通知音",
            menu_userguide: "Tips",
            message: "信息",
            message_join_groupchat: "Join this group chat",
            message_link: "留言链接",
            message_open_chat: "进入此聊天",
            multiselect_label: "个选中了",
            mychat: "我的聊天",
            mychat_default_desc: "我的聊天是个人专用聊天。可以用做自己的备忘记录，任务管理及文档服务器。",
            name_suffix: "",
            newbrowser_check_compatibility_view_ie9: "如果您正使用Internet Explorer 9或之后的版本，请查看兼容视图。点击兼容视图按钮以关闭该视图。",
            newbrowser_desc: "为了顺畅地使用ChatWork，建议使用各浏览器的最新版。",
            newbrowser_download_chrome: "http://www.google.com/chrome/?hl=zh-CN",
            newbrowser_download_firefox: "http://www.mozilla.org/zh-CN/firefox/",
            newbrowser_download_ie: "http://windows.microsoft.com/zh-CN/internet-explorer/downloads/ie",
            newbrowser_download_safari: "http://www.apple.com.cn/safari/",
            newbrowser_ie9_higher: "请使用Internet Explorer 9或更高的版本",
            newbrowser_listtip: "请使用下述浏览器的最新版。",
            newbrowser_recommended: "推荐浏览器",
            newbrowser_subject: "您使用的浏览器并非推荐使用的浏览器。",
            nickname_desc: '设置昵称后，当你回复信息时该昵称会显示在、<span class="ui_to">To:</span>之后',
            nickname_name: "姓名",
            nickname_nickname: "昵称",
            nickname_prefix: "",
            nickname_suffix: "",
            nickname_title: "设置昵称",
            notifier_newmessage: "收到信息",
            off: "关闭",
            on: "开启",
            open_website: "打开网址",
            open_window: "Open in new tab ",
            organization_filter_radio_all: "Show all",
            organization_filter_radio_organized: "Show only within organization ",
            pager_first: "返回初始页",
            pager_last: "返回至最后页",
            pager_next: "返回下一页",
            pager_prev: "返回上一页",
            pin_hint: "将这些聊天记录用别针固定在聊天记录一览表上",
            preview: "预览",
            preview_needlogin: "(Requires Google account login)",
            preview_video: "预览",
            profile_allow_search: "设定为他人可通过检索联系人的方式找到自己",
            profile_chatworkidtip: "ChatWorkID：",
            profile_displaynametip: "表示名：",
            profile_edit: "编辑联系人信息",
            profile_error_invalid_cwid: "所指定的ChatWorkID无法使用",
            profile_error_no_displayname: "请输入表示名",
            profile_form_title: "Login Credentials",
            profile_image_limit: "(最大700KB。可支持JPEG，GIF，PNG。)",
            profile_setting_addresstip: "地址:",
            profile_setting_departmenttip: "部门:",
            profile_setting_ecstudio_account: "由此进行账户信息的设定。",
            profile_setting_edit_avatar: "变换图片",
            profile_setting_edit_cover: "更换头像",
            profile_setting_emailtip: "电子邮件:",
            profile_setting_introductiontip: "自我介绍:",
            profile_setting_note_change_orgname: "点击这里以更改组织名",
            profile_setting_orgnametip: "组织名:",
            profile_setting_privacy_contact: "仅限我的联系人",
            profile_setting_privacy_public: "公开",
            profile_setting_set_facebook_note: 'Click <a href="https://www.facebook.com/username/" target="_blank">here</a> to learn more about facebook vanity URL.',
            profile_setting_tel_extensiontip: "电话号码（内线）:",
            profile_setting_tel_mobiletip: "电话号码（手机）:",
            profile_setting_tel_organizationtip: "电话号码（工作）:",
            profile_setting_titletip: "职位:",
            profile_setting_urltip: "URL:",
            raise_error: "出错",
            readonly: "只读",
            read_more: "More...",
            reply_badge_tooltip_label: "View original message",
            role: "权限",
            room_permission_setting_allow_add_task: "允许追加任务",
            room_permission_setting_allow_see_member: "查看聊天参加成员名单",
            room_permission_setting_allow_send_message: "允许送信",
            room_permission_setting_allow_upload_file: "允许传送文件",
            room_permission_setting_index: "Group chat member role settings",
            room_permission_setting_lead: "will not affect admin users",
            room_permission_setting_title: "Edit Group Chat Permissions",
            room_request_description: "认证之后，便可使之参加此聊天组",
            room_request_title: "参加群组聊天的请求列表",
            saving: "保存中...",
            search_except_wordtip: "检索结果中不含有的关键词：",
            search_except_word_placeholder: "输入其他关键词",
            search_group_by_chat: "按群聊/私人聊天排序",
            search_group_by_time: "按新建顺序显示",
            search_group_by_user: "按用户搜索",
            search_loading: "正在检索中...",
            search_max_results: "（最多%%max_results%%件）",
            search_message_fromtip: "发言人：",
            search_message_termtip: "发言日期：",
            search_option: "检索选项",
            search_placeholder: "输入搜索关键词",
            search_resulttip: "检索结果：",
            search_result_bychat_closeall: "全部关闭",
            search_result_bychat_openall: "全部打开",
            search_result_not_found: "未检索出与%%keyword%%相一致的内容。",
            search_result_unit: "件",
            search_suggest: '用 "%%keyword%%" 搜索信息',
            search_term_30: "30天以内",
            search_term_365: "1年以内",
            search_term_7: "7天以内",
            search_term_90: "90天以内",
            search_term_all: "全部",
            search_term_separator: "～",
            search_term_specify: "选择特定的发言日",
            search_title: "信息检索",
            selectall_full: "全选",
            sending: "正在传送信息...",
            serviceadmin_do_upgrade: "对ChatWork升级",
            serviceadmin_upgrade: "升级",
            serviceadmin_user_list_label: "用户管理",
            sound_type: "通知音的种类",
            sound_volume: "通知音的音量",
            start_chatwork: "开始 %%service_name%%",
            storage_activity_ratio_label: "存储器使用率",
            storage_add_link: "添加存储器量",
            storage_cancel_add_storage_label: "添加存储器容量",
            storage_cancel_send_cancel: "无法发送%%object%%。",
            storage_cancel_send_object: "希望发送的%%object%%，因现在可使用的存储器容量已超载，发送被取消。<br /><br />为了发送%%object%%，请对文件进行管理，将不需要的文件删除，或",
            storage_cancel_send_object_suffix_add_storage: "请利用添加存储器。",
            storage_cancel_send_object_suffix_tell_admin: "请向目前使用的商务套餐管理员进行咨询。",
            storage_cancel_send_object_suffix_upgrade: "对目前使用的套餐进行升级。",
            storage_cancel_upgrade_label: "对利用的套餐进行升级",
            storage_limit_notice_body: "现在所利用的套餐，无法再进行文件的发送。<br /><br />若需继续发送，请对文件进行管理，将不需要的文件删除，或",
            storage_limit_notice_footer: "存储器容量超上限1周（%%date%%）后，将无法发送信息，请注意。",
            storage_limit_notice_message: "注意：已达到存储器容量的上限。",
            storage_limit_notice_title: "已达到存储器容量的上限。",
            storage_limit_warning_body: "因存储器容量超上限已过1周，聊天信息的发送功能已停止。<br />若需继续使用，请对文件进行管理，将不需要的文件删除，或",
            storage_limit_warning_message: "重要：已停止聊天的信息发送功能",
            storage_limit_warning_title: "停止聊天的信息发送功能。",
            storage_other_user: "其它用户",
            storage_show_all_user: "显示一览表",
            storage_used: "使用",
            task: "任务",
            task_added: "添加了任务。",
            task_add_button: "添加任务",
            task_click_detail: "点击任务了解详情",
            task_client: "委托人",
            task_confirm_delete: "确定要删除该任务吗？",
            task_deleted: "删除该任务",
            task_delete_hint: "删除任务",
            task_done: "任务完成。",
            task_edited: "编辑了任务。",
            task_edit_hint: "编辑任务",
            task_edit_title: "编辑任务",
            task_error_empty: "没有输入任务内容",
            task_filter_all: "全部",
            task_filter_exired: "截止日期",
            task_filter_inweek: "1周内",
            task_filter_nolimit: "没有日期",
            task_filter_today: "当天",
            task_incharge: "负责人",
            task_inchargetip: "负责人：",
            task_incharge_placeholder: "请选择执行",
            task_input_placeholder: "请输入任务",
            task_limit: "期限",
            task_limittip: "期限：",
            task_limit_placeholder: "请设定期限",
            task_loading: "正在读取任务...",
            task_menu_client: "我委托的任务",
            task_menu_close: "完成的任务",
            task_menu_incharge: "我负责的任务",
            task_menu_open: "未完成的任务",
            task_nothing: "现在没有任务",
            task_not_found: "没有任务",
            task_num: " (%%num%%以上)",
            task_reverted: "将任务退回为未完成。",
            task_tasktip: "任务：",
            text_copied: "已复制",
            tutorial_addbutton: "在此可以开始新的群聊和、添加好友。",
            tutorial_add_task: "在此可以添加新任务",
            tutorial_globalsearch: "在此可以搜索聊天用户名和搜索留言内容。",
            tutorial_send_message: "在此可以发送留言信息",
            uncheckall: "取消",
            url_download_app: "http://www.chatwork.com/download/",
            userguide_message: "Messages",
            userguide_message_about: "My Chat",
            userguide_message_about_content1: "<p>My Chat is a place which is only available to you. You can use this as your personal memo, or assign tasks to yourself to remember things.</p>",
            userguide_message_about_content2: "<p>Simply type in your message, memo, or tasks, and click Send.</p>",
            userguide_message_delete: "Deleting messages",
            userguide_message_delete_content1: '<p>You can also delete a message that you have already sent. <br />From the same message menu, click on "..." and then "Delete".</p>',
            userguide_message_delete_content2: '<p>You will be asked to confirm "Do you really want to delete this message?" If you do want to proceed then please click on "OK"</p>',
            userguide_message_edit: "Editing messages",
            userguide_message_edit_content1_biwa: '<p>Hover your mouse over the message that you have already sent and click on "Edit".</p>',
            userguide_message_edit_content2_biwa: '<p>When you click on "Editing" is displayed on the input screen; you can then edit your message.</p>',
            userguide_message_mention: "Mention someone within a message",
            userguide_message_mention_content1: '<p>When you want to mention someone within a group chat, use the "To" feature.</p>',
            userguide_message_mention_select: "Select the person",
            userguide_message_mention_select_content1: "<p>Select the person you want to mention.</p>",
            userguide_message_mention_send: "Send a message",
            userguide_message_mention_send_content1: "<p>When you select the user of your message, the TO tag is inserted at the top of the message box. You can add your message below this tag and send the message.</p>",
            userguide_message_mention_send_content2: "<p>This takes you to the message sent screen.</p>",
            userguide_message_mention_send_content3: '<p>When you are mentioned by someone else, an green "TO" icon badge will show up on the group chat list.</p>',
            userguide_message_quote: "Quoting messages",
            userguide_message_quote_content1_biwa: "<p>As the number of people in your group increases, it becomes more difficult to work out who you are talking to, so you can quote their message to carry out conversations more smoothly. </p><h3>How to display the message menu</h3><p>Hover your mouse over someone else's message (place the cursor over the text)<br />to display the Reply, Quote, Task, Link, and other buttons.</p>",
            userguide_message_quote_content2_biwa: '<p>Click on "Quote" to insert tags and the quoted message into the message text box.</p>',
            userguide_message_quote_content3_biwa: "<p>You can then add your own message to the quoted message before sending it. This makes it clear which message you are replying to.</p>",
            userguide_profile: "Profile Settings",
            userguide_profile_about: "About Profile Settings",
            userguide_profile_about_content_biwa: "<p>You can change your profile pics,cover photo, organization names, contact info, bio, etc within Profile Settings.</p><p>This will help other people find your profile more easier.</p>",
            userguide_profile_chatworkid: "Setting up ChatWork ID",
            userguide_profile_chatworkid_content1: "<p>When you claim your ChatWork ID, you can take advantage of vanity URL so others can find you and connect with you more easier.</p><p>E.g.) %%chatwork_home_path%%/[Your ChatWork ID]</p>",
            userguide_profile_chatworkid_content2: '<p>Simply type in your preferred ChatWork ID in the text field below, and click "Save".</p>',
            userguide_profile_open_setting: "Your profile page",
            userguide_profile_open_setting_content: "<p>You can open Profile Settings by clicking your icon on the upper right corner.</p>",
            userguide_profile_open_setting_content_biwa: '<p>Click on "Edit profiles" to open the edit screen.</p>',
            userguide_profile_upload_image: "Upload profile pic",
            userguide_profile_upload_image_content_biwa: '<p>Click on "Edit" in your profile information.</p>',
            userguide_profile_upload_image_content_biwa2: '<p>Select "Upload", choose the image to upload, and click on "Save" to submit a picture stored in your PC.</p>',
            userguide_task: "Tasks",
            userguide_task_about: "What is tasks?",
            userguide_task_about_content: "<p>Task feature allows you to create a to-do list, and you can even assign yourself.</p><p>Quick tip : go ahead and assign something to yourself in My Chat, so you can get a deeper understanding of how this feature works.</p>",
            userguide_task_add: "Assign tasks",
            userguide_task_add_content1_biwa: '<p>Enter details of a task into the text box labeled with "Enter task here" on the right hand side of the chat screen. Add the person the task is assigned to and the due, and click on the "Add Task" button.</p>',
            userguide_task_add_content2_biwa: "<p>If the task is shown in the timeline, then the task has been added successfully.</p>",
            userguide_task_browse: "Browse tasks",
            userguide_task_browse_content1: "<p>On the right-hand bottom corner, you can see the list of tasks assigned to you.</p>",
            userguide_task_browse_content2_biwa: "<p>The chat list displays the number of tasks assigned to you on the right of the task icon.</p>",
            userguide_task_complete: "Complete tasks",
            userguide_task_complete_content1_biwa: '<p>Once a your task is complete, click on the "Done" button on the top left hand side.</p>',
            userguide_task_complete_content2: '<p>"Task completed." message will automatically be sent to the group chat member.</p>',
            userguide_task_complete_content3: '<p>This is the end of "%%service_name%% Tips" content.</p>',
            userguide_title: "%%service_name%% Tips",
            userguide_welcome_head: "About %%service_name%%",
            userguide_welcome_service_desc_chatwork: "%%service_name%%是一种可进行群聊、任务管理、文件管理和<br />视频通话的「云服务模式的商业聊天软件」。",
            userguide_welcome_service_desc_kddi: "KDDI ChatWork是一种可提供群聊、任务管理、文件管理和<br />视频通话的「社交型交流软件」。",
            username: "用户名",
            welcome_title: "欢迎加入%%service_name%%!",
            word_separator: "，",
            _button_delete_with_agreement: "Delete (I have confirmed)",
            _chatroom_confirm_delete_alert: 'Do you really want to delete "%%room_name%%"?',
            _chatroom_confirm_delete_content: "Please check the followings prior to deleting group chats.",
            _chatroom_confirm_delete_note_1: "This will not only delete from your list, but will be applied for everyone else participating in the group chat.",
            _chatroom_confirm_delete_note_2: "All messages, tasks, and files will be deleted.",
            _chatroom_confirm_delete_note_3: "All deleted data will never be restored.",
            _chatwork_apitoken_caution_1: 'ChatWork API documentation is available <a href="http://link.chat-work.com/api_doc" target="_blank">here</a>.',
            _chatwork_apitoken_caution_2: "Please do not share your API token with third parties.",
            _chatwork_apitoken_caution_3: "We may prohibit the use of the API if there is an unusually high volume of requests and excessive load on our servers.",
            _chatwork_apitoken_caution_4: 'By accessing or using our APIs, you are agreeing to the <a href="http://www.chatwork.com/ja/terms/api.html" target="_blank">ChatWork API Terms of Use (Japanese)</a>.',
            _chatwork_apitoken_confirm_regenerate: "Your existing API token will be invalidated if you regenerate the token. Would you like to proceed?",
            _chatwork_apitoken_copy_btn: "Copy",
            _chatwork_apitoken_display_btn: "Display",
            _chatwork_apitoken_empty_password: "Please enter your password.",
            _chatwork_apitoken_invalid_password: "Invalid password. Please try again.",
            _chatwork_apitoken_password_caption: "Please enter your ChatWork password to display and generate your API token. ",
            _chatwork_apitoken_password_placeholder: "Enter Password",
            _chatwork_apitoken_regenerate_btn: "Regenerate",
            _chatwork_apitoken_token_label: "API:",
            _chatwork_apitoken_token_placeholder: "API",
            _chatwork_file_upload_eset_link: "",
            _chatwork_path_help_file_upload_error: ""
        }
    }, {}],
    332: [function(require, module, exports) {
        module.exports = {
            accepting: "同意中……",
            adding: "新增中……",
            add_contact_confirm_body_with_account_names: "傳送新增聯絡人邀請給%%account_names%%嗎？",
            add_contact_confirm_dialog_title: "新增聯絡人邀請",
            add_contact_confirm_send_mail_at_same: "※ 同時傳送至Email",
            admin: "管理者",
            announce_button_close: "不再顯示此通知",
            assistant_lp_url: "",
            available: "可以使用",
            button_accept: "同意",
            button_accept_long: "同意",
            button_add: "新增",
            button_add_contact_long: "新增聯絡人",
            button_cancel: "取消",
            button_change_long: "變更",
            button_close: "關閉",
            button_complete: "完成",
            button_create: "建立",
            button_create_long: "建立",
            button_delete: "刪除",
            button_delete_long: "刪除",
            button_edit: "編輯",
            button_incomplete: "未完成",
            button_next: "下一步",
            button_ok: "OK",
            button_reject: "拒絕",
            button_reject_long: "拒絕",
            button_return: "換行",
            button_save: "儲存",
            button_save_long: "儲存",
            button_search: "搜尋",
            button_send: "傳送",
            canceling: "取消中……",
            chat: "交談",
            chatroom_added: "」已新增。",
            chatroom_btn_add_member_tooltip: "增加成員",
            chatroom_changed: "」已變更。",
            chatroom_chatname_is: "交談名稱「",
            chatroom_chat_edited: "已變更交談資訊。",
            chatroom_chat_joined: "已參加交談。",
            chatroom_confirm_leave: "確定退出「%%room_name%%」嗎？\n退出後將無法閱讀此交談的內容。\n若想再次參加交談時需要成員的邀請。\n（※此交談中由您擔任負責人的工作及您傳送的檔案將會被刪除。）",
            chatroom_contact_added: "已新增聯絡人。",
            chatroom_contact_added_by_facebook: "已從Facebook的新增朋友設定中新增聯絡人。",
            chatroom_createchat_same_members: "以相同成員新增交談",
            chatroom_createchat_same_members_confirm: "這個交談有不是聯絡人名單的成員。\n您要另外新增只有聯絡人才能參加的交談嗎?",
            chatroom_create_title: "建立群組交談",
            chatroom_delete: "刪除群組交談",
            chatroom_deleted: "」已刪除。",
            chatroom_desc: "描述",
            chatroom_description_is: "描述「",
            chatroom_desctip: "描述：",
            chatroom_desc_explain: "可以輸入交談的說明、備忘錄及相關連結等內容",
            chatroom_desc_none: "沒有描述",
            chatroom_disable_external: "被禁止與組織外使用者交談，故無法新增。",
            chatroom_edit_desc_title: "編輯描述",
            chatroom_error_cant_add: "無法建立交談",
            chatroom_error_noadmin: "需要一位以上的管理者",
            chatroom_error_noself: "無法建立您未參加的交談",
            chatroom_error_not_found: "此交談不存在",
            chatroom_error_no_member: "因您不是交談的成員之一，故無法顯示。",
            chatroom_error_no_name: "未輸入群組交談名稱",
            chatroom_error_planlimit: "%%plan_name%%只能建立%%limit_num%%個群組交談。<br>若您希望再建立新的群組交談，請考慮升級。",
            chatroom_groupchat_created: "已建立新的群組交談。",
            chatroom_icon_type_preset: "選擇大頭照",
            chatroom_icon_type_upload: "上傳",
            chatroom_icon_updated: "已變更群組交談的大頭照。",
            chatroom_info_edit: "編輯交談資訊",
            chatroom_invitation_link_setting: "設定邀請連結",
            chatroom_leave: "退出群組交談",
            chatroom_leaved: "」已退出。",
            chatroom_member_add_contact: "全部新增至聯絡人",
            chatroom_member_detail: "成員詳細",
            chatroom_member_is: "成員「",
            chatroom_member_long: "交談成員",
            chatroom_member_nocontact: "尚未新增至聯絡人",
            chatroom_member_requests_notice: "有未同意參加的成員（%%request_num%%則）",
            chatroom_member_rest_number: "……其他%%rest_number%%位",
            chatroom_member_role_admin_desc: "可以變更群組交談的名稱、描述、成員",
            chatroom_member_role_member_desc: "無法變更群組交談的名稱、描述、成員",
            chatroom_member_role_readonly_desc: "只限閱讀，無法傳送訊息。",
            chatroom_mychat_created: "已建立我的交談。",
            chatroom_nametip: "交談名稱：",
            chatroom_not_only_internal: "包含組織外使用者的交談",
            chatroom_over_groupchatnum: "已超過群組交談數上限，故無法新增。",
            chatroom_priv_changed: "」的權限已變更。",
            chatroom_resigned_priv_change: "」已將ChatWork服務節約，故此一對一交談將變更為群組交談。",
            chatroom_resigned_priv_change_all: "因此交談的管理者已不存在，故全部成員的權限皆變更為管理者。",
            chatroom_room_permission_setting: "群組交談的權限設定",
            chatroom_search_member: "搜尋成員名稱",
            chatroom_set: "」已設定。",
            chatroom_setting: "交談設定",
            chatroom_show_limit_member_num: "（最多顯示%%num%%位）",
            chatroom_tasklist_mytaskonly: "只顯示您的工作",
            chatsend_button_delete_message_only: "只刪除通知訊息",
            chatsend_button_delete_with_file: "檔案也一併刪除",
            chatsend_button_delete_with_task: "工作也一併刪除",
            chatsend_chat_explain: "請在此輸入訊息內容",
            chatsend_confirm_delete: "確定刪除此訊息嗎？",
            chatsend_confirm_delete_with_file: "確定將通知訊息和檔案一併刪除嗎？",
            chatsend_confirm_delete_with_task: "確定將通知訊息和工作一併刪除嗎？",
            chatsend_delete_filetip: "刪除的檔案：",
            chatsend_delete_tasktip: "刪除的工作：",
            chatsend_emoticonalt: "表情符號：表達您的各種情緒",
            chatsend_enter_action_explain: "按下Enter鍵傳送訊息",
            chatsend_enter_action_explain_enter: "\n（按下Shift + Enter鍵換行）",
            chatsend_enter_action_explain_enter_send: "\n（按下Shift + Enter鍵傳送）",
            chatsend_error_no_exist_for_edit: "想要編輯的訊息不存在",
            chatsend_error_no_incharge: "請指定負責人",
            chatsend_error_send: "網路狀態不穩定，無法傳送訊息。請按下再次傳送按鈕以再次傳送。",
            chatsend_error_send_task: "網路狀態不穩定，無法傳送工作。請按下再次傳送按鈕以再次傳送。",
            chatsend_expand_area: "視窗放大顯示",
            chatsend_filealt: "可以傳送檔案",
            chatsend_nickname_setting: "暱稱設定",
            chatsend_not_allow_send_messages: "因您沒有此交談的權限，故無法發言。",
            chatsend_quote: "引用",
            chatsend_reply: "回覆",
            chatsend_shift_and_command_hint: "按住Shift鍵以連續選取，按住⌘鍵以立即傳送",
            chatsend_shift_and_ctrl_hint: "按住Shift鍵以連續選取，按住Ctrl鍵以立即傳送",
            chatsend_shift_multiselect: "按住Shift鍵以連續選取",
            chatsend_toalt: "To：指定交談對象",
            chatsetting_faviconstat: "於瀏覽器圖示上顯示未讀取交談數",
            chatsetting_hide_message_box_tags: "",
            chatsetting_hide_message_box_tags_change_confirm: "",
            chatsetting_notifier: "桌面通知",
            chatsetting_notifier_duration: "桌面通知的顯示時間",
            chatsetting_notifier_duration_10sec: "10秒",
            chatsetting_notifier_duration_20sec: "20秒",
            chatsetting_notifier_duration_5sec: "5秒",
            chatsetting_notifier_message: "於桌面通知顯示訊息內容",
            chatsetting_notifier_onlyto: "只有收到To時才通知",
            chatsetting_notifier_show: "顯示桌面通知",
            chatsetting_popup_sound: "收到新訊息時以音效通知",
            chatsetting_private_nickname: "於包含組織外使用者之交談中不使用暱稱",
            chatsetting_shorten_url: "將較長網址省略顯示",
            chatsetting_show_delmessage: "顯示刪除訊息紀錄",
            chatsetting_show_external: "於包含組織外使用者之交談中顯示大頭照",
            chatsetting_tab_apitoken: "發行API",
            chatsetting_tab_display: "顯示設定",
            chatsetting_tab_language: "語言設定",
            chatsetting_tab_login: "登入設定",
            chatsetting_tab_notification: "通知設定",
            chatsetting_test_sound: "播放測試",
            chatsetting_unread_mail: "於一定時間內未讀取訊息時，以電子郵件通知",
            chatsetting_unread_mail_label: "電子郵件通知",
            chatsetting_unread_mail_term_1: "每1小時",
            chatsetting_unread_mail_term_12: "每12小時",
            chatsetting_unread_mail_term_2: "每2小時",
            chatsetting_unread_mail_term_24: "每24小時",
            chatsetting_unread_mail_term_3: "每3小時",
            chatsetting_unread_mail_term_6: "每6小時",
            chatsetting_unread_mail_term_none: "不通知",
            chatwork_do_update: "更新為最新版本",
            chatwork_help_page_path: "http://help.chatwork.com/hc/zh-tw",
            chatwork_service_name: "ChatWork",
            chatwork_update: "ChatWork已更新。請重新整理（更新）瀏覽器以反映更新內容。",
            chat_action_copy: "複製",
            chat_action_copy_desc: "複製文字",
            chat_action_copy_title: "訊息內容",
            chat_action_delete: "刪除",
            chat_action_delete_desc: "刪除此訊息",
            chat_action_edit: "編輯",
            chat_action_edit_desc: "編輯此訊息",
            chat_action_link: "連結",
            chat_action_link_desc: "插入前往此訊息的連結",
            chat_action_move: "前往此訊息",
            chat_action_move_desc: "移動至此訊息",
            chat_action_quote: "引用",
            chat_action_quote_desc: "引用此訊息",
            chat_action_reply: "回覆",
            chat_action_reply_desc: "回覆此訊息",
            chat_action_task: "工作",
            chat_action_task_desc: "將此訊息工作化",
            chat_action_unread: "未讀取",
            chat_action_unread_desc: "至此訊息為止皆標示為未讀取",
            chat_category_allchat: "全部交談",
            chat_category_chatselecttip: "選擇交談：",
            chat_category_confirm_delete: "確定要刪除分類「%%category_name%%」 嗎？",
            chat_category_create: "建立分類",
            chat_category_edit: "編輯分類",
            chat_category_error_no_chats: "未選擇交談",
            chat_category_error_no_name: "未輸入分類名稱",
            chat_category_mytaskchat: "包含我的工作之交談",
            chat_category_nametip: "分類名稱：",
            chat_category_select: "選擇分類",
            chat_category_selected_chat_num: "選擇中的交談數：",
            chat_deleted: "訊息已刪除",
            chat_delete_label: "删除",
            chat_editing: "編輯訊息中",
            chat_editing_label_on_message: "編輯訊息中",
            chat_edit_label: "編輯",
            chat_error_not_found: "此訊息不存在",
            chat_filter_readonly: "只顯示未讀取交談",
            chat_filter_readonly_empty: "沒有未讀取交談",
            chat_filter_taskonly: "只顯示包含您工作的交談",
            chat_filter_taskonly_empty: "沒有包含您的工作之交談",
            chat_filter_toonly: "只顯示傳送給您的未讀取訊息之交談",
            chat_filter_toonly_empty: "沒有傳送給您的未讀取訊息之交談",
            chat_loading: "訊息讀取中……",
            chat_menu_chatlist: "交談一覽",
            chat_partial_quote_message: "引用至訊息",
            chat_partial_quote_task: "引用至工作",
            chat_post_label: "發文",
            chat_rest_roomtip: "剩餘交談數：",
            chat_search: "搜尋交談名稱、訊息內容",
            chat_server_error_try_again: "與伺服器通訊失敗。\n請稍後再次申請。",
            chat_show_more: "顯示更多",
            cheatsheet_name_notation_code: "將表情符號的轉換功能設定為無效",
            cheatsheet_name_notation_hr: "格線",
            cheatsheet_name_notation_info: "外框",
            cheatsheet_name_notation_mix_tag: "複數標籤的組合",
            cheatsheet_notation_title: "訊息裝飾用標記法（標籤）一覽",
            cheatsheet_or: "或，",
            cheatsheet_short_cut_title: "鍵盤快速鍵一覽",
            cheatsheet_supplement_text_key_j: "※請注意，所使用按鍵是「j」不是「i」",
            cheatsheet_text_key_c: "新增聯絡人",
            cheatsheet_text_key_command_arrow_left: "關閉或打開左邊欄位",
            cheatsheet_text_key_command_arrow_right: "關閉或打開右邊欄位",
            cheatsheet_text_key_enter: "打開現在所選擇的交談",
            cheatsheet_text_key_esc: "取消訊息輸入欄內的游標",
            cheatsheet_text_key_f: "將游標移動到搜尋交談名稱上",
            cheatsheet_text_key_g: "建立群組交談",
            cheatsheet_text_key_j: "選擇下一個交談",
            cheatsheet_text_key_k: "選擇前一個交談",
            cheatsheet_text_key_m: "將游標移動到訊息輸入欄上",
            cheatsheet_text_key_question: "快速鍵一覽",
            cheatsheet_text_key_t: "將游標移動到工作輸入欄上",
            cheatsheet_text_key_tab: "集中到傳送按鈕上",
            cheatsheet_text_notation_content: "內容",
            cheatsheet_text_notation_index: "提要",
            cheatsheet_text_notation_new_line: "（+換行）",
            cheatsheet_text_notation_on_message_area: "※如果在訊息輸入欄內輸入",
            cheatsheet_text_notation_replace_code_tag: "的話，&#96;&#96;&#96;將會被轉換為[code] 標籤。",
            checkall: "全部",
            checkall_full: "全選",
            commercial_announce_read_error_message: "",
            common_role_select_list_default: "權限批次設定",
            common_role_select_list_default_tooltip: "批次設定成員權限",
            concierge_lp_url: "",
            connection_error_invalid_user: "目前以其他使用者登入",
            connection_error_logout: "目前已登出",
            connection_error_offline: "目前已離線",
            contactpanel_add_contact: "新增聯絡人",
            contact_add: "新增聯絡人",
            contact_add_all_hint: "和您在相同群組交談中，但尚未新增為聯絡人的成員",
            contact_add_multiple_mailtip: "電子郵件地址：（可換行輸入多筆）",
            contact_click_detail: "點選聯絡人顯示詳細",
            contact_confirm_delete: "確定從聯絡人中刪除「%%name%%」？\n一對一交談也將同時刪除。※一旦刪除資料將無法復原！",
            contact_confirm_reject_request: "確定拒絕來自「%%name%%」的同意請求？",
            contact_connect_from_ads_complete: "將由承辦人員以ChatWork與您聯繫，敬請稍候。",
            contact_connect_from_ads_confirm: "傳送聯絡人邀請至諮詢窗口？",
            contact_cwid_error_already: "ChatWork帳號：%%chatwork_id%%已新增為您的聯絡人",
            contact_cwid_error_myself: "您無法新增自己為聯絡人",
            contact_cwid_error_noexist: "ChatWork帳號：%%chatwork_id%%不存在",
            contact_delete: "從聯絡人中刪除",
            contact_doing_invite: "傳送邀請信中……",
            contact_done_invite: "已傳送邀請信",
            contact_do_invite: "傳送邀請信",
            contact_error_cantadd: "無法新增聯絡人",
            contact_error_is_disable_external: "\n因被禁止與組織外使用者交流，故無法新增為聯絡人。",
            contact_error_is_not_mailaddress: "\n不是電子郵件地址",
            contact_error_is_over_contactnum: "\n因聯絡人數超過使用方案上限，故無法新增為聯絡人。",
            contact_error_planlimit: "%%plan_name%%只能新增%%limit_num%%位聯絡人。<br>希望再新增聯絡人時，請考慮升級。",
            contact_error_search_user_not_found: "查無該名使用者",
            contact_invite: "傳送邀請信",
            contact_invite_mail_add_email_address_to_invite: "追加您要邀請的電子郵件信箱",
            contact_invite_mail_add_individually: "分開追加",
            contact_invite_mail_already_in_your_contacts: "已將此電子郵件信箱加為聯絡人，因此無法傳送郵件",
            contact_invite_mail_already_received_request: "此收件者已想將您新增為聯絡人",
            contact_invite_mail_already_send_request: "由於您已經邀請過這個對象，因此無法傳送郵件",
            contact_invite_mail_bulk_add: "全部追加",
            contact_invite_mail_enter_message: "請輸入訊息",
            contact_invite_mail_enter_your_email_address: "輸入電子郵件信箱",
            contact_invite_mail_failed_sent_following_reasons: "因下列原因無法傳送郵件",
            contact_invite_mail_invalid_email_address: "此電子郵件信箱為無效信箱，因此無法傳送郵件",
            contact_invite_mail_invitation_sent: "已傳送之電子郵件信箱",
            contact_invite_mail_invitation_was_sent: "已傳送邀請郵件",
            contact_invite_mail_invite_more: "邀請其他人",
            contact_invite_mail_maximum_contact_requests: "新增聯絡人數已達上限，因此無法傳送訊息",
            contact_invite_mail_message_optional: "請輸入欲傳送的訊息(非必要)",
            contact_invite_mail_move_to_direct_chat: "移動至一對一交談",
            contact_invite_mail_move_to_incoming_requests: "移動至未同意聯絡人清單",
            contact_invite_mail_move_to_your_sent_requests: "移動至同意請求中清單",
            contact_invite_mail_restricted_to_outside_orgaization: "無法與組織外使用者交流，因此無法傳送訊息",
            contact_invite_mail_send: "傳送邀請郵件",
            contact_invite_mail_send_your_account: "由於這是您正在使用中的電子信箱，因此無法傳送郵件",
            contact_invite_mail_type_email_addresses: "請輸入您要邀請的電子郵件信箱",
            contact_is_completed: "已完成",
            contact_mail_not_found: "指定之電子郵件地址的使用者不存在。<br />要傳送ChatWork登錄說明的邀請信，給此電子郵件地址嗎？",
            contact_menu_invite_mail: "使用電子郵件邀請",
            contact_menu_list: "聯絡人一覽",
            contact_menu_myrequest: "同意請求中",
            contact_menu_norequest: "未新增",
            contact_menu_request: "未同意",
            contact_menu_user_search: "搜尋使用者",
            contact_multi_adding: "新增聯絡人中……",
            contact_multi_add_confirm: "將新增%%num%%位的使用者至您的聯絡人，確定新增嗎？",
            contact_multi_delete_confirm: "將從聯絡人中刪除%%num%%位使用者。\n若刪除聯絡人，一對一交談也將一併刪除，並無法復原。\n確定要刪除嗎？",
            contact_myrequest: "聯絡人同意請求",
            contact_request_cancel: "取消同意請求",
            contact_rest_number: "……其他%%rest_number%%則",
            contact_search: "搜尋聯絡人名稱",
            contact_search_introduction: "搜尋想要新增至聯絡人的使用者吧",
            contact_search_not_found: "目前沒有使用者成為您的聯絡人",
            contact_search_placeholder: "輸入姓名、ChatWork帳號、電子郵件地址",
            copy_to_clipboard: "複製到剪貼簿",
            dateformat: "Y年m月d日",
            datepicker_alt_text: "選擇日期",
            deleted_user: "已解約使用者",
            deleting: "刪除中……",
            desktopalert_no_support: "此瀏覽器並未支援桌面通知。\n（Google Chrome有支援桌面通知）",
            directchat: "一對一交談",
            emoticon_beer: "啤酒",
            emoticon_blush: "害羞",
            emoticon_bow: "鞠躬",
            emoticon_cake: "蛋糕",
            emoticon_clap: "拍手",
            emoticon_coffee: "咖啡",
            emoticon_cracker: "拉炮",
            emoticon_dance: "跳舞",
            emoticon_devil: "惡魔",
            emoticon_ec14: "EC14",
            emoticon_flower: "花",
            emoticon_gogo: "走吧走吧！",
            emoticon_grin: "露齒笑",
            emoticon_handshake: "握手",
            emoticon_heart: "愛心",
            emoticon_ikemen: "型男",
            emoticon_kiss: "親吻",
            emoticon_komanechi: "搞笑",
            emoticon_love: "戀愛了",
            emoticon_lucky: "做得好！",
            emoticon_more_smile: "開心",
            emoticon_mumu: "嗯……",
            emoticon_muscle: "肌肉",
            emoticon_ninmari: "嘿嘿",
            emoticon_nod: "點頭",
            emoticon_otaku: "阿宅",
            emoticon_puke: "受不了",
            emoticon_roger: "了解",
            emoticon_sad: "悲傷",
            emoticon_shake: "搖頭",
            emoticon_smile: "微笑",
            emoticon_snooze: "想睡覺",
            emoticon_star: "星星",
            emoticon_surprise: "驚訝",
            emoticon_sweat: "流汗",
            emoticon_talk: "說話",
            emoticon_tears: "哭泣",
            emoticon_tongueout: "吐舌頭",
            emoticon_whew: "哎呀呀",
            emoticon_wink: "眨眼",
            emoticon_wonder: "什麼",
            emoticon_wry_smile: "苦笑",
            emoticon_yawn: "打哈欠",
            emoticon_yes: "是",
            error_already_used: "已被使用",
            error_cant_login_ip: "管理者的設定不允許此網路位置（IP位置）存取，請連接獲得許可的網路位置後再次進入。",
            error_illegal_filename: '檔案名稱無法使用下列符號\n  / : * ? " < > |',
            error_invalidchar: '僅能使用半形英數字與"-" "_"符號',
            error_maxlength: "請輸入%%length%%字以內的文字",
            error_no_login_action: "因未正常登入，無法進行操作",
            error_no_select: "未選擇交談",
            error_upload: "上傳失敗",
            error_upload_disable_send_file: "檔案傳送受到管理者限制，無法上傳",
            error_upload_executable: "基於安全考量，無法上傳exe格式的檔案",
            error_upload_filesize: "檔案太大，無法上傳",
            error_upload_filetype: "不支援此檔案格式，無法上傳",
            error_upload_image: "請指定圖片格式（限使用JPEG、GIF、PNG）",
            error_upload_over_max_filesize: "檔案大小超過%%max_size%%將無法上傳。\n（上傳檔案大小：%%size%%）",
            fbconnect_blog_url: "http://blog-zh-tw.chatwork.com/",
            feedback_desc_noreply: "※將不會個別回信，請您諒解。",
            feedback_thankyou: '謝謝您的意見。<br /><br />您的寶貴意見，將會作為我們今後改善的參考。<br />今後也請您多多支持ChatWork。<img class="ui_emoticon" alt="(bow)" title="鞠躬 (bow)" src="./image/emoticon/emo_bow.gif">',
            file: "檔案",
            file_click_detail: "點選檔案顯示詳細",
            file_confirm_delete: "確定刪除檔案「%%file_name%%」嗎？",
            file_delete_error_try_again: "檔案刪除失敗。\n請稍後再試。",
            file_delete_hint: "刪除檔案",
            file_download_hint: "下載",
            file_drop_area: "<span>請拖曳至此區域</span><br />（可傳送多個檔案）",
            file_edited: "已編輯檔案名稱。",
            file_edit_title: "編輯檔案名稱",
            file_error_empty: "未輸入檔案名稱",
            file_loading: "檔案讀取中……",
            file_multi_confirm_delete: "您選擇了%%num%%個檔案。確定刪除嗎？",
            file_name: "檔案名稱：",
            file_nothing: "目前沒有檔案",
            file_not_found: "檔案不存在",
            file_preview_download: "下載圖片",
            file_preview_image_cant_read: "無法讀取預覽",
            file_preview_image_hint: "顯示檔案預覽",
            file_preview_open_newwindow: "在新視窗中顯示圖片",
            file_rename_hint: "編輯檔案名稱",
            file_search: "搜尋檔案名稱",
            file_search_not_found: "查無符合的檔案",
            file_size: "大小",
            file_uploaded: "已上傳檔案。",
            file_upload_by: "上傳者",
            file_upload_datetime: "上傳日期",
            groupchat: "群組交談",
            imagedrop_tooltip_change_filename: "變更檔案名稱",
            imagedrop_tooltip_title: "貼上剪貼簿中的圖片",
            invitation_link: "邀請連結",
            invitation_link_advanced_setting_index: "進階設定",
            invitation_link_advanced_setting_lead: "為將群組交談的內容告知參加的使用者，可設定「標題圖片」與「說明文」。",
            invitation_link_code_copy: "複製",
            invitation_link_help_tool_tip: "對方即使未持有帳號、並未連結為聯絡人，也可簡單地邀請至群組交談",
            invitation_link_setting_delete_current_header: "刪除目前的標題圖片",
            invitation_link_setting_error_invalid_link_name: "無效連結",
            invitation_link_setting_header_limit: "（檔案上限為700KB，可使用JPEG、GIF、PNG格式。圖寬上限為600像素）",
            invitation_link_setting_join_accept: "參加交談需獲得管理者同意",
            invitation_link_setting_status_disable: "無效",
            invitation_link_setting_title: "設定邀請連結",
            invitation_link_set_groupchat_description_index: "群組交談說明文",
            invitation_link_set_header_image_index: "邀請頁面的標題圖片",
            invitelink: "邀請連結",
            joinpublicchat_need_accept: "※參加此群組交談需要管理者同意",
            joinpublicchat_request_sent: "已傳送參加請求給群組交談的管理者。當管理者同意後，即可參加該群組交談。",
            joinpublicchat_title: "參加群組交談",
            join_groupchat_btn_join_groupchat_label: "參加此群組交談",
            join_groupchat_btn_send_join_request_label: "請求參加權限",
            join_groupchat_invite_message: "收到群組交談之邀請。請問要參加嗎?",
            join_groupchat_my_disable_external: "禁止與組織外使用者交流",
            join_groupchat_not_found: "交談不存在之邀請連結無效",
            join_groupchat_other_disable_external: "歸屬交談之任何人禁止與組織外使用者交流",
            jump_to_addpoint: "前往新增時間",
            jump_to_addpoint_not_found: "新增時間並無訊息",
            jump_to_message: "前往此訊息",
            kddi_manual_name: "服務說明",
            kddi_manual_path: "http://info-en.kcw.kddi.ne.jp",
            lang_dateformattip: "日期格式：",
            lang_typetip: "使用語言",
            live_call_chat: "您已被邀請加入%%chat_name%%的ChatWork Live",
            live_call_direct: "%%name%%先生／小姐邀請您加入ChatWork Live",
            live_invited: "您收到了邀請",
            live_join: "開始ChatWork Live",
            live_member_add_introduction: "請選擇想要新增至ChatWork Live的成員",
            live_member_not_found: "沒有可新增至ChatWork Live的成員",
            live_start: "已開始ChatWork Live",
            live_video: "視訊通話",
            live_voice: "語音通話",
            loading: "讀取中……",
            login_password_forget_link: "重新發行密碼請點選",
            mailaddress: "電子郵件地址",
            member: "成員",
            member_addition_dialog_title: "增加成員",
            member_addition_edit_member_label: "編輯成員",
            member_detail_edit_member_label: "編輯成員",
            member_edit_add_member_label: "增加成員",
            member_edit_dialog_title: "编辑成员",
            menu_admin_setting: "管理者設定",
            menu_announcement: "通知",
            menu_assistant: "",
            menu_change: "變更",
            menu_cheat_sheet: "快速鍵一覽",
            menu_concierge: "",
            menu_contact_admin: "聯絡人管理",
            menu_current: "目前：",
            menu_desktopalert: "桌面通知",
            menu_download_app: "下載APP",
            menu_feedback: "意見反映",
            menu_file: "檔案管理",
            menu_help: "小幫手",
            menu_information: "資訊",
            menu_logout: "登出",
            menu_mychat_hint: "顯示我的交談",
            menu_mytask: "工作管理",
            menu_personal_setting: "操作設定",
            menu_profile_setting: "個人資訊",
            menu_sound: "音效通知",
            menu_userguide: "基本使用方法",
            message: "訊息",
            message_join_groupchat: "參加群組交談",
            message_link: "訊息連結",
            message_open_chat: "前往此交談",
            multiselect_label: "個選擇中",
            mychat: "我的交談",
            mychat_default_desc: "我的交談是您個人專用的交談工具。提供您備忘錄、工作管理、檔案共享等功能。",
            name_suffix: "先生/小姐",
            newbrowser_check_compatibility_view_ie9: "使用Internet Explorer 9以上時，請確認相容性顯示的設定。<br />若要將相容顯示關閉時，請點選［相容顯示］的按鈕，調整為下列的狀態。",
            newbrowser_desc: "為了在最完善的作業環境下操作ChatWork，<br />建議使用各瀏覽器的最新版本。",
            newbrowser_download_chrome: "https://www.google.com/intl/zh-TW/chrome/",
            newbrowser_download_firefox: "http://mozilla.com.tw/firefox/",
            newbrowser_download_ie: "http://windows.microsoft.com/zh-tw/internet-explorer/download-ie",
            newbrowser_download_safari: "http://www.apple.com/tw/safari/",
            newbrowser_ie9_higher: "使用Internet Explorer 9以上時",
            newbrowser_listtip: "請使用下列瀏覽器的最新版本。",
            newbrowser_recommended: "建議的瀏覽器",
            newbrowser_subject: "目前您使用的並非建議的瀏覽器。",
            nickname_desc: '當暱稱設定完成，<span class="ui_to">To：</span>的顯示名稱也會隨之改變。',
            nickname_name: "姓名",
            nickname_nickname: "暱稱",
            nickname_prefix: "",
            nickname_suffix: "",
            nickname_title: "暱稱設定",
            notifier_newmessage: "您有新訊息",
            off: "關閉",
            on: "開啟",
            open_website: "開啟網站",
            open_window: "在其他視窗上開啟",
            organization_filter_radio_all: "顯示全部",
            organization_filter_radio_organized: "顯示組織內部",
            pager_first: "前往第一頁",
            pager_last: "前往最終頁",
            pager_next: "前往下一頁",
            pager_prev: "前往上一頁",
            pin_hint: "按下此交談的大頭針，可將此交談固定在一覽的最上方",
            preview: "預覽",
            preview_needlogin: "（您必需登入Google才能顯示該內容）",
            preview_video: "預覽",
            profile_allow_search: "允許成為聯絡人搜尋對象",
            profile_chatworkidtip: "ChatWork帳號：",
            profile_displaynametip: "顯示名稱：",
            profile_edit: "編輯個人資訊",
            profile_error_invalid_cwid: "輸入了無法使用的ChatWork帳號",
            profile_error_no_displayname: "請輸入顯示名稱",
            profile_form_title: "登入資訊",
            profile_image_limit: "（檔案上限為700KB，可使用JPEG、GIF、PNG格式）",
            profile_setting_addresstip: "地址：",
            profile_setting_departmenttip: "部門：",
            profile_setting_ecstudio_account: "設定登入資訊",
            profile_setting_edit_avatar: "變更照片",
            profile_setting_edit_cover: "變更封面照片",
            profile_setting_emailtip: "電子郵件地址：",
            profile_setting_introductiontip: "自我介紹：",
            profile_setting_note_change_orgname: "變更共同的組織名稱請點選",
            profile_setting_orgnametip: "組織名稱：",
            profile_setting_privacy_contact: "只限聯絡人",
            profile_setting_privacy_public: "公開",
            profile_setting_set_facebook_note: 'facebook的用戶名稱<a href="https://www.facebook.com/username/" target="_blank">請點選</a>',
            profile_setting_tel_extensiontip: "電話號碼（分機）：",
            profile_setting_tel_mobiletip: "電話號碼（手機）：",
            profile_setting_tel_organizationtip: "電話號碼（公司）：",
            profile_setting_titletip: "職稱：",
            profile_setting_urltip: "網址：",
            raise_error: "發生錯誤",
            readonly: "只限閱讀",
            read_more: "更多……",
            reply_badge_tooltip_label: "確認寄件者",
            role: "權限",
            room_permission_setting_allow_add_task: "允許新增工作",
            room_permission_setting_allow_see_member: "顯示交談的參加者一覽",
            room_permission_setting_allow_send_message: "允許傳送訊息",
            room_permission_setting_allow_upload_file: "允許傳送檔案",
            room_permission_setting_index: "權限設定",
            room_permission_setting_lead: "不適用於管理者權限的使用者",
            room_permission_setting_title: "群組交談的權限設定",
            room_request_description: "您選擇同意後，對方將可參加此群組交談。",
            room_request_title: "群組交談的參加請求一覽",
            saving: "儲存中……",
            search_except_wordtip: "排除關鍵字：",
            search_except_word_placeholder: "輸入排除關鍵字",
            search_group_by_chat: "依交談別顯示",
            search_group_by_time: "依最新日期顯示",
            search_group_by_user: "依使用者別顯示",
            search_loading: "搜尋中……",
            search_max_results: "(最多%%max_results%%則)",
            search_message_fromtip: "作者：",
            search_message_termtip: "日期：",
            search_option: "進階搜尋",
            search_placeholder: "輸入關鍵字",
            search_resulttip: "搜尋結果：",
            search_result_bychat_closeall: "全部關閉",
            search_result_bychat_openall: "全部開啟",
            search_result_not_found: "您搜尋的關鍵字%%keyword%%沒有符合的結果",
            search_result_unit: "則",
            search_suggest: '用"%%keyword%%"搜尋訊息',
            search_term_30: "30天內",
            search_term_365: "1年內",
            search_term_7: "7天內",
            search_term_90: "90天內",
            search_term_all: "全部",
            search_term_separator: "～",
            search_term_specify: "指定",
            search_title: "搜尋訊息",
            selectall_full: "全選",
            sending: "傳送中……",
            serviceadmin_do_upgrade: "升級ChatWork",
            serviceadmin_upgrade: "升級",
            serviceadmin_user_list_label: "使用者管理",
            sound_type: "音效種類",
            sound_volume: "音量",
            start_chatwork: "開始使用%%service_name%%",
            storage_activity_ratio_label: "儲存容量使用率",
            storage_add_link: "新增儲存容量",
            storage_cancel_add_storage_label: "新增儲存容量",
            storage_cancel_send_cancel: "無法傳送%%object%%",
            storage_cancel_send_object: "因想要傳送的%%object%%大小，已超過目前可使用的儲存容量上限，故取消傳送。<br /><br />為了能夠傳送%%object%%，請從檔案管理中刪除不需要的檔案，或者",
            storage_cancel_send_object_suffix_add_storage: "請使用新增儲存容量",
            storage_cancel_send_object_suffix_tell_admin: "請洽詢使用方案的管理者",
            storage_cancel_send_object_suffix_upgrade: "請升級目前的使用方案",
            storage_cancel_upgrade_label: "升級使用方案",
            storage_limit_notice_body: "目前的使用方案無法再傳送檔案。<br /><br />希望繼續使用時，請從檔案管裡中刪除不需要的檔案，或者<br />",
            storage_limit_notice_footer: "請注意，超過儲存容量上限達一星期後（%%date%%），<br />將無法傳送訊息。",
            storage_limit_notice_message: "［注意］儲存容量已達上限",
            storage_limit_notice_title: "儲存容量已達上限",
            storage_limit_warning_body: "因超過儲存容量上限已達一星期，<br />故停止交談訊息傳送功能。<br /><br />希望繼續使用時，請從檔案管裡刪除不需要的檔案，或者<br />",
            storage_limit_warning_message: "［重要］已停止交談訊息傳送功能",
            storage_limit_warning_title: "已停止交談訊息傳送功能",
            storage_other_user: "其他使用者",
            storage_show_all_user: "顯示一覽",
            storage_used: "使用",
            task: "工作",
            task_added: "已新增工作。",
            task_add_button: "新增工作",
            task_click_detail: "點選工作顯示詳細",
            task_client: "交辦人",
            task_confirm_delete: "確定刪除此工作嗎？",
            task_deleted: "此工作已刪除",
            task_delete_hint: "刪除工作",
            task_done: "已完成工作。",
            task_edited: "已編輯工作。",
            task_edit_hint: "編輯工作",
            task_edit_title: "編輯工作",
            task_error_empty: "未輸入工作內容",
            task_filter_all: "全部",
            task_filter_exired: "期限到期",
            task_filter_inweek: "一週以內",
            task_filter_nolimit: "沒有期限",
            task_filter_today: "今日",
            task_incharge: "負責人",
            task_inchargetip: "負責人：",
            task_incharge_placeholder: "請選擇負責人",
            task_input_placeholder: "請輸入工作內容",
            task_limit: "期限",
            task_limittip: "期限：",
            task_limit_placeholder: "請設定期限",
            task_loading: "讀取工作中……",
            task_menu_client: "您是交辦人",
            task_menu_close: "已完成工作",
            task_menu_incharge: "您是負責人",
            task_menu_open: "未完成工作",
            task_nothing: "目前無工作",
            task_not_found: "工作不存在",
            task_num: " (%%num%%以上)",
            task_reverted: "已將工作回復為未完成。",
            task_tasktip: "工作：",
            text_copied: "已複製",
            tutorial_addbutton: "可從此處建立新的群組交談，並新增朋友。",
            tutorial_add_task: "可從此處新增工作",
            tutorial_globalsearch: "可從此處搜尋交談名稱及訊息內容。",
            tutorial_send_message: "可從此處傳送訊息。",
            uncheckall: "取消",
            url_download_app: "http://www.chatwork.com/zh-tw/download/",
            userguide_message: "傳送訊息",
            userguide_message_about: "關於我的交談",
            userguide_message_about_content1: "<p>在此說明「我的交談」。此為只有您才能看見的交談。<br />在此可練習輸入訊息或是進行只有您的工作管理。</p>",
            userguide_message_about_content2: "<p>若要傳送訊息，請在畫面下方的「請在此輸入訊息」中輸入訊息。完成後按下傳送按鈕，或是按下Shift + Enter鍵即可傳送訊息。</p>",
            userguide_message_delete: "刪除訊息",
            userguide_message_delete_content1: "<p>您也可以刪除自己發出的訊息。<br />同樣於訊息選單中點選「…」，再點選「刪除」。</p>",
            userguide_message_delete_content2: "<p>將出現「確定刪除此訊息嗎？」的確認畫面，若要刪除時請點選「OK」。</p>",
            userguide_message_edit: "編輯訊息",
            userguide_message_edit_content1_biwa: "<p>將滑鼠停留在您已發出的訊息上，並點選「編輯」。</p>",
            userguide_message_edit_content2_biwa: "<p>點選「編輯」後，輸入畫面將顯示「編輯訊息中」，即可進行編輯。</p>",
            userguide_message_mention: "使用TO功能",
            userguide_message_mention_content1: "<p>想要在群組交談中傳送個別訊息，只要使用TO功能即可輕鬆完成。</p>",
            userguide_message_mention_select: "選擇訊息收件人",
            userguide_message_mention_select_content1: "<p>點選「TO」標誌後，便會出現參加群組交談的成員一覽，請從中選擇想傳送訊息的對象。</p>",
            userguide_message_mention_send: "傳送訊息",
            userguide_message_mention_send_content1: "<p>選擇收件人後，將於訊息欄內插入TO標記，請在其下方輸入訊息後傳送。</p>",
            userguide_message_mention_send_content2: "<p>畫面將顯示訊息已傳送至所選收件人。</p>",
            userguide_message_mention_send_content3: "<p>當有傳送給您的TO時，在交談一覽會顯示綠色的TO圖示。</p>",
            userguide_message_quote: "引用訊息",
            userguide_message_quote_content1_biwa: "<p>群組的人數增加後，將較難判斷各個發言是針對哪位對象。使用引用後，將可使交流變得更加順利。</p><h3>訊息選單的顯示方法</h3><p>將滑鼠停留在其他人的訊息上（游標移到文章上）<br />便會出現「回覆、引用、連結、未讀取」等按鈕。</p>",
            userguide_message_quote_content2_biwa: "<p>點選其中的「引用」，在訊息輸入欄便會出現被引用的文章及標記。</p>",
            userguide_message_quote_content3_biwa: "<p>傳送包含引用文章的訊息，即可清楚知道是針對哪一個訊息作發言。</p>",
            userguide_profile: "個人資訊設定",
            userguide_profile_about: "關於個人資訊設定",
            userguide_profile_about_content_biwa: "<p>在個人資訊設定中，可以設定個人圖片、封面照片、所屬組織名稱、聯絡資訊、自我介紹等。</p><p>設定個人資訊後，其他使用者在搜尋交談或聯絡人時，將能夠更容易搜尋到您。</p>",
            userguide_profile_chatworkid: "設定ChatWork帳號",
            userguide_profile_chatworkid_content1: "<p>設定ChatWork帳號後，可使用獨有的網址進入我的頁面，其他使用者要傳送聯絡人請求將變得更加簡單。</p><p>（例）%%chatwork_home_path%%已設定的ChatWork帳號］</p>",
            userguide_profile_chatworkid_content2: "<p>另外，因可使用已設定完成的ChatWork帳號搜尋聯絡人，故尋找想新增為聯絡人的對象也變得更加容易。<br />要登錄ChatWork帳號，請在「Chatwork帳號」中，輸入任意的半形英數字，點選「儲存」後即可完成設定。</p>",
            userguide_profile_open_setting: "開啟個人資訊畫面",
            userguide_profile_open_setting_content: "<p>點選畫面右上角您的姓名，接著點選下拉式選單的「個人資訊」後，即可開啟個人資訊的設定畫面。</p>",
            userguide_profile_open_setting_content_biwa: "<p>點選「編輯個人資訊」後，即可開啟編輯畫面。</p>",
            userguide_profile_upload_image: "上傳圖片",
            userguide_profile_upload_image_content_biwa: "<p>點選個人資訊內的「變更照片」。</p>",
            userguide_profile_upload_image_content_biwa2: "<p>選擇「上傳」，並指定好想要上傳的圖片後，點選「儲存」，即可設定儲存於電腦中的圖片。</p>",
            userguide_task: "使用工作功能",
            userguide_task_about: "關於工作功能",
            userguide_task_about_content: "<p>工作（待辦事項）管理，是為了預防忘記您的工作，將其另外標註的功能。另外，也可交辦工作給您以外的使用者。</p><p>關於工作功能的使用方法，請在我的交談的個人專用畫面中，練習新增您的工作吧。</p>",
            userguide_task_add: "新增工作",
            userguide_task_add_content1_biwa: "<p>於交談畫面右側的「請輸入工作內容」中輸入工作內容，並選擇負責人與期限，再點選「新增工作」按鈕。</p>",
            userguide_task_add_content2_biwa: "<p>於時間軸傳送工作內容後，便完成工作的新增。</p>",
            userguide_task_browse: "確認工作",
            userguide_task_browse_content1: "<p>可在ChatWork畫面的右側看見新增的工作。<br />這樣就不會忘記該處理的工作了。</p>",
            userguide_task_browse_content2_biwa: "<p>在交談一覽中，會在工作圖示的右側，以數字顯示您的工作數。</p>",
            userguide_task_complete: "完成工作",
            userguide_task_complete_content1_biwa: "<p>當工作完成後，請點選左上角的「完成」按鈕。</p>",
            userguide_task_complete_content2: "<p>此時將出現「已完成工作。」，代表已完成工作。</p>",
            userguide_task_complete_content3: '<p>「%%service_name%%的基本使用方法」說明到此結束。<br />更多詳細的使用方法請參考「<a href="http://help.chatwork.com/hc/zh-tw" target="_blank">小幫手</a>」</p>',
            userguide_title: "%%service_name%%的基本使用方法",
            userguide_welcome_head: "關於%%service_name%%",
            userguide_welcome_service_desc_chatwork: "%%service_name%%是包含了群組交談、工作管理、檔案管理、視訊通話等功能的<br />「雲端型商務交談工具」。",
            userguide_welcome_service_desc_kddi: "KDDI ChatWork 是包含了群組交談、工作管理、檔案管理、視訊通話等功能的<br />「社群型溝通工具」。",
            username: "使用者名稱",
            welcome_title: "歡迎使用%%service_name%%",
            word_separator: "，",
            _button_delete_with_agreement: "已了解並進行刪除",
            _chatroom_confirm_delete_alert: "確定刪除「%%room_name%%」嗎？",
            _chatroom_confirm_delete_content: "刪除前請確認以下內容，確認完畢請打勾。",
            _chatroom_confirm_delete_note_1: "將從您以及所有成員的交談一覽中遭受刪除。",
            _chatroom_confirm_delete_note_2: "全部的訊息、工作、檔案資料都將遭受刪除。",
            _chatroom_confirm_delete_note_3: "刪除的資料將無法復原。",
            _chatwork_apitoken_caution_1: 'ChatWork API的詳細資料<a href="http://link.chat-work.com/api_document_tw" target="_blank">請點選此處</a>確認。',
            _chatwork_apitoken_caution_2: "請注意，API token的管理運用，請勿揭露予第三人。",
            _chatwork_apitoken_caution_3: "若有過度請求API的情形，基於系統負荷之考量，將停止提供使用API之服務，敬請見諒。",
            _chatwork_apitoken_caution_4: '關於API的使用方式，適用於 <a href="http://www.chatwork.com/ja/terms/api.html" target="_blank">ChatWork API服務條款</a>，敬請確認。',
            _chatwork_apitoken_confirm_regenerate: "若重新發送API token，目前已發送的API token將變為無效。確定要重新發送嗎？",
            _chatwork_apitoken_copy_btn: "複製",
            _chatwork_apitoken_display_btn: "顯示",
            _chatwork_apitoken_empty_password: "未輸入密碼",
            _chatwork_apitoken_invalid_password: "密碼錯誤",
            _chatwork_apitoken_password_caption: "若您需要發行、顯示API token時，<br />請輸入ChatWork的密碼。",
            _chatwork_apitoken_password_placeholder: "輸入密碼",
            _chatwork_apitoken_regenerate_btn: "重新發送",
            _chatwork_apitoken_token_label: "API：",
            _chatwork_apitoken_token_placeholder: "API",
            _chatwork_file_upload_eset_link: "建議的網路安全軟體",
            _chatwork_path_help_file_upload_error: '\n\nMac OS的使用者請至小幫手頁面確認\n<a href="http://link.chat-work.com/h_file_upload_en" target="_blank">http://link.chat-work.com/h_file_upload_en</a>'
        }
    }, {}],
    333: [function(require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(d, b) {
                        d.__proto__ = b
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p])
                    };
                return function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                }
            }();
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var React = require("react"),
            events_1 = require("events"),
            boot_1 = require("../../web-new/controller/boot"),
            language_1 = require("../../web-new/lib/language"),
            DropDown_1 = require("./DropDown"),
            ADD_GROUP_CHAT = "clickAddGroupChat",
            ADD_CONTACT = "clickAddContact",
            AddDropDown = function(_super) {
                function AddDropDown(props) {
                    var _this = _super.call(this, props) || this;
                    return _this.emitter = new events_1.EventEmitter, _this.addDropDownProps = {
                        label: {
                            type: "icon",
                            content: "plus"
                        },
                        list: [{
                            label: language_1.Language.getLang("%%%chatroom_create_title%%%"),
                            event: ADD_GROUP_CHAT
                        }, {
                            label: language_1.Language.getLang("%%%contact_add%%%"),
                            event: ADD_CONTACT
                        }],
                        emitter: _this.emitter
                    }, _this.bindEventHandler(), _this
                }
                return __extends(AddDropDown, _super), AddDropDown.prototype.bindEventHandler = function() {
                    this.emitter.on(ADD_GROUP_CHAT, function() {
                        boot_1.RD.view.openAddRoomDialog()
                    }), this.emitter.on(ADD_CONTACT, function() {
                        boot_1.AC.view.reachedContactLimit() ? boot_1.CW.view.showContactLimitErrorDialog({
                            plan_name: PLAN_NAME,
                            limit_num: boot_1.CW.contact_limit_num
                        }) : (boot_1.AC.view.tab_type = "invitemail", boot_1.AC.view.openContactWindow())
                    })
                }, AddDropDown.prototype.render = function() {
                    return React.createElement(DropDown_1.DropDown, {
                        label: this.addDropDownProps.label,
                        list: this.addDropDownProps.list,
                        emitter: this.addDropDownProps.emitter
                    })
                }, AddDropDown
            }(React.Component);
        exports.AddDropDown = AddDropDown
    }, {
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/language": 384,
        "./DropDown": 335,
        events: 43,
        react: 284
    }],
    334: [function(require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(d, b) {
                        d.__proto__ = b
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p])
                    };
                return function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                }
            }();
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var React = require("react"),
            ReactDOM = require("react-dom"),
            boot_1 = require("../../web-new/controller/boot"),
            lifeCycleEvent_1 = require("../../web-new/lib/lifeCycleEvent"),
            appendParameter_1 = require("../../utils/appendParameter"),
            CommercialAnnounceBanner = function(_super) {
                function CommercialAnnounceBanner(props) {
                    var _this = _super.call(this, props) || this;
                    return _this.interval = 36e5, _this.defaultCommercialAnnounce = {
                        id: void 0,
                        contents: void 0,
                        label: void 0,
                        url: void 0,
                        start_time: void 0,
                        end_time: void 0
                    }, _this.getCommercialAnnounceSuccessCallback = function(apiResponse) {
                        var boundaryDisplayTime = Number(boot_1.CW.localStorage.getItem("commercialAnnounceStartTime")),
                            commercialAnnounceList = CommercialAnnounceBanner.getDisplayCommercialAnnounces(apiResponse, boundaryDisplayTime);
                        if (!commercialAnnounceList.length) return void _this.polling();
                        _this.setState({
                            commercialAnnounce: commercialAnnounceList[0]
                        }), _this.showBanner()
                    }, _this.state = {
                        viewState: "close",
                        commercialAnnounce: _this.defaultCommercialAnnounce
                    }, _this
                }
                return __extends(CommercialAnnounceBanner, _super), CommercialAnnounceBanner.prototype.componentDidMount = function() {
                    var _this = this;
                    ReactDOM.findDOMNode(this.refs.commercialAnnounceBanner).addEventListener("transitionend", function() {
                        "open" !== _this.state.viewState && _this.setState({
                            commercialAnnounce: _this.defaultCommercialAnnounce
                        })
                    }), lifeCycleEvent_1.LifeCycleEvent.once("loadRoom", function() {
                        var cmAnnounceObj = "undefined" != typeof CMANNOUNCE ? CMANNOUNCE : {};
                        if (Object.keys(cmAnnounceObj).length) return void _this.showBannerImmediately(CMANNOUNCE);
                        _this.getCommercialAnnounce(_this.getCommercialAnnounceSuccessCallback)
                    })
                }, CommercialAnnounceBanner.getDisplayCommercialAnnounces = function(result, boundaryDisplayTime) {
                    var current = (new Date).getTime() / 1e3;
                    return result.filter(function(item) {
                        return item.start_time <= current
                    }).filter(function(item) {
                        return boundaryDisplayTime ? item.start_time > boundaryDisplayTime : item
                    })
                }, CommercialAnnounceBanner.prototype.getCommercialAnnounce = function(success, id) {
                    var _this = this;
                    boot_1.CW.post("gateway.php", {
                        cmd: "get_commercial_announce",
                        id: id
                    }, function(result) {
                        if (!result.length) return void _this.polling();
                        success(result)
                    }, function(error) {
                        _this.polling()
                    })
                }, CommercialAnnounceBanner.prototype.readCommercialAnnounce = function(id, viewState) {
                    var _this = this;
                    boot_1.CW.localStorage.setItem("commercialAnnounceStartTime", this.state.commercialAnnounce.start_time), this.changeViewState(viewState);
                    var params = {
                        cmd: "read_commercial_announce",
                        announce_id: id
                    };
                    boot_1.CW.post("gateway.php", params, function(_) {
                        _this.polling()
                    }, function(error) {
                        _this.polling()
                    })
                }, CommercialAnnounceBanner.prototype.polling = function() {
                    var _this = this;
                    setTimeout(function() {
                        _this.getCommercialAnnounce(_this.getCommercialAnnounceSuccessCallback)
                    }, this.interval)
                }, CommercialAnnounceBanner.prototype.showBanner = function() {
                    var _this = this,
                        myId = boot_1.AC.myid,
                        delay = myId % 100 * 3 * 1e3,
                        callback = function(_) {
                            _this.changeViewState("open"), _this.trackEvent(_this.state.commercialAnnounce.id, "display_commercial_announce", "open")
                        };
                    setTimeout(function() {
                        _this.getCommercialAnnounce(callback, _this.state.commercialAnnounce.id)
                    }, delay)
                }, CommercialAnnounceBanner.prototype.showBannerImmediately = function(commercialAnnounce) {
                    this.setState({
                        commercialAnnounce: commercialAnnounce
                    }), this.changeViewState("open")
                }, CommercialAnnounceBanner.prototype.changeViewState = function(state) {
                    this.setState({
                        viewState: state
                    })
                }, CommercialAnnounceBanner.prototype.trackEvent = function(id, label, type) {
                    boot_1.TREASURE.trackEvent("commercial_announce_banner", type, {
                        label: label,
                        announce_id: id
                    })
                }, CommercialAnnounceBanner.prototype.changeClassName = function(viewState) {
                    return "commercialAnnounceBanner commercialAnnounceBanner--" + viewState
                }, CommercialAnnounceBanner.prototype.getUrlWithParameter = function() {
                    if (this.state.commercialAnnounce.url) return appendParameter_1.appendParameterToUrl(this.state.commercialAnnounce.url, "cwcaid", String(this.state.commercialAnnounce.id))
                }, CommercialAnnounceBanner.prototype.onClickClose = function(id) {
                    this.trackEvent(id, "close_commercial_announce", "click"), this.readCommercialAnnounce(id, "close")
                }, CommercialAnnounceBanner.prototype.onClickButton = function(id) {
                    this.trackEvent(id, "read_commercial_announce", "click"), this.readCommercialAnnounce(id, "disappear")
                }, CommercialAnnounceBanner.prototype.render = function() {
                    var _this = this;
                    return React.createElement("div", {
                        className: this.changeClassName(this.state.viewState),
                        ref: "commercialAnnounceBanner"
                    }, React.createElement("div", {
                        className: "commercialAnnounceBanner__closeButton",
                        onClick: function() {
                            _this.onClickClose(_this.state.commercialAnnounce.id)
                        }
                    }, React.createElement("svg", {
                        className: "commercialAnnounceBanner__closeButtonIcon",
                        viewBox: "0 0 10 10",
                        width: "10",
                        height: "10"
                    }, React.createElement("use", {
                        fillRule: "evenodd",
                        xlinkHref: "#icon_cancel"
                    }))), React.createElement("p", {
                        className: "commercialAnnounceBanner__content"
                    }, this.state.commercialAnnounce.contents), React.createElement("p", {
                        className: "commercialAnnounceBanner__buttonContainer"
                    }, React.createElement("a", {
                        className: "commercialAnnounceBanner__button",
                        href: this.getUrlWithParameter(),
                        target: "_blank",
                        rel: "noopener noreferrer",
                        onClick: function() {
                            _this.onClickButton(_this.state.commercialAnnounce.id)
                        }
                    }, this.state.commercialAnnounce.label)))
                }, CommercialAnnounceBanner
            }(React.Component);
        exports.CommercialAnnounceBanner = CommercialAnnounceBanner
    }, {
        "../../utils/appendParameter": 338,
        "../../web-new/controller/boot": 340,
        "../../web-new/lib/lifeCycleEvent": 385,
        react: 284,
        "react-dom": 133
    }],
    335: [function(require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(d, b) {
                        d.__proto__ = b
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p])
                    };
                return function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                }
            }();
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var React = require("react"),
            ReactDOM = require("react-dom"),
            DropDown = function(_super) {
                function DropDown(props) {
                    var _this = _super.call(this, props) || this;
                    return _this.state = {
                        visibleState: "disappear"
                    }, _this.disposers = [], _this
                }
                return __extends(DropDown, _super), DropDown.prototype.componentDidMount = function() {
                    var _this = this;
                    ReactDOM.findDOMNode(this.refs.dropDownList).addEventListener("transitionend", function() {
                        "open" !== _this.state.visibleState && (_this.setState({
                            visibleState: "disappear"
                        }), _this.disposeEventListener())
                    })
                }, DropDown.prototype.bindEventListener = function() {
                    "open" !== this.state.visibleState && this.disposers.push(this.addMouseEventListener(), this.addKeyEventListener())
                }, DropDown.prototype.addMouseEventListener = function() {
                    var _this = this,
                        callback = function(event) {
                            event.target.closest("#_uiDropDown") || _this.setState({
                                visibleState: "close"
                            })
                        };
                    return document.addEventListener("click", callback),
                        function() {
                            document.removeEventListener("click", callback)
                        }
                }, DropDown.prototype.addKeyEventListener = function() {
                    var _this = this,
                        callback = function(event) {
                            27 === event.keyCode && _this.setState({
                                visibleState: "close"
                            })
                        };
                    return document.addEventListener("keydown", callback),
                        function() {
                            document.removeEventListener("keydown", callback)
                        }
                }, DropDown.prototype.disposeEventListener = function() {
                    this.disposers.forEach(function(dispose) {
                        return dispose()
                    })
                }, DropDown.prototype.onClickButton = function() {
                    var state = "open" !== this.state.visibleState ? "open" : "close";
                    this.setState({
                        visibleState: state
                    }), this.bindEventListener()
                }, DropDown.prototype.onClickListItem = function(eventToken) {
                    this.props.emitter.emit(eventToken), this.setState({
                        visibleState: "disappear"
                    }), this.disposeEventListener()
                }, DropDown.prototype.appendModifierClass = function() {
                    return "uiDropDown__listContainer uiDropDown__listContainer--" + this.state.visibleState
                }, DropDown.prototype.render = function() {
                    var _this = this;
                    return React.createElement("div", {
                        id: "_uiDropDown",
                        className: "uiDropDown"
                    }, React.createElement("div", {
                        className: "uiDropDown__button",
                        role: "button",
                        onClick: function() {
                            _this.onClickButton()
                        }
                    }, function() {
                        if ("text" === _this.props.label.type) return React.createElement("p", {
                            className: "uiDropDown__label"
                        }, _this.props.label.content);
                        var iconContent = "#icon_" + _this.props.label.content;
                        return React.createElement("svg", {
                            className: "uiDropDown__labelIcon",
                            viewBox: "0 0 12 12",
                            width: "12",
                            height: "12"
                        }, React.createElement("use", {
                            fillRule: "evenodd",
                            xlinkHref: iconContent
                        }))
                    }(), React.createElement("svg", {
                        className: "uiDropDown__icon",
                        viewBox: "0 0 6 6",
                        width: "6",
                        height: "6"
                    }, React.createElement("use", {
                        fillRule: "evenodd",
                        xlinkHref: "#icon_triangleDown"
                    }))), React.createElement("div", {
                        className: this.appendModifierClass(),
                        role: "tooltip",
                        ref: "dropDownList"
                    }, React.createElement("ul", {
                        className: "uiDropDown__list",
                        role: "menu"
                    }, this.props.list.map(function(item) {
                        return React.createElement("li", {
                            className: "uiDropDown__listItem",
                            key: item.event,
                            role: "menuitem",
                            onClick: function() {
                                _this.onClickListItem(item.event)
                            }
                        }, item.label)
                    }))))
                }, DropDown
            }(React.Component);
        exports.DropDown = DropDown
    }, {
        react: 284,
        "react-dom": 133
    }],
    336: [function(require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(d, b) {
                        d.__proto__ = b
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p])
                    };
                return function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                }
            }();
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var React = require("react"),
            Logo = function(_super) {
                function Logo() {
                    return null !== _super && _super.apply(this, arguments) || this
                }
                return __extends(Logo, _super), Logo.prototype.render = function() {
                    return React.createElement("img", {
                        className: "globalHeaderBranding__" + OEM + "SvgLogo",
                        src: "./imagenew/all/common/logo/img_logo_" + OEM + ".svg",
                        alt: "ChatWork"
                    })
                }, Logo
            }(React.Component);
        exports.Logo = Logo
    }, {
        react: 284
    }],
    337: [function(require, module, exports) {
        "use strict";

        function Render() {
            ReactDOM.render(React.createElement(logo_1.Logo, {}), document.querySelector("#_logo")), ReactDOM.render(React.createElement(CommercialAnnounceBanner_1.CommercialAnnounceBanner, {}), document.querySelector("#_commercialAnnounceBanner")), ReactDOM.render(React.createElement(AddDropDown_1.AddDropDown, {}), document.querySelector("#_addDropDown"))
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var React = require("react"),
            ReactDOM = require("react-dom"),
            logo_1 = require("./components/logo"),
            CommercialAnnounceBanner_1 = require("./components/CommercialAnnounceBanner"),
            AddDropDown_1 = require("./components/AddDropDown");
        exports.Render = Render
    }, {
        "./components/AddDropDown": 333,
        "./components/CommercialAnnounceBanner": 334,
        "./components/logo": 336,
        react: 284,
        "react-dom": 133
    }],
    338: [function(require, module, exports) {
        "use strict";

        function appendParameterToUrl(url, query, value) {
            var parameter = query + "=" + value,
                baseUrl = url.replace(/^(.+)(\/)$/, "$1"),
                _a = baseUrl.split("?");
            _a[0];
            return _a[1] ? baseUrl + "&" + parameter : baseUrl.split(".").pop().toLowerCase().match(/html|htm|php/) ? baseUrl + "?" + parameter : baseUrl + "/?" + parameter
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.appendParameterToUrl = appendParameterToUrl
    }, {}],
    339: [function(require, module, exports) {
        "use strict";

        function trimControlCharacter(text) {
            return text.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/, "")
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.trimControlCharacter = trimControlCharacter
    }, {}],
    340: [function(require, module, exports) {
        /*!
         * @preserve ChatWork http://www.chatwork.com/
         * Copyright (c) <%YEAR%> ChatWork,Inc.
         *
         *  -- Using Libraries. thanks a lot! --
         *
         * jQuery.ScrollTo
         * Copyright (c) 2007-2012 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
         * Dual licensed under MIT and GPL.
         * Date: 12/14/2012
         *
         * --
         *
         * clipboard.js v1.5.15
         * https://zenorocha.github.io/clipboard.js
         *
         * Licensed MIT © Zeno Rocha
         *
         * --
         *
         */
        "use strict";

        function RMUpdate(newRM) {
            window.RM = exports.RM = newRM
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var ChatWork_1 = require("../../core/model/ChatWork"),
            Account_1 = require("../../core/model/Account"),
            File_1 = require("../../core/model/File"),
            Task_1 = require("../../core/model/Task"),
            RoomList_1 = require("../../core/model/RoomList"),
            RoomDialog_1 = require("../../core/model/RoomDialog"),
            RoomSub_1 = require("../model/RoomSub"),
            Setting_1 = require("../../core/model/Setting"),
            ChatSend_1 = require("../../core/model/ChatSend"),
            Search_1 = require("../../core/model/Search"),
            Analytics_1 = require("../../core/lib/Analytics"),
            TreasureData_1 = require("../../core/lib/TreasureData"),
            CheatSheet_1 = require("../../core/model/CheatSheet"),
            theme_1 = require("../lib/theme"),
            common_1 = require("../lib/common"),
            language_1 = require("../lib/language"),
            render_1 = require("../../ui/render"),
            messageArea_1 = require("../lib/messageArea/messageArea");
        exports.CW = new ChatWork_1.ChatWork(CLIENT_VER), exports.AC = new Account_1.Account(MYID), exports.FL = new File_1.File, exports.TK = new Task_1.Task, exports.RL = new RoomList_1.RoomList, exports.RD = new RoomDialog_1.RoomDialog, exports.RS = new RoomSub_1.RoomSub, exports.ST = new Setting_1.Setting, exports.CS = new ChatSend_1.ChatSend, exports.SC = new Search_1.Search, exports.AL = new Analytics_1.Analytics, exports.RM = null, exports.TM = theme_1.THEME.blue, exports.messageArea = messageArea_1.MessageArea(), exports.CHEATSHEET = new CheatSheet_1.CheatSheet, exports.TREASURE = new TreasureData_1.TreasureData, window.CW = exports.CW, window.AC = exports.AC, window.FL = exports.FL, window.TK = exports.TK, window.RL = exports.RL, window.RD = exports.RD, window.RS = exports.RS, window.ST = exports.ST, window.CS = exports.CS, window.SC = exports.SC, window.AL = exports.AL, window.RM = exports.RM, window.TM = exports.TM, window.CHEATSHEET = exports.CHEATSHEET, window.TREASURE = exports.TREASURE, exports.RMUpdate = RMUpdate, exports.wfocus = !0, exports.use_local_comet = 0 === USE_COMET;
        var audio = new Audio("");
        exports.canPlayOgg = "no" != audio.canPlayType("audio/ogg") && "" != audio.canPlayType("audio/ogg"), exports.canPlayMp3 = "no" != audio.canPlayType("audio/mpeg") && "" != audio.canPlayType("audio/mpeg"), $.fn.dialog = function() {
            return this
        }, $.fn.tabs = function() {
            return this
        }, $.fn.button = function() {
            return this
        }, $.fn.draggable = function() {
            return this
        }, $.fn.resizable = function() {
            return this
        }, $.fn.effect = function() {
            return this
        }, $.hashchangeHandler = function() {
            var match = location.hash.match(/#!rid(\d+)$/);
            match && exports.RL.selectRoom(match.pop())
        }, exports.DIALOG_CANCEL_BUTTON = null, exports.DIALOG_CLOSE_BUTTON = null, exports.URL = window.URL || window.webkitURL, $(function() {
            var startTime = Date.now();
            $C.register("document", function() {
                return $(document)
            }).register("body", function() {
                return $(document.body)
            }).register("#cw_send_area .cw_buttons", function() {
                return $C("#cw_send_area").find(".cw_buttons")
            }).register("#cw_room_setting_box .admin", function() {
                return $C("#cw_room_setting_box").find(".admin")
            }).register("#cw_room_setting_box .group", function() {
                return $C("#cw_room_setting_box").find(".group")
            }).register("#cw_room_setting_box .contact", function() {
                return $C("#cw_room_setting_box").find(".contact")
            }).register("#cw_room_setting_box .my", function() {
                return $C("#cw_room_setting_box").find(".my")
            }).register("#cw_room_setting_box li", function() {
                return $C("#cw_room_setting_box").find("li")
            }), $.cwFloatWindow.setDefaultOption({
                wrapperSelector: "#_mainContent"
            }), $.cwActionBar.setDefaultOption({
                descriptionDelay: exports.TM.messagetip_delay
            }), $.cwButton.setDefaultOption({
                descriptionDelay: exports.TM.messagetip_delay
            }), $.cwButtonBar.setDefaultOption({
                descriptionDelay: exports.TM.messagetip_delay
            });
            var dialog_cancel = function() {
                $(this).dialog("close")
            };
            exports.DIALOG_CANCEL_BUTTON = {
                text: language_1.Language.getLang("%%%button_cancel%%%"),
                click: dialog_cancel
            }, exports.DIALOG_CLOSE_BUTTON = {
                text: language_1.Language.getLang("%%%button_close%%%"),
                click: dialog_cancel
            }, exports.CW.prepare(), exports.CW.view.onEndInitLoad(function() {
                exports.TREASURE.trackEvent("init_load", "load", {
                    label: "init_load",
                    time: Date.now() - startTime
                })
            }), exports.CW.view.onPostLoad(function() {
                var customvars = {
                    plan: exports.CW.plan || "",
                    device: "web",
                    lang: LANGUAGE,
                    gnum: exports.RL.getGroupChatNum(),
                    cnum: exports.AC.getContactNum(),
                    useday: Math.floor((Number(new Date) - Number(new Date(1e3 * Number(REG_TIME)))) / 864e5),
                    pnum: exports.RL.getStickyRoomNum(),
                    dhash: DHASH
                };
                exports.AL.start(customvars), window.addEventListener("message", function(e) {
                    var message;
                    try {
                        message = JSON.parse(e.data)
                    } catch (err) {
                        return
                    }
                    if ("addContactAd" === message.event) {
                        var aid = Number(message.targetAccountId);
                        aid && exports.AC.view.requestContact([aid], null, function() {
                            exports.CW.view.alert(language_1.Language.getLang("%%%contact_connect_from_ads_complete%%%"))
                        })
                    }
                });
                var trackException = function(e) {
                    var params = {
                        name: e.name,
                        error_message: e.message,
                        line_no: e.lineno,
                        col_no: e.colno
                    };
                    exports.TREASURE.trackException(params)
                };
                window.addEventListener("error", trackException, !1), window.addEventListener("unhandledrejection", trackException, !1), setInterval(function() {
                    exports.AL.sendEventForKeepSession("session", "update")
                }, 3e5)
            }), exports.AC.prepare(), exports.FL.prepare(), exports.TK.prepare(), exports.RL.prepare(), exports.RD.prepare(), exports.RS.prepare(), exports.ST.prepare(), exports.CS.prepare(), exports.SC.prepare(), exports.CHEATSHEET.prepare(), exports.CW.buildLayout(), exports.use_local_comet && (exports.CW.request.use_local_comet = !0), exports.CW.watch(), $.ajaxSetup({
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                cache: !1
            }), $C("document").bind("ajaxSend", function(c, xhr) {
                $(window).bind("beforeunload", function() {
                    xhr.abort()
                })
            });
            var wfocusin = function() {
                    exports.wfocus = !0, exports.CW.read(), exports.CW.watch()
                },
                wfocusout = function() {
                    exports.wfocus = !1, exports.CW.cancelRead()
                };
            common_1._is_msie ? ($C("document").bind("focusin", wfocusin), $C("document").bind("focusout", wfocusout), $C("#cw_send_file_mask").css("opacity", 1)) : (window.addEventListener("focus", wfocusin, !1), window.addEventListener("blur", wfocusout, !1)), $("label").mousedown(function() {
                return !1
            }), $("._searchBox").cwSearchBox(), $("._checkBox").cwCheckBox(), $("._button").cwButton();
            var preload_list = ["./image/sp_icon.png"];
            if (preload_list.length > 0)
                for (var img = new Image, i = 0; i < preload_list.length; i++) img.src = preload_list[i];
            exports.CW.view.onEndInitLoad(function() {
                exports.CW.checkNotificationPermission()
            }), $(window).bind("hashchange", $.hashchangeHandler), render_1.Render(), window.console.log("commit id 91dfcb7d585578119f5c866422d6ab47a7ace9d9")
        })
    }, {
        "../../core/lib/Analytics": 305,
        "../../core/lib/TreasureData": 307,
        "../../core/model/Account": 309,
        "../../core/model/ChatSend": 310,
        "../../core/model/ChatWork": 311,
        "../../core/model/CheatSheet": 312,
        "../../core/model/File": 313,
        "../../core/model/RoomDialog": 316,
        "../../core/model/RoomList": 317,
        "../../core/model/Search": 318,
        "../../core/model/Setting": 319,
        "../../core/model/Task": 320,
        "../../ui/render": 337,
        "../lib/common": 342,
        "../lib/language": 384,
        "../lib/messageArea/messageArea": 389,
        "../lib/theme": 392,
        "../model/RoomSub": 396
    }],
    341: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var boot_1 = require("../controller/boot"),
            Request = function() {
                function Request() {
                    this.use_local_comet = !1, this.retry_timeout = 3e3, this.retry_remain_count = 7, this.comet_timeout = 3e3, this.comet_retry_remain_count = 7
                }
                return Request.prototype.ajax = function(params) {
                    return "POST" == params.type && (params.data = {
                        pdata: JSON.stringify(params.data)
                    }), $.ajax(params)
                }, Request.prototype.checkOnline = function(callback_success, callback_error) {
                    "function" != typeof callback_success && (callback_success = function() {}), "function" != typeof callback_error && (callback_error = function() {}), $.ajax({
                        type: "GET",
                        dataType: "json",
                        async: !0,
                        url: SERVER_PATH + "/gateway.php?cmd=check_online&myid=" + boot_1.AC.myid + "&_v=" + boot_1.CW.version + "&_av=" + boot_1.CW.api_version + "&_t=" + ACCESS_TOKEN + "&ln=" + LANGUAGE,
                        success: function(json) {
                            if (json && 1 == json.status.success) callback_success();
                            else {
                                var error_msg = "";
                                json && json.status && (error_msg = json.status.message), callback_error(error_msg)
                            }
                        },
                        error: function() {
                            callback_error("TIMEOUT")
                        }
                    })
                }, Request.prototype.comet = function(token_key) {
                    var self = this;
                    if (self.use_local_comet) boot_1.CW.get("gateway.php", {
                        cmd: "local_comet",
                        last_id: boot_1.CW.last_id,
                        new: 1
                    }, function(json) {
                        self.retry_timeout = 1e3, json.updated && boot_1.CW.watch(), self.comet()
                    }, function() {
                        self.retry_timeout *= 1.2, setTimeout(function() {
                            self.comet()
                        }, self.retry_timeout)
                    });
                    else {
                        for (; $("#wcs-iframe").length;) $("#wcs-iframe").remove();
                        if (token_key) self.connect(token_key);
                        else {
                            var account_id = boot_1.AC.myid,
                                saved_account_id = sessionStorage.getItem("session.account_id");
                            saved_account_id ? account_id != saved_account_id && (self.clear_channel_token_data(), sessionStorage.setItem("session.account_id", account_id)) : (sessionStorage.getItem("session.account_id") && self.clear_channel_token_data(), sessionStorage.setItem("session.account_id", account_id));
                            var saved_token_key = sessionStorage.getItem("channel_token_key");
                            saved_token_key ? self.connect(saved_token_key) : boot_1.CW.post("gateway.php", {
                                cmd: "get_comet_token_key"
                            }, function(json) {
                                self.retry_timeout = 3e3, self.retry_remain_count = 7, self.connect(json.token_key, !0), sessionStorage.setItem("channel_token_key", json.token_key)
                            }, function() {
                                if (self.retry_remain_count < 0) return !1;
                                setTimeout(function() {
                                    self.comet()
                                }, self.retry_timeout), self.retry_timeout *= 2, self.retry_remain_count--
                            })
                        }
                    }
                }, Request.prototype.connect = function(token_key, is_first) {
                    var self = this,
                        saved_channel_token = sessionStorage.getItem("channel_token");
                    saved_channel_token ? self.open_socket(saved_channel_token) : $.getJSON(COMET_SERVER_PATH + "/token?callback=?", {
                        myid: boot_1.AC.myid,
                        key: token_key
                    }).done(function(json) {
                        json.status && json.status.success && (sessionStorage.setItem("channel_token", json.result.token), self.open_socket(json.result.token), self.comet_timeout = 3e3, self.comet_retry_remain_count = 7, 1 != is_first && boot_1.CW.post("gateway.php", {
                            cmd: "update_comet_token_key",
                            token_key: token_key
                        }))
                    }).fail(function() {
                        if (self.comet_retry_remain_count < 0) return !1;
                        setTimeout(function() {
                            self.connect(token_key, is_first)
                        }, self.comet_timeout), self.comet_timeout *= 2, self.comet_retry_remain_count--
                    })
                }, Request.prototype.open_socket = function(token) {
                    var self = this,
                        channel = new goog.appengine.Channel(token),
                        socket = channel.open(),
                        reconnect = function() {
                            self.clear_channel_token_data(), self.comet()
                        };
                    socket.onopen = function() {
                        setTimeout(reconnect, 54e5)
                    }, socket.onerror = reconnect, socket.onmessage = function(e) {
                        switch (e.data) {
                            case "watch":
                                boot_1.CW.watch();
                                break;
                            case "reconnect":
                                self.clear_channel_token_data(), self.comet()
                        }
                    }
                }, Request.prototype.clear_channel_token_data = function() {
                    sessionStorage.removeItem("channel_token"), sessionStorage.removeItem("channel_token_key")
                }, Request
            }();
        exports.Request = Request
    }, {
        "../controller/boot": 340
    }],
    342: [function(require, module, exports) {
        "use strict";

        function mlength(str) {
            for (var len = 0, i = 0; i < str.length; i++) {
                str.charCodeAt(i) > 255 && len++, len++
            }
            return len
        }

        function get_file_extension(filename) {
            var split = filename.split("."),
                extension = "";
            return split.length > 1 && (extension = split[split.length - 1].toLowerCase()), extension
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports._is_msie = document.uniqueID, exports._is_mac = navigator.appVersion.includes("Mac"), exports._is_chrome = navigator.userAgent.toLowerCase().includes("chrome"), window._is_mac = exports._is_mac, window.wfocus = void 0, jQuery.support.isWindowsFirefox = function() {
            return !!/windows.+\sfirefox\//.test(navigator.userAgent.toLowerCase())
        }(), $.fn.extend({
            input: function(val) {
                return this.click().focus().val(val), this
            }
        }), exports.mlength = mlength, exports.get_file_extension = get_file_extension, window.$C = null,
            function() {
                var cache = {},
                    register = {};
                $C = function(selector) {
                    return void 0 == cache[selector] && (void 0 == register[selector] ? cache[selector] = $(selector) : (cache[selector] = register[selector](), delete register[selector])), cache[selector]
                }, $C.register = function(selector, func) {
                    return register[selector] = func, this
                }
            }()
    }, {}],
    343: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var boot_1 = require("../../controller/boot"),
            _parseUrl = function(url) {
                try {
                    return new boot_1.URL(url)
                } catch (e) {
                    return
                }
            };
        try {
            new boot_1.URL(location.href)
        } catch (e) {
            var domLink_1 = document.createElement("a");
            _parseUrl = function(url) {
                return domLink_1.href = url, domLink_1
            }
        }
        exports.parseUrl = _parseUrl
    }, {
        "../../controller/boot": 340
    }],
    344: [function(require, module, exports) {
        "use strict";

        function render(contexts, renderAstOption) {
            for (var result = "", i = 0; i < contexts.length; i++) {
                var content = contexts[i];
                if ("message" !== content.type)
                    if ("emoticon" !== content.type) {
                        if (!ContentType[content.type]) return;
                        result += ContentType[content.type](content, renderAstOption)
                    } else {
                        var emoticon = emoticons_1.emoticons.getEmoticonWithTag(content.value);
                        if (!emoticon) return ContentType.message(content.value, renderAstOption);
                        result += '<img\n                src="' + emoticon.src + '"\n                alt="' + emoticon.tag + '"\n                data-cwtag="' + emoticon.tag + '"\n                title="' + emoticon.title + '"\n                class="ui_emoticon">'
                    }
                else {
                    var val = escapeHtmlContextString(content.value);
                    renderAstOption.change_crlf_br && (val = val.replace(/\r?\n/g, "<br />")), result += val
                }
            }
            return result
        }

        function quoteRender(contexts, renderAstOption) {
            var results = contexts.reduce(function(base, content) {
                if (ContentType[content.type]) return base.concat(ContentType[content.type](content, renderAstOption))
            }, []);
            return 1 === results.length ? results.join("") : [].concat(results.shift(), '<div class="quoteText">', results, "</div>").join("")
        }

        function renderAstToHtml(text, renderAstOption) {
            try {
                return render(chatwork_tokenizer_js_1.default(text), renderAstOption)
            } catch (e) {
                return window.console.error(e, text), escapeHtmlContextString(text)
            }
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var chatwork_tokenizer_js_1 = require("chatwork-tokenizer-js"),
            escape = require("lodash.escape"),
            emoticons_1 = require("../emoticon/emoticons"),
            filePreview_1 = require("../file-preview/filePreview"),
            boot_1 = require("../../controller/boot"),
            common_1 = require("../../../core/lib/common"),
            parseUrl_1 = require("./parseUrl"),
            language_1 = require("../language"),
            cn = require("classnames"),
            escapeHtmlContextString = function(text) {
                var result = escape(text);
                return encodeURI(result), result
            },
            escapeAttributeContextString = escapeHtmlContextString,
            sanitizingLinkElement = "object" == typeof document ? document.createElement("a") : void 0,
            getSafeUrlString = function(urlText) {
                if (sanitizingLinkElement.setAttribute("href", urlText), !sanitizingLinkElement.protocol.match(/^https?/)) return "";
                var href = sanitizingLinkElement.getAttribute("href");
                return encodeURI(href), href
            },
            getChatworkDomainAppendLink = function(urlText) {
                var linkCode = (urlText.match(/\/g\/([-\w]+)$/) || []).pop();
                if (linkCode) return ' <a class="_groupchatLink timelineLinkAppend" data-linkCode="' + linkCode + '">' + language_1.Language.getLang("%%%message_join_groupchat%%%") + "</a>";
                var _a = urlText.match(/#!rid(\d+)(?:-(\d+))?$/) || [void 0, void 0, void 0],
                    all = _a[0],
                    roomId = _a[1],
                    messageId = _a[2];
                return all ? messageId ? ' <a class="_messageLink timelineLinkAppend" data-rid="' + roomId + '" data-mid="' + messageId + '">' + language_1.Language.getLang("%%%message_link%%%") + "</a>" : ' <a class="_roomLink timelineLinkAppend" data-rid="' + roomId + '">' + language_1.Language.getLang("%%%message_open_chat%%%") + "</a>" : ""
            },
            getAppendLink = function(urlText) {
                var urlObject = parseUrl_1.parseUrl(urlText);
                if (urlObject && urlObject.protocol.match(/^https?:$/)) {
                    if (["www.chatwork.com", "chatwork.com", "kcw.kddi.ne.jp"].includes(urlObject.hostname)) return getChatworkDomainAppendLink(urlText);
                    var preview = {
                        type: "",
                        user_id: "",
                        content_id: ""
                    };
                    if ("teachme.jp" === urlObject.hostname) {
                        var match = urlObject.pathname.match(/contents\/([0-9]+)/);
                        if (!match) return;
                        preview.type = "teachme", preview.content_id = match.pop()
                    }
                    if ("speakerdeck.com" === urlObject.hostname) {
                        var match = urlObject.pathname.match(/([^\/]+)\/([^\/]+)$/);
                        if (!match) return;
                        preview.type = "speakerdeck", preview.user_id = match.pop(), preview.content_id = match.pop()
                    }
                    if ("www.slideshare.net" === urlObject.hostname) {
                        var match = urlObject.pathname.match(/([^\/]+)\/([^\/]+)$/);
                        if (!match) return;
                        preview.type = "slideshare", preview.user_id = match.pop(), preview.content_id = match.pop()
                    }
                    if ("prezi.com" === urlObject.hostname) {
                        var match = urlObject.pathname.match(/([^\/]+)\//);
                        if (!match) return;
                        preview.type = "prezi", preview.content_id = match.pop()
                    }
                    if ("www.youtube.com" === urlObject.hostname) {
                        var match = urlObject.href.match(/\/watch\?v=([^\/&]+)/);
                        if (!match) return;
                        preview.type = "youtube", preview.content_id = match.pop()
                    }
                    if ("youtu.be" === urlObject.hostname) {
                        var match = urlObject.pathname.match(/([^\/&]+)/);
                        if (!match) return;
                        preview.type = "youtube", preview.content_id = match.pop()
                    }
                    if ("vimeo.com" === urlObject.hostname) {
                        var match = urlObject.pathname.match(/(?:channels\/staffpicks\/)?([^\/]+)/);
                        if (!match) return;
                        preview.type = "vimeo", preview.content_id = match.pop()
                    }
                    if (urlObject.hostname.match(/^(slid\.es|slides\.com)$/)) {
                        var match = urlObject.pathname.match(/([^\/]+\/[^\/]+)$/);
                        if (!match) return;
                        preview.type = "slid.es", preview.content_id = match.pop()
                    }
                    if ("corabbit.com" === urlObject.hostname) {
                        var match = urlObject.pathname.match(/\/#\/file\/([^\/]+)$/);
                        if (!match) return;
                        preview.type = "corabbit", preview.content_id = match.pop()
                    }
                    if (urlObject.hostname.match(/^(docs|drive)\.google\.com$/) && (preview.type = "googledocs", preview.content_id = "-"), urlObject.hostname.match(/\.sharepoint\.com$/)) {
                        var match = urlText.match(/^https:\/\/([\w\-\.\/]+?)\?.*(sourcedoc=[\{\}\w\-]+?|guestaccesstoken=[\%\w]+&(?:amp;?)docid=\w+)(?:&|$)/);
                        if (!match) return;
                        preview.type = "sharepoint", preview.content_id = match[1] + "?" + match[2]
                    }
                    return preview.type ? ' <a\n        class="_previewLink timelineLinkAppend"\n        data-url="' + common_1.urlencode(urlText) + '"\n        data-type="' + preview.type + '"\n        data-user-id="' + preview.user_id + '"\n        data-content-id="' + preview.content_id + '">' + language_1.Language.getLang("%%%preview%%%") + "</a>" : ""
                }
            },
            ContentType = {
                message: function(content, renderAstOption) {
                    var val = escapeHtmlContextString(content.value);
                    return renderAstOption.change_crlf_br && (val = val.replace(/\r?\n/g, "<br />")), val
                },
                url: function(content, renderAstOption) {
                    if (renderAstOption.disable_url_render) return ContentType.message(content, renderAstOption);
                    var classname = cn({
                            "chatwork-token-url": !0,
                            timelineLinkTrim: renderAstOption.display_trim_link
                        }),
                        urlText = content.value,
                        result = '<a\n            href="' + getSafeUrlString(urlText) + '"\n            title="' + escapeAttributeContextString(urlText) + '"\n            target="_blank"\n            class="' + classname + '"\n            rel="noopener noreferrer"\n            >' + escapeHtmlContextString(urlText) + "</a>",
                        appendLink = getAppendLink(urlText) || "";
                    return appendLink ? '<span data-cwtag="' + escapeAttributeContextString(urlText) + '">' + result + " " + appendLink + "</span>" : result
                },
                emoticon: function(content, renderAstOption) {
                    var emoticon = emoticons_1.emoticons.getEmoticonWithTag(content.value);
                    return emoticon ? '<img\n            src="' + emoticon.src + '"\n            alt="' + emoticon.tag + '"\n            data-cwtag="' + emoticon.tag + '"\n            title="' + emoticon.title + '"\n            class="ui_emoticon">' : ContentType.message(content.value, renderAstOption)
                },
                hr: function(content, renderAstOption) {
                    return '<hr data-cwtag="[hr]" size="1">'
                },
                deleted: function(content, renderAstOption) {
                    return ""
                },
                code: function(content, renderAstOption) {
                    var codeHtml = content.content.reduce(function(text, msg) {
                            return text + (msg.value || "")
                        }, ""),
                        text = escapeHtmlContextString(codeHtml.replace(/^\r?\n/, "") || "");
                    return '<code data-cwtag="[code]\n' + text + '[/code]" class="chatCode">' + text + "</code>"
                },
                preview: function(content, renderAstOption) {
                    var id = (content.attributes.id || "").replace(/\W/g, ""),
                        ht = (content.attributes.ht || "").replace(/\W/g, "");
                    return '<div><img\n            data-cwtag="[preview id=' + id + " ht=" + ht + ']"\n            class="_filePreview imagePreview"\n            data-file-id="' + id + '"\n            style="height:' + ht + 'px"\n            src="gateway.php?cmd=preview_file&bin=1&file_id=' + id + '"/></div>'
                },
                pname: function(content, renderAstOption) {
                    var id = (content.attributes.id || "").replace(/\W/g, "");
                    return '<span data-cwtag="[pname:' + id + ']">' + boot_1.CW.getName(id) + "</span>"
                },
                picon: function(content, renderAstOption) {
                    var id = (content.attributes.id || "").replace(/\W/g, ""),
                        cwtag = "[picon:" + id + "]",
                        html = boot_1.CW.getAvatarPanel(id, {
                            size: "tiny"
                        });
                    return html ? html.replace(/>/, ' data-cwtag="' + cwtag + '">') : escapeHtmlContextString(cwtag)
                },
                piconname: function(content, renderAstOption) {
                    var id = (content.attributes.id || "").replace(/\W/g, "");
                    return '<span data-cwtag="[piconname:' + id + ']">' + ContentType.picon({
                            attributes: {
                                id: id
                            }
                        }, renderAstOption) + " " + ContentType.pname({
                            attributes: {
                                id: id
                            }
                        }, renderAstOption) + "</span>"
                },
                info: function(content, renderAstOption) {
                    return '<div data-cwopen="[info]" data-cwclose="[/info]" class="chatInfo">' + render(content.content, renderAstOption) + "</div>"
                },
                title: function(content, renderAstOption) {
                    return '<div\n            data-cwopen="[title]"\n            data-cwclose="[/title]"\n            class="title"><span class="icoFontInfo marginRight"></span>' + render(content.content, renderAstOption) + "</div>"
                },
                to: function(content, renderAstOption) {
                    var aid = (content.attributes.id || "").replace(/\W/g, "");
                    return '<div data-cwtag="[To:' + aid + ']" class="messageBadge" contenteditable="false"><div\n            class="chatTimeLineTo"><svg viewBox="0 0 10 10" class="chatTimeLineTo__icon"\n            width="14" height="14"><use fill-rule="evenodd" xlink:href="#icon_chatTimeLineTo"\n            /></svg></div>' + boot_1.CW.getMessageBadgeAvatarPanel(aid) + "</div>"
                },
                rp: function(content, renderAstOption) {
                    var aid = (content.attributes.aid || "").replace(/\W/g, ""),
                        _a = (content.attributes.to || "").split("-").map(function(_) {
                            return _.replace(/\D/g, "")
                        }),
                        rid = _a[0],
                        mid = _a[1],
                        avatar = boot_1.CW.getMessageBadgeAvatarPanel(aid);
                    return '<div data-cwtag="[rp aid=' + aid + " to=" + rid + "-" + mid + ']" class="messageBadge"\n            contenteditable="false"><div class="chatTimeLineReply _replyMessage _showDescription"\n                aria-label="' + language_1.Language.getLang("%%%reply_badge_tooltip_label%%%") + '"\n                data-rid="' + rid + '"\n                data-mid="' + mid + '"\n            >\x3c!--\n            --\x3e<svg viewBox="0 0 10 10" class="chatTimeLineReply__replyIcon">\n                <use fill-rule="evenodd" xlink:href="#icon_chatTimeLineReplyBadge" />\n            </svg>\x3c!--\n            --\x3e<svg viewBox="0 0 10 10" class="chatTimeLineReply__icon">\n                <use fill-rule="evenodd" xlink:href="#icon_chatTimeLineReply" />\n            </svg></div>' + avatar + "</div>"
                },
                qt: function(content, renderAstOption) {
                    return '<div\n            contenteditable="false"\n            data-cwopen="[qt]"\n            data-cwclose="[/qt]"\n            class="dev_quote chatQuote"><div class="quoteLeftArea"><span\n            class="icoFontMessegeQuote"></span></div>' + quoteRender(content.content, renderAstOption) + "</div>"
                },
                qtmeta: function(content, renderAstOption) {
                    var aid = (content.attributes.aid || "").replace(/\W/g, ""),
                        time = (content.attributes.time || "").replace(/\W/g, ""),
                        piconnameHtml = ContentType.piconname({
                            attributes: {
                                id: aid
                            }
                        }, renderAstOption);
                    return time ? '<div\n            data-cwtag="[qtmeta aid=' + aid + " time=" + time + ']"\n            class="title">' + piconnameHtml + "<time>" + ContentType.date({
                        attributes: {
                            id: time
                        }
                    }, renderAstOption) + "</time></div>" : '<div class="title">' + piconnameHtml + "</div>"
                },
                live: function(content, renderAstOption) {
                    if (!content.attributes.id || !content.attributes.rid) return "";
                    var id = (content.attributes.id || "").replace(/\W/g, ""),
                        rid = (content.attributes.rid || "").replace(/\W/g, "");
                    return "ipad" !== MOBILE && boot_1.RL.rooms[rid] ? '<div\n            data-cwtag="[live id=' + id + " rid=" + rid + ']"\n            class="_joinLive button btnSuccess" data-live-id="' + id + '"><span\n            class="icoFontVideoChat"></span><span>' + language_1.Language.getLang("%%%live_join%%%") + "</span></div>" : '<div\n                data-cwtag="[live id=' + id + " rid=" + rid + ']"\n                class="button btnDisable"><span class="icoFontVideoChat"\n                ></span><span>' + language_1.Language.getLang("%%%live_join%%%") + "</span></div>"
                },
                task: function(content, renderAstOption) {
                    var result = render(content.content, renderAstOption);
                    content.attributes.aid = (content.attributes.aid || "").replace(/[^\d,]/g, ""), content.attributes.st = (content.attributes.st || "").replace(/\W/g, ""), content.attributes.lt = (content.attributes.lt || "").replace(/\W/g, "");
                    var attr = Object.assign({
                            aid: ""
                        }, content.attributes, {
                            lt: parseInt(content.attributes.lt, 10)
                        }),
                        taskHtml = boot_1.TK.view.getTaskPanel(attr, {
                            type: "timeline",
                            mid: renderAstOption.mid
                        });
                    return "" + (taskHtml = taskHtml.replace(/^<\w+/, '$&\n            data-cwopen="[task aid=' + attr.aid + " st=" + attr.st.replace(/\W/g, "") + " lt=" + Number(attr.lt) + ']"\n            data-cwclose="[/task]"\n        ')) + result + "</div></div>"
                },
                dtext: function(content, renderAstOption) {
                    var id = escapeHtmlContextString(content.attributes.id || ""),
                        text = language_1.Language.getLang("%%%" + id + "%%%");
                    return '<span data-cwtag="[dtext:' + id + ']">' + (void 0 !== text ? text : "[dtext:" + id + "]") + "</span>"
                },
                download: function(content, renderAstOption) {
                    if (!renderAstOption.disable_download_file) {
                        var esetLink = renderAstOption.display_eset_link ? '<div class="esetLink"><a\n                href="http://www.eset-smart-security.jp/go/101304/e42/"\n                target="_blank">' + language_1.Language.getLang("%%%_chatwork_file_upload_eset_link%%%") + "</a></div>" : "",
                            id = (content.attributes.id || "").replace(/\W/g, ""),
                            result = render(content.content, renderAstOption),
                            previewLink = function() {
                                var ext = (result.match(/.+\.(\w+)\s+\(.+?\)$/) || [""]).pop();
                                if (!filePreview_1.filePreview.canPlayTypes(ext)) return "";
                                var previewType = filePreview_1.filePreview.getPreviewType(ext),
                                    preview = "video" === previewType ? language_1.Language.getLang("%%%preview_video%%%") : language_1.Language.getLang("%%%preview%%%");
                                if ("image" === previewType) return ' <a\n                    data-cwtag=""\n                    class="_filePreview timelineLinkAppend"\n                    data-file-id="' + id + '">' + preview + "</a>";
                                var fileName = result.replace(/\s*\([^()]+?\)$/, "");
                                return ' <a\n                data-cwtag=""\n                class="_previewLink timelineLinkAppend"\n                data-url="gateway.php?cmd=download_file&bin=1&file_id=' + id + '&preview=1"\n                data-type="chatworkFilePreview" data-content-id="' + fileName + '">' + preview + "</a>"
                            }();
                        return '<div\n            data-cwopen="[download:' + id + ']"\n            data-cwclose="[/download]"\n            ><a href="gateway.php?cmd=download_file&bin=1&file_id=' + id + '"\n            target="_downloadFrame">' + result + "</a> " + previewLink + "</div>" + esetLink
                    }
                },
                date: function(content, renderAstOption) {
                    var id = (content.attributes.id || "").replace(/\W/g, "");
                    return id ? '<span data-cwtag="[date:' + id + ']">' + boot_1.CW.getDate(id) + "</span>" : "[date]"
                }
            };
        exports.renderAstToHtml = renderAstToHtml
    }, {
        "../../../core/lib/common": 308,
        "../../controller/boot": 340,
        "../emoticon/emoticons": 382,
        "../file-preview/filePreview": 383,
        "../language": 384,
        "./parseUrl": 343,
        "chatwork-tokenizer-js": 18,
        classnames: 19,
        "lodash.escape": 122
    }],
    345: [function(require, module, exports) {
        "use strict";

        function renderAstToText(text) {
            var contentType = (chatwork_tokenizer_js_1.default(text), {
                    message: function(content) {
                        return content.value
                    },
                    url: function(content) {
                        return content.value
                    },
                    emoticon: function(content) {
                        return content.value
                    },
                    hr: function(content) {
                        return " --- "
                    },
                    deleted: function() {
                        return ""
                    },
                    code: function() {
                        return "[Code]"
                    },
                    preview: function() {
                        return ""
                    },
                    pname: function(content) {
                        var id = parseInt(content.attributes.id, 10);
                        return boot_1.AC.getName(id)
                    },
                    picon: function() {
                        return ""
                    },
                    piconname: function(content) {
                        var id = parseInt(content.attributes.id, 10);
                        return "" + contentType.pname({
                                attributes: {
                                    id: id
                                }
                            })
                    },
                    info: function(content) {
                        return "[" + render(content.content) + "]"
                    },
                    title: function(content) {
                        return render(content.content) + ":"
                    },
                    to: function() {
                        return "[To]"
                    },
                    rp: function() {
                        return "[RE]"
                    },
                    qt: function(content) {
                        return '"' + render(content.content)
                    },
                    qtmeta: function() {
                        return ""
                    },
                    live: function() {
                        return "[ChatWork Live]"
                    },
                    task: function(content) {
                        return "[" + render(content.content) + "]"
                    },
                    dtext: function(content) {
                        return language_1.Language.getLang("%%%" + content.attributes.id + "%%%") || "[dtext:" + content.attributes.id + "]"
                    },
                    download: function() {
                        return ""
                    },
                    date: function(content) {
                        return boot_1.CW.getDate(content.attributes.id)
                    }
                }),
                render = function(contexts) {
                    return contexts.reduce(function(base, content) {
                        if (contentType[content.type]) return base.concat(contentType[content.type](content))
                    }, []).join("")
                };
            try {
                return render(chatwork_tokenizer_js_1.default(text))
            } catch (e) {
                return window.console.error(e, text), text
            }
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var chatwork_tokenizer_js_1 = require("chatwork-tokenizer-js"),
            boot_1 = require("../../controller/boot"),
            language_1 = require("../language");
        exports.renderAstToText = renderAstToText
    }, {
        "../../controller/boot": 340,
        "../language": 384,
        "chatwork-tokenizer-js": 18
    }],
    346: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var widget_id = 0,
                widget_class = {},
                widget_composite_class = {},
                float_id = 0,
                float_id2object = {};
            $.cwUI = $.cwUI || {}, $.cwUI.floatZIndex = 1e3, $.cwUI.imagePath = "./image", $.cwUI.loading = "", $.cwUI.escapeHTML = function(str) {
                return str && str.replace ? (str = str.replace(/&/g, "&amp;"), str = str.replace(/"/g, "&quot;"), str = str.replace(/'/g, "&#039;"), str = str.replace(/</g, "&lt;"), str = str.replace(/>/g, "&gt;")) : str
            }, $.cwUI.formatNumber = function(x) {
                var parts = x.toString().split(".");
                return parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","), parts.join(".")
            }, $.cwUI.ucFirst = function(str_) {
                var str = String(str_);
                return str.charAt(0).toUpperCase() + str.substr(1)
            }, $.cwUI.setZIndex = function(jqObj) {
                var fid = jqObj.data("cwui-float_id");
                void 0 == fid && (fid = float_id++, jqObj.data("cwui-float_id", [fid]));
                var max = this.floatZIndex;
                for (var ffid in float_id2object) {
                    var zindex = parseInt(float_id2object[ffid].css("z-index"), 10);
                    max < zindex && (max = zindex)
                }
                return max++, jqObj.css("z-index", max), float_id2object[fid] = jqObj, this
            }, $.cwUI.unsetZIndex = function(jqObj) {
                var fid = jqObj.data("cwui-float_id");
                if (void 0 != fid) return delete float_id2object[fid], this
            }, $.cwUI.getUpperLayerObjects = function(jqObj) {
                var border_zindex = parseInt(jqObj.css("z-index"), 10),
                    upper_objects = [];
                for (var ffid in float_id2object) {
                    parseInt(float_id2object[ffid].css("z-index"), 10) > border_zindex && upper_objects.push(float_id2object[ffid])
                }
                return upper_objects
            }, $.cwUI.addWidget = function(widget_name, default_option, method_prototype, utility_method) {
                if ($[widget_name] = new BaseWidgetUtility(widget_name, default_option), void 0 != utility_method)
                    for (var member in utility_method) $[widget_name][member] = utility_method[member];
                widget_class[widget_name] = function() {
                    this.widget_name = widget_name
                }, widget_class[widget_name].prototype = new BaseWidget;
                for (var _member in method_prototype) widget_class[widget_name].prototype[_member] = method_prototype[_member];
                widget_composite_class[widget_name] = function(widget_list) {
                    this.widget_name = widget_name, this.widget_list = widget_list
                };
                for (var _member2 in widget_class[widget_name].prototype) ! function(_member2) {
                    ! function() {
                        var actual_member = _member2;
                        widget_composite_class[widget_name].prototype[actual_member] = function() {
                            for (var i = 0, len = this.widget_list.length; i < len; i++) {
                                var widget = this.widget_list[i];
                                widget[actual_member].apply(widget, arguments)
                            }
                            return this
                        }
                    }()
                }(_member2);
                var widget_init_key = "cwui-" + widget_name;
                $.fn[widget_name] = function(option) {
                    var self = this,
                        length = self.length;
                    if (0 != length && !$.cwUI.isWidget(self[0])) {
                        var wn = null,
                            wn_list = [];
                        return self.each(function() {
                            var jqObj = $(this),
                                elm = jqObj[0];
                            if (!(wn = $.data(elm, widget_init_key))) {
                                if ($[widget_name]._create) {
                                    var new_jqObj = $[widget_name]._create(jqObj);
                                    new_jqObj && (jqObj = new_jqObj, elm = new_jqObj[0])
                                }
                                wn = new widget_class[widget_name], wn.widget_id = widget_id++, wn._setUp(jqObj), option = $.extend({}, $[widget_name].getDefaultOption(), option), wn._init && wn._init(option), $.data(elm, widget_init_key, wn)
                            }
                            wn.setOption(option), wn_list.push(wn)
                        }), 1 == length ? wn : new widget_composite_class[widget_name](wn_list)
                    }
                }
            }, $.cwUI.isWidget = function(obj) {
                return obj instanceof BaseWidget
            };
            var BaseWidget = function() {};
            BaseWidget.prototype = {
                $el: null,
                el: null,
                data: {},
                _setUp: function(jqObj) {
                    return this.$el = jqObj, this.el = jqObj[9], this.open ? this.is_open = !1 : this.is_open = !0, this.init_option = !0, this.option = {}, this
                },
                isOpen: function() {
                    return this.is_open
                },
                destroy: function() {
                    $.data(this.$el[0], "cwui-" + this.widget_name, "")
                },
                setOption: function(option) {
                    if (void 0 == option) return this;
                    for (var key in option) this.option[key] = option[key];
                    return this._setOption && this._setOption(option), this.init_option = !1, this
                }
            };
            var BaseWidgetUtility = function(widget_name, default_option) {
                this.widget_name = widget_name, this.default_option = default_option
            };
            BaseWidgetUtility.prototype = {
                getWidget: function(dom) {
                    return $.data(dom, "cwui-" + this.widget_name)
                },
                isInit: function(dom) {
                    return !!$.data(dom, "cwui-" + this.widget_name)
                },
                getDefaultOption: function() {
                    return this.default_option
                },
                setDefaultOption: function(df_option) {
                    for (var dfkey in df_option) this.default_option[dfkey] = df_option[dfkey];
                    return this
                }
            }, $.fn.extend({
                quickEmpty: function() {
                    return this.each(function() {
                        for (var i = this.childNodes.length; i--;) this.removeChild(this.lastChild)
                    }), this
                },
                getAttrs: function() {
                    for (var attrs = this[0].attributes, props = {}, i = 0, attrs_len = attrs.length; i < attrs_len; i++) {
                        var attr = attrs.item(i);
                        attr.specified && (props[attr.name] = attr.value)
                    }
                    return props
                },
                isVisible: function() {
                    return $.expr.filters.visible(this[0])
                },
                caretPos: function(pos) {
                    var item = this.get(0);
                    if (null == pos) {
                        var caret = 0;
                        if (document.selection) {
                            item.focus();
                            var range = document.selection.createRange();
                            range.moveStart("character", -item.value.length), caret = range.text.length
                        } else(item.selectionStart || "0" == item.selectionStart) && (caret = item.selectionStart);
                        return caret
                    }
                    if ("first" == pos && (pos = 0), "last" == pos && (pos = this.val().length), item.setSelectionRange) item.focus(), item.setSelectionRange(pos, pos);
                    else if (item.createTextRange) {
                        var _range = item.createTextRange();
                        _range.collapse(!0), _range.moveEnd("character", pos), _range.moveStart("character", pos), _range.select()
                    }
                    return this
                }
            }), $(function() {
                $.cwUI.loading = '<img src="' + $.cwUI.imagePath + '/ajax-loader.gif" alt="Loading" />', $(document).on("click.ChatWorkUI", "._cwSelectableRow", function() {
                    return $(this).find("._cwCB").cwCheckBox().toggle(), !1
                })
            })
        }(jQuery)
    }, {}],
    347: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var floatbox_layer_stack = [],
                floatbox_skip_obj = [],
                floatbox_skip = !1;
            $(function() {
                setTimeout(function() {
                    $.cwFloatBox.setBodyEvent()
                })
            }), $.cwFloatBox = {
                open: function(jqObj, callback_close, user_option) {
                    var option = $.extend({
                        noAnimation: !1
                    }, user_option);
                    return $.data(jqObj[0], "cwFloatBox") || (jqObj.on("click.cwFloatBox", function() {
                        $.cwFloatBox.skip($(this)), option.skip && $.cwFloatBox.skip(option.skip)
                    }), $.data(jqObj[0], "cwFloatBox", !0)), floatbox_layer_stack.push({
                        obj: jqObj,
                        zindex: jqObj.css("z-index"),
                        callback: callback_close,
                        noanim: option.noAnimation
                    }), jqObj.stop(!0, !0).show().css({
                        opacity: 1
                    }), $.cwUI.setZIndex(jqObj), this
                },
                close: function(jqObj, is_except) {
                    var stack_length = floatbox_layer_stack.length,
                        floatbox_set = null,
                        close_floatbox_list = [],
                        skip_floatbox_list = [];
                    if (stack_length > 0) {
                        if (jqObj) {
                            var jqObj_list = void 0;
                            if (jqObj instanceof jQuery) jqObj_list = [jqObj];
                            else {
                                if (!$.isArray(jqObj)) return;
                                jqObj_list = jqObj
                            }
                            for (var i = stack_length - 1; i >= 0; i--) {
                                for (var found_dom = !1, j = 0, jq_len = jqObj_list.length; j < jq_len; j++)
                                    if (jqObj_list[j][0] == floatbox_layer_stack[i].obj[0]) {
                                        found_dom = !0;
                                        break
                                    }
                                is_except ? found_dom ? skip_floatbox_list.push(floatbox_layer_stack[i]) : close_floatbox_list.push(floatbox_layer_stack[i]) : found_dom ? close_floatbox_list.push(floatbox_layer_stack[i]) : skip_floatbox_list.push(floatbox_layer_stack[i])
                            }
                        } else close_floatbox_list = floatbox_layer_stack;
                        for (var _i = 0, close_len = close_floatbox_list.length; _i < close_len; _i++) floatbox_set = close_floatbox_list[_i], "function" == typeof floatbox_set.callback && floatbox_set.callback(), floatbox_set.noanim ? (floatbox_set.obj.hide(), floatbox_set.obj.css("z-index", floatbox_set.zindex)) : floatbox_set.obj.fadeOut("fast", function() {
                            floatbox_set.obj.css("z-index", floatbox_set.zindex)
                        }), $.cwUI.unsetZIndex(floatbox_set.obj), floatbox_set.floatbox && floatbox_set.floatbox.remove();
                        floatbox_layer_stack = skip_floatbox_list
                    }
                    var self = this;
                    return setTimeout(function() {
                        self.clearSkip()
                    }), this
                },
                closeUpperLayer: function(jqObj) {
                    for (var border_zindex = parseInt(jqObj.css("z-index"), 10), upper_objects = [], i = 0, layer_len = floatbox_layer_stack.length; i < layer_len; i++) {
                        var obj = floatbox_layer_stack[i].obj;
                        border_zindex < parseInt(obj.css("z-index"), 10) && upper_objects.push(obj)
                    }
                    return upper_objects.length > 0 && this.close(upper_objects), this
                },
                skip: function() {
                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    return args.length ? floatbox_skip_obj = floatbox_skip_obj.concat(args) : floatbox_skip = !0, this
                },
                clearSkip: function() {
                    return floatbox_skip = !1, floatbox_skip_obj = [], this
                },
                setBodyEvent: function() {
                    return $(document.body).off("keydown.cwFloatBox").on("keydown.cwFloatBox", function(e) {
                        27 == e.keyCode && $.cwFloatBox.close()
                    }).off("click.cwFloatBox").on("click.cwFloatBox", function() {
                        if (floatbox_skip) return void setTimeout(function() {
                            $.cwFloatBox.clearSkip()
                        });
                        floatbox_skip_obj.length > 0 ? $.cwFloatBox.close(floatbox_skip_obj, !0) : $.cwFloatBox.close()
                    }), this
                }
            }
        }(jQuery)
    }, {}],
    348: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var start_capture = !1,
                capture_option = null,
                capture_x = 0,
                capture_y = 0;
            $(function() {
                $(document.body).on("mousemove.cwResize", function(e) {
                    if (start_capture) {
                        var move_x = e.clientX - capture_x,
                            move_y = e.clientY - capture_y;
                        capture_option.move(move_x, move_y)
                    }
                }).on("mouseup.cwResize", function() {
                    start_capture && ($("#_cwRZBack").remove(), start_capture = !1, $(document.body).removeClass("cwResizeHandleCol cwResizeHandleRow cwResizeHandle"), capture_option.end())
                })
            }), $.cwResize = {
                setHandle: function(jqObj, user_option) {
                    var option = $.extend({
                            type: "",
                            start: function() {},
                            end: function() {},
                            move: function() {}
                        }, user_option),
                        resize_class = "";
                    switch (option.type) {
                        case "col":
                            resize_class = "cwResizeHandleCol";
                            break;
                        case "row":
                            resize_class = "cwResizeHandleRow";
                            break;
                        default:
                            resize_class = "cwResizeHandle"
                    }
                    return jqObj.addClass(resize_class).on("mousedown.cwResize", function(e) {
                        start_capture = !0;
                        var body = $(document.body);
                        switch (body.append('<div id="_cwRZBack" class="stopActionOverlay"></div>'), option.type) {
                            case "col":
                                body.addClass("cwResizeHandleCol");
                                break;
                            case "row":
                                body.addClass("cwResizeHandleRow");
                                break;
                            default:
                                body.addClass("cwResizeHandle")
                        }
                        return capture_x = e.clientX, capture_y = e.clientY, capture_option = option, capture_option.start(), !1
                    }), this
                }
            }
        }(jQuery)
    }, {}],
    349: [function(require, module, exports) {
        "use strict";
        var _common = require("../../../core/lib/common");
        ! function($, L) {
            $.cwValidate = {
                File: {
                    hasError: function(file_elm, option) {
                        var filesize = 0,
                            filename = "",
                            extension = "";
                        if (file_elm.files) {
                            var fileinfo = file_elm.files[0];
                            filename = fileinfo.name, filesize = fileinfo.size
                        } else filename = file_elm.value.replace(/\\/g, "/").replace(/.*\//, "");
                        var match = filename.match(/\.([^.]+)$/);
                        match && (extension = match[1].toLowerCase());
                        var error_list = [];
                        return option.maxsize && filesize >= option.maxsize && error_list.push(L.error_upload_over_max_filesize.replace(/%%max_size%%/g, (0, _common.bytename)(option.maxsize)).replace(/%%size%%/g, (0, _common.bytename)(filesize))), option.onlyimage && (["jpg", "png", "gif", "jpeg"].includes(extension) || error_list.push(L.error_upload_image)), !!error_list.length && ($(file_elm).val(""), error_list)
                    }
                }
            }
        }(jQuery, jQuery.cwUI.L)
    }, {
        "../../../core/lib/common": 308
    }],
    350: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker.en = {
                closeText: "Close",
                prevText: "&#x3c;Prev",
                nextText: "Next&#x3e;",
                currentText: "Today",
                monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                weekHeader: "Wk",
                firstDay: 0,
                isRTL: !1,
                showMonthAfterYear: !0,
                yearMonthSeparator: " ",
                yearSuffix: ""
            }
        }(jQuery)
    }, {}],
    351: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker.es = {
                closeText: "Cerrar",
                prevText: "",
                nextText: "",
                currentText: "Hoy",
                monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
                monthNamesShort: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"],
                dayNames: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"],
                dayNamesShort: ["Dom", "Lun", "Mar", "Mié", "Jue", " Vie", "Sáb"],
                dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", " Vi", "Sá"],
                weekHeader: "Sem",
                firstDay: 1,
                isRTL: !1,
                showMonthAfterYear: !1,
                yearMonthSeparator: " de ",
                yearSuffix: ""
            }
        }(jQuery)
    }, {}],
    352: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker.ja = {
                closeText: "閉じる",
                prevText: "&#x3c;前",
                nextText: "次&#x3e;",
                currentText: "今日",
                monthNames: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                monthNamesShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                dayNames: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"],
                dayNamesShort: ["日", "月", "火", "水", "木", "金", "土"],
                dayNamesMin: ["日", "月", "火", "水", "木", "金", "土"],
                weekHeader: "週",
                firstDay: 0,
                isRTL: !1,
                showMonthAfterYear: !0,
                yearMonthSeparator: "",
                yearSuffix: "年"
            }
        }(jQuery)
    }, {}],
    353: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker.th = {
                closeText: "ปิด",
                prevText: "",
                nextText: "",
                currentText: "วันนี้",
                monthNames: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"],
                monthNamesShort: ["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."],
                dayNames: ["วันอาทิตย์", "วันจันทร์", "วันอังคาร", "วันพุธ", "วันพฤหัสบดี", "วันศุกร์", "วันเสาร์"],
                dayNamesShort: ["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส"],
                dayNamesMin: ["อ", "จ", "อ", "พ", "พ", "ศ", "ส"],
                weekHeader: "สัปดาห์ที่",
                firstDay: 0,
                isRTL: !1,
                showMonthAfterYear: !1,
                yearMonthSeparator: " ",
                yearSuffix: ""
            }
        }(jQuery)
    }, {}],
    354: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker.vi = {
                closeText: "Đóng",
                prevText: "&#x3c;Trước",
                nextText: "Tiếp&#x3e;",
                currentText: "Hôm nay",
                monthNames: ["Tháng Một", "Tháng Hai", "Tháng Ba", "Tháng Tư", "Tháng Năm", "Tháng Sáu", "Tháng Bảy", "Tháng Tám", "Tháng Chín", "Tháng Mười", "Tháng Mười Một", "Tháng Mười Hai"],
                monthNamesShort: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
                dayNames: ["Chủ Nhật", "Thứ Hai", "Thứ Ba", "Thứ Tư", "Thứ Năm", "Thứ Sáu", "Thứ Bảy"],
                dayNamesShort: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
                dayNamesMin: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
                weekHeader: "Tu",
                firstDay: 0,
                isRTL: !1,
                showMonthAfterYear: !1,
                yearMonthSeparator: " ",
                yearSuffix: ""
            }
        }(jQuery)
    }, {}],
    355: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker["zh-cn"] = {
                closeText: "关闭",
                prevText: "&#x3c;上月",
                nextText: "下月&#x3e;",
                currentText: "今天",
                monthNames: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                monthNamesShort: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"],
                dayNames: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
                dayNamesShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
                dayNamesMin: ["日", "一", "二", "三", "四", "五", "六"],
                weekHeader: "周",
                firstDay: 1,
                isRTL: !1,
                showMonthAfterYear: !0,
                yearMonthSeparator: "",
                yearSuffix: "年"
            }
        }(jQuery)
    }, {}],
    356: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker["zh-tw"] = {
                closeText: "关闭",
                prevText: "前一個",
                nextText: "下一個",
                currentText: "今天",
                monthNames: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                monthNamesShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                dayNames: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
                dayNamesShort: ["日", "一", "二", "三", "四", "五", "六"],
                dayNamesMin: ["日", "一", "二", "三", "四", "五", "六"],
                weekHeader: "週",
                firstDay: 1,
                isRTL: !1,
                showMonthAfterYear: !0,
                yearMonthSeparator: "",
                yearSuffix: "年"
            }
        }(jQuery)
    }, {}],
    357: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI.L.cwDatePicker = $.cwUI.L.cwDatePicker || {}, $.cwUI.L.cwDatePicker.zz = {
                closeText: "Close",
                prevText: "&#x3c;Prev",
                nextText: "Next&#x3e;",
                currentText: "Today",
                monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                weekHeader: "Wk",
                firstDay: 0,
                isRTL: !1,
                showMonthAfterYear: !0,
                yearSuffix: ""
            }
        }(jQuery)
    }, {}],
    358: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L.en = {
                checkall: "All",
                uncheckall: "None",
                button_delete: "Delete",
                button_search: "Search",
                button_close: "Close",
                pager_prev: "Back to previous page",
                pager_next: "Go to next page",
                error_upload_over_max_filesize: "Your file (%%size%%) exceeds the limit size (%%max_size%%).",
                error_upload_image: "JPEG, GIF, and PNG only",
                cwui_listip_list_overflow: "%%num%% more left",
                cwui_listip_list_overflow_max: "(up to %%num%% items will be shown)"
            }
        }(jQuery)
    }, {}],
    359: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L.es = {
                checkall: "Todos",
                uncheckall: "Ninguno",
                button_delete: "Borrar",
                button_search: "Buscar",
                button_close: "Cerrar",
                pager_prev: "Volver a la página anterior",
                pager_next: "Ir a la página siguiente",
                error_upload_over_max_filesize: "Tu archivo (%%size%%) supera el tamaño máximo (%%max_size%%).",
                error_upload_image: "Solo JPEG, GIF o PNG",
                cwui_listip_list_overflow: "%%num%% más restantes",
                cwui_listip_list_overflow_max: "(se mostrarán hasta %%num%% elementos)"
            }
        }(jQuery)
    }, {}],
    360: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L.ja = {
                checkall: "すべて",
                uncheckall: "はずす",
                button_delete: "削除",
                button_search: "検索",
                button_close: "閉じる",
                pager_prev: "前のページへ移動",
                pager_next: "次のページへ移動",
                error_upload_over_max_filesize: "ファイルサイズが %%max_size%%より大きいファイルはアップロードできません。\n（アップロードしようとしたファイルサイズ：%%size%%）",
                error_upload_image: "画像形式のファイルを指定してください (JPEG,GIF,PNGが使えます)",
                cwui_listip_list_overflow: "残り%%num%%件",
                cwui_listip_list_overflow_max: "(最大%%num%%件表示)"
            }
        }(jQuery)
    }, {}],
    361: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L.th = {
                checkall: "ทั้งหมด",
                uncheckall: "ไม่มี",
                button_delete: "ลบ",
                button_search: "ค้นหา",
                button_close: "ปิด",
                pager_prev: "กลับไปหน้าก่อน",
                pager_next: "ไปที่หน้าถัดไป",
                error_upload_over_max_filesize: "ไฟล์ของคุณ (%%size%%) มีขนาดใหญ่เกินกว่าที่กำหนดไว้ (%%max_size%%)",
                error_upload_image: "เฉพาะ JPEG, GIF และ PNG เท่านั้น",
                cwui_listip_list_overflow: "เหลืออีก %%num%% ราย",
                cwui_listip_list_overflow_max: "(แสดงได้สูงสุด %%num%% ราย)"
            }
        }(jQuery)
    }, {}],
    362: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L.vi = {
                checkall: "Tất cả",
                uncheckall: "Bỏ chọn",
                button_delete: "Xóa",
                button_search: "Tìm kiếm",
                button_close: "Đóng",
                pager_prev: "Quay lại trang trước",
                pager_next: "Đến trang kế tiếp",
                error_upload_over_max_filesize: "Tập tin (%%size%%) của bạn vượt quá dung lượng giới hạn (%%max_size%%).",
                error_upload_image: "Chỉ chấp nhận JPEG, GIF, và PNG",
                cwui_listip_list_overflow: "Còn %%num%% mục nữa",
                cwui_listip_list_overflow_max: "(sẽ hiển thị đến %%num%% mục)"
            }
        }(jQuery)
    }, {}],
    363: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L["zh-cn"] = {
                checkall: "全部",
                uncheckall: "取消",
                button_delete: "删除",
                button_search: "搜索",
                button_close: "关闭",
                pager_prev: "返回上一页",
                pager_next: "返回下一页",
                error_upload_over_max_filesize: "您的文件(%%size%%)超过了文件大小限制(%%max_size%%)",
                error_upload_image: "仅限JPEG,GIF和PNG",
                cwui_listip_list_overflow: "还剩%%num%%",
                cwui_listip_list_overflow_max: "(up to %%num%% items will be shown)"
            }
        }(jQuery)
    }, {}],
    364: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L["zh-tw"] = {
                checkall: "全部",
                uncheckall: "取消",
                button_delete: "刪除",
                button_search: "搜尋",
                button_close: "關閉",
                pager_prev: "前往上一頁",
                pager_next: "前往下一頁",
                error_upload_over_max_filesize: "檔案大小超過%%max_size%%將無法上傳。\n（上傳檔案大小：%%size%%）",
                error_upload_image: "請指定圖片格式（限使用JPEG、GIF、PNG）",
                cwui_listip_list_overflow: "剩餘%%num%%則",
                cwui_listip_list_overflow_max: "（最多顯示%%num%%則）"
            }
        }(jQuery)
    }, {}],
    365: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $.cwUI = $.cwUI || {}, $.cwUI.L = $.cwUI.L || {}, $.cwUI.L.zz = {
                checkall: "All",
                uncheckall: "None",
                button_delete: "Delete",
                button_search: "Search",
                button_close: "Close",
                pager_prev: "Back to previous page",
                pager_next: "Go to next page",
                error_upload_over_max_filesize: "Your file (%%size%%) exceeds the limit size (%%max_size%%).",
                error_upload_image: "JPEG, GIF, and PNG only",
                cwui_listip_list_overflow: "%%num%% more left",
                cwui_listip_list_overflow_max: "(up to %%num%% items will be shown)"
            }
        }(jQuery)
    }, {}],
    366: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                    itemSelector: "",
                    hoverSelector: "",
                    hoverClass: "",
                    idKey: "",
                    checkIgnoreItem: null,
                    stopBubbling: !1,
                    actionList: [],
                    moreActionList: [],
                    descriptionDelay: 500
                },
                widget_method = {
                    _init: function() {
                        var self = this;
                        this.latest_showed_jqObj = {}, this.action_item = {}, this.is_more_prepared = !1, this.is_hold = !1, this.is_suspend = !1, this.$el.on("click.cwActionBar", "._cwABAction", function() {
                            var act_button = $(this),
                                type = act_button.attr("data-cwui-ab-type"),
                                id = act_button.attr("data-cwui-ab-id"),
                                act_dat = self.action_item[type];
                            if ("function" == typeof act_dat.click && act_dat.click.apply(self, [id, act_button]), self.option.stopBubbling) return !1
                        }).on("mouseenter.cwActionBarDescription", "._cwABAction", function() {
                            var act_button = $(this),
                                type = act_button.attr("data-cwui-ab-type"),
                                act_dat = self.action_item[type];
                            act_dat.description && ($.cwMessageTip.isInit(this) || $(this).cwMessageTip({
                                message: act_dat.description,
                                delay: self.option.descriptionDelay
                            }).open())
                        })
                    },
                    _setOption: function(option) {
                        var self = this;
                        void 0 != option.itemSelector && this.$el.off("mouseenter.cwActionBar").on("mouseenter.cwActionBar", option.itemSelector, function() {
                            var item = $(this),
                                is_ignore = !1;
                            "function" == typeof self.option.checkIgnoreItem && (is_ignore = self.option.checkIgnoreItem(item)), is_ignore || self.open($(this))
                        }).off("mouseleave.cwActionBar").on("mouseleave.cwActionBar", option.itemSelector, function() {
                            self.close()
                        })
                    },
                    _prepareMore: function() {
                        if (!this.is_more_prepared) {
                            var self = this,
                                jqObj = this.$el,
                                moretip_jqObj = $('<div style="display:none"><ul class="_cwABMoreListBox"></ul></div>');
                            $(document.body).append(moretip_jqObj);
                            var moretip = null;
                            moretip_jqObj.on("click.cwActionBar", "._cwABAction", function() {
                                var act_button = $(this),
                                    type = act_button.attr("data-cwui-ab-type"),
                                    id = act_button.attr("data-cwui-ab-id"),
                                    act_dat = self.action_item[type];
                                if ("function" == typeof act_dat.click && act_dat.click.apply(self, [id, act_button]), moretip.close(), self.option.stopBubbling) return !1
                            }).on("mouseenter.cwActionBar", "._cwABAction", function() {
                                var act_button = $(this),
                                    type = act_button.attr("data-cwui-ab-type"),
                                    act_dat = self.action_item[type];
                                act_dat.description && ($.cwMessageTip.isInit(this) || $(this).cwMessageTip({
                                    message: act_dat.description,
                                    delay: self.option.descriptionDelay
                                }).open())
                            });
                            var more_button = null;
                            jqObj.on("click.cwActionBar", "._cwABMoreTip", function() {
                                more_button = $(this), moretip || (moretip = moretip_jqObj.cwToolTip({
                                    open: function() {
                                        self.is_hold = !0;
                                        for (var id = more_button.attr("data-cwui-ab-id"), html = "", i = 0, act_len = self.option.moreActionList.length; i < act_len; i++) {
                                            var type = self.option.moreActionList[i],
                                                act_dat = self.action_item[type];
                                            html += '<li class="_cwABAction chatActionMore" data-cwui-ab-id="' + id + '" data-cwui-ab-type="' + type + '"><span class="' + act_dat.iconClass + '"></span><span class="chatActiontext">' + act_dat.label + "</li>"
                                        }
                                        moretip_jqObj.find("._cwABMoreListBox").html(html)
                                    },
                                    close: function() {
                                        self.is_hold = !1
                                    }
                                })), moretip.open($(this))
                            }), this.is_more_prepared = !0
                        }
                    },
                    open: function(jqObj) {
                        var self = this;
                        if (this.is_suspend) return this;
                        if (self.is_open = !0, void 0 != jqObj[0] && "function" == typeof self.option.open && self.option.open.apply(self, [jqObj.attr(self.option.idKey)]), void 0 != self.latest_showed_jqObj[0] && self.latest_showed_jqObj[0] != jqObj[0]) {
                            var current_showed_actionbar = self.latest_showed_jqObj.find("._cwABShowArea");
                            if (current_showed_actionbar.length > 0 && (current_showed_actionbar.hide(), $.cwMessageTip.close(), self.option.hoverClass)) {
                                var hover_obj = self.latest_showed_jqObj;
                                self.option.hoverSelector && (hover_obj = self.latest_showed_jqObj.find(self.option.hoverSelector)), hover_obj.removeClass(self.option.hoverClass)
                            }
                            self.latest_showed_jqObj = {}
                        }
                        if (void 0 != jqObj[0] && self.latest_showed_jqObj[0] != jqObj[0]) {
                            var num_action = self.option.actionList.length,
                                num_more_action = self.option.moreActionList.length,
                                showArea = jqObj.find("._cwABShowArea");
                            if (0 == showArea.length) {
                                if (!num_action && !num_more_action) return !1;
                                showArea = $('<div class="_cwABShowArea actionArea"></div>'), jqObj.append(showArea)
                            }
                            if (!$.data(showArea[0], "_cwABNavInit")) {
                                var action = '<ul role="toolbar" class="_messageActionNav cwTextUnselectable actionNav">',
                                    id = "";
                                self.option.idKey && (id = jqObj.attr(self.option.idKey));
                                for (var i = 0, act_len = self.option.actionList.length; i < act_len; i++) {
                                    var type = self.option.actionList[i],
                                        act_dat = self.action_item[type];
                                    void 0 == act_dat || (action += "reply" === type ? '<li role="button" class="_cwABAction linkStatus actionNav__item" data-cwui-ab-id="' + id + '" data-cwui-ab-type="' + type + '">\n                                         <svg viewBox="0 0 10 10" class="actionNav__itemIcon">\n                                           <use fill-rule="evenodd" xlink:href="#icon_actionNavReply"></use>\n                                         </svg>\n                                         <span class="_showAreaText showAreatext actionNav__itemLabel">' + act_dat.label + "</span>\n                                       </li>" : '<li role="button" class="_cwABAction linkStatus actionNav__item" data-cwui-ab-id="' + id + '" data-cwui-ab-type="' + type + '">\n                                         <span class="' + act_dat.iconClass + '""></span>\n                                         <span class="_showAreaText showAreatext actionNav__itemLabel">' + act_dat.label + "</span>\n                                       </li>")
                                }
                                self.option.moreActionList.length > 0 && (self._prepareMore(), action += '<li role="button" class="_cwABMoreTip linkStatus" data-cwui-ab-id="' + id + '"><span class="icoFontActionMore"></span><span class="_showAreaText showAreatext"></span></li>'), action += "</ul>", showArea.html(action), $.data(showArea[0], "_cwABNavInit", !0)
                            }
                            if (showArea.show(), self.option.hoverClass) {
                                var _hover_obj = jqObj;
                                self.option.hoverSelector && (_hover_obj = jqObj.find(self.option.hoverSelector)), _hover_obj.addClass(self.option.hoverClass)
                            }
                            self.latest_showed_jqObj = jqObj
                        }
                        return self
                    },
                    close: function() {
                        var self = this;
                        return this.is_open = !1, "function" == typeof self.option.close && self.option.close.apply(self), this.is_hold || this.open({}), this
                    },
                    hold: function(bool) {
                        return this.is_hold = bool, this
                    },
                    addAction: function(type, act_dat) {
                        var self = this;
                        return self.action_item[type] = act_dat, self
                    },
                    setActionList: function(action_list) {
                        return this.option.actionList = action_list, this
                    },
                    setMoreActionList: function(more_action_list) {
                        return this.option.moreActionList = more_action_list, this
                    },
                    findItemById: function(id) {
                        return this.$el.find("[" + this.option.idKey + "=" + id + "]")
                    },
                    suspend: function() {
                        return this.close(), this.is_suspend = !0, this
                    },
                    resume: function() {
                        return this.is_suspend = !1, this
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwActionBar", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    367: [function(require, module, exports) {
        "use strict";
        var _common = require("../../../../core/lib/common");
        ! function($) {
            var option_default = {
                descriptionDelay: 500,
                toggleMode: !1
            };
            $(function() {
                $(document.body).on("click.cwButton", "._cwBN", function() {
                    var btn = $(this).cwButton();
                    btn.option.toggleMode ? btn.toggle() : btn.select()
                }).on("keydown.cwButton", "._cwBN", function(e) {
                    32 == e.keyCode && $(this).click()
                })
            });
            var widget_method = {
                    _init: function() {
                        var jqObj = this.$el;
                        this.is_selected = !1, jqObj.addClass("_cwBN button").attr({
                            role: "button"
                        }), this.is_primary = jqObj.hasClass("btnPrimary"), this.is_success = jqObj.hasClass("btnSuccess"), this.is_warning = jqObj.hasClass("btnWarning"), this.is_danger = jqObj.hasClass("btnDanger"), jqObj.hasClass("btnDisable") && this.disable()
                    },
                    _setOption: function(option) {
                        var self = this;
                        if (void 0 != option.description && ($.cwMessageTip.isInit(this.$el[0]) || this.$el.cwMessageTip({
                                delay: self.option.descriptionDelay,
                                message: option.description
                            })), void 0 != option.type) switch (option.type) {
                            case "primary":
                                this.$el.addClass("btnPrimary").removeClass("btnSuccess btnWarning btnDanger"), this.is_primary = !0;
                                break;
                            case "success":
                                this.$el.addClass("btnSuccess").removeClass("btnPrimary btnWarning btnDanger"), this.is_success = !0;
                                break;
                            case "warning":
                                this.$el.addClass("btnWarning").removeClass("btnSuccess btnPrimary btnDanger"), this.is_warning = !0;
                                break;
                            case "danger":
                                this.$el.addClass("btnDanger").removeClass("btnSuccess btnWarning btnPrimary"), this.is_danger = !0
                        }
                        if (void 0 != option.text && this.$el.text(option.text), void 0 != option.size) switch (option.size) {
                            case "large":
                                this.$el.addClass("btnLarge")
                        }
                    },
                    select: function() {
                        if (this.is_disabled) return this;
                        if (this.option.click && this.option.click.apply(this), !this.is_selected) {
                            var ret = void 0;
                            this.option.update && (ret = this.option.update.apply(this, [!0])), !1 !== ret && this.option.toggleMode && (this.$el.addClass("_cwBNSelected selected").attr("aria-pressed", "true"), this.is_selected = !0)
                        }
                        return this
                    },
                    deSelect: function() {
                        return this.is_disabled ? this : (this.is_selected && (this.$el.removeClass("_cwBNSelected selected").attr("aria-pressed", "false"), this.is_selected = !1), this)
                    },
                    toggle: function() {
                        return this.isSelect() ? this.deSelect() : this.select(), this
                    },
                    isSelect: function() {
                        return this.is_selected
                    },
                    disable: function() {
                        return this.$el.addClass("btnDisable").attr("aria-disabled", "true"), this.is_primary && this.$el.removeClass("btnPrimary"), this.is_success && this.$el.removeClass("btnSuccess"), this.is_warning && this.$el.removeClass("btnWarning"), this.is_danger && this.$el.removeClass("btnDanger"), this.is_disabled = !0, this.option.disable && this.option.disable.apply(this), this
                    },
                    enable: function() {
                        return this.$el.removeClass("btnDisable").attr("aria-disabled", "false"), this.is_primary && this.$el.addClass("btnPrimary"), this.is_success && this.$el.addClass("btnSuccess"), this.is_warning && this.$el.addClass("btnWarning"), this.is_danger && this.$el.addClass("btnDanger"), this.is_disabled = !1, this.option.enable && this.option.enable.apply(this), this
                    }
                },
                utility_method = {
                    create: function(label, type, attr) {
                        void 0 == attr && (attr = {});
                        var html = "<div",
                            html_class = "btn";
                        type && (html_class += " btn" + (0, _common.ucfirst)(type));
                        for (var key in attr) switch (key) {
                            case "class":
                                html_class += " " + attr[key];
                                break;
                            default:
                                html += " " + key + '="' + attr[key] + '"'
                        }
                        return html += ' role="button" class="' + html_class + '">' + label + "</div>"
                    }
                };
            $.cwUI.addWidget("cwButton", option_default, widget_method, utility_method)
        }(jQuery)
    }, {
        "../../../../core/lib/common": 308
    }],
    368: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                    descriptionDelay: 500,
                    toggleMode: !1
                },
                widget_method = {
                    _init: function(option) {
                        var self = this,
                            jqObj = this.$el;
                        this.selected_dat = {}, this.disabled_dat = {}, jqObj.addClass("_cwBB").attr("role", "menu"), jqObj.on("click.cwButtonBar", "._cwBBButton", function() {
                            self.option.toggleMode ? self.toggle($(this).attr("data-cwui-bb-idx")) : self.select($(this).attr("data-cwui-bb-idx"))
                        }).on("keydown.cwButtonBar", "._cwBBButton", function(e) {
                            32 == e.keyCode && $(this).click()
                        }), this.length = 0;
                        var selected_dat = $.data(jqObj[0], "_cwBBSelectDat");
                        for (var idx in selected_dat) this.selected_dat[idx] = !1, this.length++;
                        $.data(jqObj[0], "_cwBBSelectDat", null), option.descriptionList = $.data(jqObj[0], "_cwBBDescriptionList"), $.data(jqObj[0], "_cwBBDescriptionList", null);
                        for (var _idx in selected_dat) selected_dat[_idx] && this.select(_idx), this.disabled_dat[_idx] = !1
                    },
                    _setOption: function(option) {
                        var self = this;
                        void 0 != option.descriptionList && this.$el.find("._cwBBButton").each(function() {
                            var button = $(this),
                                idx = button.attr("data-cwui-bb-idx");
                            self.option.descriptionList[idx] && ($.cwMessageTip.isInit(this) || (button.attr("aria-label", self.option.descriptionList[idx]), button.cwMessageTip({
                                delay: self.option.descriptionDelay,
                                message: self.option.descriptionList[idx]
                            })))
                        })
                    },
                    select: function(idx) {
                        if (idx = parseInt(idx, 10), !this.selected_dat[idx] && !this.disabled_dat[idx]) {
                            var ret = void 0;
                            this.option.update && (ret = this.option.update.apply(this, [idx, !0])), !1 !== ret && this.option.toggleMode && (this.findButtonByIndex(idx).addClass("_cwBBSelected selected").attr("aria-checked", "true"), this.selected_dat[idx] = !0)
                        }
                        return this
                    },
                    deSelect: function(idx) {
                        if (idx = parseInt(idx, 10), this.selected_dat[idx] && !this.disabled_dat[idx]) {
                            var ret = void 0;
                            this.option.update && (ret = this.option.update.apply(this, [idx, !1])), !1 !== ret && (this.findButtonByIndex(idx).removeClass("_cwBBSelected selected").attr("aria-checked", "false"), this.selected_dat[idx] = !1)
                        }
                        return this
                    },
                    toggle: function(idx) {
                        return this.isSelect(idx) ? this.deSelect(idx) : this.select(idx), this
                    },
                    selectAll: function() {
                        for (var idx in this.selected_dat) this.select(idx);
                        return this
                    },
                    deSelectAll: function() {
                        for (var idx in this.selected_dat) this.deSelect(idx);
                        return this
                    },
                    isSelect: function(idx) {
                        return this.selected_dat[idx]
                    },
                    getSelectedIndex: function() {
                        var selected_list = [];
                        for (var idx in this.selected_dat) this.selected_dat[idx] && selected_list.push(this.selected_dat[idx]);
                        return selected_list
                    },
                    findButtonByIndex: function(idx) {
                        return this.$el.find("._cwBBButton[data-cwui-bb-idx=" + idx + "]")
                    },
                    hideButton: function(idx) {
                        return this.findButtonByIndex(idx).hide(), this
                    },
                    showButton: function(idx) {
                        return this.findButtonByIndex(idx).show(), this
                    },
                    hideButtonAll: function() {
                        return this.$el.find("._cwBBButton").hide(), this
                    },
                    showButtonAll: function() {
                        return this.$el.find("._cwBBButton").show(), this
                    },
                    disableButton: function(idx) {
                        return this.findButtonByIndex(idx).addClass("btnDisable").attr("aria-disabled", "true"), this.disabled_dat[idx] = !0, this
                    },
                    enableButton: function(idx) {
                        return this.findButtonByIndex(idx).removeClass("btnDisable").attr("aria-disabled", "false"), this.disabled_dat[idx] = !1, this
                    },
                    disableButtonAll: function() {
                        this.$el.find("._cwBBButton").addClass("btnDisable").attr("aria-disabled", "true");
                        for (var idx in this.selected_dat) this.disabled_dat[idx] = !0;
                        return this
                    },
                    enableButtonAll: function() {
                        this.$el.find("._cwBBButton").removeClass("btnDisable").attr("aria-disabled", "false");
                        for (var idx in this.selected_dat) this.disabled_dat[idx] = !1;
                        return this
                    }
                },
                utility_method = {
                    _create: function(jqObj) {
                        var elm = jqObj[0],
                            selected_dat = {};
                        if (!jqObj.hasClass("_cwBB")) {
                            if ("ul" != elm.tagName.toLowerCase()) return;
                            var option_list = [],
                                description_list = [],
                                idx = 0;
                            jqObj.find("li").each(function() {
                                var item = $(this);
                                option_list.push(item.html()), item.hasClass("._cwBBSelected") ? selected_dat[idx] = !0 : selected_dat[idx] = !1, description_list.push(item.attr("aria-label")), idx++
                            });
                            var attr = jqObj.getAttrs(),
                                new_jqObj = $($.cwButtonBar.create(option_list, attr));
                            return jqObj.before(new_jqObj), jqObj.remove(), $.data(new_jqObj[0], "_cwBBSelectDat", selected_dat), $.data(new_jqObj[0], "_cwBBDescriptionList", description_list), new_jqObj
                        }
                        return !1
                    },
                    create: function(option_list, attr) {
                        void 0 == attr && (attr = {});
                        var html_ul = "<ul",
                            html_class = "cwTextUnselectable btnNavList";
                        for (var key in attr) switch (key) {
                            case "class":
                                html_class += " " + attr[key];
                                break;
                            default:
                                html_ul += " " + key + '="' + attr[key] + '"'
                        }
                        html_ul += ' class="' + html_class + '">';
                        for (var list_length = option_list.length, i = 0; i < list_length; i++) html_ul += '<li role="menuitemradio" class="_cwBBButton button" data-cwui-bb-idx="' + i + '">' + option_list[i] + "</li>";
                        return html_ul += "</ul>"
                    }
                };
            $.cwUI.addWidget("cwButtonBar", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    369: [function(require, module, exports) {
        "use strict";
        ! function($) {
            $(function() {
                $(document.body).on("click.cwCheckBox", "._cwCB", function() {
                    return $(this).cwCheckBox().toggle(), !1
                }).on("keydown.cwCheckBox", "._cwCB", function(e) {
                    32 == e.keyCode && $(this).click()
                }).on("click.cwCheckBox", "._cwCBLabel", function() {
                    return $("#" + $(this).prop("for")).cwCheckBox().toggle(), !1
                })
            });
            var option_default = {
                    theme: ""
                },
                widget_method = {
                    _init: function(option) {
                        this.labelObj = null, this.is_disabled = !1;
                        var label = this.$el.attr("data-label");
                        label && (option.label = label, this.$el.attr("data-label", ""));
                        var theme = this.$el.attr("data-theme");
                        theme && (option.theme = theme)
                    },
                    _setOption: function(option) {
                        if (option.label) {
                            var escaped_label = $.cwUI.escapeHTML(option.label);
                            if (null === this.labelObj) {
                                var id = this.$el.prop("id");
                                id && (this.labelObj = $('<label class="_cwCBLabel cwTextUnselectable linkStatus" for="' + id + '">' + escaped_label + "</label>"), this.$el.after(this.labelObj))
                            } else this.labelObj.text(option.label);
                            this.$el.attr("aria-label", escaped_label)
                        }
                    },
                    check: function(force) {
                        if (!force && this.is_disabled) return this;
                        var self = this,
                            check = this.$el,
                            input = check.find("input");
                        if (!check.hasClass("_cwCBChecked")) {
                            check.addClass("_cwCBChecked " + $.cwCheckBox._getClass("active", this.option.theme)).removeClass("_cwCBUnchecked _cwCBPartialChecked " + $.cwCheckBox._getClass("mixed", this.option.theme) + " " + $.cwCheckBox._getClass("", this.option.theme)).attr("aria-checked", "true"), input && input.attr({
                                name: input.attr("data-cwui-cb-name")
                            });
                            var args = [!0, self.getVal(), !1];
                            this.$el.trigger("cwCheckBox_update", args), "function" == typeof self.option.update && self.option.update.apply(self, args)
                        }
                        return this
                    },
                    partialCheck: function(force) {
                        if (!force && this.is_disabled) return this;
                        var self = this,
                            check = this.$el,
                            input = check.find("input");
                        if (!check.hasClass("_cwCBPartialChecked")) {
                            check.addClass("_cwCBPartialChecked " + $.cwCheckBox._getClass("mixed", this.option.theme)), check.removeClass("_cwCBChecked _cwCBUnchecked " + $.cwCheckBox._getClass("active", this.option.theme) + " " + $.cwCheckBox._getClass("", this.option.theme)).attr("aria-checked", "mixed"), input && input.removeAttr("name");
                            var args = [!1, self.getVal(), !0];
                            this.$el.trigger("cwCheckBox_update", args), "function" == typeof self.option.update && self.option.update.apply(self, args)
                        }
                        return this
                    },
                    unCheck: function(force) {
                        if (!force && this.is_disabled) return this;
                        var self = this,
                            check = this.$el,
                            input = check.find("input");
                        if (!check.hasClass("_cwCBUnchecked")) {
                            check.addClass("_cwCBUnchecked " + $.cwCheckBox._getClass("", this.option.theme)), check.removeClass("_cwCBChecked _cwCBPartialChecked " + $.cwCheckBox._getClass("active", this.option.theme) + " " + $.cwCheckBox._getClass("mixed", this.option.theme)).attr("aria-checked", "false"), input && input.removeAttr("name");
                            var args = [!1, self.getVal(), !1];
                            this.$el.trigger("cwCheckBox_update", args), "function" == typeof self.option.update && self.option.update.apply(self, args)
                        }
                        return this
                    },
                    toggle: function() {
                        return this.is_disabled ? this : (this.$el.hasClass("_cwCBChecked") ? this.unCheck(!1) : this.check(!1), this)
                    },
                    isChecked: function() {
                        return this.$el.hasClass("_cwCBChecked")
                    },
                    getVal: function() {
                        return this.$el.find("input").val()
                    },
                    isDisabled: function() {
                        return this.is_disabled
                    },
                    disable: function() {
                        return this.$el.addClass("disabled"), this.is_disabled = !0, this.option.disable && this.option.disable.apply(this), this
                    },
                    enable: function() {
                        return this.$el.removeClass("disabled"), this.is_disabled = !1, this.option.enable && this.option.enable.apply(this), this
                    }
                },
                utility_method = {
                    _create: function(jqObj) {
                        var elm = jqObj[0];
                        if ("checkbox" == elm.type) {
                            var attr = jqObj.getAttrs(),
                                new_jqObj = $($.cwCheckBox.create(elm.checked, elm.name, elm.value, attr));
                            return jqObj.before(new_jqObj), jqObj.remove(), new_jqObj
                        }
                        return !!jqObj.hasClass("_cwCB") && jqObj
                    },
                    create: function(checked, name, value, attr) {
                        void 0 == checked && (checked = !1), name || (name = ""), void 0 == value && (value = "on"), void 0 == attr && (attr = {});
                        var theme = "";
                        void 0 != attr["data-theme"] && (theme = attr["data-theme"]);
                        var html_span = '<span role="checkbox"',
                            html_class = "_cwCB";
                        checked ? (html_class += " _cwCBChecked " + $.cwCheckBox._getClass("active", theme), html_span += ' aria-checked="true"') : (html_class += " _cwCBUnchecked " + $.cwCheckBox._getClass("", theme), html_span += ' aria-checked="false"');
                        for (var key in attr) switch (key) {
                            case "class":
                                html_class += " " + attr[key];
                                break;
                            default:
                                html_span += " " + key + '="' + attr[key] + '"'
                        }
                        var html_input = '<input type="hidden"';
                        return name && (html_input += ' data-cwui-cb-name="' + name + '"', checked && (html_input += ' name="' + name + '"')), value && (html_input += ' value="' + $.cwUI.escapeHTML(value) + '"'), html_input += " />", html_span + ' class="' + html_class + '">' + html_input + "</span>"
                    },
                    _getClass: function(type, theme) {
                        var type_str = "";
                        type && (type_str = $.cwUI.ucFirst(type));
                        var theme_str = "";
                        return theme && (theme_str = $.cwUI.ucFirst(theme)), "ico15Checkbox" + type_str + theme_str
                    }
                };
            $.cwUI.addWidget("cwCheckBox", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    370: [function(require, module, exports) {
        "use strict";
        ! function($, L) {
            var option_default = {
                    dateLabel: null,
                    dateFormat: "Y/m/d",
                    compactLabel: !0
                },
                i18n = L.cwDatePicker,
                supported_dateformat = {
                    "m/d/Y": {
                        compact: "m/d",
                        regex: /([0-9]+)\/([0-9]+)\/([0-9]+)/,
                        regexHint: {
                            Y: 3,
                            m: 1,
                            d: 2
                        },
                        regexcompact: /([0-9]+)\/([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    },
                    "d/m/Y": {
                        compact: "d/m",
                        regex: /([0-9]+)\/([0-9]+)\/([0-9]+)/,
                        regexHint: {
                            Y: 3,
                            m: 2,
                            d: 1
                        },
                        regexcompact: /([0-9]+)\/([0-9]+)/,
                        regexcompactHint: {
                            m: 2,
                            d: 1
                        }
                    },
                    "Y/m/d": {
                        compact: "m/d",
                        regex: /([0-9]+)\/([0-9]+)\/([0-9]+)/,
                        regexHint: {
                            Y: 1,
                            m: 2,
                            d: 3
                        },
                        regexcompact: /([0-9]+)\/([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    },
                    "m-d-Y": {
                        compact: "m-d",
                        regex: /([0-9]+)-([0-9]+)-([0-9]+)/,
                        regexHint: {
                            Y: 3,
                            m: 1,
                            d: 2
                        },
                        regexcompact: /([0-9]+)-([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    },
                    "d-m-Y": {
                        compact: "d-m",
                        regex: /([0-9]+)-([0-9]+)-([0-9]+)/,
                        regexHint: {
                            Y: 3,
                            m: 2,
                            d: 1
                        },
                        regexcompact: /([0-9]+)-([0-9]+)/,
                        regexcompactHint: {
                            m: 2,
                            d: 1
                        }
                    },
                    "Y-m-d": {
                        compact: "m-d",
                        regex: /([0-9]+)-([0-9]+)-([0-9]+)/,
                        regexHint: {
                            Y: 1,
                            m: 2,
                            d: 3
                        },
                        regexcompact: /([0-9]+)-([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    },
                    "m.d.Y": {
                        compact: "m.d",
                        regex: /([0-9]+)\.([0-9]+)\.([0-9]+)/,
                        regexHint: {
                            Y: 3,
                            m: 1,
                            d: 2
                        },
                        regexcompact: /([0-9]+)\.([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    },
                    "d.m.Y": {
                        compact: "d.m",
                        regex: /([0-9]+)\.([0-9]+)\.([0-9]+)/,
                        regexHint: {
                            Y: 3,
                            m: 2,
                            d: 1
                        },
                        regexcompact: /([0-9]+)\.([0-9]+)/,
                        regexcompactHint: {
                            m: 2,
                            d: 1
                        }
                    },
                    "Y.m.d": {
                        compact: "m.d",
                        regex: /([0-9]+)\.([0-9]+)\.([0-9]+)/,
                        regexHint: {
                            Y: 1,
                            m: 2,
                            d: 3
                        },
                        regexcompact: /([0-9]+)\.([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    },
                    "m/d-Y": {
                        compact: "m/d",
                        regex: /([0-9]+)\/([0-9]+)-([0-9]+)/,
                        regexHint: {
                            Y: 3,
                            m: 1,
                            d: 2
                        },
                        regexcompact: /([0-9]+)-([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    },
                    "Y年m月d日": {
                        compact: "m月d日",
                        regex: /([0-9]+)年([0-9]+)月([0-9]+)日/,
                        regexHint: {
                            Y: 1,
                            m: 2,
                            d: 3
                        },
                        regexcompact: /([0-9]+)\/([0-9]+)/,
                        regexcompactHint: {
                            m: 1,
                            d: 2
                        }
                    }
                },
                pointer = null,
                dpObj = null;
            $(function() {
                var dpTag = '<div id="_datePicker" class="datePicker" style="display:none"><div class="tooltipHeader datePickerHeaderControl linkIconStatus"><span id="_datePickerPrev" role="button" aria-label="' + L.pager_prev + '"\n            class="icoFontTriangleLeft"></span><span class="_datePickerYM"></span><span id="_datePickerNext" role="button" aria-label="' + L.pager_next + '" class="icoFontTriangleRight"></span></div><table><thead><tr><th>' + i18n.dayNamesMin[0] + "</th><th>" + i18n.dayNamesMin[1] + "</th><th>" + i18n.dayNamesMin[2] + "</th><th>" + i18n.dayNamesMin[3] + "</th><th>" + i18n.dayNamesMin[4] + "</th><th>" + i18n.dayNamesMin[5] + "</th><th>" + i18n.dayNamesMin[6] + '</th></tr></thead><tbody class="_datePickerDay" style="padding:5px;text-align:right"></tbody></table><div class="tooltipFooter btnGroup"><div id="_datePickerToday" role="button" class="button btnPrimary">' + i18n.currentText + '</div> <div id="_datePickerClose" role="button" class="button">' + L.button_close + "</div></div>";
                dpObj = $(dpTag), $(document.body).append(dpObj), dpObj.on("click.cwDatePicker", "td", function() {
                    var date = $(this).attr("data-cwui-dp-date"),
                        match = date.match(/([0-9]+)-([0-9]+)-([0-9]+)/);
                    pointer.select(match[1], match[2], match[3])
                }), $("#_datePickerClose").on("click.cwDatePicker", function() {
                    pointer.close()
                }), $("#_datePickerToday").on("click.cwDatePicker", function() {
                    pointer.today()
                }), $("#_datePickerNext").on("click.cwDatePicker", function() {
                    pointer.nextMonth()
                }), $("#_datePickerPrev").on("click.cwDatePicker", function() {
                    pointer.prevMonth()
                })
            });
            var widget_method = {
                    _init: function() {
                        var self = this;
                        this.tooltip = dpObj.cwToolTip(), this.$el.on("click.cwDatePicker", function() {
                            self.open()
                        }), this._syncDate()
                    },
                    _syncDate: function() {
                        var now = new Date;
                        this.now_year = now.getFullYear(), this.now_month = now.getMonth() + 1, this.now_day = now.getDate()
                    },
                    _setOption: function(option) {
                        var self = this;
                        if (void 0 != option.open && this.tooltip.setOption({
                                open: function() {
                                    "function" == typeof self.option.open && self.option.open.apply(self)
                                }
                            }), void 0 != option.close && this.tooltip.setOption({
                                close: function() {
                                    "function" == typeof self.option.close && self.option.close.apply(self)
                                }
                            }), void 0 != option.dateFormat) {
                            var df_info = supported_dateformat[option.dateFormat];
                            df_info && (this.dateFormatInfo = df_info)
                        }
                        void 0 != option.dateLabel && option.dateLabel.on("click.cwDatePicker", "._cwDPCancel", function() {
                            return self.setVal(""), !1
                        }).on("click.cwDatePicker", "._cwDPDateLabel", function() {
                            self.open($(this))
                        })
                    },
                    open: function(tipFrom) {
                        return this.loadValue(), pointer = this, void 0 == tipFrom && (tipFrom = this.$el), this._build(this.year, this.month, this.day), this.tooltip.open(tipFrom), this
                    },
                    close: function() {
                        return this.tooltip.close(), this
                    },
                    isOpen: function() {
                        return this.tooltip.isOpen()
                    },
                    getVal: function() {
                        if (!this.option.dateLabel) return this.$el.val();
                        var label = this.option.dateLabel.attr("data-value");
                        return label || ""
                    },
                    setVal: function(date) {
                        if (this.option.dateLabel)
                            if ("" == date) this.option.dateLabel.quickEmpty(), this.option.dateLabel.attr("data-value", "");
                            else {
                                this.option.dateLabel.attr("data-value", date), this.loadValue();
                                var escaped_date = $.cwUI.escapeHTML(date);
                                this.option.compactLabel && this.year == this.now_year && (escaped_date = $.cwUI.escapeHTML(this.dateFormatInfo.compact.replace("m", this.month).replace("d", this.day))), this.option.dateLabel.html('<div class="_cwDPDateLabel datePickerLabelPiece">\n                                 <span class="datePickerLabelPiece__dateText">' + escaped_date + '</span>\n                                 <span class="_cwDPCancel datePickerLabelPiece__removeButton">\n                                   <span class="icoFontCancel datePickerLabelPiece__removeButtonIcon"></span>\n                                   <span class="icoTextHide">' + L.button_delete + "</span>\n                                 </span>\n                               </div>")
                            }
                        else this.$el.val(date);
                        return "function" == typeof this.option.update && this.option.update.apply(this), this
                    },
                    select: function(year, month, day) {
                        return this.setVal(this.option.dateFormat.replace("Y", year).replace("m", month).replace("d", day)), this.close(), this
                    },
                    today: function() {
                        return this._syncDate(), this.select(this.now_year, this.now_month, this.now_day), this
                    },
                    loadValue: function() {
                        var val = this.getVal();
                        if (this.val_year = 0, this.val_month = 0, this.val_day = 0, val.length > 0) {
                            var match = val.match(this.dateFormatInfo.regex);
                            match && (this.val_year = parseInt(match[this.dateFormatInfo.regexHint.Y], 10), this.val_month = parseInt(match[this.dateFormatInfo.regexHint.m], 10), this.val_day = parseInt(match[this.dateFormatInfo.regexHint.d], 10), this.year = this.val_year, this.month = this.val_month, this.day = this.val_day)
                        }
                        return this.val_year || (this.year = this.now_year, this.month = this.now_month), this
                    },
                    nextMonth: function() {
                        return this.month++, this._build(), this
                    },
                    prevMonth: function() {
                        return this.month--, this._build(), this
                    },
                    _build: function() {
                        var dt = new Date(this.year, this.month - 1, 1);
                        this.year = dt.getFullYear(), this.month = dt.getMonth() + 1;
                        var year = this.year,
                            month = this.month,
                            fday = new Date(year, month - 1, 1),
                            lday = new Date(year, month, 0),
                            fday_week = fday.getDay(),
                            lday_date = lday.getDate(),
                            cal_year = year,
                            cal_month = month,
                            cal_day = 1,
                            rows = "",
                            is_current = !1;
                        this._syncDate();
                        for (var row = 1; row <= 6; row++) {
                            rows += "<tr>";
                            for (var col = 0; col < 7; col++) {
                                if (1 == row)
                                    if (col < fday_week) {
                                        var prev_date = new Date(year, month - 1, col - fday_week + 1);
                                        cal_year = prev_date.getFullYear(), cal_month = prev_date.getMonth() + 1, cal_day = prev_date.getDate()
                                    } else col == fday_week ? (cal_year = year, cal_month = month, cal_day = 1, is_current = !0) : cal_day++;
                                else if (cal_day >= lday_date) {
                                    is_current = !1;
                                    var next_date = new Date(year, month, 1);
                                    cal_year = next_date.getFullYear(), cal_month = next_date.getMonth() + 1, cal_day = 1
                                } else cal_day++;
                                var cls = "";
                                is_current ? cal_year == this.now_year && cal_month == this.now_month && cal_day == this.now_day && (cls = "datePickerToday") : cls = "datePickerOtherMonth", cal_year == this.val_year && cal_month == this.val_month && cal_day == this.val_day && (cls.length > 0 && (cls += " "), cls += "datePickerSelected"), rows += '<td data-cwui-dp-date="' + cal_year + "-" + cal_month + "-" + cal_day + '" class="' + cls + '">' + cal_day + "</td>"
                            }
                            rows += "</tr>"
                        }
                        var YMLabel = "";
                        return YMLabel = i18n.showMonthAfterYear ? year + i18n.yearSuffix + i18n.yearMonthSeparator + i18n.monthNames[month - 1] : i18n.monthNames[month - 1] + i18n.yearMonthSeparator + year + i18n.yearSuffix, dpObj.find("._datePickerYM").text(YMLabel), dpObj.find("._datePickerDay").html(rows), this
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwDatePicker", option_default, widget_method, utility_method)
        }(jQuery, jQuery.cwUI.L)
    }, {}],
    371: [function(require, module, exports) {
        "use strict";
        var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
            return typeof obj
        } : function(obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
        };
        ! function($, L) {
            var dialog_stack = [],
                body = $(document.body);
            $(function() {
                body.on("keydown.cwDialog", function(e) {
                    if (27 == e.keyCode && dialog_stack.length > 0) {
                        var dg = dialog_stack[dialog_stack.length - 1];
                        dg.option.closeOnEscape && dg.close()
                    }
                })
            });
            var option_default = {
                    title: "",
                    width: 300,
                    height: "auto",
                    windowMargin: 7,
                    autoOpen: !1,
                    closeOnEscape: !0
                },
                widget_method = {
                    agree_checkboxes: [],
                    checked_agree_checkboxes_count: 0,
                    _init: function() {
                        var self = this;
                        this.wrapper = this.$el.wrap('<div class="_cwDGBase dialogBase" style="display:none"><div class="_cwDGWrapper dialogContainer"></div></div>').parent(), this.backbox = this.wrapper.parent(), this.wrapper.prepend('\n              <div class="_cwDGHeader dialogContainer__header">\n                <h1 class="_cwDGTitle dialogContainer__title"></h1>\n                <div class="_cwDGTitleButton dialogContainer__closeButton">\n                  <span role="button" aria-label="' + L.button_close + '" class="_cwDGButton dialogContainer__closeButtonIcon icoFontCancel icoSizeLarge"></span>\n                </div>\n              </div>\n              <div style="display:none" class="_cwDGFooter dialogContainer__footer"></div>\n            '), this.header = this.wrapper.find("._cwDGHeader"), this.title = this.wrapper.find("._cwDGTitle"), this.footer = this.wrapper.find("._cwDGFooter"), this.$el.addClass("_cwDG").attr("role", "dialog").show(), this.agree_checkboxes = this.wrapper.find("._cwDGAgreeCheckbox"), this.agree_checkboxes.size() > 0 && (this.agree_checkboxes.each(function() {
                            $(this).prop("checked") && (self.checked_agree_checkboxes_count += 1)
                        }), this.agree_checkboxes.cwCheckBox({
                            update: function() {
                                this.isChecked() ? self.checked_agree_checkboxes_count += 1 : self.checked_agree_checkboxes_count -= 1, self._changeButtonStatus()
                            }
                        })), this.wrapper.on("click.cwDialog", "._cwDGButton", function() {
                            var idx = $(this).attr("data-idx");
                            return idx = void 0 == idx ? null : parseInt(idx, 10), self.buttonClick(idx), !1
                        })
                    },
                    _setOption: function(option) {
                        if (void 0 != option.title)
                            if (option.title) {
                                this.wrapper.find("._cwDGHeader").show();
                                var escaped_title = $.cwUI.escapeHTML(option.title);
                                this.title.html(escaped_title), this.$el.attr("aria-label", escaped_title)
                            } else this.wrapper.find("._cwDGHeader").hide(), this.$el.attr("aria-label", "");
                        if (void 0 != this.option.buttonLabels && (void 0 != option.buttonLabels || void 0 != option.buttonSubmit || void 0 != option.buttonDelete || void 0 != option.buttonCancel)) {
                            for (var buttons = "", button_type_list = ["buttonSubmit", "buttonDelete", "buttonCancel"], index_map = {}, i = button_type_list.length; i--;) {
                                var btype = button_type_list[i],
                                    optval = this.option[btype];
                                if (void 0 !== optval)
                                    if ("object" === (void 0 === optval ? "undefined" : _typeof(optval)) && optval.length)
                                        for (var j = optval.length; j--;) {
                                            var idx = optval[j];
                                            index_map[idx] = btype
                                        } else index_map[optval] = btype
                            }
                            for (var button_num = this.option.buttonLabels.length, _i = 0; _i < button_num; _i++) {
                                var button_color = "buttonGray",
                                    extra_class = "";
                                switch (index_map[_i]) {
                                    case "buttonSubmit":
                                        button_color = "btnPrimary";
                                        break;
                                    case "buttonDelete":
                                        button_color = "btnDanger";
                                        break;
                                    case "buttonCancel":
                                        extra_class += " _cwDGButtonCancel"
                                }
                                var escape_button_label = $.cwUI.escapeHTML(this.option.buttonLabels[_i]);
                                buttons += '<div role="button" aria-label="' + escape_button_label + '" class="_cwDGButton' + extra_class + " button " + button_color + '" data-idx="' + _i + '">' + escape_button_label + "</div>"
                            }
                            buttons ? this.wrapper.find("._cwDGFooter").html(buttons).show() : this.wrapper.find("._cwDGFooter").quickEmpty().hide()
                        }
                        this._changeButtonStatus(), void 0 != option.autoOpen && option.autoOpen && this.open()
                    },
                    open: function() {
                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                        var self = this;
                        this.is_open = !0;
                        var jqObj = this.$el;
                        if ("function" == typeof self.option.open && self.option.open.apply(self, args), dialog_stack.push(this), $.cwUI.setZIndex(this.backbox), this.backbox.fadeIn("fast"), this.backbox.fadeIn("fast", function() {
                                self.option.openCallback && self.option.openCallback.apply(self, args)
                            }), "auto" == this.option.width) {
                            jqObj.css("display", "inline-block");
                            var wrapper_pad = this.wrapper.outerWidth() - this.wrapper.width(),
                                width = jqObj.outerWidth() + wrapper_pad;
                            jqObj.css("display", "block"), this.wrapper.width(width)
                        } else this.wrapper.width(this.option.width);
                        var wrapper_width = this.wrapper.width();
                        switch (this.option.maxWidth && this.option.maxWidth < wrapper_width && this.wrapper.width(this.option.maxWidth), this.option.minWidth && this.option.minWidth > wrapper_width && this.wrapper.width(this.option.minWidth), this.option.height) {
                            case "auto":
                            case "full":
                                var header_height = 0;
                                this.option.title && (header_height = this.header.outerHeight());
                                var footer_height = 0;
                                this.option.buttonLabels && (footer_height = this.footer.outerHeight());
                                var max_height = self.getMaxHeight(),
                                    _dialog_height = max_height;
                                "auto" == this.option.height && (_dialog_height = jqObj.innerHeight() + header_height + footer_height);
                                var content_scroll_diff = 0;
                                if (_dialog_height > max_height) {
                                    var content = jqObj;
                                    this.option.contentScrollSelector && (content = jqObj.find(this.option.contentScrollSelector), content.length), content_scroll_diff = _dialog_height - max_height, content.height(content.height() - content_scroll_diff), content.css({
                                        overflow: "auto"
                                    }), _dialog_height = max_height
                                }
                                this.wrapper.height(_dialog_height);
                                break;
                            case "max_of_contents":
                                this.option.title && (header_height = this.header.outerHeight()), this.option.buttonLabels && (footer_height = this.footer.outerHeight());
                                var setting_dialog_elem = document.querySelector("#_chatSetting"),
                                    tab_elem = setting_dialog_elem.querySelector("._cwFWHeader"),
                                    tab_height = tab_elem.offsetHeight,
                                    contents_elem_list = Array.from(document.querySelectorAll("._cwSettingContents")),
                                    contents_height_list = contents_elem_list.map(function(elem) {
                                        return $("#" + elem.id).height()
                                    });
                                max_height = Math.max.apply(null, contents_height_list), _dialog_height = max_height + header_height + footer_height + tab_height, this.wrapper.height(_dialog_height);
                                break;
                            default:
                                this.wrapper.height(this.option.height)
                        }
                        var wrapper_height = this.wrapper.height();
                        this.option.maxHeight && this.option.maxHeight < wrapper_height && this.wrapper.height(this.option.maxHeight), this.option.minHeight && this.option.minHeight > wrapper_height && this.wrapper.height(this.option.minHeight);
                        var window_height = this.backbox.height(),
                            dialog_height = this.wrapper.outerHeight(),
                            dialog_top = parseInt(window_height / 2 - dialog_height / 2, 10);
                        return this.wrapper.css("margin-top", dialog_top + "px"), "function" == typeof self.option.postOpen && self.option.postOpen.apply(self, args), this
                    },
                    close: function() {
                        if (this.is_open) {
                            var self = this;
                            if (this.is_open = !1, "function" == typeof self.option.close) {
                                for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
                                self.option.close.apply(self, args)
                            }
                            return $.cwFloatBox.closeUpperLayer(this.backbox), $.cwUI.unsetZIndex(this.backbox), this.backbox.fadeOut("fast", function() {}), dialog_stack = [], $("#_cwDGBase").fadeOut("fast"), this
                        }
                    },
                    buttonClick: function(idx) {
                        var self = this;
                        if (null === idx) this.close();
                        else {
                            var obj = this.wrapper.find("[data-idx=" + idx + "]");
                            obj.length > 0 && ("function" == typeof self.option.buttonClick && self.option.buttonClick.apply(self, [idx]), obj.hasClass("_cwDGButtonCancel") && this.close())
                        }
                        return this
                    },
                    isAgreed: function() {
                        var checkbox_count = this.agree_checkboxes.size();
                        return 0 === checkbox_count || checkbox_count === this.checked_agree_checkboxes_count
                    },
                    _changeButtonStatus: function() {
                        var buttons = this.wrapper.find("._cwDGButton").not(".buttonGray");
                        this.isAgreed() ? buttons.removeClass("btnDisable") : buttons.addClass("btnDisable")
                    },
                    getMaxHeight: function() {
                        return $(window).height() - 2 * this.option.windowMargin
                    }
                },
                utility_method = {
                    isShown: function() {
                        return dialog_stack.length > 0
                    },
                    close: function() {
                        if (dialog_stack.length > 0)
                            for (var i = dialog_stack.length; i--;) dialog_stack[i].close()
                    }
                };
            $.cwUI.addWidget("cwDialog", option_default, widget_method, utility_method)
        }(jQuery, jQuery.cwUI.L)
    }, {}],
    372: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                    showPosition: "right",
                    useHtmlLabel: !1,
                    list: []
                },
                widget_method = {
                    _init: function() {
                        var self = this;
                        self.tip_body = $('<div style="display:none"></div>'), self.tip_body.on("click.cwDropDown", "li._cwDDList", function() {
                            self.select($(this).attr("data-cwui-dd-value"))
                        }), $(document.body).append(self.tip_body), this.tooltip = self.tip_body.cwToolTip({
                            direction: "bottom",
                            noTriangle: !0
                        }), this.$el.on("click.cwDropDown", function() {
                            self.open(self.$el)
                        }), this.latest_list = ""
                    },
                    _setOption: function() {
                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                        var self = this,
                            option = args[0];
                        void 0 != option.open && this.tooltip.setOption({
                            open: function() {
                                "function" == typeof self.option.open && self.option.open.apply(self, args)
                            }
                        }), void 0 != option.close && this.tooltip.setOption({
                            close: function() {
                                "function" == typeof self.option.close && self.option.close.apply(self, args)
                            }
                        });
                        var toolTipOptions = ["offsetTop", "offsetLeft", "showPosition", "theme", "useFloatBox", "parentFloatBox"],
                            option_update = !1,
                            toption = {};
                        for (var idx in toolTipOptions) {
                            var key = toolTipOptions[idx];
                            void 0 != option[key] && (option_update = !0, toption[key] = option[key])
                        }
                        option_update && this.tooltip.setOption(toption)
                    },
                    open: function() {
                        var self = this,
                            list = self._getList(),
                            html = '<ul role="menu" class="_cwDDListBody cwNoWrap ddListBody">';
                        if ($.isArray(list))
                            for (var i = 0, len = list.length; i < len; i++)
                                if ("hr" == list[i]) html += '</ul><div class="line"></div><ul role="menu" class="_cwDDListBody ddListBody cwNoWrap">';
                                else {
                                    var label = $.cwUI.escapeHTML(list[i].label);
                                    self.option.useHtmlLabel && (label = list[i].label), html += '<li role="menuitem" class="_cwDDList" data-cwui-dd-value="' + $.cwUI.escapeHTML(list[i].value) + '">' + label + "</li>"
                                }
                        return html += "</ul>", self.latest_list != html && (self.tip_body.html(html), self.latest_list = html), self.tooltip.open(self.$el), self
                    },
                    close: function() {
                        return this.tooltip.close(), this
                    },
                    isOpen: function() {
                        return this.tooltip.isOpen()
                    },
                    select: function(value) {
                        var self = this;
                        return "function" == typeof self.option.select && self.option.select.apply(self, [value]), this.tooltip.close(), this
                    },
                    _getList: function() {
                        return "function" == typeof this.option.list ? this.option.list() : this.option.list
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwDropDown", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    373: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                    minHeight: 50,
                    maxHeight: !1,
                    lineHeight: "auto"
                },
                widget_method = {
                    _init: function() {
                        var self = this,
                            jqObj = this.$el;
                        self.is_focused = !1, jqObj.on("keydown.cwElasticTextArea", function() {
                            self.resize(), "function" == typeof self.option.update && self.option.update.apply(self)
                        }).on("keyup.cwElasticTextArea", function() {
                            self.resize(), "function" == typeof self.option.update && self.option.update.apply(self)
                        }).on("focus.cwElasticTextArea", function() {
                            self.is_focused = !0, self.resize()
                        })
                    },
                    _setOption: function(option) {
                        var self = this,
                            jqObj = this.$el;
                        void 0 !== option.lineHeight && "auto" === option.lineHeight && (self.line_height_auto = parseFloat(jqObj.css("line-height")))
                    },
                    getVal: function() {
                        return this.$el.val()
                    },
                    setVal: function(value) {
                        return this.$el.val(value), this.resize(), this
                    },
                    focus: function() {
                        return this.$el.focus().caretPos("last"), this
                    },
                    clearFocused: function() {
                        return this.is_focused = !1, this.resize(), this
                    },
                    resize: function() {
                        var self = this,
                            jqObj = this.$el;
                        if ("" === jqObj.val() && !self.is_focused) return void jqObj.css({
                            "overflow-y": "hidden",
                            height: ""
                        });
                        var current_scrolltop = jqObj.scrollTop();
                        jqObj.height(0);
                        var line_height = parseInt(self.option.lineHeight, 10);
                        "auto" === self.option.lineHeight && (line_height = self.line_height_auto);
                        var new_height = jqObj[0].scrollHeight + line_height,
                            min_height = self.option.minHeight;
                        "function" == typeof self.option.minHeight && (min_height = self.option.minHeight.apply(self)), new_height < min_height && (new_height = min_height);
                        var is_overflow = !1;
                        if (self.option.maxHeight) {
                            var max_height = self.option.maxHeight;
                            "function" == typeof self.option.maxHeight && (max_height = self.option.maxHeight.apply(self)), min_height > max_height && (max_height = min_height), new_height > max_height && (new_height = max_height, is_overflow = !0)
                        }
                        return jqObj.height(new_height), is_overflow ? jqObj.css("overflow-y", "auto").scrollTop(current_scrolltop) : jqObj.css("overflow-y", "hidden"), this
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwElasticTextArea", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    374: [function(require, module, exports) {
        "use strict";
        ! function($, L) {
            var option_default = {
                    title: "",
                    wrapperSelector: "body",
                    width: 780,
                    allowOverlay: !1,
                    noAnimation: !1
                },
                float_window_dat = {};
            $(function() {
                $(document.body).on("click.cwFloatWindow", "._cwFWButton", function() {
                    var button = $(this),
                        fw_elm = button.closest("._cwFWInner")[0],
                        floatWindow = $.cwFloatWindow.getWidget(fw_elm),
                        idx = parseInt(button.attr("data-cwui-fw-idx"), 10);
                    floatWindow.buttonClick(idx)
                }).on("keydown.cwFloatWindow", function(e) {
                    27 == e.keyCode && $.cwFloatWindow.close()
                })
            });
            var widget_method = {
                    _init: function() {
                        var jqObj = this.$el;
                        jqObj.wrap('<div class="floatWindow"></div>'), jqObj.attr("role", "dialog"), this.finner = jqObj.addClass("_cwFWInner floatWindowInner"), this.fwindow = jqObj.parent().hide(), this.fcontent = jqObj.find("._cwFWContent").addClass("floatWindowContent"), this.finner.prepend('<h1 class="contentHl floatContentH1"></h1><div class="windowButton linkIconStatus"><span class="_cwFWButton icoFontCancel icoSizeLarge" data-cwui-fw-idx="-1"></span><span class="icoTextHide">' + L.button_close + "</span></div>"), this.finner.append('<div style="display:none" class="_cwFWButtonFooter floatWindowFooter"></div>'), float_window_dat[this.widget_id] = this
                    },
                    _setOption: function(option) {
                        var self = this;
                        if (void 0 != option.title) {
                            var escaped_title = $.cwUI.escapeHTML(option.title);
                            self.finner.find("h1").html('<span class="autotrim">' + escaped_title + "</span>"), self.$el.attr("aria-label", escaped_title)
                        }
                        if (void 0 != option.htmlTitle) {
                            var title_text = self.finner.find("h1").html('<span class="autotrim">' + option.htmlTitle + "</span>").text();
                            self.$el.attr("aria-label", title_text)
                        }
                        if (void 0 != this.option.buttonLabels && (void 0 != option.buttonLabels || void 0 != option.buttonSubmit || option.buttonCancel)) {
                            for (var buttons = "", button_num = this.option.buttonLabels.length, i = 0; i < button_num; i++) {
                                var button_color = "buttonGray",
                                    extra_class = "";
                                void 0 != this.option.buttonSubmit && this.option.buttonSubmit == i ? button_color = "btnPrimary" : void 0 != this.option.buttonCancel && this.option.buttonCancel == i && (extra_class += " _cwFWButtonCancel");
                                var escape_button_label = $.cwUI.escapeHTML(this.option.buttonLabels[i]);
                                buttons += '<div role="button" aria-label="' + escape_button_label + '" class="_cwFWButton' + extra_class + " button " + button_color + '" data-cwui-fw-idx="' + i + '">' + escape_button_label + "</div>"
                            }
                            buttons ? self.finner.find("._cwFWButtonFooter").html(buttons).show() : self.finner.find("._cwFWButtonFooter").quickEmpty().hide()
                        }
                    },
                    open: function() {
                        for (var self = this, jqObj = this.$el, option = this.option, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                        if ("function" == typeof self.option.open && self.option.open.apply(self, args), this.is_open) jqObj.scrollTop(0);
                        else {
                            var will_close_window = [];
                            if (!option.allowOverlay)
                                for (var id in float_window_dat) {
                                    var fw = float_window_dat[id];
                                    fw.isOpen() && will_close_window.push(id)
                                }
                            var open_process = function() {
                                for (var i = will_close_window.length; i--;) float_window_dat[will_close_window[i]].close();
                                self.resize(), self.fcontent.scrollTop(0)
                            };
                            self.resize(), jqObj.show(), this.option.noAnimation ? (self.fwindow.show(), open_process()) : self.fwindow.fadeIn("fast", open_process), $.cwUI.setZIndex(self.fwindow)
                        }
                        return this.is_open = !0, "function" == typeof self.option.postOpen && self.option.postOpen.apply(self, args), this
                    },
                    close: function() {
                        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
                        var self = this,
                            close_process = function() {
                                "function" == typeof self.option.close && self.option.close.apply(self, args)
                            };
                        return $.cwFloatBox.closeUpperLayer(self.fwindow), $.cwUI.unsetZIndex(self.fwindow), this.option.noAnimation ? (self.fwindow.hide(), close_process()) : self.fwindow.fadeOut("fast", close_process), this.is_open = !1, this
                    },
                    buttonClick: function(idx) {
                        var self = this;
                        if (-1 == idx) this.close(), "function" == typeof self.option.cancel && self.option.cancel.apply(self);
                        else {
                            var obj = self.finner.find("[data-cwui-fw-idx=" + idx + "]");
                            obj.length > 0 && ("function" == typeof self.option.buttonClick && self.option.buttonClick.apply(self, [idx]), obj.hasClass("_cwFWButtonCancel") && (this.close(), "function" == typeof self.option.cancel && self.option.cancel.apply(self)))
                        }
                        return this
                    },
                    resize: function() {
                        var self = this,
                            jqObj = this.$el,
                            width = $(window).innerWidth(),
                            margin = parseInt((width - self.option.width) / 2, 10);
                        jqObj.css({
                            left: margin,
                            right: margin
                        }), $(self.option.wrapperSelector).length;
                        var fw_height = $(self.option.wrapperSelector).height();
                        self.fcontent.height(fw_height);
                        var fw_title_height = self.finner.find("h1").outerHeight(),
                            header = self.finner.find("._cwFWHeader"),
                            fw_header_height = 0;
                        header.length > 0 && (fw_header_height = self.finner.find("._cwFWHeader").outerHeight());
                        var footer = self.finner.find("._cwFWFooter"),
                            fw_footer_height = 0;
                        footer.length > 0 && footer.isVisible() && (fw_footer_height = footer.outerHeight());
                        var bfooter = self.finner.find("._cwFWButtonFooter"),
                            fw_bfooter_height = 0;
                        bfooter.isVisible() && (fw_bfooter_height = bfooter.outerHeight());
                        var content = self.fcontent;
                        content.length;
                        var content_pad = content.innerHeight() - content.height(),
                            content_height = fw_height - fw_title_height - fw_header_height - fw_footer_height - fw_bfooter_height - content_pad;
                        return content.height(content_height), "function" == typeof self.option.resize && self.option.resize.apply(self, [content_height]), this
                    }
                },
                utility_method = {
                    isShown: function() {
                        for (var id in float_window_dat)
                            if (float_window_dat[id].isOpen()) return !0;
                        return !1
                    },
                    resize: function() {
                        for (var id in float_window_dat) {
                            var fw = float_window_dat[id];
                            fw.isOpen() && fw.resize()
                        }
                        return this
                    },
                    close: function() {
                        for (var id in float_window_dat) {
                            var fw = float_window_dat[id];
                            fw.isOpen() && fw.close()
                        }
                        return this
                    }
                };
            $.cwUI.addWidget("cwFloatWindow", option_default, widget_method, utility_method)
        }(jQuery, jQuery.cwUI.L)
    }, {}],
    375: [function(require, module, exports) {
        "use strict";
        ! function($, L) {
            var option_default = {
                    search: !0,
                    useHtmlLabel: !1,
                    multiSelect: !1,
                    selectable: !0,
                    fixHeight: !0,
                    maxListHeight: 160,
                    limit: 200
                },
                widget_method = {
                    ul: null,
                    tooltip: null,
                    searchbox: null,
                    search_focus_idx: 0,
                    _init: function() {
                        var self = this,
                            jqObj = this.$el;
                        jqObj.prepend('<div class="_cwLTSearchArea toolTipSearchArea"><div class="_cwLTSearchBoxArea"></div><div class="_cwLTCheckHandle tooltipCheckHandle" style="display:none"></div><div class="_cwLTSelectOptionArea tooltipCheckHandle" style="display:none"></div></div><ul class="_cwLTList cwTextUnselectable toolTipSelectList tooltipList toolTipListHeight"></ul>'), this.ul = jqObj.find("ul._cwLTList"), this.ul.attr("role", "list"), jqObj.addClass("toolTipListWidth"),
                            this.ul.on("click.cwListTip", "li", function() {
                                var item = $(this);
                                self.select(item.attr("data-cwui-lt-value"), item)
                            }), this.tooltip = jqObj.cwToolTip({
                            open: function() {
                                if ("function" == typeof self.option.open) {
                                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                                    self.option.open.apply(self, args)
                                }
                                self.searchbox && self.searchbox.setVal(""), self.build()
                            }
                        }), this.searchbox = null, this.select_list = [], this.select_dat = {}
                    },
                    _setOption: function() {
                        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
                        var self = this,
                            jqObj = this.$el,
                            option = args[0];
                        if (option.maxListHeight && this.ul.css("max-height", option.maxListHeight), void 0 != option.fixHeight && (option.fixHeight ? this.ul.css("height", option.maxListHeight) : this.ul.css("height", !1)), void 0 != option.close && this.tooltip.setOption({
                                close: function() {
                                    "function" == typeof self.option.close && self.option.close.apply(self, args)
                                }
                            }), void 0 != option.search)
                            if (option.search) {
                                self.search_focus_idx = 0;
                                var soption = {
                                    update: function() {
                                        self.search_focus_idx = 0, self.build()
                                    }
                                };
                                option.placeHolder ? soption.placeHolder = option.placeHolder : soption.placeHolder = L.button_search, this.searchbox = jqObj.find("._cwLTSearchBoxArea").html('<input class="inputMedium" type="text" />').find("input").cwSearchBox(soption);
                                var move_up = function() {
                                        var item_list = self.ul.find("li");
                                        if (0 == item_list.length) return void(self.search_focus_idx = 0);
                                        if (item_list.removeClass("toolTipListHover"), self.search_focus_idx--, self.search_focus_idx < 0 && (self.search_focus_idx = 0), self.search_focus_idx > 0) {
                                            var focus = $(item_list[self.search_focus_idx - 1]);
                                            focus.addClass("toolTipListHover");
                                            var result_box_top = self.ul.offset().top;
                                            focus.offset().top < result_box_top && self.ul.scrollTo(focus)
                                        }
                                    },
                                    move_down = function() {
                                        var item_list = self.ul.find("li");
                                        if (0 == item_list.length) return void(self.search_focus_idx = 0);
                                        item_list.removeClass("toolTipListHover"), self.search_focus_idx++, item_list.length < self.search_focus_idx && (self.search_focus_idx = item_list.length);
                                        var focus = $(item_list[self.search_focus_idx - 1]);
                                        focus.addClass("toolTipListHover");
                                        var result_box_bottom = self.ul.offset().top + self.ul.height();
                                        focus.offset().top + focus.height() > result_box_bottom && self.ul.scrollTo(focus)
                                    };
                                this.searchbox.$el.keydown(function(e) {
                                    switch (e.keyCode) {
                                        case 13:
                                            if (self.search_focus_idx > 0) {
                                                var item_list = self.ul.find("li");
                                                setTimeout(function() {
                                                    $(item_list[self.search_focus_idx - 1]).click()
                                                }, 200)
                                            }
                                            break;
                                        case 38:
                                            move_up();
                                            break;
                                        case 40:
                                            move_down()
                                    }
                                })
                            } else this.searchbox && this.searchbox.quickEmpty();
                        else void 0 != option.placeHolder && this.searchbox && this.searchbox.setOption({
                            placeHolder: option.placeHolder
                        });
                        if (void 0 != option.multiSelect) {
                            var checkhandle = jqObj.find("._cwLTCheckHandle"),
                                ul = this.ul;
                            option.multiSelect ? (ul.addClass("toolTipSelectList"), checkhandle.html('<span class="_cwLTCheckAll linkStatus">' + L.checkall + '</span> / <span class="_cwLTUnCheckAll linkStatus">' + L.uncheckall + "</span>"), checkhandle.find("._cwLTCheckAll").on("click.cwListTip", function() {
                                ul.find("li").each(function() {
                                    var item = $(this);
                                    item.hasClass("listSelected") || item.click()
                                })
                            }), checkhandle.find("._cwLTUnCheckAll").on("click.cwListTip", function() {
                                ul.find("li.listSelected").click()
                            }), checkhandle.show()) : (checkhandle.quickEmpty(), checkhandle.hide())
                        }
                        if (void 0 != option.selectOptionArea) {
                            var selectoption = jqObj.find("._cwLTSelectOptionArea");
                            option.selectOptionArea ? (selectoption.html(option.selectOptionArea), selectoption.show()) : (selectoption.quickEmpty(), selectoption.hide())
                        }
                        void 0 != option.selectable && (option.selectable ? this.ul.addClass("toolTipSelectList") : this.ul.removeClass("toolTipSelectList"));
                        var toolTipOptions = ["offsetTop", "offsetLeft", "showPosition", "direction", "noAnimation", "noTriangle", "useFloatBox", "parentFloatBox", "theme"];
                        for (var idx in toolTipOptions) {
                            var key = toolTipOptions[idx];
                            if (void 0 != option[key]) {
                                var toption = {};
                                toption[key] = option[key], this.tooltip.setOption(toption)
                            }
                        }
                    },
                    open: function() {
                        var _tooltip;
                        return (_tooltip = this.tooltip).open.apply(_tooltip, arguments), this.ul.scrollTop(0), this.searchbox && this.searchbox.$el.focus(), this
                    },
                    move: function() {
                        var self = this,
                            jqObj = self.$el;
                        return this.tooltip.move(jqObj), this
                    },
                    close: function() {
                        var _tooltip2;
                        return this.searchbox && (this.searchbox.$el.blur(), this.search_focus_idx = 0), (_tooltip2 = this.tooltip).close.apply(_tooltip2, arguments), this
                    },
                    isOpen: function() {
                        return this.tooltip.isOpen()
                    },
                    getVal: function() {
                        for (var value_list = [], select_length = this.select_list.length, i = 0; i < select_length; i++) value_list.push(this.select_list[i]);
                        return this.option.multiSelect ? value_list : value_list[0]
                    },
                    setVal: function(value_list) {
                        this.clear();
                        for (var value_length = value_list.length, i = 0; i < value_length; i++) this.select(value_list[i]);
                        return this
                    },
                    select: function(value, item) {
                        var self = this;
                        return !this.option.multiSelect && this.option.selectable && (this.clear(), item = null), this.option.selectable && (item || (item = this.findItemByValue(value)), this.select_dat[value] ? (item.length > 0 && item.removeClass("listSelected"), this.select_list = this.select_list.filter(function(i) {
                            return i !== value
                        }), delete this.select_dat[value]) : (item.length > 0 && item.addClass("listSelected"), this.select_list.push(value), this.select_dat[value] = !0), "function" == typeof self.option.update && self.option.update.apply(self)), "function" == typeof self.option.select && self.option.select.apply(self, [value]), this
                    },
                    clear: function() {
                        var self = this;
                        return this.select_list = [], this.select_dat = {}, "function" == typeof self.option.update && self.option.update.apply(self), this.build(), this
                    },
                    getList: function() {
                        var list = this.option.list;
                        "function" == typeof this.option.list && (list = this.option.list.apply(this));
                        var filtered_list = [],
                            filter_keys = [];
                        this.searchbox && (filter_keys = this.searchbox.getVal().toLowerCase().replace(/^\s+|\s+$/g, "").split(/\s+/));
                        for (var list_length = list.length, idx = 0; idx < list_length; idx++) {
                            var item = list[idx],
                                searchkey = item.label;
                            void 0 != item.keys && (searchkey = item.keys.join(" ")), searchkey = searchkey.toLowerCase(),
                                function() {
                                    for (var _idx = 0; _idx < filter_keys.length; _idx++)
                                        if (!searchkey.includes(filter_keys[_idx])) return;
                                    filtered_list.push(item)
                                }()
                        }
                        return filtered_list
                    },
                    findItemByValue: function(value) {
                        return this.ul.find("li[data-cwui-lt-value=" + value + "]")
                    },
                    getValueByItem: function(item) {
                        if (item instanceof jQuery) return item.attr("data-cwui-lt-value")
                    },
                    build: function() {
                        if (void 0 == this.option.list || !this.isOpen()) return !1;
                        var html = "",
                            list = this.getList();
                        if ($.isArray(list)) {
                            for (var count = 0, list_length = list.length, idx = 0; idx < list_length; idx++) {
                                var item = list[idx];
                                if (!(++count > this.option.limit)) {
                                    var value = $.cwUI.escapeHTML(item.value),
                                        label = $.cwUI.escapeHTML(item.label);
                                    this.option.useHtmlLabel && (label = item.label), this.option.selectable ? void 0 == this.select_dat[item.value] ? html += '<li class="_cwSelectableRow" role="listitem" data-cwui-lt-idx="' + idx + '" data-cwui-lt-value="' + value + '">' + $.cwCheckBox.create(!1, "", idx, {
                                            "data-theme": "green"
                                        }) + label + "</li>" : html += '<li class="_cwSelectableRow listSelected" role="listitem" data-cwui-lt-idx="' + idx + '" data-cwui-lt-value="' + value + '">' + $.cwCheckBox.create(!0, "", idx, {
                                            "data-theme": "green"
                                        }) + label + "</li>" : html += '<li role="listitem" data-cwui-lt-idx="' + idx + '" data-cwui-lt-value="' + value + '">' + label + "</li>"
                                }
                            }
                            if (count > this.option.limit) {
                                var rest_num = count - this.option.limit;
                                html += '<div style="text-align:center;font-size:12px;color:#666">' + L.cwui_listip_list_overflow.replace(/%%num%%/, $.cwUI.formatNumber(rest_num)) + " " + L.cwui_listip_list_overflow_max.replace(/%%num%%/, $.cwUI.formatNumber(this.option.limit)) + "</div>"
                            }
                            return this.ul.html(html), this
                        }
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwListTip", option_default, widget_method, utility_method)
        }(jQuery, jQuery.cwUI.L)
    }, {}],
    376: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                    theme: "black",
                    delay: 0,
                    useHtml: !1,
                    delayQuickMode: !0,
                    closeOnClick: !0
                },
                current_show_tip = null,
                tip_body = $('<div style="display:none"><p class="_cwMTMessage cwNoWrap"></p></div>');
            $(function() {
                $(document.body).append(tip_body)
            });
            var latest_message = "",
                tip_show_timer = null,
                tip_show_flag = !1,
                current_instance = null,
                delay_cancel = !1,
                delay_cancel_timer = null,
                widget_method = {
                    _init: function() {
                        var self = this,
                            jqObj = this.$el;
                        this.is_disabled = !1, this.tooltip = tip_body.cwToolTip({
                            noAnimation: !0
                        }), jqObj.on("mouseenter.cwMessageTip", function() {
                            self.open()
                        }), jqObj.on("mouseleave.cwMessageTip", function() {
                            self.close()
                        })
                    },
                    _setOption: function(option) {
                        var self = this,
                            jqObj = this.$el;
                        void 0 != option.open && this.tooltip.setOption({
                            open: function() {
                                "function" == typeof self.option.open && self.option.open.apply(self)
                            }
                        }), void 0 != option.close && this.tooltip.setOption({
                            close: function() {
                                "function" == typeof self.option.close && self.option.close.apply(self)
                            }
                        }), void 0 != option.closeOnClick && (option.closeOnClick ? jqObj.on("click.cwMessageTip", function() {
                            self.close()
                        }) : jqObj.off("click.cwMessageTip"));
                        var toolTipOptions = ["offsetTop", "offsetLeft", "showPosition", "direction", "noTriangle", "theme"];
                        for (var idx in toolTipOptions) {
                            var key = toolTipOptions[idx];
                            if (void 0 != option[key]) {
                                var toption = {};
                                toption[key] = option[key], this.tooltip.setOption(toption)
                            }
                        }
                    },
                    open: function() {
                        var self = this;
                        if (self.is_disabled) return self;
                        current_show_tip = self, tip_show_flag = !0, current_instance = self, tip_show_timer && (clearTimeout(tip_show_timer), tip_show_timer = null);
                        var delay_time = current_instance.option.delay;
                        self.option.delayQuickMode && delay_cancel && (delay_time = 0);
                        var show_process = function() {
                            tip_show_flag ? (self.refresh(current_instance.$el), latest_message && (current_instance.tooltip.open(current_instance.$el), delay_cancel = !0)) : (self.tooltip.close(), current_instance._closeTip()), tip_show_timer = null
                        };
                        return delay_time ? tip_show_timer = setTimeout(show_process, delay_time) : show_process(), delay_cancel_timer && (clearTimeout(delay_cancel_timer), delay_cancel_timer = null), self
                    },
                    close: function() {
                        var self = this;
                        return self.is_disabled ? self : (current_show_tip = null, tip_show_flag = !1, current_instance = self, self._closeTip(), self)
                    },
                    isOpen: function() {
                        return this.tooltip.isOpen()
                    },
                    refresh: function(tipFrom) {
                        var message = this.getMessage(tipFrom);
                        return latest_message != message && (this.option.useHtml ? tip_body.find("._cwMTMessage").html(message) : tip_body.find("._cwMTMessage").text(message), latest_message = message), this
                    },
                    _closeTip: function() {
                        return delay_cancel_timer && clearTimeout(delay_cancel_timer), this.tooltip.close(), delay_cancel_timer = setTimeout(function() {
                            delay_cancel = !1
                        }, 300), this
                    },
                    getMessage: function(tipFrom) {
                        return "function" != typeof this.option.message ? this.option.message : this.option.message.apply(this, [tipFrom])
                    },
                    disable: function() {
                        return this.is_disabled = !0, this
                    },
                    enable: function() {
                        return this.is_disabled = !1, this
                    }
                },
                utility_method = {
                    isShown: function() {
                        return null != current_show_tip
                    },
                    close: function() {
                        return current_show_tip && current_show_tip.close(), this
                    }
                };
            $.cwUI.addWidget("cwMessageTip", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    377: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {},
                widget_method = {
                    _init: function() {
                        var jqObj = this.$el;
                        this.id = jqObj[0].id, jqObj.addClass("basicTableHeader"), this.header_row = jqObj.find("thead th"), this.column_num = this.header_row.length, this.column_padding = [], this.column_width = [];
                        for (var body_id = this.id + "_cwST_body", body = '<div style="overflow-y:auto"><table id="' + body_id + '" class="basicTable"><thead><tr class="basicTableHiddenRow">', i = 0; i < this.column_num; i++) {
                            body += "<th></th>";
                            var cell = $(this.header_row[i]);
                            this.column_padding[i] = cell.outerWidth() - cell.width()
                        }
                        body += "</tr></thead><tbody></tbody></table>", this.body_box = $(body), jqObj.after(this.body_box), this.body_table = $("#" + body_id), this.body_table.find("tbody").replaceWith(jqObj.find("tbody")), this.body_table_head = this.body_table.find("thead th"), this.body_table_body = this.body_table.find("tbody")
                    },
                    _setOption: function() {},
                    addRow: function(content_list, attr) {
                        void 0 == attr && (attr = {});
                        var tr = $("<tr></tr>");
                        void 0 != attr.tr && tr.attr(attr.tr);
                        for (var i = 0; i < this.column_num; i++) {
                            var td = $('<td><div class="autotrim" style="width:' + this.column_width[i] + 'px;">' + content_list[i] + "</div></td>");
                            void 0 != attr.td && void 0 != attr.td[i] && td.attr(attr.td[i]), tr.append(td)
                        }
                        return this.body_table_body.append(tr), this
                    },
                    addMergedRow: function(content, attr) {
                        void 0 == attr && (attr = {});
                        var tr = $("<tr></tr>"),
                            td = $('<td colspan="' + this.column_num + '">' + content + "</td>");
                        return void 0 != attr.tr && tr.attr(attr.tr), void 0 != attr.td && td.attr(attr.td), tr.append(td), this.body_table_body.append(tr), this
                    },
                    empty: function() {
                        return this.body_table_body.quickEmpty(), this
                    },
                    resize: function(content_height) {
                        var self = this;
                        "function" == typeof self.option.preResize && self.option.preResize.apply(self);
                        for (var total_width = this.$el.width(), column_width_list = this.option.columnWidth, col = void 0, padding = void 0, col_width_sum = 0, auto_column = [], i = 0; i < this.column_num; i++) {
                            var width = column_width_list[i];
                            "auto" === width ? auto_column.push(i) : (col_width_sum += width, i != this.column_num - 1 && (col = $(this.body_table_head[i]), padding = this.column_padding[i], this.column_width[i] = width - padding, col.width(this.column_width[i])))
                        }
                        var auto_length = auto_column.length;
                        if (auto_length > 0)
                            for (var auto_width = parseInt((total_width - col_width_sum) / auto_length, 10), _i = 0; _i < auto_length; _i++) col = $(this.body_table_head[auto_column[_i]]), padding = this.column_padding[_i], this.column_width[_i] = auto_width - padding, col.width(this.column_width[_i]);
                        for (var _i2 = 0; _i2 < this.column_num - 1; _i2++) $(this.header_row[_i2]).width($(this.body_table_head[_i2]).width());
                        var body_box_height = content_height - this.$el.height();
                        return this.body_box.height(body_box_height), "function" == typeof self.option.postResize && self.option.postResize.apply(self), this
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwScrollTable", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    378: [function(require, module, exports) {
        "use strict";
        ! function($, L) {
            var option_default = {
                placeHolder: L.button_search
            };
            $(function() {
                var keydown_key = null;
                $(document.body).on("keydown.cwSearchBox", "._cwSB", function(e) {
                    keydown_key = e.keyCode
                }).on("keyup.cwSearchBox", "._cwSB", function(e) {
                    var sbox = $(this);
                    sbox.val().length > 0 ? sbox.parent().find("._cwSBCancel").show() : sbox.parent().find("._cwSBCancel").hide();
                    var swig = sbox.cwSearchBox();
                    switch (e.keyCode) {
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        case 13:
                            if (13 == keydown_key) break;
                        default:
                            "function" == typeof swig.option.update && swig.option.update.apply(swig)
                    }
                }).on("click.cwSearchBox", "._cwSBCancel", function() {
                    var cancel = $(this);
                    cancel.hide();
                    var sbox = cancel.parent().find("._cwSB");
                    sbox.val("").blur();
                    var swig = sbox.cwSearchBox();
                    "function" == typeof swig.option.clear && swig.option.clear.apply(swig), "function" == typeof swig.option.update && swig.option.update.apply(swig)
                })
            });
            var widget_method = {
                    _init: function(option) {
                        var jqObj = this.$el;
                        this.is_disabled = !1, jqObj.addClass("_cwSB searchBox").attr("role", "search");
                        var placeholder = jqObj.attr("placeholder");
                        placeholder && (option.placeHolder = placeholder), jqObj.wrap('<div class="search"></div>').on("focus.cwSearchBox", function() {
                            $(this).parent().addClass("focus")
                        }).on("blur.cwSearchBox", function() {
                            $(this).parent().removeClass("focus")
                        }), jqObj.parent().prepend('<span class="icoFontSearch icSearch"></span><span class="_cwSBCancel icoFontCancel icSearchCancel icoSizeLarge" style="display:none"></span>')
                    },
                    _setOption: function(option) {
                        var jqObj = this.$el;
                        option.placeHolder && jqObj.attr("placeholder", option.placeHolder)
                    },
                    getVal: function() {
                        return this.$el.val()
                    },
                    setVal: function(value) {
                        return this.$el.val(value).keyup(), this
                    },
                    disable: function() {
                        return this.is_disabled = !0, this.$el.prop("disabled", !0), this.option.disable && this.option.disable.apply(this), this
                    },
                    enable: function() {
                        return this.is_disabled = !1, this.$el.prop("disabled", !1), this.option.enable && this.option.enable.apply(this), this
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwSearchBox", option_default, widget_method, utility_method)
        }(jQuery, jQuery.cwUI.L)
    }, {}],
    379: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                width: "auto",
                height: "auto",
                parentFloatBox: null
            };
            $(function() {
                $(document.body).on("click.cwSelectBox", "._cwSLBox", function() {
                    var sbox = $(this).closest("._cwSL").cwSelectBox();
                    $.cwFloatBox.skip(sbox.ul), sbox.toggle()
                })
            });
            var widget_method = {
                    _init: function() {
                        var self = this,
                            jqObj = this.$el;
                        this.input = jqObj.find("input._cwSLInput"), this.ul = jqObj.find("ul._cwSLList"), this.box = jqObj.find("._cwSLBox"), this.is_disabled = !1, this.ul.on("click.cwSelectBox", "li", function() {
                            var item = $(this),
                                value = item.attr("data-cwui-sb-value");
                            self.select(value, {
                                item: item
                            })
                        })
                    },
                    _setOption: function(option) {
                        var jqObj = this.$el;
                        void 0 != option.width && ("auto" == option.width ? jqObj.css({
                            width: !1
                        }) : this.box.width(option.width)), void 0 != option.maxWidth && (option.maxWidth ? this.box.css("max-width", option.maxWidth).addClass("autotrim") : this.box.css("max-width", "").removeClass("autotrim"))
                    },
                    open: function() {
                        var self = this;
                        if (this.is_open || this.is_disabled) return this;
                        this.is_open = !0, this.ul.find("li.selectboxSelected").removeClass("selectboxSelected");
                        var selected = this.findSelectedItem();
                        selected.addClass("selectboxSelected"), $.cwFloatBox.open(this.ul, function() {
                            self.close()
                        }, {
                            noAnimation: !0,
                            skip: self.option.parentFloatBox
                        }), this.ul.scrollTop(this.ul.scrollTop() + selected.position().top), this.ul_width = this.ul.width();
                        var box_inner_width = this.box.innerWidth();
                        return this.ul_width < box_inner_width && this.ul.width(box_inner_width), this
                    },
                    close: function() {
                        return this.is_open ? (this.is_open = !1, $.cwFloatBox.close(this.ul), this) : this
                    },
                    toggle: function() {
                        return this.isOpen() ? this.close() : this.open(), this
                    },
                    select: function(value, options) {
                        options = options || {};
                        var self = this,
                            silent = !1,
                            item = options.item;
                        return void 0 == item && (item = this.findItemByValue(value)), item || (item = this.ul.find("li:first")), options.silent && (silent = !0), this.$el.find("._cwSLSelectedLabel").html(item.html()), this.input.val(value), silent || (this.$el.trigger("cwSelectBox_update", [value]), "function" == typeof self.option.update && self.option.update.apply(self, [value])), this.close(), this
                    },
                    selectByIndex: function(index, options) {
                        var item = this.findItemByIndex(index);
                        this.select(item.attr("data-cwui-sb-value"), $.extend({
                            item: item
                        }, options))
                    },
                    findSelectedItem: function() {
                        return this.findItemByValue(this.getVal())
                    },
                    findItemByIndex: function(index) {
                        var item_list = this.ul.find("li");
                        return item_list[index] ? $(item_list[index]) : null
                    },
                    findItemByValue: function(value) {
                        var item = null;
                        return this.ul.find("li").each(function() {
                            var li = $(this);
                            if (li.attr("data-cwui-sb-value") == value) return item = li, !1
                        }), item
                    },
                    getVal: function() {
                        return this.input.val()
                    },
                    setList: function(option_list, value) {
                        return $.isArray(option_list) ? (this.ul.html($.cwSelectBox.createOptionList(option_list, value)), void 0 === value && this.selectByIndex(0, {
                            silent: !0
                        }), this._init(), this) : this
                    },
                    appendList: function(option_list) {
                        if (!$.isArray(option_list)) return this;
                        var currentList = [];
                        return this.$el.find("li").each(function() {
                            var $li = $(this),
                                value = $li.prop("data-cwui-sb-value"),
                                label = $li.text();
                            currentList.push({
                                label: label,
                                value: value
                            })
                        }), this.setList(currentList.concat(option_list)), this
                    },
                    isDisabled: function() {
                        return this.is_disabled
                    },
                    disable: function() {
                        return this.is_disabled = !0, this
                    },
                    enable: function() {
                        return this.is_disabled = !1, this
                    }
                },
                utility_method = {
                    _create: function(jqObj) {
                        var elm = jqObj[0];
                        if ("select-one" == elm.type) {
                            var option_list = [];
                            jqObj.find("option").each(function() {
                                var option = $(this);
                                option_list.push({
                                    value: option.val(),
                                    label: option.text()
                                })
                            });
                            var attr = jqObj.getAttrs(),
                                new_jqObj = $($.cwSelectBox.create(option_list, elm.name, jqObj.val(), attr));
                            return jqObj.before(new_jqObj), jqObj.remove(), new_jqObj
                        }
                        return !!jqObj.hasClass("_cwSL") && jqObj
                    },
                    create: function(option_list, name, value, attr) {
                        name || (name = ""), void 0 == attr && (attr = {}), void 0 == value && (value = "");
                        var html_div = "<div",
                            html_class = "_cwSL selectbox cwTextUnselectable";
                        for (var key in attr) switch (key) {
                            case "class":
                                html_class += " " + attr[key];
                                break;
                            default:
                                html_div += " " + key + '="' + attr[key] + '"'
                        }
                        for (var html_ul = '<ul role="list" class="_cwSLList selectboxContent cwNoWrap cwTextUnselectable" style="display:none">' + this.createOptionList(option_list) + "</ul>", selected_label = "", i = 0; i < option_list.length; i++) {
                            var item = option_list[i];
                            if (item.value == value) {
                                selected_label = item.label;
                                break
                            }
                        }
                        var html_default = '<div class="_cwSLBox selectboxDefault"><span class="_cwSLSelectedLabel cwNoWrap">' + $.cwUI.escapeHTML(selected_label) + '</span><span class="icoFontTriangleDown"></span></div>',
                            html_input = '<input class="_cwSLInput" type="hidden"';
                        return name && (html_input += ' name="' + name + '"'), html_input += ' value="' + $.cwUI.escapeHTML(value) + '"/>', html_div + ' class="' + html_class + '">' + html_default + html_ul + html_input + "</div>"
                    },
                    createOptionList: function(option_list) {
                        for (var html = "", i = 0; i < option_list.length; i++) {
                            var item = option_list[i];
                            if (item.tooltip) {
                                html += '<li role="listitem" class="_showDescription" aria-label="' + item.tooltip + '" '
                            } else html += '<li role="listitem" ';
                            html += 'data-cwui-sb-value="' + $.cwUI.escapeHTML(item.value) + '">' + $.cwUI.escapeHTML(item.label) + "</li>"
                        }
                        return html
                    }
                };
            $.cwUI.addWidget("cwSelectBox", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    380: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                    toggleMode: !1,
                    descriptionDelay: 500
                },
                widget_method = {
                    _init: function() {
                        this.selected_idx = null
                    },
                    _setOption: function(option) {
                        if (this.init_option) {
                            var self = this;
                            this.bbar = this.$el.cwButtonBar({
                                toggleMode: !0,
                                descriptionList: option.descriptiopnList,
                                descriptionDelay: option.descriptionDelay,
                                update: function(idx, is_select) {
                                    if (self.selected_idx == idx) {
                                        if (!is_select) {
                                            if (!self.option.toggleMode) return !1;
                                            self.selected_idx = null, self.option.update && self.option.update.apply(self, [idx, !1])
                                        }
                                    } else if (is_select) {
                                        var before_idx = self.selected_idx;
                                        self.selected_idx = idx, this.deSelect(before_idx), self.option.update && self.option.update.apply(self, [idx, !0])
                                    }
                                }
                            }), this.$el = this.bbar.$el, setTimeout(function() {
                                option.selected ? self.select(option.selected) : option.toggleMode || self.select(0)
                            })
                        }
                    },
                    select: function(idx) {
                        return idx = parseInt(idx, 10), this.selected_idx != idx && this.bbar.select(idx), this
                    },
                    deselectAll: function() {
                        return this.bbar.deSelectAll(), this
                    },
                    getSelectedIndex: function() {
                        return this.selected_idx
                    },
                    disableButton: function(idx) {
                        return this.bbar.disableButton(idx), this
                    },
                    enableButton: function(idx) {
                        return this.bbar.enableButton(idx), this
                    },
                    disableButtonAll: function() {
                        return this.bbar.disableButtonAll(), this
                    },
                    enableButtonAll: function() {
                        return this.bbar.enableButtonAll(), this
                    }
                },
                utility_method = {};
            $.cwUI.addWidget("cwTabbedBar", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    381: [function(require, module, exports) {
        "use strict";
        ! function($) {
            var option_default = {
                    offsetLeft: 0,
                    offsetTop: 0,
                    windowMargin: 7,
                    triangleMargin: 10,
                    useFloatBox: !0,
                    showPosition: "center",
                    direction: "vertical",
                    theme: "white",
                    noAnimation: !1,
                    noTriangle: !1,
                    parentFloatBox: null
                },
                opened_tip = {},
                widget_method = {
                    _init: function() {
                        this.$el.attr("role", "tooltip"), this.tipFrom = null
                    },
                    _setOption: function(option) {
                        var jqObj = this.$el;
                        if (void 0 != option.theme) {
                            this.init_option || jqObj.removeClass("toolTipWhite toolTipBlack");
                            var themename = $.cwUI.ucFirst(option.theme.toLowerCase());
                            jqObj.addClass("toolTip toolTip" + themename + " mainContetTooltip")
                        }
                    },
                    open: function() {
                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                        var tipFrom = args[0];
                        if (tipFrom && !$.cwUI.isWidget(tipFrom[0])) {
                            var self = this,
                                jqObj = self.$el;
                            if (self.is_open) {
                                if (tipFrom[0] == self.tipFrom[0]) return void self.close();
                                "function" == typeof self.option.open && self.option.open.apply(self, args)
                            } else self.is_open = !0, "function" == typeof self.option.open && self.option.open.apply(self, args), self.option.useFloatBox ? $.cwFloatBox.open(jqObj, function() {
                                self.close()
                            }, {
                                noAnimation: self.option.noAnimation,
                                skip: self.option.parentFloatBox
                            }) : ($.cwUI.setZIndex(jqObj), jqObj.show()), opened_tip[self.widget_id] = self;
                            return self.option.useFloatBox && ($.cwFloatBox.skip(jqObj), setTimeout(function() {
                                $.cwFloatBox.clearSkip()
                            })), self.move(tipFrom), "function" == typeof self.option.postOpen && self.option.postOpen.apply(self, args), self
                        }
                    },
                    move: function(tipFrom) {
                        var self = this,
                            jqObj = self.$el,
                            offset_top = 0;
                        self.option.offsetTop && (offset_top = self.option.offsetTop);
                        var offset_left = 0;
                        if (self.option.offsetLeft && (offset_left = self.option.offsetLeft), tipFrom instanceof jQuery) {
                            if (!tipFrom.isVisible()) return void self.close()
                        } else tipFrom = {
                            x: parseInt(tipFrom.x, 10),
                            y: parseInt(tipFrom.y, 10),
                            offset: function() {
                                return {
                                    top: tipFrom.y,
                                    left: tipFrom.x
                                }
                            },
                            outerHeight: function() {
                                return 1
                            },
                            outerWidth: function() {
                                return 1
                            }
                        };
                        self.tipFrom = tipFrom;
                        var doc = $(document.body),
                            document_width = doc.width(),
                            document_height = doc.height(),
                            pos = tipFrom.offset(),
                            tip_width = jqObj.outerWidth(),
                            tip_height = jqObj.outerHeight(),
                            tip_half_height = parseInt(tip_height / 2, 10),
                            direction = "";
                        direction = "vertical" == self.option.direction ? pos.top - tip_height < 0 ? "bottom" : "top" : "horizontal" == self.option.direction ? pos.left > parseInt(document_width / 2, 10) ? "left" : "right" : self.option.direction;
                        var themename = $.cwUI.ucFirst(self.option.theme.toLowerCase()),
                            triangle_class = "";
                        switch (direction) {
                            case "top":
                                triangle_class = "toolTipTriangle" + themename + "Bottom";
                                break;
                            case "bottom":
                                triangle_class = "toolTipTriangle" + themename + "Top";
                                break;
                            case "left":
                                triangle_class = "toolTipTriangle" + themename + "Right";
                                break;
                            case "right":
                                triangle_class = "toolTipTriangle" + themename + "Left";
                                break;
                            default:
                                return !1
                        }
                        jqObj.find("._cwTTTriangle").remove(), self.option.noTriangle || jqObj.prepend('<div class="_cwTTTriangle toolTipTriangle ' + triangle_class + '"></div>');
                        var triangle = null,
                            triangle_height = 0,
                            triangle_width = 0;
                        self.option.noTriangle || (triangle = jqObj.find("._cwTTTriangle"), triangle_height = triangle.outerHeight(), triangle_width = triangle.outerWidth());
                        var obj_width = tipFrom.outerWidth(),
                            obj_half_width = parseInt(obj_width / 2, 10),
                            obj_height = tipFrom.outerHeight(),
                            obj_half_height = parseInt(obj_height / 2, 10),
                            top = void 0,
                            left = void 0;
                        switch (direction) {
                            case "top":
                                top = pos.top - tip_height - triangle_height + offset_top;
                                break;
                            case "bottom":
                                top = pos.top + obj_height + triangle_height + offset_top;
                                break;
                            case "left":
                                left = pos.left - tip_width - triangle_width + offset_left;
                                break;
                            case "right":
                                left = pos.left + obj_width + triangle_width + offset_left
                        }
                        switch (direction) {
                            case "top":
                            case "bottom":
                                switch (self.option.showPosition) {
                                    case "left":
                                        left = self.option.noTriangle ? pos.left + offset_left : pos.left - parseInt(tip_width / 2, 10) + offset_left;
                                        break;
                                    case "right":
                                        left = self.option.noTriangle ? pos.left - tip_width + obj_width + offset_left : pos.left - parseInt(tip_width / 2, 10) + obj_width + offset_left;
                                        break;
                                    default:
                                        left = pos.left - parseInt(tip_width / 2, 10) + obj_half_width + offset_left
                                }
                                break;
                            case "left":
                            case "right":
                                switch (self.option.showPosition) {
                                    case "top":
                                        top = pos.top + offset_top;
                                        break;
                                    case "bottom":
                                        top = pos.top + obj_height - tip_height + offset_top;
                                        break;
                                    default:
                                        top = pos.top + obj_half_height - tip_half_height + offset_top
                                }
                        }
                        if (left + tip_width > document_width && (left = document_width - self.option.windowMargin - tip_width), left < self.option.windowMargin && (left = self.option.windowMargin), top + tip_height > document_height && (top = document_height - self.option.windowMargin - tip_height), top < self.option.windowMargin && (top = self.option.windowMargin), triangle) {
                            var triangle_half_height = parseInt(triangle_height / 2, 10),
                                triangle_half_width = parseInt(triangle_width / 2, 10);
                            switch (direction) {
                                case "top":
                                case "bottom":
                                    var tip_left = 0;
                                    switch (self.option.showPosition) {
                                        case "left":
                                            (tip_left = pos.left - left - triangle_half_width + offset_left) < self.option.triangleMargin && (tip_left = self.option.triangleMargin);
                                            break;
                                        case "right":
                                            tip_left = pos.left - left + obj_width - triangle_half_width + offset_left;
                                            var right_borderpos = tip_width - triangle_width - self.option.triangleMargin;
                                            tip_left > right_borderpos && (tip_left = right_borderpos);
                                            break;
                                        default:
                                            tip_left = pos.left - left + obj_half_width - triangle_half_width + offset_left
                                    }
                                    triangle.css("left", tip_left);
                                    break;
                                case "left":
                                case "right":
                                    var tip_top = 0;
                                    switch (self.option.showPosition) {
                                        case "top":
                                            tip_top = pos.top - top + self.option.triangleMargin + offset_top;
                                            break;
                                        case "bottom":
                                            tip_top = pos.top - top + tip_height - triangle_height - self.option.triangleMargin + offset_top;
                                            break;
                                        default:
                                            tip_top = pos.top - top + tip_half_height - triangle_half_height + offset_top
                                    }
                                    triangle.css("top", tip_top)
                            }
                        }
                        return jqObj.css({
                            top: top,
                            left: left
                        }), self
                    },
                    close: function() {
                        var self = this;
                        if (!this.is_open) return this;
                        if (this.is_open = !1, "function" == typeof self.option.close) {
                            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
                            self.option.close.apply(self, args)
                        }
                        return this.option.useFloatBox ? $.cwFloatBox.close(this.$el) : ($.cwUI.unsetZIndex(this.$el), this.option.noAnimation ? this.$el.hide() : this.$el.fadeOut("fast")), delete opened_tip[self.widget_id], this
                    }
                },
                utility_method = {
                    close: function() {
                        for (var widget_id in opened_tip) opened_tip[widget_id].close();
                        return this
                    }
                };
            $.cwUI.addWidget("cwToolTip", option_default, widget_method, utility_method)
        }(jQuery)
    }, {}],
    382: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../language"),
            resources = "./image/emoticon/",
            EMOTICONS = [{
                name: "smile",
                tag: ":)",
                src: resources + "emo_smile.gif",
                title: language_1.Language.getLang("%%%emoticon_smile%%%")
            }, {
                name: "sad",
                tag: ":(",
                src: resources + "emo_sad.gif",
                title: language_1.Language.getLang("%%%emoticon_sad%%%")
            }, {
                name: "moreSmile",
                tag: ":D",
                src: resources + "emo_more_smile.gif",
                title: language_1.Language.getLang("%%%emoticon_more_smile%%%")
            }, {
                name: "lucky",
                tag: "8-)",
                src: resources + "emo_lucky.gif",
                title: language_1.Language.getLang("%%%emoticon_lucky%%%")
            }, {
                name: "surprise",
                tag: ":o",
                src: resources + "emo_surprise.gif",
                title: language_1.Language.getLang("%%%emoticon_surprise%%%")
            }, {
                name: "wink",
                tag: ";)",
                src: resources + "emo_wink.gif",
                title: language_1.Language.getLang("%%%emoticon_wink%%%")
            }, {
                name: "tears",
                tag: ";(",
                src: resources + "emo_tears.gif",
                title: language_1.Language.getLang("%%%emoticon_tears%%%")
            }, {
                name: "sweat",
                tag: "(sweat)",
                src: resources + "emo_sweat.gif",
                title: language_1.Language.getLang("%%%emoticon_sweat%%%")
            }, {
                name: "mumu",
                tag: ":|",
                src: resources + "emo_mumu.gif",
                title: language_1.Language.getLang("%%%emoticon_mumu%%%")
            }, {
                name: "kiss",
                tag: ":*",
                src: resources + "emo_kiss.gif",
                title: language_1.Language.getLang("%%%emoticon_kiss%%%")
            }, {
                name: "tongueout",
                tag: ":p",
                src: resources + "emo_tongueout.gif",
                title: language_1.Language.getLang("%%%emoticon_tongueout%%%")
            }, {
                name: "blush",
                tag: "(blush)",
                src: resources + "emo_blush.gif",
                title: language_1.Language.getLang("%%%emoticon_blush%%%")
            }, {
                name: "wonder",
                tag: ":^)",
                src: resources + "emo_wonder.gif",
                title: language_1.Language.getLang("%%%emoticon_wonder%%%")
            }, {
                name: "snooze",
                tag: "|-)",
                src: resources + "emo_snooze.gif",
                title: language_1.Language.getLang("%%%emoticon_snooze%%%")
            }, {
                name: "love",
                tag: "(inlove)",
                src: resources + "emo_love.gif",
                title: language_1.Language.getLang("%%%emoticon_love%%%")
            }, {
                name: "grin",
                tag: "]:)",
                src: resources + "emo_grin.gif",
                title: language_1.Language.getLang("%%%emoticon_grin%%%")
            }, {
                name: "talk",
                tag: "(talk)",
                src: resources + "emo_talk.gif",
                title: language_1.Language.getLang("%%%emoticon_talk%%%")
            }, {
                name: "yawn",
                tag: "(yawn)",
                src: resources + "emo_yawn.gif",
                title: language_1.Language.getLang("%%%emoticon_yawn%%%")
            }, {
                name: "puke",
                tag: "(puke)",
                src: resources + "emo_puke.gif",
                title: language_1.Language.getLang("%%%emoticon_puke%%%")
            }, {
                name: "ikemen",
                tag: "(emo)",
                src: resources + "emo_ikemen.gif",
                title: language_1.Language.getLang("%%%emoticon_ikemen%%%")
            }, {
                name: "otaku",
                tag: "8-|",
                src: resources + "emo_otaku.gif",
                title: language_1.Language.getLang("%%%emoticon_otaku%%%")
            }, {
                name: "ninmari",
                tag: ":#)",
                src: resources + "emo_ninmari.gif",
                title: language_1.Language.getLang("%%%emoticon_ninmari%%%")
            }, {
                name: "nod",
                tag: "(nod)",
                src: resources + "emo_nod.gif",
                title: language_1.Language.getLang("%%%emoticon_nod%%%")
            }, {
                name: "shake",
                tag: "(shake)",
                src: resources + "emo_shake.gif",
                title: language_1.Language.getLang("%%%emoticon_shake%%%")
            }, {
                name: "wrySmile",
                tag: "(^^;)",
                src: resources + "emo_wry_smile.gif",
                title: language_1.Language.getLang("%%%emoticon_wry_smile%%%")
            }, {
                name: "whew",
                tag: "(whew)",
                src: resources + "emo_whew.gif",
                title: language_1.Language.getLang("%%%emoticon_whew%%%")
            }, {
                name: "clap",
                tag: "(clap)",
                src: resources + "emo_clap.gif",
                title: language_1.Language.getLang("%%%emoticon_clap%%%")
            }, {
                name: "bow",
                tag: "(bow)",
                src: resources + "emo_bow.gif",
                title: language_1.Language.getLang("%%%emoticon_bow%%%")
            }, {
                name: "roger",
                tag: "(roger)",
                src: resources + "emo_roger.gif",
                title: language_1.Language.getLang("%%%emoticon_roger%%%")
            }, {
                name: "muscle",
                tag: "(flex)",
                src: resources + "emo_muscle.gif",
                title: language_1.Language.getLang("%%%emoticon_muscle%%%")
            }, {
                name: "dance",
                tag: "(dance)",
                src: resources + "emo_dance.gif",
                title: language_1.Language.getLang("%%%emoticon_dance%%%")
            }, {
                name: "komanechi",
                tag: "(:/)",
                src: resources + "emo_komanechi.gif",
                title: language_1.Language.getLang("%%%emoticon_komanechi%%%")
            }, {
                name: "devil",
                tag: "(devil)",
                src: resources + "emo_devil.gif",
                title: language_1.Language.getLang("%%%emoticon_devil%%%")
            }, {
                name: "star",
                tag: "(*)",
                src: resources + "emo_star.gif",
                title: language_1.Language.getLang("%%%emoticon_star%%%")
            }, {
                name: "heart",
                tag: "(h)",
                src: resources + "emo_heart.gif",
                title: language_1.Language.getLang("%%%emoticon_heart%%%")
            }, {
                name: "flower",
                tag: "(F)",
                src: resources + "emo_flower.gif",
                title: language_1.Language.getLang("%%%emoticon_flower%%%")
            }, {
                name: "cracker",
                tag: "(cracker)",
                src: resources + "emo_cracker.gif",
                title: language_1.Language.getLang("%%%emoticon_cracker%%%")
            }, {
                name: "cake",
                tag: "(^)",
                src: resources + "emo_cake.gif",
                title: language_1.Language.getLang("%%%emoticon_cake%%%")
            }, {
                name: "coffee",
                tag: "(coffee)",
                src: resources + "emo_coffee.gif",
                title: language_1.Language.getLang("%%%emoticon_coffee%%%")
            }, {
                name: "beer",
                tag: "(beer)",
                src: resources + "emo_beer.gif",
                title: language_1.Language.getLang("%%%emoticon_beer%%%")
            }, {
                name: "handshake",
                tag: "(handshake)",
                src: resources + "emo_handshake.gif",
                title: language_1.Language.getLang("%%%emoticon_handshake%%%")
            }, {
                name: "yes",
                tag: "(y)",
                src: resources + "emo_yes.gif",
                title: language_1.Language.getLang("%%%emoticon_yes%%%")
            }],
            SECRET_EMOTICONS = [{
                name: "ec14",
                tag: "(ec14)",
                src: resources + "emo_ceo.gif",
                title: language_1.Language.getLang("%%%emoticon_ec14%%%")
            }, {
                name: "gogo",
                tag: "(gogo)",
                src: resources + "emo_gogo.gif",
                title: language_1.Language.getLang("%%%emoticon_gogo%%%")
            }],
            Emoticons = function() {
                function Emoticons(baseEmoticons, secretEmoticons) {
                    var _this = this;
                    this.baseEmoticons = baseEmoticons, this.secretEmoticons = secretEmoticons, this.tagHash = {}, this.baseEmoticons.concat(this.secretEmoticons).forEach(function(emo) {
                        _this.tagHash[emo.tag] = emo
                    })
                }
                return Emoticons.prototype.getEmoticonWithTag = function(tag) {
                    return this.tagHash[tag]
                }, Emoticons.prototype.getEmoticons = function() {
                    return this.baseEmoticons
                }, Emoticons.prototype.getAllEmoticons = function() {
                    return this.baseEmoticons.concat(this.secretEmoticons)
                }, Emoticons
            }();
        exports.emoticons = new Emoticons(EMOTICONS, SECRET_EMOTICONS), window.emoticons = exports.emoticons
    }, {
        "../language": 384
    }],
    383: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var mediaExtensionTypes = [{
                ext: /^mpe?g$/,
                type: "video/mpeg",
                preview: "video"
            }, {
                ext: /^mp4|m4v|mov$/,
                type: "video/mp4",
                preview: "video"
            }, {
                ext: /^webm$/,
                type: "video/webm",
                preview: "video"
            }, {
                ext: /^ogv$/,
                type: "video/ogg",
                preview: "video"
            }, {
                ext: /^avi$/,
                type: "video/avi",
                preview: "video"
            }, {
                ext: /^qt$/,
                type: "video/quicktime",
                preview: "video"
            }, {
                ext: /^wmv$/,
                type: "video/x-ms-wmv",
                preview: "video"
            }, {
                ext: /^mp3$/,
                type: "audio/mpeg",
                preview: "video"
            }, {
                ext: /^ogg$/,
                type: "audio/ogg",
                preview: "video"
            }, {
                ext: /^midi?$/,
                type: "audio/midi",
                preview: "video"
            }, {
                ext: /^wav$/,
                type: "audio/wav",
                preview: "video"
            }],
            previewExtensionTypes = [{
                ext: new RegExp("^(txt|html|htm|shtml|less|scss|styl|stylus|asp|bashrc|c|cgi|cpp|css|dif|diff|patch|h|hs|java|js|jsee|json|jsp|m|manifest|md|mobileprovision|plist|mxml|php|pl|pm|py|rb|scala|swift|tpl|vbs|csv|slk|sql|tsv|def|inf|ini|reg|log)$"),
                preview: "source"
            }, {
                ext: /^(jpe?g|gif|png)$/,
                preview: "image"
            }],
            pdfExtensionTypes = {
                ext: /^pdf$/,
                preview: "iframe"
            },
            isMsie = /\WTrident\W/i.test(navigator.userAgent),
            FilePreview = function() {
                function FilePreview() {
                    var video = document.createElement("video"),
                        canPlayTypes = mediaExtensionTypes.filter(function(type) {
                            return video.canPlayType(type.type)
                        });
                    isMsie || canPlayTypes.push(pdfExtensionTypes), this.extList = previewExtensionTypes.concat(canPlayTypes)
                }
                return FilePreview.prototype.canPlayTypes = function(_ext) {
                    var ext = _ext.toLowerCase();
                    return Boolean(this.extList.find(function(type) {
                        return type.ext.test(ext)
                    }))
                }, FilePreview.prototype.getPreviewType = function(_ext) {
                    var ext = _ext.toLowerCase();
                    return (this.extList.find(function(type) {
                            return type.ext.test(ext)
                        }) || {}).preview || ""
                }, FilePreview
            }();
        exports.filePreview = new FilePreview
    }, {}],
    384: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Resources = {};
        Resources.en = require("../../resources/languages/en.json"), Resources.es = require("../../resources/languages/es.json"), Resources.ja = require("../../resources/languages/ja.json"), Resources.th = require("../../resources/languages/th.json"), Resources.vi = require("../../resources/languages/vi.json"), Resources["zh-cn"] = require("../../resources/languages/zh-CN.json"), Resources["zh-tw"] = require("../../resources/languages/zh-TW.json");
        var resource = Resources[LANGUAGE];
        window.L = Object.assign(resource, {
            lang_ja: "日本語",
            lang_ja_change_confirm: "言語設定を変更しました。ブラウザを再読み込みすると反映されます。\nいますぐ再読み込みしますか？",
            lang_ja_button_ok: "OK",
            lang_ja_button_cancel: "キャンセル",
            lang_en: "English",
            lang_en_change_confirm: "Your language has been changed but your browser needs to be refreshed for the change to be reflected.\nWould you like to refresh now?",
            lang_en_button_ok: "OK",
            lang_en_button_cancel: "Cancel",
            lang_zh_cn: "简体中文 (beta)",
            "lang_zh-cn_change_confirm": "语言设定进行了变更。对浏览器进行刷新后将得到显示。\n现在马上刷新吗？",
            "lang_zh-cn_button_ok": "OK",
            "lang_zh-cn_button_cancel": "取消",
            lang_zh_tw: "繁體中文",
            "lang_zh-tw_change_confirm": "語言設定變更完成了。瀏覽器重新整理會顯示結果。\n現在立刻重新整理嗎?",
            "lang_zh-tw_button_ok": "OK",
            "lang_zh-tw_button_cancel": "取消",
            lang_vi: "Tiếng Việt",
            lang_vi_change_confirm: "Đã thay đổi cài đặt ngôn ngữ. Bạn phải tải lại trang web để kích hoạt những thay đổi này. Phần cài đặt sẽ được kích hoạt sau khi làm mới trang web.\n Bạn có muốn tải lại trang web ngay bây giờ làm mới lại trang chủ không?",
            lang_vi_button_ok: "OK",
            lang_vi_button_cancel: "Hủy",
            lang_th: "ภาษาไทย",
            lang_th_change_confirm: "คุณได้เปลี่ยนภาษาแล้ว แต่จำเป็นคุณจำเป็นต้องรีเฟรชเว็บบราวเซอร์ของคุณเพื่อให้การเปลี่ยนแปลงมีผล\nคุณต้องการรีเฟรชตอนนี้เลยหรือไม่?",
            lang_th_button_ok: "OK",
            lang_th_button_cancel: "ยกเลิก",
            lang_es: "Español",
            lang_es_change_confirm: "Tu idioma se ha cambiado, pero tu navegador debe ser recargado para que se refleje el cambio.\n¿Quieres recargarlo ahora?",
            lang_es_button_ok: "OK",
            lang_es_button_cancel: "Cancelar"
        });
        var Lang = function() {
            function Lang(langMap) {
                this.langMap = langMap
            }
            return Lang.prototype.getLang = function(key, param) {
                var plainKey = this.stripKey(key);
                if (plainKey in this.langMap) {
                    var text = this.langMap[plainKey];
                    return null === text ? "" : param ? this.replaceParam(text, param) : text
                }
            }, Lang.prototype.replaceParam = function(text, param) {
                return text.replace(/%%([-\w]+)%%/g, function(all, key) {
                    return param[key]
                })
            }, Lang.prototype.updateLang = function(updateKey, replaceText) {
                this.langMap[updateKey] = replaceText
            }, Lang.prototype.stripKey = function(key) {
                return key.replace(/^%%%([-\w]+)%%%$/, "$1")
            }, Lang
        }();
        exports.Language = new Lang(window.L)
    }, {
        "../../resources/languages/en.json": 326,
        "../../resources/languages/es.json": 327,
        "../../resources/languages/ja.json": 328,
        "../../resources/languages/th.json": 329,
        "../../resources/languages/vi.json": 330,
        "../../resources/languages/zh-CN.json": 331,
        "../../resources/languages/zh-TW.json": 332
    }],
    385: [function(require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(d, b) {
                        d.__proto__ = b
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p])
                    };
                return function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                }
            }();
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var eventemitter2_1 = require("eventemitter2"),
            LifeCycleEventBase = function(_super) {
                function LifeCycleEventBase() {
                    return null !== _super && _super.apply(this, arguments) || this
                }
                return __extends(LifeCycleEventBase, _super), LifeCycleEventBase
            }(eventemitter2_1.EventEmitter2);
        exports.LifeCycleEvent = new LifeCycleEventBase, window.lifeCycleEvent = exports.LifeCycleEvent
    }, {
        eventemitter2: 42
    }],
    386: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var monapt_1 = require("monapt"),
            ClipboardData = function() {
                function ClipboardData(clipboardData) {
                    this.clipboardData = clipboardData, this.dataItems = Array.from((clipboardData || {
                            items: []
                        }).items || [])
                }
                return ClipboardData.prototype.getTextData = function() {
                    if (!this.clipboardData) return monapt_1.None;
                    var text = this.clipboardData.getData("text/plain");
                    return monapt_1.Option(text || void 0)
                }, ClipboardData.prototype.getImageData = function() {
                    return monapt_1.Option(this.dataItems.find(function(t) {
                        return !!t.type.match(/^image\/(png|jpe?g|gif)$/)
                    }))
                }, ClipboardData
            }();
        exports.ClipboardData = ClipboardData
    }, {
        monapt: 124
    }],
    387: [function(require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(d, b) {
                        d.__proto__ = b
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p])
                    };
                return function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                }
            }();
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var renderAstToHtml_1 = require("../cw-token/renderAstToHtml"),
            monapt_1 = require("monapt"),
            clipboardData_1 = require("./clipboardData"),
            inputArea_1 = require("./inputArea"),
            ContentEditable = function(_super) {
                function ContentEditable(element, wrapper) {
                    var _this = _super.call(this, element, wrapper) || this;
                    _this.wrapperPaddingHeight = wrapper.innerHeight() - _this.getHeight();
                    var rAF;
                    return _this.element.on("keyup keydown keypress", function() {
                        rAF && cancelAnimationFrame(rAF), rAF = requestAnimationFrame(function() {
                            "" === _this.element.html() && _this.element.html('<br data-ignore="1" />'), _this.changePlaceholderClass()
                        })
                    }), _this.element.on("click", '[contenteditable="false"]', function(evn) {
                        _this.element.focus();
                        var range = _this.setCaretElement(evn.currentTarget);
                        _this.element.data("range", range)
                    }), _this
                }
                return __extends(ContentEditable, _super), ContentEditable.prototype.getValue = function() {
                    function _getValue(elem) {
                        if (elem.dataset && elem.dataset.cwtag) return elem.dataset.cwtag;
                        if (elem.childNodes && elem.childNodes.length) {
                            var tags = elem.dataset ? [elem.dataset.cwopen || "", elem.dataset.cwclose || ""] : ["", ""];
                            return tags[0] + Array.from(elem.childNodes).map(_getValue).join("") + tags[1]
                        }
                        return "BR" !== (elem.tagName || "").toUpperCase() || $(elem).attr("data-ignore") ? elem.nodeValue || "" : "\n"
                    }
                    return this.element.contents().get().map(_getValue).join("").replace(/^\n/, "")
                }, ContentEditable.prototype.setValue = function(text) {
                    var fragment = this.textToFragment(text);
                    this.element.empty(), text || this.element.html('<br data-ignore="1" />'), this.element.append(fragment), this.setLastBR(this.element), this.clearCaretPos(), this.changePlaceholderClass()
                }, ContentEditable.prototype.setDraftValue = function(text) {
                    this.setValue(text)
                }, ContentEditable.prototype.insertValue = function(text) {
                    var _this = this;
                    text && this.isEmpty() && this.element.text("");
                    var fragment = this.textToFragment(text),
                        lastChild = fragment.lastChild;
                    this.getCurrentRange().orElse(function() {
                        return monapt_1.Option(_this.element.data("range"))
                    }).match({
                        Some: function(range) {
                            _this.element.data("range", range), range.deleteContents(), range.insertNode(fragment)
                        },
                        None: function() {
                            _this.element.append(fragment)
                        }
                    }), this.setLastBR(this.element), requestAnimationFrame(function() {
                        var newRange = _this.setCaretElement(lastChild);
                        _this.changePlaceholderClass(), _this.element.data("range", newRange)
                    })
                }, ContentEditable.prototype.insertEmoticonText = function(emoticon) {
                    this.insertValue(emoticon)
                }, ContentEditable.prototype.insertToText = function(aid, name) {
                    this.insertValue("[To:" + aid + "] " + name + "\n")
                }, ContentEditable.prototype.insertLinkText = function(room_id, message_id) {
                    this.insertValue(CHATWORK_HOME + "/#!rid" + room_id + "-" + message_id + "\n")
                }, ContentEditable.prototype.insertQuoteText = function(aid, time, body) {
                    this.insertValue("[qt][qtmeta aid=" + aid + " time=" + time + "]" + body + "[/qt]\n")
                }, ContentEditable.prototype.insertReplayText = function(aid, rid, message_id, name) {
                    this.insertValue("[rp aid=" + aid + " to=" + rid + "-" + message_id + "] " + name + "\n")
                }, ContentEditable.prototype.replaceCodeBlock = function() {
                    var openTag;
                    this.element.contents().get().filter(function(e) {
                        return "#text" === e.nodeName && e.nodeValue.match(/```/)
                    }).forEach(function(elem) {
                        if (!openTag) return openTag = elem;
                        openTag.nodeValue = openTag.nodeValue.replace(/```/, "[code]"), elem.nodeValue = elem.nodeValue.replace(/```/, "[/code]"), openTag = null
                    })
                }, ContentEditable.prototype.updateCaretPos = function() {
                    var _this = this;
                    this.getCurrentRange().map(function(range) {
                        return _this.element.data("range", range)
                    })
                }, ContentEditable.prototype.clearCaretPos = function() {
                    this.element.removeData("range")
                }, ContentEditable.prototype.clearValue = function() {
                    this.element.html('<br data-ignore="1" />'), this.clearCaretPos(), this.changePlaceholderClass(), this.fixPadding()
                }, ContentEditable.prototype.isEmpty = function() {
                    return "" === this.getValue()
                }, ContentEditable.prototype.setHeight = function(height) {
                    this.height(this.element.parent(), height - this.wrapperPaddingHeight + 10)
                }, ContentEditable.prototype.focus = function() {
                    var _this = this;
                    monapt_1.Option(this.element.data("range")).map(function(range) {
                        return _this.setCaretRange(range)
                    }), this.fixPadding()
                }, ContentEditable.prototype.bindPasteImageEvent = function(handler) {
                    var _this = this;
                    this.element.on("paste", function(event) {
                        _this.forceChangeEvent();
                        var clipboardData = new clipboardData_1.ClipboardData(event.originalEvent.clipboardData);
                        clipboardData.getTextData().match({
                            Some: function(text) {
                                event.preventDefault(), _this.updateCaretPos(), _this.insertValue(text)
                            },
                            None: function() {
                                clipboardData.getImageData().map(function(image) {
                                    return handler(image)
                                })
                            }
                        })
                    })
                }, ContentEditable.prototype.getCurrentRange = function() {
                    var selection = document.getSelection();
                    if (!selection.rangeCount) return monapt_1.None;
                    var range = selection.getRangeAt(0),
                        res = this.element.get(0).compareDocumentPosition(range.commonAncestorContainer);
                    return 0 === res || res & Node.DOCUMENT_POSITION_CONTAINED_BY ? new monapt_1.Some(range) : monapt_1.None
                }, ContentEditable.prototype.changePlaceholderClass = function() {
                    this.isEmpty() ? this.element.addClass("placeholder") : this.element.removeClass("placeholder")
                }, ContentEditable.prototype.setCaretElement = function(elem) {
                    var range = document.createRange();
                    return elem.nodeValue ? range.setStart(elem, elem.nodeValue.length) : range.setStartAfter(elem), range.collapse(!0), this.setCaretRange(range), range
                }, ContentEditable.prototype.setCaretRange = function(range) {
                    var selection = window.getSelection();
                    selection.removeAllRanges(), selection.addRange(range)
                }, ContentEditable.prototype.textToFragment = function(text) {
                    var html = renderAstToHtml_1.renderAstToHtml(text, {
                            disable_download_file: !0,
                            display_eset_link: !0,
                            display_trim_link: !0,
                            disable_url_render: !0,
                            change_crlf_br: !0,
                            mid: void 0
                        }),
                        div = document.createElement("div");
                    div.innerHTML = html, "DIV" === (div.lastChild.tagName || "").toUpperCase() && div.appendChild($('<br data-ignore="1" />').get(0));
                    var range = document.createRange();
                    return range.selectNodeContents(div), range.cloneContents()
                }, ContentEditable.prototype.fixPadding = function() {
                    var _this = this;
                    setTimeout(function() {
                        _this.element.css("padding", "0"), requestAnimationFrame(function() {
                            _this.element.css("padding", "")
                        })
                    })
                }, ContentEditable.prototype.setLastBR = function(element) {
                    element.children().last().filter(function(idx, elem) {
                        return !$(elem).attr("data-ignore")
                    }).each(function() {
                        $('<br data-ignore="1" />').appendTo(element)
                    })
                }, ContentEditable
            }(inputArea_1.MessageAreaBase);
        exports.ContentEditable = ContentEditable
    }, {
        "../cw-token/renderAstToHtml": 344,
        "./clipboardData": 386,
        "./inputArea": 388,
        monapt: 124
    }],
    388: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var MessageAreaBase = function() {
            function MessageAreaBase(element, wrapper) {
                this.element = element, this.wrapper = wrapper
            }
            return MessageAreaBase.prototype.setPlaceholder = function(text) {
                this.element.attr("placeholder", text)
            }, MessageAreaBase.prototype.clearPlaceholder = function() {
                this.element.removeAttr("placeholder")
            }, MessageAreaBase.prototype.getScrollHeight = function() {
                return this.element[0].scrollHeight
            }, MessageAreaBase.prototype.scrollBottom = function() {
                this.element[0].scrollTop = this.element[0].scrollHeight
            }, MessageAreaBase.prototype.bindEvent = function(name, handler) {
                this.element.on(name, handler)
            }, MessageAreaBase.prototype.triggerEvent = function(name) {
                this.element.trigger(name)
            }, MessageAreaBase.prototype.setExternalClass = function() {
                this.element.addClass("chatInput__textarea--existExternalUser").data("external", !0)
            }, MessageAreaBase.prototype.clearExternalClass = function() {
                this.element.removeClass("chatInput__textarea--existExternalUser").data("external", !1)
            }, MessageAreaBase.prototype.getHeight = function() {
                return this.height(this.element)
            }, MessageAreaBase.prototype.getWrapperPaddingHeight = function() {
                return this.wrapperPaddingHeight
            }, MessageAreaBase.prototype.setWrapperHeight = function(height) {
                this.wrapper.css({
                    height: height,
                    "overflow-y": "scroll"
                })
            }, MessageAreaBase.prototype.clearWrapperHeight = function() {
                this.wrapper.css({
                    height: "",
                    "overflow-y": "hidden"
                })
            }, MessageAreaBase.prototype.getScrollTop = function() {
                return this.wrapper.scrollTop()
            }, MessageAreaBase.prototype.setScrollTop = function(value) {
                this.wrapper.scrollTop(value)
            }, MessageAreaBase.prototype.setEditingMode = function() {
                this.wrapper.addClass("chatSendTextareaEdit")
            }, MessageAreaBase.prototype.clearEditingMode = function() {
                !0 === this.element.data("external") && $C("#_externalInfo").show(), this.wrapper.removeClass("chatSendTextareaEdit")
            }, MessageAreaBase.prototype.blur = function() {
                this.element.blur()
            }, MessageAreaBase.prototype.forceChangeEvent = function() {
                var _this = this,
                    changeFrag = !1,
                    onChange = function() {
                        changeFrag = !0
                    };
                this.element.on("change", onChange), requestAnimationFrame(function() {
                    _this.element.off("change", onChange), changeFrag || _this.element.trigger("change")
                })
            }, MessageAreaBase.prototype.height = function(element, height) {
                var boxSizing = jQuery.support.boxSizing;
                jQuery.support.boxSizing = !0;
                var result = "number" == typeof height ? element.height(height) : element.height();
                return jQuery.support.boxSizing = boxSizing, result
            }, MessageAreaBase
        }();
        exports.MessageAreaBase = MessageAreaBase
    }, {}],
    389: [function(require, module, exports) {
        "use strict";

        function MessageArea() {
            var isWysiwyg = "#wysiwyg" === location.hash || "#!wysiwyg" === location.hash;
            boot_1.CW.localStorage.getItem("HideMessageBoxTags") && (isWysiwyg = !0), isWysiwyg && ($("<style>" + styleText + "</style>").appendTo("head"), $("#_chatText").replaceWith($("<pre></pre>").attr({
                id: "_chatText",
                tabindex: "1",
                placeholder: $("#_chatText").attr("placeholder"),
                contenteditable: "true",
                role: "textbox",
                "aria-multiline": "true"
            }).addClass("placeholder").css({
                display: "inline-block"
            }).on("keydown", function(event) {
                event.stopPropagation()
            })));
            var chatTextArea = $("#_chatTextArea"),
                chatText = $("#_chatText");
            return chatText.is("textarea") ? new textarea_1.Textarea(chatText, chatTextArea) : new contentEditable_1.ContentEditable(chatText, chatTextArea)
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var textarea_1 = require("./textarea"),
            contentEditable_1 = require("./contentEditable"),
            boot_1 = require("../../controller/boot"),
            styleText = "\n[contenteditable=true].placeholder:before{\n  content: attr(placeholder);\n  opacity: 0.7;\n  color: #b8b9b6;\n  position: absolute;\n  display: block; /* For Firefox */\n}\n\n[contenteditable=true] {\n  width: 100%;\n  min-height: 113px;\n  padding: 5px;\n  outline: transparent solid 0px;\n  box-sizing: border-box;\n}\n\n#_chatTextArea {\n  overflow: hidden;\n  min-height: 113px;\n  max-height: 788px;\n}\n\n.chatContent {\n  bottom: 0;\n}\n";
        exports.MessageArea = MessageArea
    }, {
        "../../controller/boot": 340,
        "./contentEditable": 387,
        "./textarea": 390
    }],
    390: [function(require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(d, b) {
                        d.__proto__ = b
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p])
                    };
                return function(d, b) {
                    function __() {
                        this.constructor = d
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __)
                }
            }();
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var clipboardData_1 = require("./clipboardData"),
            language_1 = require("../language"),
            inputArea_1 = require("./inputArea"),
            boot_1 = require("../../controller/boot"),
            Textarea = function(_super) {
                function Textarea(element, wrapper) {
                    var _this = _super.call(this, element, wrapper) || this;
                    return _this.wrapperPaddingHeight = wrapper.innerHeight() - _this.getHeight(), _this
                }
                return __extends(Textarea, _super), Textarea.prototype.getValue = function() {
                    return this.element.val()
                }, Textarea.prototype.setValue = function(text) {
                    this.element.val(text)
                }, Textarea.prototype.setDraftValue = function(text) {
                    text = boot_1.CS.convertToEdit(text), this.setValue(text)
                }, Textarea.prototype.insertValue = function(text) {
                    var elem = this.element[0],
                        value = this.getValue(),
                        selectionStart = elem.selectionStart,
                        lastCaret = selectionStart + text.length;
                    this.setValue(value.substr(0, selectionStart) + text + value.substr(selectionStart)), elem.setSelectionRange(lastCaret, lastCaret)
                }, Textarea.prototype.insertEmoticonText = function(emoticon) {
                    this.insertValue(emoticon)
                }, Textarea.prototype.insertToText = function(aid, name) {
                    this.insertValue("[To:" + aid + "] " + name + "\n")
                }, Textarea.prototype.insertLinkText = function(room_id, message_id) {
                    this.insertValue(CHATWORK_HOME + "/#!rid" + room_id + "-" + message_id + "\n")
                }, Textarea.prototype.insertQuoteText = function(aid, time, body) {
                    var lang = language_1.Language.getLang("%%%chatsend_quote%%%");
                    this.insertValue("[" + lang + " aid=" + aid + " time=" + time + "]" + body + "[/" + lang + "]\n")
                }, Textarea.prototype.insertReplayText = function(aid, rid, message_id, name) {
                    var lang = language_1.Language.getLang("%%%chatsend_reply%%%");
                    this.insertValue("[" + lang + " aid=" + aid + " to=" + rid + "-" + message_id + "] " + name + "\n")
                }, Textarea.prototype.replaceCodeBlock = function() {
                    var val = this.getValue(),
                        selectionStart = this.element.prop("selectionStart");
                    if (selectionStart === this.element.prop("selectionEnd")) {
                        var pre = val.substr(0, selectionStart),
                            after = pre.replace(/(^|\n)```(\r?\n[\s\S]+?\r?\n)```(\r?\n|$)/, "$1[code]$2[/code]$3");
                        if (after !== pre) {
                            var pos = val.substr(selectionStart);
                            this.setValue(after + pos), this.element.prop("selectionStart", after.length), this.element.prop("selectionEnd", after.length)
                        }
                    }
                }, Textarea.prototype.updateCaretPos = function() {}, Textarea.prototype.clearCaretPos = function() {}, Textarea.prototype.clearValue = function() {
                    this.element.val("")
                }, Textarea.prototype.isEmpty = function() {
                    return "" === this.getValue()
                }, Textarea.prototype.setHeight = function(height) {
                    this.height(this.element, height)
                }, Textarea.prototype.focus = function() {
                    this.element.focus()
                }, Textarea.prototype.bindPasteImageEvent = function(handler) {
                    var _this = this;
                    this.element.on("paste", function(event) {
                        _this.forceChangeEvent();
                        var clipboardData = new clipboardData_1.ClipboardData(event.originalEvent.clipboardData);
                        clipboardData.getTextData().match({
                            Some: function() {},
                            None: function() {
                                clipboardData.getImageData().map(function(image) {
                                    return handler(image)
                                })
                            }
                        })
                    })
                }, Textarea
            }(inputArea_1.MessageAreaBase);
        exports.Textarea = Textarea
    }, {
        "../../controller/boot": 340,
        "../language": 384,
        "./clipboardData": 386,
        "./inputArea": 388
    }],
    391: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var boot_1 = require("../../controller/boot"),
            common_1 = require("../common"),
            popup_timer = null;
        exports.NotificationAPI = {
            isSupported: !!window.Notification,
            createNotification: function(icon, title, body) {
                var dummy = {
                    show: function() {},
                    cancel: function() {}
                };
                if (!window.Notification) return dummy;
                if (boot_1.wfocus) return dummy;
                if (0 !== exports.NotificationAPI.checkPermission()) return dummy;
                common_1._is_chrome && (body = " " + body);
                var popup = new window.Notification(title, {
                    icon: icon,
                    body: body
                });
                popup.show = function() {}, popup.cancel = function() {
                    "function" == typeof popup.close && popup.close()
                };
                var duration = 1e3 * parseInt(boot_1.ST.data.notifier_duration, 10);
                return duration > 0 && (popup_timer && clearTimeout(popup_timer), popup_timer = setTimeout(function() {
                    popup && ("function" == typeof popup.cancel ? popup.cancel() : "function" == typeof popup.close && popup.close()), popup_timer = 0
                }, duration)), popup
            },
            checkPermission: function() {
                if (!window.Notification) return 2;
                switch (window.Notification.permission) {
                    case "granted":
                        return 0;
                    case "default":
                        return 1;
                    case "denied":
                        return 2
                }
            },
            requestPermission: function(callback) {
                if (!window.Notification) return setTimeout(function() {
                    callback(2)
                });
                window.Notification.requestPermission(function() {
                    callback(exports.NotificationAPI.checkPermission())
                })
            }
        }, window.NotificationAPI = exports.NotificationAPI
    }, {
        "../../controller/boot": 340,
        "../common": 342
    }],
    392: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.THEME = {
            blue: {
                chatlist_min_width: 190,
                chatlist_max_width: 300,
                timeline_min_width: 350,
                subcontent_min_width: 300,
                actionbar_height: 22,
                textarea_line_height: 22,
                chatSendArea_initial_height: 100,
                chatSendArea_expandto_height_default: 160,
                chattext_min_content_height: 50,
                timeline_min_height: 300,
                timeline_assign_member_show_max: 5,
                taskinput_init_height: 100,
                taskinput_min_height: 50,
                tasklist_min_height: 390,
                description_max_height: 300,
                description_min_height: 50,
                mymenu_min_width: 140,
                member_preview_show_max: 5,
                member_detail_show_max: 34,
                dialog_header_height: 40,
                dialog_footer_height: 40,
                preview_dialog_height_padding: 20,
                preview_dialog_width_padding: 20,
                taskwindow_pager_view_num: 50,
                filewindow_pager_view_num: 50,
                contactwindow_pager_view_num: 50,
                extermal_marktip_offset_left: 3,
                expose_zindex: 500,
                messagetip_delay: 500
            }
        }
    }, {}],
    393: [function(require, module, exports) {
        "use strict";
        /*!
         * Copyright (C) 2011 OZAWA Masayuki <http://coroq.com/>
         * Licenced under the MIT license
         */
        ! function($) {
            var wrapText = function(textNode, tag, begin, end) {
                    var fore = document.createTextNode(textNode.nodeValue.substring(0, begin));
                    textNode.parentNode.insertBefore(fore, textNode);
                    var wrapped = document.createElement(tag);
                    return wrapped.appendChild(document.createTextNode(textNode.nodeValue.substring(begin, end))), textNode.parentNode.insertBefore(wrapped, textNode), textNode.nodeValue = textNode.nodeValue.substring(end), wrapped
                },
                markText = function markText(keyword, className, elem, options) {
                    var ikeyword = keyword.toLowerCase();
                    elem = elem || document.body, options = options || {}, ("string" == typeof options.skipClassName || options.skipClassName instanceof String) && (options.skipClassName = [options.skipClassName]), options.skipClassName instanceof Array && (options.skipClassName = new RegExp("\\b(" + options.skipClassName.join("|") + ")\\b")), options.tag = options.tag || "span";
                    for (var i = elem.firstChild; i; i = i.nextSibling)
                        if (1 != i.nodeType) {
                            if (3 == i.nodeType)
                                for (;;) {
                                    var m = i.nodeValue.toLowerCase().indexOf(ikeyword);
                                    if (-1 == m) break;
                                    var wrapped = wrapText(i, options.tag, m, m + ikeyword.length);
                                    wrapped.className = className
                                }
                        } else {
                            if (options.skipClassName && options.skipClassName.test(i.className)) continue;
                            markText(ikeyword, className, i, options)
                        }
                };
            $.fn.markText = function(keyword, className, options) {
                return this.each(function() {
                    markText(keyword, className, this, options)
                })
            }
        }(jQuery)
    }, {}],
    394: [function(require, module, exports) {
        "use strict";
        var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
            return typeof obj
        } : function(obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
        };
        /*!
         * jQuery.ScrollTo
         * Copyright (c) 2007-2012 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
         * Dual licensed under MIT and GPL.
         * Date: 12/14/2012
         *
         * @projectDescription Easy element scrolling using jQuery.
         * http://flesler.blogspot.com/2007/10/jqueryscrollto.html
         * @author Ariel Flesler
         * @version 1.4.5 BETA
         *
         * @id jQuery.scrollTo
         * @id jQuery.fn.scrollTo
         * @param {String, Number, DOMElement, jQuery, Object} target Where to scroll the matched elements.
         *	  The different options for target are:
         *		- A number position (will be applied to all axes).
         *		- A string position ('44', '100px', '+=90', etc ) will be applied to all axes
         *		- A jQuery/DOM element ( logically, child of the element to scroll )
         *		- A string selector, that will be relative to the element to scroll ( 'li:eq(2)', etc )
         *		- A hash { top:x, left:y }, x and y can be any kind of number/string like above.
         *		- A percentage of the container's dimension/s, for example: 50% to go to the middle.
         *		- The string 'max' for go-to-end.
         * @param {Number, Function} duration The OVERALL length of the animation, this argument can be the settings object instead.
         * @param {Object,Function} settings Optional set of settings or the onAfter callback.
         *	 @option {String} axis Which axis must be scrolled, use 'x', 'y', 'xy' or 'yx'.
         *	 @option {Number, Function} duration The OVERALL length of the animation.
         *	 @option {String} easing The easing method for the animation.
         *	 @option {Boolean} margin If true, the margin of the target element will be deducted from the final position.
         *	 @option {Object, Number} offset Add/deduct from the end position. One number for both axes or { top:x, left:y }.
         *	 @option {Object, Number} over Add/deduct the height/width multiplied by 'over', can be { top:x, left:y } when using both axes.
         *	 @option {Boolean} queue If true, and both axis are given, the 2nd axis will only be animated after the first one ends.
         *	 @option {Function} onAfter Function to be called after the scrolling ends.
         *	 @option {Function} onAfterFirst If queuing is activated, this function will be called after the first scrolling ends.
         * @return {jQuery} Returns the same jQuery object, for chaining.
         *
         * @desc Scroll to a fixed position
         * @example $('div').scrollTo( 340 );
         *
         * @desc Scroll relatively to the actual position
         * @example $('div').scrollTo( '+=340px', { axis:'y' } );
         *
         * @desc Scroll using a selector (relative to the scrolled element)
         * @example $('div').scrollTo( 'p.paragraph:eq(2)', 500, { easing:'swing', queue:true, axis:'xy' } );
         *
         * @desc Scroll to a DOM element (same for jQuery object)
         * @example var second_child = document.getElementById('container').firstChild.nextSibling;
         *			$('#container').scrollTo( second_child, { duration:500, axis:'x', onAfter:function(){
         *				alert('scrolled!!');
         *			}});
         *
         * @desc Scroll on both axes, to different values
         * @example $('div').scrollTo( { top: 300, left:'+=200' }, { axis:'xy', offset:-20 } );
         */
        ! function($) {
            function both(val) {
                return "object" == (void 0 === val ? "undefined" : _typeof(val)) ? val : {
                    top: val,
                    left: val
                }
            }
            var $scrollTo = $.scrollTo = function(target, duration, settings) {
                $(window).scrollTo(target, duration, settings)
            };
            $scrollTo.defaults = {
                axis: "xy",
                duration: parseFloat($.fn.jquery) >= 1.3 ? 0 : 1,
                limit: !0
            }, $scrollTo.window = function(scope) {
                return $(window)._scrollable()
            }, $.fn._scrollable = function() {
                return this.map(function() {
                    var elem = this;
                    if (elem.nodeName && -1 == $.inArray(elem.nodeName.toLowerCase(), ["iframe", "#document", "html", "body"])) return elem;
                    var doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;
                    return /webkit/i.test(navigator.userAgent) || "BackCompat" == doc.compatMode ? doc.body : doc.documentElement
                })
            }, $.fn.scrollTo = function(target, duration, settings) {
                return "object" == (void 0 === duration ? "undefined" : _typeof(duration)) && (settings = duration, duration = 0), "function" == typeof settings && (settings = {
                    onAfter: settings
                }), "max" == target && (target = 9e9), settings = $.extend({}, $scrollTo.defaults, settings), duration = duration || settings.duration, settings.queue = settings.queue && settings.axis.length > 1, settings.queue && (duration /= 2), settings.offset = both(settings.offset), settings.over = both(settings.over), this._scrollable().each(function() {
                    function animate(callback) {
                        $elem.animate(attr, duration, settings.easing, callback && function() {
                                callback.call(this, target, settings)
                            })
                    }
                    if (null != target) {
                        var toff, elem = this,
                            $elem = $(elem),
                            targ = target,
                            attr = {},
                            win = $elem.is("html,body");
                        switch (void 0 === targ ? "undefined" : _typeof(targ)) {
                            case "number":
                            case "string":
                                if (/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)) {
                                    targ = both(targ);
                                    break
                                }
                                if (targ = $(targ, this), !targ.length) return;
                            case "object":
                                (targ.is || targ.style) && (toff = (targ = $(targ)).offset())
                        }
                        $.each(settings.axis.split(""), function(i, axis) {
                            var Pos = "x" == axis ? "Left" : "Top",
                                pos = Pos.toLowerCase(),
                                key = "scroll" + Pos,
                                old = elem[key],
                                max = $scrollTo.max(elem, axis);
                            if (toff) attr[key] = toff[pos] + (win ? 0 : old - $elem.offset()[pos]), settings.margin && (attr[key] -= parseInt(targ.css("margin" + Pos), 10) || 0, attr[key] -= parseInt(targ.css("border" + Pos + "Width"), 10) || 0), attr[key] += settings.offset[pos] || 0, settings.over[pos] && (attr[key] += targ["x" == axis ? "width" : "height"]() * settings.over[pos]);
                            else {
                                var val = targ[pos];
                                attr[key] = val.slice && "%" == val.slice(-1) ? parseFloat(val) / 100 * max : val
                            }
                            settings.limit && /^\d+$/.test(attr[key]) && (attr[key] = attr[key] <= 0 ? 0 : Math.min(attr[key], max)), !i && settings.queue && (old != attr[key] && animate(settings.onAfterFirst), delete attr[key])
                        }), animate(settings.onAfter)
                    }
                }).end()
            }, $scrollTo.max = function(elem, axis) {
                var Dim = "x" == axis ? "Width" : "Height",
                    scroll = "scroll" + Dim;
                if (!$(elem).is("html,body")) return elem[scroll] - $(elem)[Dim.toLowerCase()]();
                var size = "client" + Dim,
                    html = elem.ownerDocument.documentElement,
                    body = elem.ownerDocument.body;
                return Math.max(html[scroll], body[scroll]) - Math.min(html[size], body[size])
            }
        }(jQuery)
    }, {}],
    395: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language"),
            InviteMailAccountModel = function() {
                function InviteMailAccountModel() {
                    this._emails = [], this._message = "", this._validateMessage = "", this._is_valid = !0
                }
                return InviteMailAccountModel.prototype.emails = function() {
                    return this._emails
                }, InviteMailAccountModel.prototype.setEmails = function(emails) {
                    var self = this;
                    if (!$.isArray(emails)) throw new TypeError("Expected Array");
                    return self._emails = emails, self
                }, InviteMailAccountModel.prototype.message = function() {
                    return this._message
                }, InviteMailAccountModel.prototype.setMessage = function(message) {
                    var self = this;
                    if ("string" != typeof message) throw new TypeError("Expected String");
                    return self._message = message, self
                }, InviteMailAccountModel.prototype.parseBulkEmails = function(text) {
                    var self = this;
                    if ("string" != typeof text) throw new TypeError("Expected String");
                    self._emails = self._parseEmails(text)
                }, InviteMailAccountModel.prototype.clear = function() {
                    var self = this;
                    self._emails = [], self._message = "", self._validateMessage = ""
                }, InviteMailAccountModel.prototype.validate = function() {
                    var self = this;
                    return self._is_valid = self._emails.some(function(n) {
                        return "" !== n
                    }), !1 === self._is_valid ? self._validateMessage = language_1.Language.getLang("%%%contact_invite_mail_type_email_addresses%%%") : self._validateMessage = "", self._is_valid
                }, InviteMailAccountModel.prototype.is_valid = function() {
                    return this._is_valid
                }, InviteMailAccountModel.prototype.validateMessage = function() {
                    return this._validateMessage
                }, InviteMailAccountModel.prototype.hasMessage = function() {
                    var self = this;
                    return Boolean(self._message)
                }, InviteMailAccountModel.prototype._parseEmails = function(text) {
                    return text.split("\n").filter(function(line) {
                        return "" !== line.trim()
                    })
                }, InviteMailAccountModel
            }();
        exports.InviteMailAccountModel = InviteMailAccountModel
    }, {
        "../lib/language": 384
    }],
    396: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var RoomSubView_1 = require("../view/RoomSubView"),
            common_1 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            RoomSub = function() {
                function RoomSub() {
                    this.show_promotion = !1;
                    var self = this;
                    "free" === SERVICE_PLAN && (common_1.time() - Number(REG_TIME) <= 2592e3 || (self.show_promotion = !0))
                }
                return RoomSub.prototype.prepare = function() {
                    var self = this;
                    self.view = new RoomSubView_1.RoomSubView(self), self.view.prepare()
                }, RoomSub.prototype.addTask = function(room_id, text, task_limit, assign_list, success_callback, error_callback) {
                    task_limit ? task_limit.toString().match(/^[0-9]+$/) || (task_limit = common_1.strtotime_format(task_limit, boot_1.ST.data.dateformat)) : task_limit = 0, boot_1.CW.post("gateway.php", {
                        cmd: "add_task",
                        task: text,
                        task_limit: task_limit,
                        assign: assign_list,
                        room_id: room_id
                    }, function(json) {
                        success_callback(json), boot_1.CW.watch()
                    }, function(error) {
                        error_callback(error)
                    })
                }, RoomSub.prototype.showPromotion = function() {
                    var self = this;
                    self.show_promotion && self.view.showPromotion()
                }, RoomSub.prototype.hidePromotion = function() {
                    this.view.hidePromotion()
                }, RoomSub
            }();
        exports.RoomSub = RoomSub
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../view/RoomSubView": 462
    }],
    397: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.addTaskTemplate = '\n<div id="_subRoomTaskAddArea" class="addTaskContainer">\n  <div id="_taskAddArea" class="addTaskContainer__formContainer">\n    <div class="_taskDescriptionAddArea">\n      <div id="_taskDescriptionAdd" class="addTaskContainer__textareaContainer">\n        <textarea id="_taskNameInput" tabindex="3" placeholder="' + language_1.Language.getLang("%%%task_input_placeholder%%%") + '" class="addTaskContainer__textarea"></textarea>\n      </div>\n    </div>\n    <div id="_taskAddMeta" class="addTaskContainer__metaContainer">\n      <div id="_taskAssignAddArea" class="addTaskContainer__assigneeContainer">\n        <label class="addTaskContainer__assigneeLabel">' + language_1.Language.getLang("%%%task_inchargetip%%%") + '</label>\n        <div id="_taskAssignAdd" class="addTaskContainer__assigneeSelectContainer">\n          <div id="_taskQuickWrapper" class="addTaskContainer__assigneeListContainer">\n            <div id="_assignBox" class="addTaskContainer__assignList"></div>\n            <span id="_inchargeEmpty" class="addTaskContainer__assigneeEmptyText">' + language_1.Language.getLang("%%%task_incharge_placeholder%%%") + '</span>\n          </div>\n          <div id="_assignButton" class="button addTaskContainer__assigneeAddButton"><span\n           class="icoFontAddBtn icoSizeLarge"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%task_incharge%%%") + '</span></div>\n        </div>\n      </div>\n      <div id="_taskLimitAddArea" class="addTaskContainer__limitContainer">\n        <label class="addTaskContainer__limitLabel">' + language_1.Language.getLang("%%%task_limittip%%%") + '</label>\n        <div id="_taskLimitAdd" class="addTaskContainer__limitSelectContainer">\n          <div id="_limit" class="addTaskContainer__limit"></div>\n          <span id="_limitEmpty" class="addTaskContainer__limitEmptyText">' + language_1.Language.getLang("%%%task_limit_placeholder%%%") + '</span>\n          <div id="_limitButton" role="button" aria-label="' + language_1.Language.getLang("%%%task_limit%%%") + '"\n               class="_datePicker button addTaskContainer__limitSelectButton"><span class="icoFontCalender icoSizeLarge"></span>\n          </div>\n        </div>\n      </div>\n      <div class="addTaskContainer__submitContainer">\n        <div id="_taskAddButton" role="button" tabindex="4" class="button btnPrimary cwTextUnselectable addTaskContainer__submitButton">\n          ' + language_1.Language.getLang("%%%task_add_button%%%") + '\n        </div>\n        <div id="_taskCancelButton" role="button" tabindex="5" class="button cwTextUnselectable addTaskContainer__cancelButton">\n          ' + language_1.Language.getLang("%%%button_cancel%%%") + "\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
    }, {
        "../lib/language": 384
    }],
    398: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.chatContentTemplate = '\n<div id="_timeLine" role="main" class="chatTimeLine">\n  <div id="_messageIdEnd"></div>\n</div>\n\n<div id="_chatSendArea" class="chatSendArea">\n  <div id="_mainContentExpandLeft" role="button" aria-label="' + language_1.Language.getLang("%%%chatsend_expand_area%%%") + '" data-delay="0" class="_showDescription chatSendArea__areaScaleButtonLeft">\n    <span class="chatSendArea__areaScaleIconLeft icoFontTriangleLeft"></span>\n  </div>\n  <div id="_mainContentExpandRight" role="button" aria-label="' + language_1.Language.getLang("%%%chatsend_expand_area%%%") + '" data-delay="0" class="_showDescription chatSendArea__areaScaleButtonRight">\n    <span class="chatSendArea__areaScaleIconRight icoFontTriangleRight"></span>\n  </div>\n\n  <div class="chatSendArea__chatInput">\n    <div class="chatInput">\n      <ul id="_fileSendStatusArea" style="display:none" class="chatInput__fileSendStatus"></ul>\n      <div id="_chatSendToolbar" class="chatInput__tools" style="display: none">\n        <ul id="_chatSendTool" class="chatInput__toolList">\n          <li id="_emoticon" role="button" class="_showDescription chatInput__emoticon" aria-label="' + language_1.Language.getLang("%%%chatsend_emoticonalt%%%") + '"><span class="icoFontEmoticon chatInput__emoticonIcon"></span></li>\n          <li id="_to" role="button" class="_showDescription chatInput__to" aria-label="' + language_1.Language.getLang("%%%chatsend_toalt%%%") + '"><span class="icoFontTo chatInput__toIcon"></span></li>\n          <li id="_file" role="button" class="_showDescription chatInput__file" aria-label="' + language_1.Language.getLang("%%%chatsend_filealt%%%") + '"><span class="icoFontSendFile chatInput__fileIcon "></span></li>\n          <li id="_groupCall" role="button" class="_showDescription chatInput__groupLive" style="display:none" aria-label="' + language_1.Language.getLang("%%%live_join%%%") + '"><span class="icoFontVideoChat chatInput__groupLiveIcon"></span></li>\n          <li id="_directCall" role="button" class="_joinLive _showDescription chatInput__directLive" style="display:none" aria-label="' + language_1.Language.getLang("%%%live_join%%%") + '"><span class="icoFontVideoChat chatInput__directLiveIcon"></span></li>\n        </ul>\n\n        <span id="_fileStatus" class="chatInput__fileSendLoadingContainer" style="display:none"><img src="./imagenew/all/common/loader/img_loader_white.gif" alt="Loading" class="chatInput__fileSendLoadingIcon" /></span>\n\n        <div class="chatInput__submitContainer">\n      <span id="_sendEnterActionArea" role="button" aria-labe="" class="chatInput__settingEnterAction">\n       <input id="_sendEnterAction" type="checkbox" class="chatInput__settingEnterActionCheckbox" />\n       <span class="icoFontParagraph icoSizeSmall chatInput__settingEnterActionIcon"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_return%%%") + '</span>\n      </span>\n          <div id="_sendButton" role="button" tabindex="2" class="chatInput__submit">' + language_1.Language.getLang("%%%button_send%%%") + '</div>\n        </div>\n      </div>\n\n      <div id="_editInfo" class="chatInput__editContainer" style="display:none">\n        <p class="chatInput__editText">' + language_1.Language.getLang("%%%chat_editing%%%") + '</p>\n        <div id="_editCancel" role="button"  class="chatInput__editCancel icoFontCancel"></div>\n      </div>\n\n      <div id="_externalInfo" class="_externalMark chatInput__externalUser" style="display:none">\n        <span class="ico35Other">' + language_1.Language.getLang("%%%chatroom_not_only_internal%%%") + '</span>\n      </div>\n\n      <div id="_chatTextArea" class="chatInput__textareaContainer">\n        <textarea id="_chatText" tabindex="1" class="chatInput__textarea"></textarea>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n\x3c!-- .resizeControl --\x3e\n<div id="_subContentHandle" class="resizeCntrol sideContentResizeCtrlArea"></div>\n<div id="_subContentAreaHandle" class="resizeCntrol subContentResizeCtrlArea"></div>\n\x3c!-- /.resizeControl --\x3e\n\x3c!-- end chat_content --\x3e\n'
    }, {
        "../lib/language": 384
    }],
    399: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.chatRoomHeaderTemplate = '\n  <div id="_roomHeader" class="chatRoomHeader">\n    <h1 id="_roomTitle" class="chatRoomHeader__roomTitleContainer"></h1>\n    <div id="_subRoomMemberArea" class="chatRoomHeaderMemberList">\n      <ul id="_subRoomMemberList" class="chatRoomHeaderMemberList__list" role="list">\n      </ul>\n      <div id="_openMemberDetail"\n           class="_showDescription chatRoomHeaderMemberList__detail"\n           role="button"\n           aria-label="' + language_1.Language.getLang("%%%chatroom_member_long%%%") + '"\n      >\n        <span class="chatRoomHeaderMemberList__detailIcon icoFontUserList _memberDetailIcon" aria-hidden="true"></span>\n        <p class="chatRoomHeaderMemberList__detailLabel _memberDetailLabel"></p>\n      </div>\n      <div id="_subEditMember"\n           class="_showDescription chatRoomHeaderMemberList__edit"\n           role="button"\n           aria-label="' + language_1.Language.getLang("%%%chatroom_btn_add_member_tooltip%%%") + '"\n      >\n        <span class="chatRoomHeaderMemberList__editIcon icoFontAddBtn" aria-hidden="true"></span>\n      </div>\n    </div>\n\n    <div class="chatRoomHeader__actionButtonContainer">\n      <div id="_chatFileAll"\n           class="_button _showDescription chatRoomHeader__fileListButton btnIconDouble"\n           style="display:none"\n           aria-label="' + language_1.Language.getLang("%%%file%%%") + '"\n      >\n        <span class="icoFontFile icoSizeLarge chatRoomHeader__fileListButtonIcon"></span><span class="icoFontTriangleDown chatRoomHeader__fileListButtonTriangleIcon"></span>\n      </div>\n      <div id="_chatRoomSetting"\n           class="_button _showDescription chatRoomHeader__settingButton btnIconDouble"\n           style="display:none"\n           aria-label="' + language_1.Language.getLang("%%%chatroom_setting%%%") + '"\n      >\n        <span class="icoFontSetting icoSizeLarge chatRoomHeader__settingButtonIcon"></span><span class="icoFontTriangleDown chatRoomHeader__settingButtonTriangleIcon"></span>\n      </div>\n    </div>\n   </div>\n'
    }, {
        "../lib/language": 384
    }],
    400: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.cheatSheetTemplate = '\n\x3c!-- CHEAT SHEET --\x3e\n<div id="_cheatSheetContent" class="cheatsheetWrapper" style="display: none;">\n  <div class="cheatsheetContent">\n    <div class="cheatsheetHeader">\n      <i id="_closeCheatSheet" class="cheatsheetBtnClose" role="button" aria-label="' + language_1.Language.getLang("%%%button_close%%%") + '"><span class="icoFont icoFontCancel icoSizeLarge"></span></i>\n    </div>\n    <div class="cheatsheetBody">\n      <div class="cheatsheetShortcut">\n        <h1 class="cheatsheetIndex">' + language_1.Language.getLang("%%%chatwork_service_name%%%") + " " + language_1.Language.getLang("%%%cheatsheet_short_cut_title%%%") + '</h1>\n        <table class="cheatsheetShortcutTable">\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span class="icoFont icoFontTriangleTop"></span>\n              </div>\n              ' + language_1.Language.getLang("%%%cheatsheet_or%%%") + '\n              <div class="cheatsheetKeySample">\n                <span>k</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">' + language_1.Language.getLang("%%%cheatsheet_text_key_k%%%") + '</p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span class="icoFont icoFontTriangleDown"></span>\n              </div>\n              ' + language_1.Language.getLang("%%%cheatsheet_or%%%") + '\n              <div class="cheatsheetKeySample">\n                <span>j</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_j%%%") + "<br>\n                " + language_1.Language.getLang("%%%cheatsheet_supplement_text_key_j%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>Enter</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_enter%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span class="_cheatsheetKeyCommand"></span>\n              </div>\n              +\n              <div class="cheatsheetKeySample">\n                <span class="icoFont icoFontTriangleLeft"></span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_command_arrow_left%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span class="_cheatsheetKeyCommand"></span>\n              </div>\n              +\n              <div class="cheatsheetKeySample">\n                <span class="icoFont icoFontTriangleRight"></span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_command_arrow_right%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>g</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_g%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>Esc</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_esc%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>m</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_m%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>Tab</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_tab%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>t</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_t%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>c</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_c%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>f</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_f%%%") + '\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td class="cheatsheetKeyMap">\n              <div class="cheatsheetKeySample">\n                <span>?</span>\n              </div>\n            </td>\n            <td class="cheatsheetShortcutBody">\n              <p class="cheatsheetShortcutBodyText">\n                ' + language_1.Language.getLang("%%%cheatsheet_text_key_question%%%") + '\n              </p>\n            </td>\n          </tr>\n        </table>\n      </div>\x3c!-- /KEYBOARD SHORTCUT LIST --\x3e\n      <div class="cheatsheetNotation">\n        <h1 class="cheatsheetIndex">' + language_1.Language.getLang("%%%cheatsheet_notation_title%%%") + '</h1>\n        <dl class="cheatsheetNotationItem">\n          <dt class="cheatsheetNotationName">\n            ' + language_1.Language.getLang("%%%cheatsheet_name_notation_hr%%%") + ' :\n            <span class="cheatsheetNotationSnipet">[hr]</span>\n          </dt>\n          <dd class="cheatsheetNotationBody">\n            <div class="cheatsheetNotationSample"><hr size="1"></div>\n          </dd>\n        </dl>\n        <dl class="cheatsheetNotationItem">\n          <dt class="cheatsheetNotationName">\n            ' + language_1.Language.getLang("%%%cheatsheet_name_notation_info%%%") + ' :\n            <span class="cheatsheetNotationSnipet">[info]</span>' + language_1.Language.getLang("%%%cheatsheet_text_notation_content%%%") + '<span class="cheatsheetNotationSnipet">[/info]</span>\n          </dt>\n          <dd class="cheatsheetNotationBody">\n            <div class="cheatsheetNotationSample">\n              <div class="cheatsheetChatInfo">\n                <p>' + language_1.Language.getLang("%%%cheatsheet_text_notation_content%%%") + '</p>\n              </div>\n            </div>\n          </dd>\n        </dl>\n        <dl class="cheatsheetNotationItem">\n          <dt class="cheatsheetNotationName">\n            ' + language_1.Language.getLang("%%%cheatsheet_name_notation_mix_tag%%%") + ' :\n            <span class="cheatsheetNotationSnipet">[info][title]</span>' + language_1.Language.getLang("%%%cheatsheet_text_notation_index%%%") + '<span class="cheatsheetNotationSnipet">[/title]</span>' + language_1.Language.getLang("%%%cheatsheet_text_notation_content%%%") + '<span class="cheatsheetNotationSnipet">[/info]</span>\n          </dt>\n          <dd class="cheatsheetNotationBody">\n            <div class="cheatsheetNotationSample">\n              <div class="cheatsheetChatInfo">\n                <div class="title">\n                  <span class="icoFontInfo marginRight"></span>' + language_1.Language.getLang("%%%cheatsheet_text_notation_index%%%") + "\n                </div>\n                <p>" + language_1.Language.getLang("%%%cheatsheet_text_notation_content%%%") + '</p>\n              </div>\n            </div>\n          </dd>\n        </dl>\n        <dl class="cheatsheetNotationItem">\n          <dt class="cheatsheetNotationName">\n            ' + language_1.Language.getLang("%%%cheatsheet_name_notation_code%%%") + ' :\n            <span class="cheatsheetNotationSnipet">[code]</span>:)<span class="cheatsheetNotationSnipet">[/code]</span>\n          </dt>\n          <dd class="cheatsheetNotationBody">\n            <div class="cheatsheetNotationSample">\n              <p class="cheatsheetChatCode">:)</p>\n            </div>\n            <div class="cheatsheetNotationNote">\n              <p>' + language_1.Language.getLang("%%%cheatsheet_text_notation_on_message_area%%%") + '</p>\n              <div class="cheatsheetNotationNoteSnipet">\n                <p>\n                  &#96;&#96;&#96;<br>\n                  &#9679;&#9679;<br>\n                  &#96;&#96;&#96; ' + language_1.Language.getLang("%%%cheatsheet_text_notation_new_line%%%") + "\n                </p>\n              </div>\n              <p>" + language_1.Language.getLang("%%%cheatsheet_text_notation_replace_code_tag%%%") + "</p>\n            </div>\n          </dd>\n        </dl>\n      </div>\x3c!-- /NOTATION LIST --\x3e\n    </div>\n  </div>\n</div>\n\x3c!-- /CHEAT SHEET --\x3e\n"
    }, {
        "../lib/language": 384
    }],
    401: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.AddContactConfirmTemplate = '\n<div id="_addContactConfirmDialog" class="addContactConfirmDialog">\n  <div class="addContactConfirmDialog__body">\n    <p id="_addContactConfirmLead" class="addContactConfirmDialog__paragraph"></p>\n    <p class="addContactConfirmDialog__paragraph">\n      ' + language_1.Language.getLang("%%%add_contact_confirm_send_mail_at_same%%%") + "\n    </p>\n  </div>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    402: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.AddRoomTemplate = '\n<div id="_addRoom" class="dialog dialogRoomSetting">\n  <div id="_addRoomContent">\n    <form id="_roomInfoForm" class="horizontalForms">\n      <div id="_addRoomChatInfoArea" class="_formContent addGroupChatContentArea"></div>\n      <div id="_addRoomMemberArea" class="_formContent addGroupChatContentArea"></div>\n    </form>\n  </div>\n</div>\n'
    }, {}],
    403: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.AnnounceTemplate = '\n<div id="_announceDialog"\n     class="dialog dialogPadding"\n     style="display: none;"\n>\n  <div id="_announceBody" class="content"></div>\n</div>\n'
    }, {}],
    404: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.ApiSettingTemplate = ALLOW_API ? '\n<div id="_settingApi" class="_cwSettingContents">\n  <div class="controlGroup">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%_chatwork_apitoken_token_label%%%") + '</label>\n    <div class="controlContent settingApiContent">\n      <p>' + language_1.Language.getLang("%%%_chatwork_apitoken_password_caption%%%") + '</p>\n      <input id="_inputApiTokenPass"\n             type="password"\n             class="inputMedium"\n             placeholder="' + language_1.Language.getLang("%%%_chatwork_apitoken_password_placeholder%%%") + '"\n      >\n      <div class="_button btnPrimary _displayApiToken">' + language_1.Language.getLang("%%%_chatwork_apitoken_display_btn%%%") + '</div>\n      <p>\n        <a href="./service/passremind.php">' + language_1.Language.getLang("%%%login_password_forget_link%%%") + '</a>\n      </p>\n      <div class="apiAttention">\n        <ul>\n          <li>' + language_1.Language.getLang("%%%_chatwork_apitoken_caution_1%%%") + "</li>\n          <li>" + language_1.Language.getLang("%%%_chatwork_apitoken_caution_2%%%") + "</li>\n          <li>" + language_1.Language.getLang("%%%_chatwork_apitoken_caution_3%%%") + "</li>\n          " + ("chatwork" === OEM ? "<li>" + language_1.Language.getLang("%%%_chatwork_apitoken_caution_4%%%") + "</li>" : "") + '\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div id="_settingApiAfter" class="_cwSettingContents" style="display: none;">\n  <div class="controlGroup">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%_chatwork_apitoken_token_label%%%") + '</label>\n    <div class="controlContent settingApiContent">\n      <input id="_inputApiToken"\n             type="text"\n             class="inputLong"\n             placeholder="' + language_1.Language.getLang("%%%_chatwork_apitoken_token_placeholder%%%") + '"\n             readonly\n      >\n      <div id="_copyTokenBtn" class="_button">' + language_1.Language.getLang("%%%_chatwork_apitoken_copy_btn%%%") + '</div>\n      <div id="_regenerateTokenBtn" class="_button">' + language_1.Language.getLang("%%%_chatwork_apitoken_regenerate_btn%%%") + '</div>\n      <div class="apiAttention">\n        <ul>\n          <li>' + language_1.Language.getLang("%%%_chatwork_apitoken_caution_1%%%") + "</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n" : ""
    }, {
        "../../lib/language": 384
    }],
    405: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.ChatCategoryAddContentTemplate = '\n<div id="_chatCategoryAddContent" class="dialog floatWindowContent">\n  <div class="_cwFWContent">\n    <div class="controlGroup">\n      <label class="controlLabel">\n        ' + language_1.Language.getLang("%%%chat_category_nametip%%%") + '\n      </label>\n      <div class="controlContent">\n        <input type="text" class="inputLong" id="_categoryName">\n      </div>\n    </div>\n\n    <div class="controlGroup">\n      <label class="controlLabel">\n        ' + language_1.Language.getLang("%%%chat_category_chatselecttip%%%") + '\n      </label>\n\n      <div class="controlContent">\n        <input type="text"\n               id="_newcatRoomfilter"\n               class="inputLong marginBottom"\n               placeholder="' + language_1.Language.getLang("%%%chat_search%%%") + '"\n        >\n        <div class="chatCategoryListBox marginTop">\n          <p>\n            <input type="checkbox" id="_newcatCheckAll">\n            <span>\n              ' + language_1.Language.getLang("%%%chat_category_selected_chat_num%%%") + '\n              <span id="_newcatSelectNum">0</span>\n            </span>\n          </p>\n          <div class="chatCategoryAddChatList">\n            <table id="_newcatRoomlist" class="chatCategoryList"></table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    406: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language"),
            api_setting_template_1 = require("./api-setting-template"),
            display_setting_template_1 = require("./display-setting-template"),
            language_setting_template_1 = require("./language-setting-template"),
            notification_setting_template_1 = require("./notification-setting-template"),
            login_setting_template_1 = require("./login-setting-template"),
            ApiSettingTab = ALLOW_API ? '<li class="chatSettingDialog__headerTabItem">' + language_1.Language.getLang("%%%chatsetting_tab_apitoken%%%") + "</li>" : "";
        exports.ChatSettingTemplate = '\n<div id="_chatSetting" class="chatSettingDialog">\n  <div class="_cwFWHeader chatSettingDialog__headerTabContainer">\n    <ul class="chatSettingDialog__headerTab">\n      <li class="chatSettingDialog__headerTabItem chatSettingDialog__headerTabItem--selected">' + language_1.Language.getLang("%%%chatsetting_tab_notification%%%") + '</li>\n      <li class="chatSettingDialog__headerTabItem">' + language_1.Language.getLang("%%%chatsetting_tab_display%%%") + '</li>\n      <li class="chatSettingDialog__headerTabItem">' + language_1.Language.getLang("%%%chatsetting_tab_language%%%") + '</li>\n      <li class="chatSettingDialog__headerTabItem">' + language_1.Language.getLang("%%%chatsetting_tab_login%%%") + "</li>\n      " + ApiSettingTab + '\n    </ul>\n  </div>\n\n  <div class="_cwFWContent">\n    <form id="_settingForm">\n\n      ' + notification_setting_template_1.NotificationSettingTemplate + "\n\n      " + display_setting_template_1.DisplaySettingTemplate + "\n\n      " + language_setting_template_1.LanguageSettingTemplate + "\n\n      " + login_setting_template_1.LoginSettingTemplate + "\n\n      " + api_setting_template_1.ApiSettingTemplate + "\n\n    </form>\n  </div>\n</div>\n"
    }, {
        "../../lib/language": 384,
        "./api-setting-template": 404,
        "./display-setting-template": 407,
        "./language-setting-template": 416,
        "./login-setting-template": 418,
        "./notification-setting-template": 422
    }],
    407: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.DisplaySettingTemplate = '\n<div id="_settingView" class="_cwSettingContents displaySettingDialog">\n  <div class="displaySettingDialog__displaySettingContainer">\n    <label class="displaySettingDialog__displaySettingLabel">' + language_1.Language.getLang("%%%chatsetting_tab_display%%%") + ':</label>\n    <div class="displaySettingFormContainer">\n      <ul class="displaySettingFormContainer__formList">\n        <li class="_cwSelectableRow displaySettingFormContainer__showUnreadCountOnBrowserIcon">\n          <input type="checkbox" id="_faviconstat" value="1">\n          <label for="_faviconstat" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_faviconstat%%%") + '</label>\n        </li>\n        <li class="_cwSelectableRow displaySettingFormContainer__showDeleteLog">\n          <input type="checkbox" id="_showDelmessage" value="1">\n          <label for="_showDelmessage" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_show_delmessage%%%") + '</label>\n        </li>\n        <li class="_cwSelectableRow displaySettingFormContainer__showExternalIcon">\n          <input type="checkbox" id="_showExternal" value="1">\n          <label for="_showExternal" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_show_external%%%") + '</label>\n        </li>\n        <li class="_cwSelectableRow displaySettingFormContainer__notUseNickNameExternalMember">\n          <input type="checkbox" id="_privateNickname" value="1">\n          <label for="_privateNickname" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_private_nickname%%%") + '</label>\n        </li>\n        <li class="_cwSelectableRow displaySettingFormContainer__elipsisLongURL">\n          <input type="checkbox" id="_shortenUrl" value="1">\n          <label for="_shortenUrl" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_shorten_url%%%") + '</label>\n        </li>\n        <li class="_cwSelectableRow displaySettingFormContainer__hideMessageBoxTags">\n          <input type="checkbox" id="_hideMessageBoxTags" value="1">\n          <label for="_hideMessageBoxTags" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_hide_message_box_tags%%%") + "</label>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    408: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.EditFileTemplate = '\n<div id="_editFileDialog" class="dialog fileEditDialog">\n  <div class="controlGroup" style="margin-top:10px">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%file_name%%%") + '</label>\n    <div class="controlContent">\n      <input type="text" id="_editFileFile" class="inputLong">\n    </div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    409: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.FeedbackCompleteTemplate = '\n<div id="_feedbackCompleteDialog"\n     class="dialog dialogPadding"\n     style="display: none;"\n>\n  <pre>' + language_1.Language.getLang("%%%feedback_thankyou%%%") + "</pre>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    410: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.FeedbackTemplate = '\n<div id="_feedbackDialog"\n     class="dialog dialogPadding"\n     style="display: none"\n>\n  <div class="feedbackArea">\n    <p>' + language_1.Language.getLang("%%%feedback_desc_noreply%%%") + '</p>\n    <textarea id="_feedbackMessage"></textarea>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    411: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.FilePreviewTemplate = '\n<div id="_filePreviewDialog" class="dialog"></div>\n'
    }, {}],
    412: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.GameTemplate = '\n<div id="_gameDialog"\n     class="dialog"\n     style="display: none"\n></div>\n'
    }, {}],
    413: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.GroupCallTemplate = '\n<div id="_groupCallDialog" class="dialog groupCallDialog">\n  <div class="chatroomTitle">\n    <img class="avatarGroup avatarMedium" src="' + CF_PATH + '/avatar/ico_avatar_loading.png">\n    <div class="chatroomTitleMeta autotrim"></div>\n  </div>\n\n  <input id="_videoChatContactFilter"\n         class="_searchBox roomInfoMemberSearchBox inputLong"\n         type="text"\n         placeholder="' + language_1.Language.getLang("%%%chatroom_search_member%%%") + '">\n  <div class="tooltipCheckHandle">\n    <a id="_groupCallCheckAll"\n       class="linkStatus"\n    >' + language_1.Language.getLang("%%%checkall%%%") + '</a>\n    <span> / </span>\n    <a id="_groupCallUnCheckAll"\n       class="linkStatus"\n    >' + language_1.Language.getLang("%%%uncheckall%%%") + '</a>\n  </div>\n  <div id="_groupCallMemberList" class="groupCallMemberListBox">\n    <p>' + language_1.Language.getLang("%%%live_member_add_introduction%%%") + '</p>\n    <div id="_groupCallMember" class="groupCallMemberList"></div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    414: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.InvitationLinkSettingTemplate = '\n<div id="_invitationLinkSettingDialog" class="invitationLinkSettingDialog">\n  <form id="_invitationLinkSettingForm">\n    <fieldset>\n      <div class="invitationLinkSettingMaster">\n        <div class="invitationLinkSettingMaster__labelContainer">\n          <div class="invitationLinkSettingMaster__masterCheckbox">\n            <input type="checkbox"\n                   id="_invitationLinkSettingStatus"\n                   data-name="active_invitation_link"\n                   class="_checkBox"\n                   data-label="' + language_1.Language.getLang("%%%invitation_link%%%") + '"\n                   value=""\n            >\n          </div>\n          <a href="http://link.chat-work.com/h_invitation_link_' + ("ja" === LANGUAGE ? "ja" : "en") + '"\n             class="_showDescription invitationLinkSettingMaster__helpIconContainer"\n             aria-label="' + language_1.Language.getLang("%%%invitation_link_help_tool_tip%%%") + '"\n             data-delay="0"\n             target="_blank"\n          >\n            <span class="icoFontHelp invitationLinkSettingMaster__helpIcon"></span>\n          </a>\n          <span class="invitationLinkSettingMaster__labelSeparator">:</span>\n        </div>\n\n        <div id="_invitationLinkDisabled" class="invitationLinkSettingMaster__value--disabled">\n          <p class="invitationLinkSettingMaster__disabledText">\n            ' + language_1.Language.getLang("%%%invitation_link_setting_status_disable%%%") + '\n          </p>\n        </div>\n\n        <div id="_invitationLinkActive" \n             class="invitationLinkSettingMaster__value"\n        >\n          <div class="js_invitationLinkDisplay invitationLinkSettingMaster__copyUrlContainer">\n            <input type="text"\n                   class="js_invitationLinkDisplayInput invitationLinkSettingMaster__copyURLInput"\n                   readonly\n            >\n            <div class="js_invitationLinkBtnCopy _button invitationLinkSettingMaster__copyUrlButton">\n              ' + language_1.Language.getLang("%%%invitation_link_code_copy%%%") + '\n            </div>\n            <div class="js_invitationLinkOpenEditor invitationLinkSettingMaster__customUrlButton">\n              <span class="icoFontSetting icoSizeLarge invitationLinkSettingMaster__customUrlButtonIcon"></span>\n            </div>\n          </div>\n\n          <div class="js_invitationLinkEditor invitationLinkSettingMaster__customUrlContainer">\n            <div class="invitationLinkSettingMaster__customUrlFormContainer">\n              <p class="invitationLinkSettingMaster__customURLFormDomain js_invitationLinkURL"></p>\n              <input type="text"\n                     class="js_invitationLinkEditorInput invitationLinkSettingMaster__customURLFormInput"\n                     name="__cwform_link_code"\n              >\n              <div class="js_invitationLinkBtnEdited _button invitationLinkSettingMaster__customURLFormSubmit">\n                ' + language_1.Language.getLang("%%%button_complete%%%") + '\n              </div>\n              <p class="js_invitationLinkCloseEditor invitationLinkSettingMaster__customURLFormCancel">\n                <span class="icoFontCancel icoSizeLarge invitationLinkSettingMaster__customURLFormCancelIcon"></span>\n              </p>\n            </div>\n\n            <div class="invitationLinkSettingMaster__alertContainer">\n              <img class="js_invitationLinkCodeLoading invitationLinkSettingMaster__alertMessageLoadingIcon"\n                   src="./imagenew/all/common/loader/img_loader_gray.gif"\n              >\n              <p class="invitationLinkSettingMaster__alertText js_invitationLinkCodeUsed"></p>\n            </div>\n\n            <div class="invitationLinkSettingMaster__customURLAdditionalSettingContainer">\n              <input type="checkbox"\n                     id="_invitationLinkJoinNeedAccept"\n                     name="__cwform_join_need_accept"\n                     data-label="' + language_1.Language.getLang("%%%invitation_link_setting_join_accept%%%") + '"\n                     value="send"\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id="_invitationLinkAdvancedSetting" class="invitationLinkSettingAdvance">\n        <div class="invitationLinkSettingAdvance__header">\n          <p class="invitationLinkSettingAdvance__headerTitleText">\n            ' + language_1.Language.getLang("%%%invitation_link_advanced_setting_index%%%") + '\n          </p>\n          <p class="invitationLinkSettingAdvance__headerLeadText">\n            ' + language_1.Language.getLang("%%%invitation_link_advanced_setting_lead%%%") + '\n          </p>\n        </div>\n        <div class="invitationLinkSettingAdvance__body">\n          <div class="invitationLinkSettingAdvance__settingRoomHeaderContainer">\n            <div class="invitationLinkSettingAdvance__settingRoomHeaderLabelContainer">\n              <p class="invitationLinkSettingAdvance__settingRoomHeaderLabelText">\n                ' + language_1.Language.getLang("%%%invitation_link_set_header_image_index%%%") + ' :\n              </p>\n            </div>\n            <div class="invitationLinkSettingAdvance__settingRoomHeaderFormContainer">\n              <input type="file"\n                     id="_invitationLinkSettingHeader"\n                     class="_cwValidateFileImage invitationLinkSettingAdvance__settingRoomHeaderForm"\n                     name="__cwform_header"\n              >\n              <div id="_invitationLinkSettingHeaderDeleteBox" \n                   class="invitationLinkSettingAdvance__currentRoomHeaderContainer"\n              >\n                <span id="_invitationLinkSettingHeaderCurrent" \n                      class="invitationLinkSettingAdvance__currentRoomHeaderImage"\n                ></span>\n                <input type="checkbox"\n                       id="_invitationLinkSettingHeaderDelete"\n                       name="__cwform_header_delete"\n                       data-label="' + language_1.Language.getLang("%%%invitation_link_setting_delete_current_header%%%") + '"\n                       value=""\n                >\n              </div>\n              <p class="invitationLinkSettingAdvance__uploadFileDescription">\n                ' + language_1.Language.getLang("%%%invitation_link_setting_header_limit%%%") + '\n              </p>\n            </div>\n          </div>\n\n          <div class="invitationLinkSettingAdvance__descriptionContainer">\n            <div class="invitationLinkSettingAdvance__descriptionLabelContainer">\n              <p class="invitationLinkSettingAdvance__descriptionLabelText">\n                ' + language_1.Language.getLang("%%%invitation_link_set_groupchat_description_index%%%") + ' :\n              </p>\n            </div>\n            <div class="invitationLinkSettingAdvance__descriptionTextareaContainer">\n              <textarea id="_publicDescription" \n                        class="invitationLinkSettingAdvance__descriptionTextarea" \n                        name="__cwform_public_description"\n              ></textarea>\n            </div>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <input type="hidden" name="__cwform_public" id="_public"/>\n  </form>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    415: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.JoinPublicChatTemplate = '\n<div id="_joinpublicchatDialog" class="joinPublic dialog dialogPadding">\n  <p class="joinpublicMessage">' + language_1.Language.getLang("%%%join_groupchat_invite_message%%%") + '</p>\n  <div class="scrollableTable">\n    <div class="_overflow">\n      <table class="joinpublicInfo">\n        <tbody>\n          <tr>\n            <td id="_joinpublicchatIcon" class="joinpublicchatIcon"></td>\n            <td id="_joinpublicchatName" class="joinpublicchatName"></td>\n          </tr>\n        </tbody>\n      </table>\n      <pre id="_joinpublicchatDescription" class="joinpublicDescription"></pre>\n    </div>\n  </div>\n  <p id="_joinpublicchatNeedAccept" class="alert alertWarning">' + language_1.Language.getLang("%%%joinpublicchat_need_accept%%%") + "</p>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    416: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.LanguageSettingTemplate = '\n<div id="_settingLanguage" class="_cwSettingContents languageSettingDialog">\n  <div class="languageSettingDialog__setLanguageContainer">\n    <label class="languageSettingDialog__setLanguageLabel">' + language_1.Language.getLang("%%%lang_typetip%%%") + '</label>\n    <div class="languageSettingDialog__setLanguageSelectBox">\n      <select id="_langType">\n        <option value="en">' + language_1.Language.getLang("%%%lang_en%%%") + '</option>\n        <option value="ja">' + language_1.Language.getLang("%%%lang_ja%%%") + '</option>\n        <option value="zh-tw">' + language_1.Language.getLang("%%%lang_zh_tw%%%") + '</option>\n        <option value="vi">' + language_1.Language.getLang("%%%lang_vi%%%") + '</option>\n        <option value="zh-cn">' + language_1.Language.getLang("%%%lang_zh_cn%%%") + '</option>\n        <option value="th">' + language_1.Language.getLang("%%%lang_th%%%") + '</option>\n        <option value="es">' + language_1.Language.getLang("%%%lang_es%%%") + '</option>\n      </select>\n    </div>\n  </div>\n  <div class="languageSettingDialog__setDateFormatContainer">\n    <label class="languageSettingDialog__setDateFormatLabel">' + language_1.Language.getLang("%%%lang_dateformattip%%%") + '</label>\n    <div class="languageSettingDialog__setDateFormatSelectBox">\n      <select id="_langDateformat"></select>\n    </div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    417: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.LimitErrorTemplate = '\n<div id="_limitErrorDialog" class="dialogPadding" style="display:none;">\n  <p id="_upgradeMessage"></p>\n  <div class="ui_storage_limit_button dialogSelect">\n    <p id="_openServiceAdminUpgrade"\n       role="button"\n       class="button btnPrimary btnLarge"\n    >' + language_1.Language.getLang("%%%serviceadmin_do_upgrade%%%") + "</p>\n  </div>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    418: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.LoginSettingTemplate = ENABLE_SAML ? "" : '\n<div id="_settingOtherservice" class="_cwSettingContents loginSettingDialog">\n  <div class="loginSettingDialog__profileLinkContainer">\n    <label class="loginSettingDialog__profileLinkLabel">' + language_1.Language.getLang("%%%profile_form_title%%%") + ':</label>\n    <div class="loginSettingDialog__profileLinkAnchorContainer">\n      <a href="./service/packages/chatwork/profile.php?lang=' + LANGUAGE + '"\n         target="_blank"\n         class="loginSettingDialog__profileLinkAnchor"\n      >' + language_1.Language.getLang("%%%profile_setting_ecstudio_account%%%") + "</a>\n    </div>\n  </div>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    419: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.MemberDetailTemplate = '\n<div id="_memberDetailDialog" class="dialog dialogPadding">\n  <div id="_memberDetailContent"></div>\n</div>\n'
    }, {}],
    420: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.NewBrowserTemplate = '\n<div id="_newbrowserDialog" class="dialog" style="display:none;">\n  <div class="controlGroup clearfix">\n    <p class="alert alertDanger">' + language_1.Language.getLang("%%%newbrowser_subject%%%") + "</p>\n    <p>" + language_1.Language.getLang("%%%newbrowser_desc%%%") + "</p>\n  </div>\n  <h2>" + language_1.Language.getLang("%%%newbrowser_recommended%%%") + '</h2>\n  <div class="controlGroup">\n    <p>' + language_1.Language.getLang("%%%newbrowser_listtip%%%") + '</p>\n    <ul class="newbrowserList selected">\n      <li>\n        <span class="tm_newbrowser_icon tm_newbrowser_chrome"></span>\n        <a href="' + language_1.Language.getLang("%%%newbrowser_download_chrome%%%") + '"\n           target="_blank"\n        >Google Chrome</a>\n      </li>\n      <li>\n        <span class="tm_newbrowser_icon tm_newbrowser_firefox"></span>\n        <a href="' + language_1.Language.getLang("%%%newbrowser_download_firefox%%%") + '"\n           target="_blank"\n        >Firefox</a>\n      </li>\n      <li>\n        <span class="tm_newbrowser_icon tm_newbrowser_ie"></span>\n        <a href="' + language_1.Language.getLang("%%%newbrowser_download_ie%%%") + '"\n           target="_blank"\n        >Internet Explorer</a>\n      </li>\n      <li>\n        <span class="tm_newbrowser_icon tm_newbrowser_safari"></span>\n        <a href="' + language_1.Language.getLang("%%%newbrowser_download_safari%%%") + '"\n           target="_blank"\n        >Safari</a>\n      </li>\n    </ul>\n  </div>\n  <h2>' + language_1.Language.getLang("%%%newbrowser_ie9_higher%%%") + '</h2>\n  <div class="controlGroup">\n    <p>' + language_1.Language.getLang("%%%newbrowser_check_compatibility_view_ie9%%%") + '</p>\n    <img class="newbrowserView"\n         src="imagenew/common/dialog/img_newbrowser_compatibility_view.png"\n         alt="Your browser is Old!"\n    >\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    421: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.NicknameTemplate = '\n<div id="_nicknameDialog" class="nickNameSetting dialog dialogPadding">\n  <p>' + language_1.Language.getLang("%%%nickname_desc%%%") + '</p>\n  <div class="nickName">\n    <div class="scrollableTable">\n      <div id="_nicknameTable" class="_overflow">\n        <table>\n          <thead>\n            <tr>\n              <th></th>\n              <th>' + language_1.Language.getLang("%%%nickname_name%%%") + "</th>\n              <th>" + language_1.Language.getLang("%%%nickname_nickname%%%") + '</th>\n            </tr>\n          </thead>\n          <tbody id="_nicknameList"></tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    422: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language"),
            DesktopNotificationSetting = '\n<div class="notificationSettingDialog__desktopNotificationContainer">\n  <label class="notificationSettingDialog__desktopNotificationLabel">' + language_1.Language.getLang("%%%chatsetting_notifier%%%") + '：</label>\n  <div class="desktopNotificationFormContainer">\n    <ul id="_notifierNotSupported" class="desktopNotificationFormContainer__noSupportContainer" style="display:none">\n      <li class="desktopNotificationFormContainer__noSupportText">' + language_1.Language.getLang("%%%desktopalert_no_support%%%") + '</li>\n    </ul>\n    <ul id="_notifierSupported" class="desktopNotificationFormContainer__formList">\n      <li class="desktopNotificationFormContainer__settingMaster">\n        <input type="checkbox" id="_notifierShow" value="1">\n        <label for="_notifierShow" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_notifier_show%%%") + '</label>\n      </li>\n      <li class="_cwSelectableRow desktopNotificationFormContainer__settingDetail">\n        <input type="checkbox" id="_notifierMessage" value="1">\n        <label for="_notifierMessage" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_notifier_message%%%") + '</label>\n      </li>\n      <li class="_cwSelectableRow desktopNotificationFormContainer__settingDetail">\n        <input type="checkbox" id="_notifierOnlyto" value="1">\n        <label for="_notifierOnlyto" class="ecfFCheckboxLbl" >' + language_1.Language.getLang("%%%chatsetting_notifier_onlyto%%%") + '</label>\n      </li>\n      <li id="_notifierDurationBox" class="desktopNotificationFormContainer__settingDetail">\n        ' + language_1.Language.getLang("%%%chatsetting_notifier_duration%%%") + '：\n        <select id="_notifierDuration">\n          <option value="20">' + language_1.Language.getLang("%%%chatsetting_notifier_duration_20sec%%%") + '</option>\n          <option value="10">' + language_1.Language.getLang("%%%chatsetting_notifier_duration_10sec%%%") + '</option>\n          <option value="5">' + language_1.Language.getLang("%%%chatsetting_notifier_duration_5sec%%%") + "</option>\n        </select>\n      </li>\n    </ul>\n  </div>\n</div>\n",
            PopupSoundSetting = '\n<div class="notificationSettingDialog__popupSoundContainer">\n  <label class="notificationSettingDialog__popupSoundLabel">' + language_1.Language.getLang("%%%menu_sound%%%") + ':</label>\n  <div class="popupSoundFormContainer">\n    <ul class="popupSoundFormContainer__formList">\n      <li class="popupSoundFormContainer__settingMaster">\n        <input type="checkbox"\n               id="_popupSound"\n               value="1"\n        >\n        <label for="_popupSound"\n               class="ecfFCheckboxLbl"\n        >' + language_1.Language.getLang("%%%chatsetting_popup_sound%%%") + '</label>\n      </li>\n\n      <li id="_popupSoundType" class="popupSoundFormContainer__settingDetail">\n        ' + language_1.Language.getLang("%%%sound_type%%%") + ':\n        <select id="_soundType">\n          \x3c!-- biwa sounds --\x3e\n          <option value="Kalimba">Kalimba</option>\n          <option value="Kalimba_c">Kalimba2</option>\n          <option value="Kalimba_d">Kalimba3</option>\n          <option value="EP">E-Piano</option>\n          <option value="EP02">E-Piano2</option>\n          <option value="EP_c">E-Piano3</option>\n          <option value="EP_d">E-Piano4</option>\n          <option value="Piano">Piano</option>\n          <option value="Piano_c">Piano2</option>\n          <option value="Piano_d">Piano3</option>\n          <option value="Piano_e">Piano4</option>\n          <option value="SynthBell">SynthBell</option>\n          <option value="SynthBell02">SynthBell2</option>\n          <option value="SynthBell03">SynthBell3</option>\n          <option value="GuitarCutting">GuitarCutting</option>\n          <option value="Ac_Guitar">Ac Guitar</option>\n          <option value="Ac_Guitar02">Ac Guitar2</option>\n          <option value="Conga">Conga</option>\n          <option value="Conga02">Conga2</option>\n          <option value="Conga_c">Conga3</option>\n          <option value="Brass">Brass</option>\n          <option value="Cymbal">Cymbal</option>\n          <option value="Dora">Dora</option>\n          <option value="Sitar">Sitar</option>\n          <option value="Tambourine">Tambourine</option>\n          <option value="Crap">Clap</option>\n          <option value="Shooting">Shooting</option>\n          <option value="Snare">Snare</option>\n          <option value="Crisis01">Crisis1</option>\n          <option value="Crisis02">Crisis2</option>\n          \x3c!-- /biwa sounds --\x3e\n          <option value="8-bit">8-bit</option>\n          <option value="agogo">Agogo</option>\n          <option value="chime">Chime</option>\n          <option value="cowbell">Cowbell</option>\n          <option value="cuica">Cuica</option>\n          <option value="drip">Drip</option>\n          <option value="kiai">Kiai</option>\n          <option value="mallet">Mallet</option>\n          <option value="marimba">Marimba</option>\n          <option value="percussimba">Percussimba</option>\n          <option value="steampipe">Steam Pipe</option>\n          <option value="whistle">Whistle</option>\n          <option value="ashvoice">You\'ve got chat</option>\n        </select>\n      </li>\n\n      <li id="_popupSoundVolume" class="popupSoundFormContainer__settingDetail">\n        ' + language_1.Language.getLang("%%%sound_volume%%%") + ':\n\n        <select id="_soundVolume">\n          <option value="0.1">1</option>\n          <option value="0.2">2</option>\n          <option value="0.3">3</option>\n          <option value="0.4">4</option>\n          <option value="0.5">5</option>\n          <option value="0.6">6</option>\n          <option value="0.7">7</option>\n          <option value="0.8">8</option>\n          <option value="0.9">9</option>\n          <option value="1">10</option>\n        </select>\n        <input type="button"\n               id="_soundPlay"\n               role="button"\n               class="button buttonHighHeight buttonText"\n               value="' + language_1.Language.getLang("%%%chatsetting_test_sound%%%") + '"\n        >\n      </li>\n    </ul>\n  </div>\n</div>\n',
            MailNotificationSetting = '\n<div class="notificationSettingDialog__mailNotificationContainer">\n  <label class="notificationSettingDialog__mailNotificationLabel">' + language_1.Language.getLang("%%%chatsetting_unread_mail_label%%%") + '：</label>\n  <div class="mailNotificationFormContainer">\n    <div class="mailNotificationFormContainer__settingSendMailTime">\n      ' + language_1.Language.getLang("%%%chatsetting_unread_mail%%%") + '\n      <select id="_notifyTerm">\n        <option value="24">' + language_1.Language.getLang("%%%chatsetting_unread_mail_term_24%%%") + '</option>\n        <option value="12">' + language_1.Language.getLang("%%%chatsetting_unread_mail_term_12%%%") + '</option>\n        <option value="6">' + language_1.Language.getLang("%%%chatsetting_unread_mail_term_6%%%") + '</option>\n        <option value="3">' + language_1.Language.getLang("%%%chatsetting_unread_mail_term_3%%%") + '</option>\n        <option value="2">' + language_1.Language.getLang("%%%chatsetting_unread_mail_term_2%%%") + '</option>\n        <option value="1">' + language_1.Language.getLang("%%%chatsetting_unread_mail_term_1%%%") + '</option>\n        <option value="0">' + language_1.Language.getLang("%%%chatsetting_unread_mail_term_none%%%") + "</option>\n      </select>\n    </div>\n  </div>\n</div>\n";
        exports.NotificationSettingTemplate = '\n<div id="_settingPreference" class="_cwSettingContents notificationSettingDialog">\n  ' + DesktopNotificationSetting + "\n\n  " + PopupSoundSetting + "\n\n  " + MailNotificationSetting + "\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    423: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.PlainDialogTemplate = '\n<div id="_plainDialog" class="dialog dialogPadding">\n  <div id="_plainDialogBody"></div>\n</div>\n'
    }, {}],
    424: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.PreviewLinkTemplate = '\n<div id="_previewLinkDialog" class="dialog previewDialog">\n  <div id="_previewLinkContent" class="previewContent"></div>\n</div>\n'
    }, {}],
    425: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.ProfileContentTemplate = '\n<div id="_profileContent" class="profileShowDialog">\n  <div class="profileShowDialog__dialogHeader">\n    <div class="_profileCover profileShowDialog__coverContainer"></div>\n    <div class="_profileAvatar profileShowDialog__avatarContainer"></div>\n  </div>\n  <div class="profileShowDialog__bodyContainer">\n    <div class="profileShowDialog__profileHeader">\n      <div class="profileShowDialog__titleContainer">\n        <div class="_profileName profileShowDialog__userName"></div>\n        <div class="_profileButton profileShowDialog__buttonContainer"></div>\n      </div>          \n      <ul class="profileShowDialog__profileHeaderItemList">\n        <li class="_profileOrgName profileShowDialog__profileHeaderItem"></li>\n        <li class="_profileChatWorkIdLink profileShowDialog__profileHeaderItem"></li>\n      </ul>    \n      <p class="_profileNameDescription profileShowDialog__profileDescription"></p>\n      <ul class="_profileSNS profileShowDialog__profileSNSList"></ul>\n    </div>\n    <div class="profileShowDialog__profileBody">\n      <ul class="profileShowDialog__profileBodyItemList">\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_orgnametip%%%") + '</span>\n          <span class="_profileOrgName profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_departmenttip%%%") + '</span>\n          <span class="_profileDepartment profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_titletip%%%") + '</span>\n          <span class="_profileTitle profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_addresstip%%%") + '</span>\n          <span class="_profileAddress profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_urltip%%%") + '</span>\n          <span class="_profileUrl profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_emailtip%%%") + '</span>\n          <span class="_profileEmail profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_tel_organizationtip%%%") + '</span>\n          <span class="_profileOrgTel profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_tel_extensiontip%%%") + '</span>\n          <span class="_profileExtensionTel profileShowDialog__profileBodyItemContent"></span>\n        </li>\n        <li class="profileShowDialog__profileBodyItem">\n          <span class="profileShowDialog__profileBodyItemLabel">' + language_1.Language.getLang("%%%profile_setting_tel_mobiletip%%%") + '</span>\n          <span class="_profileMobileTel profileShowDialog__profileBodyItemContent"></span>\n        </li>\n      </ul>\n    </div>  \n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    426: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.ProfileEditContentTemplate = '\n<div id="_profileEditContent"\n     class="profileContentArea profileContentEdit"\n     style="display: none;"\n>\n  <div class="profileHeader">\n    <div class="profileBackgroundArea">\n      <span id="_profileEditCover"></span>\n      <div id="_profileEditCoverControl"\n           class="_profilePhotoEditBar profilePhotoEdit profilePhotoEditBack"\n           style="display: none"\n      >' + language_1.Language.getLang("%%%profile_setting_edit_cover%%%") + '</div>\n    </div>\n    <div class="profileContentAvatar">\n      <span id="_profileEditAvatar"></span>\n      <div id="_profileEditAvatarControl"\n           class="_profilePhotoEditBar profilePhotoEdit profilePhotoEditAvatar"\n           style="display: none"\n      >' + language_1.Language.getLang("%%%profile_setting_edit_avatar%%%") + '</div>\n    </div>\n  </div>\n\n  <div class="profileContent">\n    <div class="profileMeta clearfix">\n      <ul>\n        <li class="controlGroup">\n          <label class="controlLabel">' + language_1.Language.getLang("%%%profile_displaynametip%%%") + '</label>\n          <div class="controlContent">\n            <input id="_profileInputName"\n                   data-name="name"\n                   class="inputLong"\n                   type="text"\n            >\n            <input type="checkbox"\n                   id="_profileAllowSearch"\n                   data-name="allow_search"\n                   class="_checkBox"\n                   data-label="' + language_1.Language.getLang("%%%profile_allow_search%%%") + '"\n                   value="1"\n            >\n          </div>\n        </li>\n        <li class="controlGroup">\n          <label class="controlLabel">' + language_1.Language.getLang("%%%profile_chatworkidtip%%%") + '</label>\n          <div class="controlContent">\n            <input id="_profileInputChatWorkId"\n                   data-name="cwid"\n                   class="inputLong"\n                   type="text"\n            >\n            <span id="_profileCWIDLoading"\n                  style="display:none"\n            >\n              <img src="./imagenew/all/common/loader/img_loader_gray.gif" alt="Loading">\n            </span>\n            <span id="_profileCWIDStatus"></span>\n          </div>\n        </li>\n        <li class="controlGroup profileDescription">\n          <label class="controlLabel">' + language_1.Language.getLang("%%%profile_setting_introductiontip%%%") + '</label>\n          <div class="controlContent">\n            <textarea id="_profileInputIntroduction"\n                      data-name="introduction"\n                      class="profileEdittextAreaWidth textAreaHeight explain"\n            ></textarea>\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="Introduction"\n            >\n              <span id="_profilePrivacyIntroduction"\n                    class="icoFontPublic"\n                    data-name="introduction_priv"\n                    data-value="public"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <ul id="_profileSnsListEdit" class="profileSnsListEdit">\n      <li class="controlGroup">\n        <label class="controlLabel">facebook：</label>\n        <span class="profileSnsEditUrl">https://www.facebook.com/</span>\n        <div class="profileSnsListInput">\n          <input id="_profileInputFacebook"\n                 data-name="facebook"\n                 class="inputShort"\n                 type="text"\n                 placeholder="' + language_1.Language.getLang("%%%username%%%") + '"\n          >\n          <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n               data-key="Facebook"\n          >\n            <span id="_profilePrivacyFacebook"\n                  class="icoFontPublic"\n                  data-name="facebook_priv"\n                  data-value="public"\n            ></span>\n            <span class="icoFontTriangleDown"></span>\n          </div>\n        </div>\n        <p class="note">' + language_1.Language.getLang("%%%profile_setting_set_facebook_note%%%") + '</p>\n      </li>\n      <li class="controlGroup">\n        <label class="controlLabel">twitter：</label>\n        <span class="profileSnsEditUrl">http://twitter.com/</span>\n        <div class="profileSnsListInput">\n          <input id="_profileInputTwitter"\n                 data-name="twitter"\n                 class="inputShort"\n                 type="text"\n                 placeholder="twitter ID"\n          >\n          <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n               data-key="Twitter"\n          >\n            <span id="_profilePrivacyTwitter"\n                  class="icoFontPublic"\n                  data-name="twitter_priv"\n                  data-value="public"\n            ></span>\n            <span class="icoFontTriangleDown"></span>\n          </div>\n        </div>\n      </li>\n      <li class="controlGroup">\n        <label class="controlLabel">Skype:</label>\n        <div class="profileSnsListInput">\n          <input id="_profileInputSkype"\n                 data-name="skype"\n                 class="inputShort"\n                 type="text"\n                 placeholder="Skype ID"\n          >\n          <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n               data-key="Skype"\n          >\n            <span id="_profilePrivacySkype"\n                  class="icoFontPublic"\n                  data-name="skype_priv"\n                  data-value="public"\n            ></span>\n            <span class="icoFontTriangleDown"></span>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class="profileContent">\n    <ul class="profileContentList">\n      <li>\n        <dl id="_profileEditOrgName">\n          <dt>' + language_1.Language.getLang("%%%profile_setting_orgnametip%%%") + '</dt>\n          <dd>\n            <ul id="_profileEditOrgNameBox" class="profileEditOrgNameBox">\n              <li class="_profileSelectOrgNameType" style="display: none">\n                <input type="radio"\n                       id="_profileSelectOrgnameTypeCommon"\n                       name="orgname_type"\n                       data-name="orgname_type"\n                       value="common"\n                >\n                <label id="_profileSelectOrgnameTypeCommonLabel"\n                       for="_profileSelectOrgnameTypeCommon"\n                ></label>\n              </li>\n              <li>\n                <input type="radio"\n                       id="_profileSelectOrgnameTypeIndividual"\n                       name="orgname_type"\n                       data-name="orgname_type"\n                       value="individual"\n                       class="_profileSelectOrgNameType"\n                       style="display: none"\n                >\n                <input id="_profileInputOrgName"\n                       data-name="orgname"\n                       class="profileInputWidth"\n                       type="text"\n                >\n              </li>\n              <li id="_profileCommonOrgNameLink" style="display: none">\n                <a href="' + PATH_CHATWORK_SERVICE + '/packages/chatwork/change_orgname.php"\n                   target="_blank"\n                >' + language_1.Language.getLang("%%%profile_setting_note_change_orgname%%%") + '</a>\n              </li>\n            </ul>\n\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="OrgName"\n            >\n              <span id="_profilePrivacyOrgName"\n                    class="icoFontPublic"\n                    data-name="orgname_priv"\n                    data-value="public"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n            <div id="_profileEditOrgNameLoading"\n                 class="profileEditOrgNameLoading"\n                 style="display:none"\n            >\n              <img src="./imagenew/all/common/loader/img_loader_gray.gif" alt="Loading">\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_departmenttip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputDepartment"\n                   data-name="department"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="Department"\n            >\n              <span id="_profilePrivacyDepartment"\n                    class="icoFontPublic"\n                    data-name="department_priv"\n                    data-value="public"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_titletip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputTitle"\n                   data-name="title"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="Title"\n            >\n              <span id="_profilePrivacyTitle"\n                    class="icoFontPublic"\n                    data-name="title_priv"\n                    data-value="public"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_addresstip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputAddress"\n                   data-name="address"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="Address"\n            >\n              <span id="_profilePrivacyAddress"\n                    class="icoFontPublic"\n                    data-name="address_priv"\n                    data-value="public"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_urltip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputUrl"\n                   data-name="url"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="Url"\n            >\n              <span id="_profilePrivacyUrl"\n                    class="icoFontPublic"\n                    data-name="url_priv"\n                    data-value="public"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_emailtip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputEmail"\n                   data-name="email"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="Email"\n            >\n              <span id="_profilePrivacyEmail"\n                    class="icoFontPublic _privacyIcon"\n                    data-name="email_priv"\n                    data-value="contact"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_tel_organizationtip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputOrgTel"\n                   data-name="tel_organization"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="OrgTel"\n            >\n              <span id="_profilePrivacyOrgTel"\n                    class="icoFontPublic _privacyIcon"\n                    data-name="tel_organization_priv"\n                    data-value="contact"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_tel_extensiontip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputExtensionTel"\n                   data-name="tel_extension"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="ExtensionTel"\n            >\n              <span id="_profilePrivacyExtensionTel"\n                    class="icoFontPublic _privacyIcon"\n                    data-name="tel_extension_priv"\n                    data-value="contact"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n      <li>\n        <dl>\n          <dt>' + language_1.Language.getLang("%%%profile_setting_tel_mobiletip%%%") + '</dt>\n          <dd>\n            <input id="_profileInputtMobileTel"\n                   data-name="tel_mobile"\n                   class="profileInputWidth"\n                   type="text"\n            >\n            <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus"\n                 data-key="MobileTel"\n            >\n              <span id="_profilePrivacyMobileTel"\n                    class="icoFontPublic _privacyIcon"\n                    data-name="tel_mobile_priv"\n                    data-value="contact"\n              ></span>\n              <span class="icoFontTriangleDown"></span>\n            </div>\n          </dd>\n        </dl>\n      </li>\n    </ul>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    427: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.ProgressTemplate = '\n<div id="_progressDialog" class="dialog dialogPadding">\n  <div id="_progressDialogBody" class="progressDialogBody"></div>\n</div>\n'
    }, {}],
    428: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.RoomDescEditTemplate = '\n<div id="_roomDescEditDialog" class="dialog roomDescEditDialog">\n  <div class="controlGroup">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%chatroom_desc%%%") + ':</label>\n    <div class="controlContent">\n      <textarea id="_roomDescEditContent" class="inputLong textAreaHeight"></textarea>\n    </div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    429: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.RoomInfoEditTemplate = '\n<div id="_roomInfoEditDialog" class="dialog dialogPadding">\n  <form id="_roomInfoEditForm" class="horizontalForms">\n    <div id="_roomInfoEditContent" class="roomInfoEditContent"></div>\n  </form>\n</div>\n'
    }, {}],
    430: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.RoomMemberAdditionTemplate = '\n<div id="_roomMemberAdditionDialog" class="dialog dialogRoomSetting"></div>\n'
    }, {}],
    431: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.RoomMemberEditTemplate = '\n<div id="_roomMemberEditDialog" class="dialog dialogRoomSetting"></div>\n'
    }, {}],
    432: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.RoomPermissionSettingTemplate = '\n<div id="_roomPermissionsettingDialog" class="dialog dialogRoomSetting">\n  <form id="_roomPermissionsettingForm">\n    <fieldset>\n      <div class="settingDialogHeader">\n        <div class="settingDialogHeaderTitle">\n          <p class="settingDialogHeaderTitleText">' + language_1.Language.getLang("%%%room_permission_setting_index%%%") + '</p>\n        </div>\n        <div class="settingDialogHeaderLead">\n          <p class="settingDialogHeaderLeadText">' + language_1.Language.getLang("%%%room_permission_setting_lead%%%") + '</p>\n        </div>\n      </div>\n      <div class="settingDialogBody">\n        <div class="controlContentBody">\n          <input type="checkbox"\n                 id="_allowSeeMember"\n                 name="allow_see_member"\n                 data-label="' + language_1.Language.getLang("%%%room_permission_setting_allow_see_member%%%") + '"\n                 value="1"\n          >\n        </div>\n        <div class="controlContentBody">\n          <input type="checkbox"\n                 id="_allowUploadFile"\n                 name="allow_upload_file"\n                 data-label="' + language_1.Language.getLang("%%%room_permission_setting_allow_upload_file%%%") + '"\n                 value="1"\n          >\n        </div>\n        <div class="controlContentBody">\n          <input type="checkbox"\n                 id="_allowAddTask"\n                 name="allow_add_task"\n                 data-label="' + language_1.Language.getLang("%%%room_permission_setting_allow_add_task%%%") + '"\n                 value="1"\n          >\n        </div>\n        <div class="controlContentBody">\n          <input type="checkbox"\n                 id="_allowSendMessage"\n                 name="allow_send_message"\n                 data-label="' + language_1.Language.getLang("%%%room_permission_setting_allow_send_message%%%") + '"\n                 value="1"\n          >\n        </div>\n      </div>\n    </fieldset>\n  </form>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    433: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.RoomRequestTemplate = '\n<div id="_roomRequestDialog" class="dialog dialogPadding">\n  <div class="scrollableTable roomRequest">\n    <p class="alert alertPrimary">' + language_1.Language.getLang("%%%room_request_description%%%") + '</p>\n    <div class="_overflow">\n      <div id="_roomRequestList"></div>\n    </div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    434: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.StorageLimitTemplate = '\n<div id="_storageLimitDialog" class="dialog controlGroup">\n\n  <div id="_storageLimitBody"\n       class="content"\n  ></div>\n\n  <div id="_storageLimitFooter"></div>\n\n  <div id="_storageLimitButton" class="dialogSelect">\n    <div id="_storageLimitLink"\n         role="button"\n         class="button btnPrimary btnLarge"\n    ></div>\n  </div>\n</div>\n'
    }, {}],
    435: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.TaskEditTemplate = '\n<div id="_taskEditDialog" class="dialog taskEditDialog">\n  <div class="controlGroup">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%task_tasktip%%%") + '</label>\n    <div class="controlContent">\n      <textarea id="_taskEditContent" class="inputLong textAreaHeight"></textarea>\n    </div>\n  </div>\n  <div class="controlGroup">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%task_inchargetip%%%") + '</label>\n    <div id="_taskEditIncharge" class="controlContent"></div>\n  </div>\n  <div class="controlGroup">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%task_limittip%%%") + '</label>\n    <div class="controlContent">\n      <div id="_taskEditLimitLabel" class="limitBox"></div>\n      <div role="button"\n           aria-label="' + language_1.Language.getLang("%%%datepicker_alt_text%%%") + '"\n           class="button btn24"\n           id="_taskEditLimit"\n      ><span class="icoFontCalender icoSizeLarge"></span></div>\n    </div>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    436: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.TextCopyTemplate = '\n<div id="_textCopyDialog" class="dialog dialogPadding">\n  <textarea id="_textCopyDialogText" style="width:400px;height:150px;line-height:1.2;resize:none"></textarea>\n  <div id="_textCopyButton" class="dialogContainer__footer" style="display: none;">\n    <div id="_copyToClipBoard"\n         role="button"\n         class="_button">' + language_1.Language.getLang("%%%copy_to_clipboard%%%") + '\n    ></div>\n    <span id="_copyMessage" class="textCopyMessage"></span>\n  </div>\n</div>\n'
    }, {
        "../../lib/language": 384
    }],
    437: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.TutorialMovieTemplate = '\n<div id="_tutorialMovieDialog" class="dialog tutorialMovieDialog">\n  <div class="content"></div>\n</div>\n'
    }, {}],
    438: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.UserGuideTemplate = '\n<div id="_userguideDialog" class="dialog">\n  <div id="_userguideBody">\n    <ol class="userguideOrderListArea">\n      <li>\n        <p class="userguideOrderListTitle"><span class="userguideOrderListNum">Step1</span>' + language_1.Language.getLang("%%%userguide_profile%%%") + '</p>\n        <div class="userguideOrderListContent">\n          <p class="_navlist _select userguideOrderListSelected">' + language_1.Language.getLang("%%%userguide_profile_about%%%") + '</p>\n          <ol class="_guideList userguideOrderListStep">\n            <li class="_navlist"><span class="userguideOrderListStepNum">1</span>' + language_1.Language.getLang("%%%userguide_profile_open_setting%%%") + '</li>\n            <li class="_navlist"><span class="userguideOrderListStepNum">2</span>' + language_1.Language.getLang("%%%userguide_profile_upload_image%%%") + '</li>\n            <li class="_navlist"><span class="userguideOrderListStepNum">3</span>' + language_1.Language.getLang("%%%userguide_profile_chatworkid%%%") + '</li>\n          </ol>\n        </div>\n      </li>\n      <li>\n        <p class="userguideOrderListTitle"><span class="userguideOrderListNum">Step2</span>' + language_1.Language.getLang("%%%userguide_message%%%") + '</p>\n        <div class="userguideOrderListContent">\n          <p class="_navlist">' + language_1.Language.getLang("%%%userguide_message_about%%%") + '</p>\n          <ol class="_guideList ui_userguide_step">\n            <li class="_navlist"><span class="userguideOrderListStepNum">1</span>' + language_1.Language.getLang("%%%userguide_message_quote%%%") + '</li>\n            <li class="_navlist"><span class="userguideOrderListStepNum">2</span>' + language_1.Language.getLang("%%%userguide_message_edit%%%") + '</li>\n            <li class="_navlist"><span class="userguideOrderListStepNum">3</span>' + language_1.Language.getLang("%%%userguide_message_mention%%%") + '</li>\n          </ol>\n        </div>\n      </li>\n      <li>\n        <p class="userguideOrderListTitle"><span class="userguideOrderListNum">Step3</span>' + language_1.Language.getLang("%%%userguide_task%%%") + '</p>\n        <div class="userguideOrderListContent">\n          <p class="_navlist">' + language_1.Language.getLang("%%%userguide_task_about%%%") + '</p>\n          <ol class="_guideList ui_userguide_step">\n            <li class="_navlist"><span class="userguideOrderListStepNum">1</span>' + language_1.Language.getLang("%%%userguide_task_add%%%") + '</li>\n            <li class="_navlist"><span class="userguideOrderListStepNum">2</span>' + language_1.Language.getLang("%%%userguide_task_browse%%%") + '</li>\n            <li class="_navlist"><span class="userguideOrderListStepNum">3</span>' + language_1.Language.getLang("%%%userguide_task_complete%%%") + '</li>\n          </ol>\n        </div>\n      </li>\n    </ol>\n\n    <div class="userguideContentArea">\n      <div class="_howTo _content0">\n        <h2>' + language_1.Language.getLang("%%%userguide_profile_about%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_profile_about_content_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step01/img_ug_profile_about.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content1" style="display: none">\n        <h2><span class="userguideOrderListStepNum">1</span>' + language_1.Language.getLang("%%%userguide_profile_open_setting%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_profile_open_setting_content%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step01/img_ug_howto01.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_profile_open_setting_content_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step01/img_ug_howto02.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content2" style="display: none">\n        <h2><span class="userguideOrderListStepNum">2</span>' + language_1.Language.getLang("%%%userguide_profile_upload_image%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_profile_upload_image_content_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step01/img_ug_howto03.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_profile_upload_image_content_biwa2%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step01/img_ug_howto04.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content3" style="display: none">\n        <h2><span class="userguideOrderListStepNum">3</span>' + language_1.Language.getLang("%%%userguide_profile_chatworkid%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_profile_chatworkid_content1%%%", {
                chatwork_home_path: CHATWORK_HOME
            }) + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step01/img_ug_howto05.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_profile_chatworkid_content2%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step01/img_ug_howto06.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content4" style="display: none">\n        <h2>' + language_1.Language.getLang("%%%userguide_message_about%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_message_about_content1%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_about_mychat01.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_message_about_content2%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_about_mychat02.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content5" style="display: none">\n        <h2><span class="userguideOrderListStepNum">1</span>' + language_1.Language.getLang("%%%userguide_message_quote%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_message_quote_content1_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto01.png" alt="">\n          </div>\n          <h3>' + language_1.Language.getLang("%%%userguide_message_quote%%%") + "</h3>\n          " + language_1.Language.getLang("%%%userguide_message_quote_content2_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto02.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_message_quote_content3_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto03.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content6" style="display: none">\n        <h2><span class="userguideOrderListStepNum">2</span>' + language_1.Language.getLang("%%%userguide_message_edit%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          <h3>' + language_1.Language.getLang("%%%userguide_message_edit%%%") + "</h3>\n          " + language_1.Language.getLang("%%%userguide_message_edit_content1_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto04.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_message_edit_content2_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto05.png" alt="">\n          </div>\n          <h3>' + language_1.Language.getLang("%%%userguide_message_delete%%%") + "</h3>\n          " + language_1.Language.getLang("%%%userguide_message_delete_content1%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto06.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_message_delete_content2%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto07.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content7" style="display: none">\n        <h2><span class="userguideOrderListStepNum">3</span>' + language_1.Language.getLang("%%%userguide_message_mention%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_message_mention_content1%%%") + "\n          <h3>" + language_1.Language.getLang("%%%userguide_message_mention_select%%%") + "</h3>\n          " + language_1.Language.getLang("%%%userguide_message_mention_select_content1%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto08.png" alt="">\n          </div>\n          <h3>' + language_1.Language.getLang("%%%userguide_message_mention_send%%%") + "</h3>\n          " + language_1.Language.getLang("%%%userguide_message_mention_send_content1%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto09.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_message_mention_send_content2%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto10.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_message_mention_send_content3%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step02/img_ug_howto11.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content8" style="display: none">\n        <h2>' + language_1.Language.getLang("%%%userguide_task_about%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_task_about_content%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step03/img_ug_about_task.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content9" style="display: none">\n        <h2><span class="userguideOrderListStepNum">1</span>' + language_1.Language.getLang("%%%userguide_task_add%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_task_add_content1_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step03/img_ug_howto01.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_task_add_content2_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step03/img_ug_howto02.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content10" style="display: none">\n        <h2><span class="userguideOrderListStepNum">2</span>' + language_1.Language.getLang("%%%userguide_task_browse%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_task_browse_content1%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step03/img_ug_howto03.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_task_browse_content2_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step03/img_ug_howto04.png" alt="">\n          </div>\n        </div>\n      </div>\n\n      <div class="_howTo _content11" style="display: none">\n        <h2><span class="userguideOrderListStepNum">3</span>' + language_1.Language.getLang("%%%userguide_task_complete%%%") + '</h2>\n        <div class="_contentBody userguideContent">\n          ' + language_1.Language.getLang("%%%userguide_task_complete_content1_biwa%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step03/img_ug_howto05.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_task_complete_content2%%%") + '\n          <div class="userguideContentImgArea">\n            <img src="imagenew/lang/' + LANGUAGE + '/userguide/step03/img_ug_howto06.png" alt="">\n          </div>\n          ' + language_1.Language.getLang("%%%userguide_task_complete_content3%%%", {
                service_name: SERVICE_NAME
            }) + "\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    439: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language"),
            phase1OnBoardingTemplate = '\n<div class="content bobPhase1">\n  <p class="userguideWelcomeTitle">' + language_1.Language.getLang("%%%userguide_welcome_head%%%", {
                    service_name: SERVICE_NAME
                }) + '</p>\n  <p class="userguideWelcomeContent">' + language_1.Language.getLang("%%%userguide_welcome_service_desc_" + OEM + "%%%", {
                    service_name: SERVICE_NAME
                }) + '</p>\n\n  <div class="userguideWelcomeImage">\n    <img src="./imagenew/lang/' + LANGUAGE + "/welcome/img_welcome_" + OEM + '.png" alt="">\n  </div>\n  <div class="userguideWelcomeContentArea">\n    <div role="button" class="button btnPrimary btnLarge" id="_userguideWelcomeOpen">' + language_1.Language.getLang("%%%start_chatwork%%%") + '</div>\n    <a class="userguideWelcomeSkipTutorial" id="_userguideSkipTutorial">すぐに使いはじめる</a>\n  </div>\n</div>\n',
            normalOnBoardingTemplate = '\n<div class="content">\n  <div class="userguideWelcomeImage">\n    <img src="imagenew/common/welcome/img_welcome_logo_' + OEM + '.png" alt="ChatWork">\n    <img src="imagenew/lang/' + LANGUAGE + "/welcome/img_welcome_" + OEM + '.png" alt="">\n  </div>\n  <div class="userguideWelcomeContentArea">\n    <p class="userguideWelcomeTitle">' + language_1.Language.getLang("%%%userguide_welcome_head%%%", {
                    service_name: SERVICE_NAME
                }) + '</p>\n    <p class="userguideWelcomeContent">' + language_1.Language.getLang("%%%userguide_welcome_service_desc_" + OEM + "%%%", {
                    service_name: SERVICE_NAME
                }) + '</p>\n    <div role="button"\n         class="button btnPrimary btnLarge"\n         id="_userguideWelcomeOpen"\n    >' + language_1.Language.getLang("%%%start_chatwork%%%", {
                    service_name: SERVICE_NAME
                }) + "</div>\n  </div>\n</div>\n";
        exports.UserGuideWelcomeTemplate = '\n<div id="_userguideWelcomeDialog" class="dialog userguideWelcomeDialog">\n  ' + (IS_BIWA_ONBOARDING_PHASE_1 ? phase1OnBoardingTemplate : normalOnBoardingTemplate) + "\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    440: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var add_contact_confirm_template_1 = require("./dialog-contents/add-contact-confirm-template"),
            add_room_template_1 = require("./dialog-contents/add-room-template"),
            announce_template_1 = require("./dialog-contents/announce-template"),
            chat_category_add_content_template_1 = require("./dialog-contents/chat-category-add-content-template"),
            chat_setting_template_1 = require("./dialog-contents/chat-setting-template"),
            edit_file_template_1 = require("./dialog-contents/edit-file-template"),
            feedback_complete_template_1 = require("./dialog-contents/feedback-complete-template"),
            feedback_template_1 = require("./dialog-contents/feedback-template"),
            file_preview_template_1 = require("./dialog-contents/file-preview-template"),
            game_template_1 = require("./dialog-contents/game-template"),
            group_call_template_1 = require("./dialog-contents/group-call-template"),
            invitation_link_setting_template_1 = require("./dialog-contents/invitation-link-setting-template"),
            join_public_chat_template_1 = require("./dialog-contents/join-public-chat-template"),
            limit_error_template_1 = require("./dialog-contents/limit-error-template"),
            member_detail_template_1 = require("./dialog-contents/member-detail-template"),
            new_browser_template_1 = require("./dialog-contents/new-browser-template"),
            nickname_template_1 = require("./dialog-contents/nickname-template"),
            plain_dialog_template_1 = require("./dialog-contents/plain-dialog-template"),
            preview_link_template_1 = require("./dialog-contents/preview-link-template"),
            profile_content_template_1 = require("./dialog-contents/profile-content-template"),
            profile_edit_content_template_1 = require("./dialog-contents/profile-edit-content-template"),
            progress_template_1 = require("./dialog-contents/progress-template"),
            room_desc_edit_template_1 = require("./dialog-contents/room-desc-edit-template"),
            room_info_edit_template_1 = require("./dialog-contents/room-info-edit-template"),
            room_member_addition_template_1 = require("./dialog-contents/room-member-addition-template"),
            room_member_edit_template_1 = require("./dialog-contents/room-member-edit-template"),
            room_permission_setting_template_1 = require("./dialog-contents/room-permission-setting-template"),
            room_request_template_1 = require("./dialog-contents/room-request-template"),
            storage_limit_template_1 = require("./dialog-contents/storage-limit-template"),
            task_edit_template_1 = require("./dialog-contents/task-edit-template"),
            text_copy_template_1 = require("./dialog-contents/text-copy-template"),
            tutorial_movie_template_1 = require("./dialog-contents/tutorial-movie-template"),
            user_guide_template_1 = require("./dialog-contents/user-guide-template"),
            user_guide_welcome_template_1 = require("./dialog-contents/user-guide-welcome-template");
        exports.dialogTemplate = "\n\n" + group_call_template_1.GroupCallTemplate + "\n\n" + plain_dialog_template_1.PlainDialogTemplate + "\n\n" + progress_template_1.ProgressTemplate + "\n\n" + add_room_template_1.AddRoomTemplate + "\n\n" + room_desc_edit_template_1.RoomDescEditTemplate + "\n\n" + room_info_edit_template_1.RoomInfoEditTemplate + "\n\n" + room_member_edit_template_1.RoomMemberEditTemplate + "\n\n" + room_member_addition_template_1.RoomMemberAdditionTemplate + "\n\n" + task_edit_template_1.TaskEditTemplate + "\n\n" + edit_file_template_1.EditFileTemplate + "\n\n" + file_preview_template_1.FilePreviewTemplate + "\n\n" + text_copy_template_1.TextCopyTemplate + "\n\n" + invitation_link_setting_template_1.InvitationLinkSettingTemplate + "\n\n" + room_permission_setting_template_1.RoomPermissionSettingTemplate + "\n\n" + member_detail_template_1.MemberDetailTemplate + "\n\n" + chat_category_add_content_template_1.ChatCategoryAddContentTemplate + "\n\n" + join_public_chat_template_1.JoinPublicChatTemplate + "\n\n" + room_request_template_1.RoomRequestTemplate + "\n\n" + preview_link_template_1.PreviewLinkTemplate + "\n\n" + nickname_template_1.NicknameTemplate + "\n\n" + limit_error_template_1.LimitErrorTemplate + "\n\n" + profile_content_template_1.ProfileContentTemplate + "\n\n" + profile_edit_content_template_1.ProfileEditContentTemplate + "\n\n" + user_guide_template_1.UserGuideTemplate + "\n\n" + chat_setting_template_1.ChatSettingTemplate + "\n\n" + storage_limit_template_1.StorageLimitTemplate + "\n\n" + new_browser_template_1.NewBrowserTemplate + "\n\n" + announce_template_1.AnnounceTemplate + "\n\n" + user_guide_welcome_template_1.UserGuideWelcomeTemplate + "\n\n" + tutorial_movie_template_1.TutorialMovieTemplate + "\n\n" + feedback_complete_template_1.FeedbackCompleteTemplate + "\n\n" + feedback_template_1.FeedbackTemplate + "\n\n" + game_template_1.GameTemplate + "\n\n" + add_contact_confirm_template_1.AddContactConfirmTemplate + "\n"
    }, {
        "./dialog-contents/add-contact-confirm-template": 401,
        "./dialog-contents/add-room-template": 402,
        "./dialog-contents/announce-template": 403,
        "./dialog-contents/chat-category-add-content-template": 405,
        "./dialog-contents/chat-setting-template": 406,
        "./dialog-contents/edit-file-template": 408,
        "./dialog-contents/feedback-complete-template": 409,
        "./dialog-contents/feedback-template": 410,
        "./dialog-contents/file-preview-template": 411,
        "./dialog-contents/game-template": 412,
        "./dialog-contents/group-call-template": 413,
        "./dialog-contents/invitation-link-setting-template": 414,
        "./dialog-contents/join-public-chat-template": 415,
        "./dialog-contents/limit-error-template": 417,
        "./dialog-contents/member-detail-template": 419,
        "./dialog-contents/new-browser-template": 420,
        "./dialog-contents/nickname-template": 421,
        "./dialog-contents/plain-dialog-template": 423,
        "./dialog-contents/preview-link-template": 424,
        "./dialog-contents/profile-content-template": 425,
        "./dialog-contents/profile-edit-content-template": 426,
        "./dialog-contents/progress-template": 427,
        "./dialog-contents/room-desc-edit-template": 428,
        "./dialog-contents/room-info-edit-template": 429,
        "./dialog-contents/room-member-addition-template": 430,
        "./dialog-contents/room-member-edit-template": 431,
        "./dialog-contents/room-permission-setting-template": 432,
        "./dialog-contents/room-request-template": 433,
        "./dialog-contents/storage-limit-template": 434,
        "./dialog-contents/task-edit-template": 435,
        "./dialog-contents/text-copy-template": 436,
        "./dialog-contents/tutorial-movie-template": 437,
        "./dialog-contents/user-guide-template": 438,
        "./dialog-contents/user-guide-welcome-template": 439
    }],
    441: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../../lib/language");
        exports.TaskWindowTemplate = '\n<div id="_taskWindow" class="taskWindowContainer">\n  <div class="_cwFWHeader taskWindowContainer__headerContainer">\n    <div class="taskWindowContainer__headerTabContainer">\n      <ul class="taskWindowContainer__headerTab">\n        <li id="_taskWindowTabOpen" class="taskWindowContainer__headerTabItem floatTabSelect">\n          ' + language_1.Language.getLang("%%%task_menu_open%%%") + '\n        </li>\n        <li id="_taskWindowTabDone" class="taskWindowContainer__headerTabItem">\n          ' + language_1.Language.getLang("%%%task_menu_close%%%") + '\n        </li>\n      </ul>\n    </div>\n\n    <div class="taskWindowHeaderNavigationContainer">\n      <ul id="_taskWindowFilter" class="taskWindowFilterTypeLimit">\n        <li>\n          ' + language_1.Language.getLang("%%%task_filter_all%%%") + '<span id="_taskWindowNumAll" class="taskWindowFilterTypeLimit__badge"></span>\n        </li>\n        <li>\n          ' + language_1.Language.getLang("%%%task_filter_exired%%%") + '<span id="_taskWindowNumLimitOver" class="taskWindowFilterTypeLimit__badge"></span>\n        </li>\n        <li>\n          ' + language_1.Language.getLang("%%%task_filter_today%%%") + '<span id="_taskWindowNumLimitToday" class="taskWindowFilterTypeLimit__badge"></span>\n        </li>\n        <li>\n          ' + language_1.Language.getLang("%%%task_filter_inweek%%%") + '<span id="_taskWindowNumLimitWeek" class="taskWindowFilterTypeLimit__badge"></span>\n        </li>\n        <li>\n          ' + language_1.Language.getLang("%%%task_filter_nolimit%%%") + '<span id="_taskWindowNumLimitNone" class="taskWindowFilterTypeLimit__badge"></span>\n        </li>\n      </ul>\n\n      <ul id="_taskWindowViewType" class="taskWindowFilterTypeAssignee">\n        <li aria-label="' + language_1.Language.getLang("%%%task_menu_incharge%%%") + '">\n          <span class="icoFontTaskMine icoSizeLarge"></span>\n        </li>\n        <li aria-label="' + language_1.Language.getLang("%%%task_menu_client%%%") + '">\n          <span class="icoFontTaskAssign icoSizeLarge"></span>\n        </li>\n      </ul>\n\n      <div class="taskWindowPagerContainer">\n        <p id="_taskWindowPagerIndex" class="taskWindowPagerContainer__index"></p>\n        <ul id="_taskWindowPager" class="taskWindowPagerContainer__pager">\n          <li data-type="first">\n            <span class="icoFontArrowDoubleLeft"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_first%%%") + '</span>\n          </li>\n          <li data-type="prev">\n            <span class="icoFontTriangleLeft"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_prev%%%") + '</span>\n          </li>\n          <li data-type="next">\n            <span class="icoFontTriangleRight"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_next%%%") + '</span>\n          </li>\n          <li data-type="last">\n            <span class="icoFontArrowDoubleRight"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_last%%%") + '</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class="_cwFWContent">\n    <div class="adminWindowAllList">\n      <div id="_taskWindowBox" class="adminAllListArea">\n        <ul id="_taskWindowList" class="subContentTask"></ul>\n        <div id="_emptyTaskContent" class="emptyAdminContent" style="display: none;">\n          <img src="./imagenew/common/empty/img_task_empty.png" alt="" />\n          <p>' + language_1.Language.getLang("%%%task_nothing%%%") + '</p>\n        </div>\n        <div class="actionBarSpacer"></div>\n      </div>\n      <div class="adminDetailArea">\n        <div id="_taskDetailArea" class="adminDetailContentArea" style="display: none">\n          <div class="adminDetailH1">\n            <div id="_taskDetailTitle" class="adminDetailText autotrim"></div>\n            <div class="linkIconStatus closeAction">\n              <span id="_taskDetailClose" role="button" class="icoFontCancel icoSizeLarge"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_close%%%") + '</span>\n            </div>\n          </div>\n          <div class="adminDetailContent">\n            <div class="controlGroup">\n              <label class="controlLabel">' + language_1.Language.getLang("%%%task_limit%%%") + ':</label>\n              <div id="_taskDetailLimit" class="controlContent"></div>\n            </div>\n            <div class="controlGroup">\n              <label class="controlLabel">' + language_1.Language.getLang("%%%task_incharge%%%") + ':</label>\n              <div id="_taskDetailAssign" class="controlContent autotrim"></div>\n            </div>\n            <div class="controlGroup">\n              <label class="controlLabel">' + language_1.Language.getLang("%%%task_client%%%") + ':</label>\n              <div id="_taskDetailAssignBy" class="controlContent autotrim"></div>\n            </div>\n            <div class="taskDetailChatTlArea subContentShadow">\n              <div id="_taskDetailChatName" class="taskDetailChatTitle autotrim"></div>\n              <div id="_taskDetailTimeLine" class="taskDetailChatTlBody"></div>\n            </div>\n          </div>\n        </div>\n\n        <div id="_taskDetailBlankArea" class="adminDetailContentArea">\n          <div class="adminDetailNoneContenText">\n            ' + language_1.Language.getLang("%%%task_click_detail%%%") + "\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
    }, {
        "../../lib/language": 384
    }],
    442: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language"),
            task_window_template_1 = require("./float-window-contents/task-window-template");
        exports.floatWindowTemplate = '\n\x3c!-- start message_search --\x3e\n<div id="_messageSearchContent" class="messageSearchContent" style="display: none;">\n <div class="_cwFWHeader">\n  <div id="_messageSearchControlBox" class="floatWindowContentGroup">\n   <input type="text" class="_searchBox inputLong" id="_messageSearchQuery" placeholder="' + language_1.Language.getLang("%%%search_placeholder%%%") + '" />\n   <div id="_messageSearchSend" role="button" class="button btnPrimary">' + language_1.Language.getLang("%%%button_search%%%") + '</div>\n   <a id="_messageSearchOption" class="searchOptionArea selected">' + language_1.Language.getLang("%%%search_option%%%") + '<span class="_iconRotate icoFontTriangleDown"></span></a>\n   <div id="_messageSearchOptionArea" class="controlGroup searchOptionGroup" style="display: none;">\n    <label class="controlLabel">' + language_1.Language.getLang("%%%search_except_wordtip%%%") + '</label>\n    <div class="controlContent">\n     <input type="text" id="_messageSearchExceptWord" class="inputLong" placeholder="' + language_1.Language.getLang("%%%search_except_word_placeholder%%%") + '"/>\n    </div>\n    <label id="_messageSearchSpeakerTip" class="controlLabel">' + language_1.Language.getLang("%%%search_message_fromtip%%%") + '</label>\n    <div class="controlContent">\n     <div id="_messageSearchSpeaker" role="button" aria-labelledby="_messageSearchSpeakerTip" class="button">\n      <span class="icoFontAddBtn icoSizeLarge"></span>\n     </div>\n     <div id="_messageSearchSpeakerBox" class="messageSearchSpeakerBox"></div>\n    </div>\n    <label class="controlLabel">' + language_1.Language.getLang("%%%search_message_termtip%%%") + '</label>\n    <div class="controlContent">\n     <select id="_messageSearchTerm">\n      <option value="all">' + language_1.Language.getLang("%%%search_term_all%%%") + '</option>\n      <option value="7">' + language_1.Language.getLang("%%%search_term_7%%%") + '</option>\n      <option value="30">' + language_1.Language.getLang("%%%search_term_30%%%") + '</option>\n      <option value="90">' + language_1.Language.getLang("%%%search_term_90%%%") + '</option>\n      <option value="365">' + language_1.Language.getLang("%%%search_term_365%%%") + '</option>\n      <option value="specify">' + language_1.Language.getLang("%%%search_term_specify%%%") + '</option>\n     </select>\n     <span id="_messageSearchTerm_specify" style="display:none"> ( <input type="text" id="_messageSearchDateFrom" class="_datePicker"/> ' + language_1.Language.getLang("%%%search_term_separator%%%") + ' <input type="text" id="_messageSearchDateTo" class="_datePicker"/> )</span>\n    </div>\n   </div> \x3c!-- .searchOptionGroup --\x3e\n  </div>\x3c!-- .floatWindowContentGroup --\x3e\n  <div id="_messageSearchResultHead" class="searchResultBox" style="display:none">\n   <div>' + language_1.Language.getLang("%%%search_resulttip%%%") + ' <span id="_messageSearchResultNum">0</span>' + language_1.Language.getLang("%%%search_result_unit%%%") + '<span id="_messageSearchOverflow" style="display:none">' + language_1.Language.getLang("%%%search_max_results%%%", {
                max_results: SEARCH_MAX_RESULTS
            }) + '</span></div>\n   <ul id="_messageSearchGrouping">\n    <li>' + language_1.Language.getLang("%%%search_group_by_time%%%") + "</li>\n    <li>" + language_1.Language.getLang("%%%search_group_by_chat%%%") + "</li>\n    <li>" + language_1.Language.getLang("%%%search_group_by_user%%%") + '</li>\n   </ul>\x3c!-- .termList --\x3e\n   <ul id="_messageSearchExpand">\n    <li id="_messageSearchResultOpenAll" class="adminButton button btnLarge _cwTextUnselectable" role="button" aria-label="' + language_1.Language.getLang("%%%search_result_bychat_openall%%%") + '"><span class="icoFontContentOpen"></span></li>\n    <li id="_messageSearchCloseAll" class="adminButton button btnLarge _cwTextUnselectable" role="button" aria-label="' + language_1.Language.getLang("%%%search_result_bychat_closeall%%%") + '"><span class="icoFontContentClose"></span></li>\n   </ul>\n  </div>\n </div>\n <div id="_messageSearchContentBox" class="_cwFWContent">\n  <div id="_messageSearchResultBox" class="searchResultListBox">\n   <div id="_messageSearchLoading" class="contentLoading" style="display:none"><img src="./imagenew/all/common/loader/img_loader_white.gif" alt="Loading" />' + language_1.Language.getLang("%%%search_loading%%%") + '</div>\n   <div id="_messageSearchResult" class="searchResultChat"></div>\n  </div>\n </div>\n</div>\x3c!-- .messageSearchContent --\x3e\n\x3c!-- end message_search --\x3e\n\n' + task_window_template_1.TaskWindowTemplate + '\n\n\x3c!-- start admin_file --\x3e\n<div id="_fileWindow" class="fileWindow" style="display:none">\n <div class="_cwFWHeader adminNavigation">\n  <input type="text" id="_fileWindowSearch" class="inputLong" placeholder="' + language_1.Language.getLang("%%%file_search%%%") + '"/>\n  <div class="btnGroup">\n   <div id="_fileWindowCheckAllButton" class="_button btnLarge"><input type="checkbox" id="_fileWindowCheckAll" class="_checkBox">' + language_1.Language.getLang("%%%checkall_full%%%") + '</div>\n   <div id="_fileWindowDeleteButton" class="_button btnLarge btnDisable"><span class="icoFontActionDelete"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%file_delete_hint%%%") + '</span></div>\n  </div>\n  <div class="floatListpager">\n   <p id="_fileWindowPagerIndex"></p>\n   <ul id="_fileWindowPager">\n    <li data-type="first"><span class="icoFontArrowDoubleLeft"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_first%%%") + '</span></li>\n    <li data-type="prev"><span class="icoFontTriangleLeft"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_prev%%%") + '</span></li>\n    <li data-type="next"><span class="icoFontTriangleRight"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_next%%%") + '</span></li>\n    <li data-type="last"><span class="icoFontArrowDoubleRight"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_last%%%") + '</span></li>\n   </ul>\n  </div>\n </div>\x3c!-- .adminNavigation --\x3e\n <div class="_cwFWContent">\n  <div class="adminWindowAllList">\n   <div id="_fileWindowBox" class="adminAllListArea">\n    <ul id="_fileWindowList" class="fileAllListContentArea"></ul>\n   </div>\x3c!-- .adminAllListArea --\x3e\n   <div class="adminDetailArea">\n    <div id="_fileDetailArea" class="adminDetailContentArea" style="display: none;">\n     <div class="adminDetailH1">\n      <div id="_fileDetailTitle" class="_fileDetailName adminDetailText autotrim"></div>\n      <div class="linkIconStatus closeAction"><span id="_fileDetailClose" class="icoFontCancel icoSizeLarge"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_close%%%") + '</span></div>\n     </div>\n     <div id="_fileDetailPreviewArea"><div class="_fileDetailPreview fileDetailPreviewArea"></div></div>\n     <div class="adminDetailContent adminfileDetailContent">\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%file_size%%%") + '：</label>\n       <div class="_fileDetailSize controlContent autotrim"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%file_upload_by%%%") + ':</label>\n       <div class="_fileDetailUploadBy controlContent autotrim"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%file_upload_datetime%%%") + '：</label>\n       <div class="_fileDetailUploadDate controlContent autotrim"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%chat%%%") + ':</label>\n       <div class="controlContent autotrim"><a class="_fileDetailChat _roomLink"></a></div>\n      </div>\n     </div>\x3c!-- .adminDetailContent --\x3e\n    </div>\n    <div id="_fileDetailBlankArea" class="adminDetailContentArea">\n     <div class="adminDetailNoneContenText">\n      ' + language_1.Language.getLang("%%%file_click_detail%%%") + '\n     </div>\n    </div>\x3c!-- .taskDetailContentNoneArea --\x3e\n   </div>\x3c!-- .adminDetailArea --\x3e\n  </div>\x3c!-- .adminWindowAllList --\x3e\n </div>\n\n <div class="_cwFWFooter fileManagerFooter">\n  <div class="storageUsage">\n   <dl>\n    <dt>' + language_1.Language.getLang("%%%storage_activity_ratio_label%%%") + '</dt>\n    <dd>\n     <ul class="storageUsageBar">\n      <li id="_storageUsageMessage" class="storageUsageMessage">' + language_1.Language.getLang("%%%message%%%") + '</li>\n      <li id="_storageUsageFile" class="storageUsageFile">' + language_1.Language.getLang("%%%file%%%") + '</li>\n      <li id="_storageUsageOther" class="storageUsageOther">' + language_1.Language.getLang("%%%storage_other_user%%%") + '</li>\n     </ul>\x3c!-- .storageUsageBar --\x3e\n    </dd>\n    <dd>\n     <ul class="inlineblockList storageDetail">\n      <li><span class="storageUsageMessage"></span>' + language_1.Language.getLang("%%%message%%%") + ': <span id="_storageUsageMessageSize"></span></li>\n      <li><span class="storageUsageFile"></span>' + language_1.Language.getLang("%%%file%%%") + ': <span id="_storageUsageFileSize"></span></li>\n      <li><span class="storageUsageOther"></span>' + language_1.Language.getLang("%%%storage_other_user%%%") + ': <span id="_storageUsageOtherSize"></span></li>\n     </ul>\x3c!-- .inlineblockList --\x3e\n    </dd>\n    <dd>\n     <span id="_storageTotalUsage"></span> / <span id="_storageTotalCapacity"></span> (<span id="_storageTotalUsageRatioText"><span id="_storageTotalUsageRatio"></span>% ' + language_1.Language.getLang("%%%storage_used%%%") + '</span>) <span id="_storageUserAdminLink" style="display:none">(<a href="' + ACCOUNT_SERVER_PATH + '/user_list.php" target="_blank">' + language_1.Language.getLang("%%%storage_show_all_user%%%") + '</a>)</span>\n    </dd>\n   </dl>\n  </div>\x3c!-- .storageUsage --\x3e\n  <div id="_storageAddButton" class="storageUpdate">\n   <p role="button" aria-labelledby="_storageAddButtonText" class="button btnPrimary"><a id="_storageAddButtonText" href="#">' + language_1.Language.getLang("%%%storage_add_link%%%") + '</a></p>\n  </div>\x3c!-- .storageUpdate --\x3e\n </div>\x3c!-- .fileManagerFooter --\x3e\n</div>\x3c!-- #_adminFileContent --\x3e\n\x3c!-- end admin_file --\x3e\n\n\x3c!-- start admin_contact --\x3e\n<div id="_contactWindow" class="contactWindow" style="display: none;">\n <div class="_cwFWHeader">\n  <div class="floatHeaderTab clearfix">\n   <ul id="_contactWindowTab">\n    <li id="_contactWindowTabInviteEmail" data-type="invitemail" class="floatTabSelect" style="display: none;">' + language_1.Language.getLang("%%%contact_menu_invite_mail%%%") + '</li>\n    <li id="_contactWindowTabContact" data-type="addcontact">' + language_1.Language.getLang("%%%contact_menu_user_search%%%") + '</li>\n    <li id="_contactWindowTabMyContact" data-type="contact">' + language_1.Language.getLang("%%%contact_menu_list%%%") + '<span id="_contactWindowListNum"></span></li>\n    <li id="_contactWindowTabMyRequest" data-type="myrequest">' + language_1.Language.getLang("%%%contact_menu_myrequest%%%") + '<span id="_contactWindowMyRequestNum"></span></li>\n    <li id="_contactWindowTabRequest" data-type="request">' + language_1.Language.getLang("%%%contact_menu_request%%%") + '<span id="_contactWindowRequestNum"></span></li>\n    <li id="_contactWindowTabNoRequest" data-type="norequest">' + language_1.Language.getLang("%%%contact_menu_norequest%%%") + '<span id="_contactWindowNoRequestNum"></span></li>\n   </ul>\n  </div>\x3c!-- .floatHeaderTab --\x3e\n  <div id="_contactWindowNavigation" class="adminNavigation">\n   <input type="text" id="_contactWindowSearch" class="inputLong" />\n   <div class="btnCheckGroup" style="display: none;">\n    <div id="_contactWindowCheckAllButton" class="_button btnLarge btnDisable"><input type="checkbox" id="_contactWindowCheckAll" class="_checkBox">' + language_1.Language.getLang("%%%checkall_full%%%") + '</div>\n    <div id="_contactWindowCheckActionArea" style="display:inline">\n     <div id="_contactWindowAdd" class="_contactWindowNavigationItem _button btnPrimary btnLarge btnDisable" style="display:none">' + language_1.Language.getLang("%%%button_add_contact_long%%%") + '</div>\n     <div id="_contactWindowDelete" class="_contactWindowNavigationItem _button btnLarge btnDisable" style="display:none">' + language_1.Language.getLang("%%%contact_delete%%%") + '</div>\n     <div id="_contactWindowCancel" class="_contactWindowNavigationItem _button btnLarge btnDisable" style="display:none">' + language_1.Language.getLang("%%%contact_request_cancel%%%") + '</div>\n     <div id="_contactWindowAccept" class="_contactWindowNavigationItem _button btnPrimary btnLarge btnDisable" style="display:none">' + language_1.Language.getLang("%%%button_accept_long%%%") + '</div>\n    </div>\n   </div>\n   <div class="floatListpager">\n    <p id="_contactWindowPagerIndex"></p>\n    <ul id="_contactWindowPager">\n     <li data-type="first"><span class="icoFontArrowDoubleLeft"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_first%%%") + '</span></li>\n     <li data-type="prev"><span class="icoFontTriangleLeft"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_prev%%%") + '</span></li>\n     <li data-type="next"><span class="icoFontTriangleRight"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_next%%%") + '</span></li>\n     <li data-type="last"><span class="icoFontArrowDoubleRight"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%pager_last%%%") + '</span></li>\n    </ul>\n   </div>\n  </div>\x3c!-- adminNavigation --\x3e\n </div>\x3c!-- ._cwFWHeader --\x3e\n <div class="_cwFWContent">\n  <div class="adminWindowAllList">\n   <div id="_contactInviteMailArea" class="contactInviteMailArea">\n    <div id="_contentInviteMailNew" class="contactInviteMailContent" style="display: none;">\n     <div id="_contactInviteMailIndividual" class="contactInviteMailSection">\n      <div class="contactInviteErrorMessage alert alertDanger" style="display: none"></div>\n      <label class="contactInviteMailLabel">' + language_1.Language.getLang("%%%mailaddress%%%") + '</label>\n      <ul id="_contactInviteMailList" class="contactInviteMailList">\n       <li class="_mailAddressInput contactInviteMailList__item">\n        <input type="email" name="email" placeholder="' + language_1.Language.getLang("%%%contact_invite_mail_enter_your_email_address%%%") + '" />\n        <span class="_cwFWButton _mailAddressInputCancel icoFontCancel icoSizeLarge contactInviteMailList__cancelButton"></span>\n       </li>\n      </ul>\n      <div class="formControlArea clear">\n       <a href="#" id="_contactInviteMailAddAddress" class="addForm">\n        <span class="icoFontAddBtn AddFormIcon" aria-hidden="true"></span>' + language_1.Language.getLang("%%%contact_invite_mail_add_email_address_to_invite%%%") + '\n       </a>\n       <a href="#" class="changeFormBulk">' + language_1.Language.getLang("%%%contact_invite_mail_bulk_add%%%") + '</a>\n      </div>\n     </div>\n     <div id="_contactInviteMailBulk" class="contactInviteMailSection" style="display: none;">\n      <div class="contactInviteErrorMessage alert alertDanger" style="display: none;"></div>\n      <label class="contactInviteMailLabel">' + language_1.Language.getLang("%%%contact_add_multiple_mailtip%%%") + '</label>\n      <textarea id="_addFromEmailContentEmails" name="emails" placeholder="' + language_1.Language.getLang("%%%contact_add_multiple_mailtip%%%") + '"></textarea>\n      <a href="#" class="changeFormIndividual">' + language_1.Language.getLang("%%%contact_invite_mail_add_individually%%%") + '</a>\n     </div>\n     <div class="contactInviteMailSection">\n      <label class="contactInviteMailLabel">' + language_1.Language.getLang("%%%contact_invite_mail_message_optional%%%") + '</label>\n      <textarea id="_addFromEmailContent" name="message" placeholder="' + language_1.Language.getLang("%%%contact_invite_mail_enter_message%%%") + '"></textarea>\n     </div>\n    </div>\x3c!-- .contactInviteMailContent --\x3e\n    <div id="_contentInviteMailFinished" class="contactInviteMailContent" style="display: none;">\n     <div class="contactInviteMailSection">\n      <p class="alert alertSuccess">' + language_1.Language.getLang("%%%contact_invite_mail_invitation_was_sent%%%") + '</p>\n      <p class="alert alertDanger">' + language_1.Language.getLang("%%%contact_invite_mail_failed_sent_following_reasons%%%") + '</p>\n     </div>\n     <div id="_contactInviteMailSentEmails" class="contactInviteMailResult">\n        <p class="contactInviteMailResultTitle mailResultTitleSuccess">' + language_1.Language.getLang("%%%contact_invite_mail_invitation_sent%%%") + '</p>\n        <ul class="contactInviteMailResultList">\n        </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n     <div id="_contactInviteMailUnreachableEmailAddresses" class="contactInviteMailResult">\n        <p class="contactInviteMailResultTitle mailResultTitleFailed">' + language_1.Language.getLang("%%%contact_invite_mail_invalid_email_address%%%") + '</p>\n        <ul class="contactInviteMailResultList">\n        </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n     <div id="_contactInviteMailAlreadyRequested" class="contactInviteMailResult">\n        <p class="contactInviteMailResultTitle mailResultTitleFailed">' + language_1.Language.getLang("%%%contact_invite_mail_already_send_request%%%") + '</p>\n        <ul class="contactInviteMailResultList">\n        </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n     <div id="_contactInviteMailAlreadyConnected" class="contactInviteMailResult">\n      <p class="contactInviteMailResultTitle mailResultTitleFailed">' + language_1.Language.getLang("%%%contact_invite_mail_already_in_your_contacts%%%") + '</p>\n      <ul class="contactInviteMailResultList">\n      </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n     <div id="_contactInviteMailRequestAlreadyReceived" class="contactInviteMailResult">\n        <p class="contactInviteMailResultTitle mailResultTitleFailed">' + language_1.Language.getLang("%%%contact_invite_mail_already_received_request%%%") + '</p>\n        <ul class="contactInviteMailResultList">\n        </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n     <div id="_contactInviteMailNotAllowedConnecting" class="contactInviteMailResult">\n        <p class="contactInviteMailResultTitle mailResultTitleFailed">' + language_1.Language.getLang("%%%contact_invite_mail_restricted_to_outside_orgaization%%%") + '</p>\n        <ul class="contactInviteMailResultList">\n        </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n     <div id="_contactInviteMailContactRequestLimitExceeded" class="contactInviteMailResult">\n        <p class="contactInviteMailResultTitle mailResultTitleFailed">' + language_1.Language.getLang("%%%contact_invite_mail_maximum_contact_requests%%%") + '</p>\n        <ul class="contactInviteMailResultList">\n        </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n     <div id="_contactInviteMailContactYourEmailAddress" class="contactInviteMailResult">\n      <p class="contactInviteMailResultTitle mailResultTitleFailed">' + language_1.Language.getLang("%%%contact_invite_mail_send_your_account%%%") + '</p>\n      <ul class="contactInviteMailResultList">\n      </ul>\n     </div>\x3c!-- .contactInviteMailResult --\x3e\n    </div>\x3c!-- .contactInviteMailContent --\x3e\n   </div>\x3c!-- #_contactInviteMailArea --\x3e\n   <div id="_contactWindowBox" class="adminAllListArea">\n    <ul id="_contactWindowList" class="contactList"></ul>\n   </div>\x3c!-- .adminAllListArea --\x3e\n   <div id="_contactDetailAreaWrapper" class="adminDetailArea contactDetailArea">\n    <div id="_contactDetailArea" class="adminDetailContentArea" style="display: none;">\n     <div class="adminDetailH1">\n      <div class="_profileName adminDetailText autotrim"></div>\n      <div class="closeAction linkIconStatus"><span id="_contactDetailClose" role="button" class="icoFontCancel icoSizeLarge"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_close%%%") + '</span></div>\n     </div>\n     <div class="_profileContactDetailCover profileContactDetailCoverArea"></div>\n     <div class="adminDetailContent contactDetailContent">\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%profile_setting_introductiontip%%%") + '</label>\n       <div class="_profileNameDescription controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%profile_setting_orgnametip%%%") + '</label>\n       <div class="_profileOrgName controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%profile_setting_departmenttip%%%") + '</label>\n       <div class="_profileDepartment controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%profile_setting_titletip%%%") + '</label>\n       <div class="_profileTitle controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%profile_setting_addresstip%%%") + '</label>\n       <div class="_profileAddress controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel">' + language_1.Language.getLang("%%%profile_setting_urltip%%%") + '</label>\n       <div class="_profileUrl controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel longLabel">' + language_1.Language.getLang("%%%profile_setting_emailtip%%%") + '</label>\n       <div class="_profileEmail controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel longLabel">' + language_1.Language.getLang("%%%profile_setting_tel_organizationtip%%%") + '</label>\n       <div class="_profileOrgTel controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel longLabel">' + language_1.Language.getLang("%%%profile_setting_tel_extensiontip%%%") + '</label>\n       <div class="_profileExtensionTel controlContent"></div>\n      </div>\n      <div class="controlGroup">\n       <label class="controlLabel longLabel">' + language_1.Language.getLang("%%%profile_setting_tel_mobiletip%%%") + '</label>\n       <div class="_profileMobileTel controlContent"></div>\n      </div>\n     </div>\x3c!-- .adminDetailContentInner --\x3e\n    </div>\x3c!-- .adminDetailContentArea --\x3e\n    <div id="_contactDetailBlankArea" class="adminDetailContentArea">\n     <div class="adminDetailNoneContenText">\n      ' + language_1.Language.getLang("%%%contact_click_detail%%%") + '\n     </div>\n    </div>\x3c!-- .adminDetailArea --\x3e\n   </div>\x3c!-- .contactDetailArea --\x3e\n  </div>\x3c!-- .adminWindowAllList --\x3e\n </div>\x3c!-- ._cwFWContent --\x3e\n <div class="_cwFWFooter contactInviteMailFooter" style="display: none;">\n  <div id="_contactInviteMail" class="_button btnPrimary btnLarge">' + language_1.Language.getLang("%%%contact_invite_mail_send%%%") + '</div>\n  <div id="_contactOtherInviteMail" class="_button btnLarge">' + language_1.Language.getLang("%%%contact_invite_mail_invite_more%%%") + "</div>\n </div>\n</div>\n\x3c!-- end admin_contact --\x3e\n"
    }, {
        "../lib/language": 384,
        "./float-window-contents/task-window-template": 441
    }],
    443: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language"),
            conciergeTemplate = SHOW_CONCIERGE ? '\n<div class="globalHeaderAssistant _showDescription"\n     role="button"\n     aria-label="' + language_1.Language.getLang("%%%menu_assistant%%%") + "\"\n     data-delay=\"0\"\n>\n    <a class=\"globalHeaderAssistant__button\"\n       onclick=\"ga('send','event','Assistant','Click','AssistantMenu');\"\n       href=\"" + language_1.Language.getLang("%%%assistant_lp_url%%%") + '"\n       target="_blank"\n       aria-hidden="true"\n    >\n      <svg viewBox="0 0 10 10" class="globalHeaderAssistant__icon" height="24" width="24">\n        <use fill-rule="evenodd" xlink:href="#icon_assistant"></use>\n      </svg>\n    </a>\n</div>' : "",
            kddiHelpTemplate = "kddi" === OEM ? '\n<li class="helpMenuItem">\n    <a class="helpMenuItem__anchor"\n       href="' + language_1.Language.getLang("%%%kddi_manual_path%%%") + '"\n       target="_blank"\n    >' + language_1.Language.getLang("%%%kddi_manual_name%%%") + "</a>\n</li>" : "",
            helpTemplate = "ja" === LANGUAGE ? '\n<li class="helpMenuItem">\n    <a class="helpMenuItem__anchor"\n       href="http://feedback-ja.chatwork.com/"\n       target="_blank"\n    >' + language_1.Language.getLang("%%%menu_feedback%%%") + "</a>\n</li>\n<li class=\"helpMenuItem\">\n    <a class=\"helpMenuItem__anchor\"\n       onclick=\"ga('send','event','ChatWorkAd','Click','InfoMenu');\"\n       href=\"http://www.chatwork.com/ja/lp/chatworkad/\"\n       target=\"_blank\"\n    >広告掲載のお問い合わせ</a>\n</li>" : '<li class="helpMenuItem">\n    <a id="_feedback"\n       class="helpMenuItem__anchor"\n    >' + language_1.Language.getLang("%%%menu_feedback%%%") + "</a>\n</li>";
        exports.headerTemplate = '\n<div id="_globalHeader" class="header">\n    <div id="_inner" class="globalHeader">\n        <div class="globalHeader__branding">\n            <h1 id="_logo" class="globalHeaderBranding">\n                <img class="globalHeaderBranding__' + OEM + 'SvgLogo"\n                     src="./imagenew/all/common/logo/img_logo_' + OEM + '.png"\n                     alt="ChatWork"\n                >\n\n                <img class="globalHeaderBranding__' + OEM + 'NoSvgLogo"\n                     src=""\n                     alt="ChatWork"\n                >\n            </h1>\n        </div>\n\n        <div id="_headerSearch" class="globalHeader__search">\n            <div class="globalHeaderSearch">\n                <input type="text"\n                       name="search"\n                       id="_search"\n                       class="_searchBox"\n                       placeholder="' + language_1.Language.getLang("%%%chat_search%%%") + '"\n                >\n            </div>\n        </div>\n\n        <div class="globalHeader__navigation">\n          ' + conciergeTemplate + '\n          <ul id="_adminNavi"\n              class="globalHeaderNavigation"\n              role="navigation"\n          >\n              <li id="_openTaskWindow"\n                  class="globalHeaderNavItem _showDescription"\n                  role="button"\n                  aria-label="' + language_1.Language.getLang("%%%menu_mytask%%%") + '"\n                  data-delay="0"\n              >\n                <span class="globalHeaderNavItem__button icoFontAdminTaskMenu"\n                      aria-hidden="true"\n                ></span>\n                <span id="_myAllTaskNum"\n                      class="globalHeaderNavItem__badge"\n                ></span>\n              </li>\n              <li role="button"\n                  id="_openFileWindow"\n                  class="globalHeaderNavItem _showDescription"\n                  aria-label="' + language_1.Language.getLang("%%%menu_file%%%") + '"\n                  data-delay="0"\n              >\n                <span class="globalHeaderNavItem__button icoFontAdminFileMenu"\n                      aria-hidden="true"\n                ></span>\n                <span id="_myFileNotice"\n                      class="globalHeaderNavItem__fileBadge"\n                >&nbsp;!&nbsp;</span>\n              </li>\n              <li role="button"\n                  id="_openContactWindow"\n                  class="globalHeaderNavItem _adminContact _showDescription"\n                  aria-label="' + language_1.Language.getLang("%%%menu_contact_admin%%%") + '"\n                  data-delay="0"\n              >\n                <span class="globalHeaderNavItem__button icoFontAdminContactMenu"\n                      aria-hidden="true"\n                ></span>\n                <span id="_myAllContactNum"\n                      class="globalHeaderNavItem__badge"\n                ></span>\n              </li>\n            </ul>\n\n            <div role="button"\n                 aria-label="' + language_1.Language.getLang("%%%menu_information%%%") + '"\n                 id="_openInfomation"\n                 data-delay="0"\n                 class="globalHeaderInformation _showDescription"\n            >\n              <span class="globalHeaderInformation__icon icoFontAdminInfoMenu"\n                    aria-hidden="true"\n              ></span>\n            </div>\n\n            <div id="_myStatusButton"\n                 class="globalHeaderMyAccount"\n            >\n                <div id="_myStatusIcon"\n                     class="globalHeaderMyAccount__avatar"\n                >\n                    <img class="globalHeaderMyAccount__avatarImage"\n                         src="' + CF_PATH + '/avatar/ico_avatar_loading.png"\n                    >\n                </div>\n\n                <p id="_myStatusName"\n                   class="globalHeaderMyAccount__name"\n                >' + language_1.Language.getLang("%%%loading%%%") + '</p>\n\n            </div>\n        </div>\n\n        <ul role="menu"\n            id="_myStatusBox"\n            class="myAccountMenu"\n        >\n            <li role="menuitem"\n                id="_myProfile"\n                class="myAccountMenu__item"\n            >\n                <a class="myAccountMenu__anchor">' + language_1.Language.getLang("%%%menu_profile_setting%%%") + '</a>\n            </li>\n\n            <li role="menuitem"\n                id="_setting"\n                class="myAccountMenu__item"\n            >\n                <a class="myAccountMenu__anchor">' + language_1.Language.getLang("%%%menu_personal_setting%%%") + '</a>\n            </li>\n\n            <li role="menuitem"\n                id="_openAdminMenu"\n                class="myAccountMenu__item"\n            >\n                <a id="_openServiceAdmin"\n                   class="myAccountMenu__anchor"\n                >' + language_1.Language.getLang("%%%menu_admin_setting%%%") + '</a>\n            </li>\n\n            <li role="menuitem"\n                id="_upgradePlan"\n                class="myAccountMenu__item"\n                style="display:none"\n            >\n                <a class="myAccountMenu__anchor">' + language_1.Language.getLang("%%%serviceadmin_upgrade%%%") + '</a>\n            </li>\n\n            <li role="menuitem"\n                id="_userAdminMenu"\n                class="myAccountMenu__item"\n                style="display:none"\n            >\n                <a class="myAccountMenu__anchor"\n                   href="' + PATH_CHATWORK_SERVICE + '/packages/chatwork/user_list.php"\n                   target="_blank">' + language_1.Language.getLang("%%%serviceadmin_user_list_label%%%") + "</a>\n            </li>\n\n            <li class=\"myAccountMenu__item\">\n                <a class=\"myAccountMenu__anchor\"\n                   onclick=\"ga('send', 'event', 'DownloadApp', 'Click', 'myStatusMenu');\"\n                   href=\"" + language_1.Language.getLang("%%%url_download_app%%%") + '"\n                   target="_blank"\n                >' + language_1.Language.getLang("%%%menu_download_app%%%") + '</a>\n            </li>\n\n            <li class="myAccountMenu__item">\n                <a role="menuitem"\n                   class="myAccountMenu__anchor"\n                   href="?act=logout"\n                >' + language_1.Language.getLang("%%%menu_logout%%%") + '</a>\n            </li>\n        </ul>\n    </div>\n\n    <div id="_informationBox" class="helpMenu">\n        <div id="_notificationArea" class="helpMenu__notification">\n            <div class="helpMenuNotification">\n\n                <p class="helpMenuNotification__title">\n                    <span class="helpMenuNotification__titleIcon icoFontInfo"></span>' + language_1.Language.getLang("%%%menu_announcement%%%") + '\n                </p>\n\n                <div id="_notificationContents" class="helpMenuNotification__body">\n                    <ul id="_notificationItemList">\n                    </ul>\n                </div>\n\n            </div>\n        </div>\n\n        <ul class="helpMenu__Items">\n            <li class="helpMenuItem">\n                <a id="_userGuideLink"\n                   class="helpMenuItem__anchor"\n                >' + language_1.Language.getLang("%%%menu_userguide%%%") + '</a>\n            </li>\n\n            <li class="helpMenuItem">\n                <a id="_cheatSheetLink"\n                   class="helpMenuItem__anchor"\n                >' + language_1.Language.getLang("%%%menu_cheat_sheet%%%") + '</a>\n            </li>\n\n            <li class="helpMenuItem">\n                <a class="helpMenuItem__anchor"\n                   href="' + language_1.Language.getLang("%%%chatwork_help_page_path%%%") + '"\n                   target="_blank"\n                >' + language_1.Language.getLang("%%%menu_help%%%") + "</a>\n            </li>\n\n            " + kddiHelpTemplate + "\n            " + helpTemplate + '\n\n        </ul>\n\n        <div class="helpMenu__footer">\n\n            <small class="helpMenuCopyright">\n                &copy; ' + (new Date).getFullYear() + ' <a href="' + COMPANY_PATH + '" target="_blank">ChatWork</a>\n            </small>\n\n            <ul class="helpMenuSocialLink">\n                <li class="helpMenuSocialLink__item">\n                    <a class="_showDescription"\n                       href="https://facebook.com/' + FACEBOOK_ID + '"\n                       target="_blank"\n                       aria-label="Facebook"\n                       data-delay="0"\n                    ><span class="helpMenuSocialLink__icon ico27FacebookWh"></span></a>\n                </li>\n\n                <li class="helpMenuSocialLink__item">\n                    <a class="_showDescription"\n                       href="https://twitter.com/' + TWITTER_ID + '"\n                       target="_blank"\n                       aria-label="Twitter"\n                       data-delay="0"\n                    ><span class="helpMenuSocialLink__icon ico27TwitterWh"></span></a>\n                </li>\n\n                <li class="helpMenuSocialLink__item">\n                    <a class="_showDescription"\n                       href="https://plus.google.com/' + GOOGLE_PLUS_ID + '/"\n                       target="_blank"\n                       aria-label="Google+"\n                       data-delay="0"\n                    ><span class="helpMenuSocialLink__icon ico27GoogleWh"></span></a>\n                </li>\n\n                <li class="helpMenuSocialLink__item">\n                    <a class="_showDescription"\n                       href="' + language_1.Language.getLang("%%%fbconnect_blog_url%%%") + '"\n                       target="_blank"\n                       aria-label="Blog"\n                       data-delay="0"\n                    ><span class="helpMenuSocialLink__icon ico27BlogWh"></span></a>\n                </li>\n\n            </ul>\n        </div>\n    </div>\n\n    <div id="_searchResult"\n         class="searchResult"\n         style="display: none;"\n    >\n        <ul role="list"\n            id="_searchResultChatList"\n            class="searchResult__chatList"\n        ></ul>\n\n\n        <div id="_messageSearch"\n             class="searchResult__footer"\n        >\n  <span id="_messageSearchIcon"\n        class="searchResult__searchIcon icoFontSearch"\n  ></span>\n  <span id="_messageSearchHint"\n        class="searchResult__searchKeyword"\n  ></span>\n        </div>\n\n    </div>\n</div>'
    }, {
        "../lib/language": 384
    }],
    444: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var header_template_1 = require("./header-template"),
            side_content_template_1 = require("./side-content-template"),
            main_content_template_1 = require("./main-content-template"),
            float_window_template_1 = require("./float-window-template"),
            dialog_template_1 = require("./dialog-template"),
            tooltip_template_1 = require("./tooltip-template"),
            room_info_template_1 = require("./room-info-template"),
            member_edit_template_1 = require("./member-edit-template"),
            member_addition_template_1 = require("./member-addition-template"),
            cheat_sheet_template_1 = require("./cheat-sheet-template"),
            svg_sprite_template_1 = require("./svg-sprite-template");
        exports.template = '\n<div class="svgSprite">\n  ' + svg_sprite_template_1.svgSpriteTemplate + '\n</div>\n<div id="_wrapper" class="wrapper" style="visibility:hidden">\n  <div id="_commercialAnnounceBanner"></div>\n  ' + header_template_1.headerTemplate + '\n  <div id="_content" class="content">\n    <div id="_sideContent" class="sideContent">\n      ' + side_content_template_1.sideContentTemplate + '\n    </div>\x3c!-- .sideContent --\x3e\n    <div id="_mainContent" class="mainContent">\n      ' + main_content_template_1.mainContentTemplate + "\n    </div>\x3c!-- .mainContent --\x3e\n    " + float_window_template_1.floatWindowTemplate + "\n  </div>\n  " + dialog_template_1.dialogTemplate + "\n  " + tooltip_template_1.tooltipTemplate + "\n  " + room_info_template_1.roomInfoTemplate + "\n  " + member_edit_template_1.memberEditTemplate + "\n  " + member_addition_template_1.memberAdditionTemplate + "\n  " + cheat_sheet_template_1.cheatSheetTemplate + '\n  \x3c!-- start aleart --\x3e\n  <div id="_statusAlert" class="alertArea">\n    <div id="_statusAlertMessage" class="alert alertDanger"></div>\n  </div>\n  \x3c!-- /start aleart --\x3e\n</div>\n\n<div id="_hiddenIframe"></div>\n\n<div id="fb-root"></div>\n<div id="_audioList" style="display:none"></div>\n'
    }, {
        "./cheat-sheet-template": 400,
        "./dialog-template": 440,
        "./float-window-template": 442,
        "./header-template": 443,
        "./main-content-template": 445,
        "./member-addition-template": 446,
        "./member-edit-template": 447,
        "./room-info-template": 448,
        "./side-content-template": 449,
        "./svg-sprite-template": 451,
        "./tooltip-template": 452
    }],
    445: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var chat_content_template_1 = require("./chat-content-template"),
            sub_room_information_template_1 = require("./sub-room-information-template"),
            chat_room_header_template_1 = require("./chat-room-header-template"),
            add_task_template_1 = require("./add-task-template"),
            language_1 = require("../lib/language"),
            adTemplate = "free" === SERVICE_PLAN && ["zh-tw", "ja", "vi", "th", "es"].includes(LANGUAGE) ? "\n\x3c!-- Ad Area --\x3e\n<div class=\"promotionArea\">\n  <div class=\"promotionContent\">\n  \x3c!-- ChatWorkRDAd --\x3e\n    <div id='div-gpt-ad-1415949969404-1' style='width:300px;'></div>\n  </div>\n</div>\n\x3c!-- /Ad Area --\x3e\n" : "";
        exports.mainContentTemplate = "\n" + chat_room_header_template_1.chatRoomHeaderTemplate + '\n\n<div id="_chatContent" class="chatContent">\n\n  ' + chat_content_template_1.chatContentTemplate + '\n\n</div>\n\n<div id="_subContent" class="subContent">\n  <div id="_subContentArea" class="subContentArea">\n    <div id="_subContentAreaContent">\n\n      ' + sub_room_information_template_1.subRoomInformationTemplate + '\n\n      <div class="subRoomTask">\n        <div class="subRoomTask__header">\n          <p class="subRoomTask__headerText">' + language_1.Language.getLang("%%%task%%%") + '<span id="_roomTaskNum"></span></p>\n        </div>\n\n        ' + add_task_template_1.addTaskTemplate + '\n\n        <div id="_subRoomMyTaskList" class="myListShow">\n          <input id="_subRoomMyTaskListShow" type="checkbox" checked="checked" style="display:none"/>\n        </div>\n        <div id="_subRoomTaskArea">\n          <ul id="_subRoomTaskList" class="subContentTask"></ul>\n        </div>\n      </div>\n\n      ' + adTemplate + '\n\n    </div>\n  </div>\x3c!-- .subContentArea --\x3e\n</div>\n\n\x3c!-- Live Notification --\x3e\n<div id="_liveNotification" class="liveNotification" style="display: none">\n  <div class="liveNotificationHeader">' + language_1.Language.getLang("%%%live_invited%%%") + '</div>\n  <span id="_liveNotificationClose" class="linkIconStatus closeAction icoFontCancel"></span>\n  <div id="_liveNotificationMessage" class="liveNotificationMessage"></div>\n  <div class="liveNotificationLiveBtnArea">\n    <div id="_liveNotificationLiveButton" role="button" class="_joinLive button btnSuccess" data-live-id="">\n      <span class="icoFontVideoChat"></span>\n      <span>' + language_1.Language.getLang("%%%live_join%%%") + "</span>\n    </div>\n  </div>\n</div>\n\x3c!-- /Live Notification --\x3e\n\x3c!-- end main_content --\x3e\n"
    }, {
        "../lib/language": 384,
        "./add-task-template": 397,
        "./chat-content-template": 398,
        "./chat-room-header-template": 399,
        "./sub-room-information-template": 450
    }],
    446: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.memberAdditionTemplate = '\n<div id="_memberAdditionMemberBox" class="roomMemberEditDialogContent" style="display:none">\n  <div class="controlContent">\n    <div class="controlContentBody memberTableSearch">\n      <input type="text" id="_memberAdditionContactFilter" class="_searchBox memberTableSearchForm" role="search" placeholder="' + language_1.Language.getLang("%%%chatroom_search_member%%%") + '">\n    </div>\x3c!-- /CONTACT LIST SEARCH --\x3e\n    <div id="_memberAdditionContactTableBox" class="_contactTableBox controlContentBody memberTableSection roomContactListBox">\n      <div class="controlContentHeader clearfix">\n        <div class="memberTableFilter">\n          <div id="_memberAdditionSelectAllBtn" class="_button memberTableCheckAll">\n            <input type="checkbox" id="_memberAdditionSelectAllContact" class="_checkBox" data-label="' + language_1.Language.getLang("%%%checkall_full%%%") + '">\n          </div>\n          <ul id="_memberAdditionOrganizationFilter" class="organizationFilter" role="radiogroup">\n            <li>\n              <input type="radio" id="_memberAdditionOrgFilterSelectAll" value="all" name="__memberAddition_org_filter" checked="">\n              <label for="_memberAdditionOrgFilterSelectAll" data-delay="0">' + language_1.Language.getLang("%%%organization_filter_radio_all%%%") + '</label>\n            </li>\n            <li>\n              <input type="radio" id="_memberAdditionOrgFilterSelectOrganized" value="organized" name="__memberAddition_org_filter">\n              <label for="_memberAdditionOrgFilterSelectOrganized" data-delay="0">' + language_1.Language.getLang("%%%organization_filter_radio_organized%%%") + '</label>\n            </li>\n          </ul>\x3c!-- /ORGANIZED FILTER --\x3e\n        </div>\n        <div id="_memberAdditionSelectRole" class="memberTableSelectRole"></div>\x3c!-- /ROLE SELECT --\x3e\n      </div>\n      <div class="contactTableBox">\n        <table id="_memberAdditionContact" class="_memberTableContact memberTable"></table>\n      </div>\n      <div class="memberTableSectionFooter">\n        <p><a id="_memberAdditionMemberEdit">' + language_1.Language.getLang("%%%member_addition_edit_member_label%%%") + '</a></p>\n      </div>\n    </div>\x3c!-- /CONTACT LIST BOX --\x3e\n    <div class="controlContentBody memberAdditionInvitationLinkSetting">\n      <div class="invitationLinkActivate">\n        <div class="invitationLinkActivateLabel">\n          <div class="invitationLinkActivateLabelCheckBox">\n            <input type="checkbox" id="_memberAdditionInvitationLinkSettingStatus" data-name="active_invitation_link" class="_checkBox" data-label="' + language_1.Language.getLang("%%%invitation_link%%%") + '" value="">\n          </div>\n          <p class="invitationLinkActivateLabelItem">\n            <a href="http://link.chat-work.com/h_invitation_link_' + ("ja" === LANGUAGE ? "ja" : "en") + '" class="_showDescription" aria-label="' + language_1.Language.getLang("%%%invitation_link_help_tool_tip%%%") + '" data-delay="0" target="_blank"><span class="icoFontHelp anchorIcon"></span></a>\n            <span> : </span>\n          </p>\n        </div>\n        <div class="invitationLinkActivateBody">\n          <div id="_memberAdditionInvitationLinkDisabled" class="invitationLinkDisabled">\n            <p class="invitationLinkDisabledBody">' + language_1.Language.getLang("%%%invitation_link_setting_status_disable%%%") + '</p>\n          </div>\x3c!-- INVITATION LINK DISABLED --\x3e\n          <div id="_memberAdditionInvitationLinkActive" class="invitationLinkActive">\n            <div class="js_invitationLinkDisplay invitationLinkDisplay">\n              <div class="invitationLinkDisplayBody">\n                <div class="invitationLinkDisplayBodyItem">\n                  <input type="text" class="js_invitationLinkDisplayInput invitationLinkDisplayInput" readonly>\n                </div>\n                <div class="js_invitationLinkBtnCopy _button">' + language_1.Language.getLang("%%%invitation_link_code_copy%%%") + '</div>\n                <p class="js_invitationLinkOpenEditor invitationLinkDisplayBodyItem invitationLinkEditorDrawer">\n                  <span class="icoFontSetting icoSizeLarge"></span>\n                </p>\n              </div>\n            </div>\n            <div class="js_invitationLinkEditor">\n              <div class="invitationLinkEditorForm">\n                <p class="invitationLinkEditorBodyItem">\n                  <span class="js_invitationLinkURL"></span>\n                </p>\n                <input type="text" class="js_invitationLinkEditorInput" name="__cwform_link_code">\n                <div class="js_invitationLinkBtnEdited _button btnPrimary">' + language_1.Language.getLang("%%%button_complete%%%") + '</div>\n                <p class="js_invitationLinkCloseEditor invitationLinkEditorBodyItem invitationLinkEditorDrawer">\n                  <span class="icoFontCancel icoSizeLarge"></span>\n                </p>\n                <div class="invitationLinkEditorBodyItem">\n                  <img class="js_invitationLinkCodeLoading controlContentLoaderImg" src="./imagenew/all/common/loader/img_loader_gray.gif">\n                </div>\n                <div class="invitationLinkEditorAlert">\n                  <p class="invitationLinkEditorAlertItem"><span class="js_invitationLinkCodeUsed"></span></p>\n                </div>\n              </div>\n              <div class="invitationLinkEditorBody">\n                <input type="checkbox" id="_memberAdditionInvitationLinkJoinNeedAccept" name="__cwform_join_need_accept" data-label="' + language_1.Language.getLang("%%%invitation_link_setting_join_accept%%%") + '" value="send">\n              </div>\n            </div>\x3c!-- INVITATION LINK EDITOR --\x3e\n          </div>\x3c!-- INVITATION LINK ACTIVE --\x3e\n        </div>\x3c!-- INVITATION LINK ACTIVATE BODY --\x3e\n      </div>\x3c!-- INVITATION LINK ACTIVATE --\x3e\n    </div>\x3c!-- /INVITATION LINK SETTING --\x3e\n  </div>\x3c!-- /CONTACT LIST SECTION --\x3e\n  <input type="hidden" name="__cwform_public" id="_memberAdditionPublic" value="">\n</div>\x3c!-- /MEMBER ADDITION DIALOG --\x3e\n'
    }, {
        "../lib/language": 384
    }],
    447: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.memberEditTemplate = '\n<div id="_memberEditMemberBox" class="roomMemberEditDialogContent" style="display:none">\n  <div class="controlContent">\n    <div class="memberTableSearch">\n      <input type="text" id="_memberEditMemberFilter" class="_searchBox memberTableSearchForm" role="search" placeholder="' + language_1.Language.getLang("%%%chatroom_search_member%%%") + '">\n    </div>\x3c!-- /MEMBER SEARCH --\x3e\n    <div class="memberTableSection">\n      <div id="_memberEditMemberTableBox" class="memberTableBox">\n        <table id="_memberEditMember" class="_memberTableMember memberTable"></table>\n      </div>\x3c!-- /MEMBER LIST BOX --\x3e\n      <div class="memberTableSectionFooter">\n        <a id="_memberEditMemberAdd"><span class="icoFontAddBtn anchorIcon"></span>' + language_1.Language.getLang("%%%member_edit_add_member_label%%%") + '</a>\n      </div>\n    </div>\n  </div>\x3c!-- /MEMBER LIST SECTION --\x3e\n  <div id="_memberEditMemberHidden"></div>\x3c!-- DATA STOCKER --\x3e\n</div>\x3c!-- /MEMBER EDIT DIALOG --\x3e\n'
    }, {
        "../lib/language": 384
    }],
    448: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.roomInfoTemplate = '\n<div id="_roomInfoChatInfoBox" class="roomInfoChatInfoBox clearfix" style="display:none">\n  <div class="roomInfoIcon">\n    <img id="_roomInfoIconSelected" src="' + CF_PATH + '/icon/ico_group.png" class="roomInfoIconImage" alt="" />\n    <div id="_roomInfoIconFileUpload" class="roomInfoIconFileUpload">\n      <span class="ico35FileUpload"></span><p></p>\n    </div>\n    <div id="_roomIconSelectorBtn" class="groupchatIconEdit">' + language_1.Language.getLang("%%%menu_change%%%") + '</div>\n  </div> \x3c!-- roomInfoIcon --\x3e\n  <div class="roomInfoMeta">\n    <div class="roomInfoMetaContent clearfix">\n      <div class="controlLabel roomInfoMetaLabel">\n        <label for="_roomInfoName">' + language_1.Language.getLang("%%%chatroom_nametip%%%") + '</label>\n      </div>\n      <div class="roomInfoMetaInput">\n        <input type="text" name="__cwform_name" id="_roomInfoName" class="inputFull" />\n      </div>\n    </div>\x3c!-- /.roomInfoMetaContent --\x3e\n    <div class="roomInfoMetaContent clearfix">\n      <div class="controlLabel roomInfoMetaLabel">\n        <label for="_roomInfoDescription">' + language_1.Language.getLang("%%%chatroom_desctip%%%") + '</label>\n      </div>\n      <div class="roomInfoMetaInput">\n        <textarea name="__cwform_description" id="_roomInfoDescription" class="roomInfoMetaTextarea" placeholder="' + language_1.Language.getLang("%%%chatroom_desc_explain%%%") + '"></textarea>\n      </div>\n    </div>\x3c!-- /.roomInfoMetaContent --\x3e\n  </div>\x3c!-- /.roomInfoMeta --\x3e\n  \x3c!-- /SECTION CHATROOM INFO --\x3e\n\n  \x3c!-- Roominfo icon selector tooltip --\x3e\n  <div id="_roomIconSelector" class="roomIconSelectorTip" style="display: none;">\n    <input type="hidden" name="__cwform_preset" id="_roomInfoIconSelectedValue" value="group">\n    <ul class="roomIconSelectorInput">\n      <li><input type="radio" id="_roomInfoIconTypePreset" class="_iconType roomInfoIconRadio" name="__cwform_icon_type" value="preset" checked="checked" /><label for="_roomInfoIconTypePreset">' + language_1.Language.getLang("%%%chatroom_icon_type_preset%%%") + '</label></li>\n      <li><input type="radio" id="_roomInfoIconTypeUpload" class="_iconType roomInfoIconRadio" name="__cwform_icon_type" value="upload" /><label for="_roomInfoIconTypeUpload">' + language_1.Language.getLang("%%%chatroom_icon_type_upload%%%") + '</label></li>\n    </ul>\n    <div id="_roomInfoIconDefault" class="roomInfoIconList">\n      <ul id="_roomInfoIconPreset">\n        <li><img src="' + CF_PATH + '/icon/ico_group.png" class="avatarSmall" alt="" data-pt="group" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_check.png" class="avatarSmall" alt="" data-pt="check" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_document.png" class="avatarSmall" alt="" data-pt="document" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_meeting.png" class="avatarSmall" alt="" data-pt="meeting" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_event.png" class="avatarSmall" alt="" data-pt="event" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_project.png" class="avatarSmall" alt="" data-pt="project" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_business.png" class="avatarSmall" alt="" data-pt="business" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_study.png" class="avatarSmall" alt="" data-pt="study" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_security.png" class="avatarSmall" alt="" data-pt="security" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_star.png" class="avatarSmall" alt="" data-pt="star" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_idea.png" class="avatarSmall" alt="" data-pt="idea" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_heart.png" class="avatarSmall" alt="" data-pt="heart" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_magcup.png" class="avatarSmall" alt="" data-pt="magcup" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_beer.png" class="avatarSmall" alt="" data-pt="beer" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_music.png" class="avatarSmall" alt="" data-pt="music" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_sports.png" class="avatarSmall" alt="" data-pt="sports" /></li>\n        <li><img src="' + CF_PATH + '/icon/ico_travel.png" class="avatarSmall" alt="" data-pt="travel" /></li>\n      </ul>\n    </div>\x3c!-- roomInfoIconList --\x3e\n    <div id="_roomInfoIconUpload" class="roomInfoIconUpload">\n      <input type="file" id="_roomInfoIcon" class="_cwValidateFileImage" name="__cwform_icon" />\n      <p>' + language_1.Language.getLang("%%%profile_image_limit%%%") + '</p>\n    </div>\x3c!-- .roomInfoIconUpload --\x3e\n  </div>\n  \x3c!-- /Roominfo icon selector tooltip --\x3e\n</div>\n\n<div id="_roomInfoMemberBox" class="roomMemberEditDialogContent" style="display:none">\n  <div class="controlContent">\n    <div class="controlContentBody memberTableSearch">\n      <input type="text" id="_roomInfoContactFilter" class="_searchBox memberTableSearchForm" role="search" placeholder="' + language_1.Language.getLang("%%%chatroom_search_member%%%") + '">\n    </div>\x3c!-- /CONTACT LIST SEARCH --\x3e\n    <div id="_roomInfoContactTableBox" class="_contactTableBox controlContentBody memberTableSection roomContactListBox">\n      <div class="controlContentHeader clearfix">\n        <div class="memberTableFilter">\n          <div id="_roominfoSelectAllBtn" class="_button memberTableCheckAll">\n            <input type="checkbox" id="_roomInfoSelectAllContact" class="_checkBox" data-label="' + language_1.Language.getLang("%%%checkall_full%%%") + '">\n          </div>\n          <ul id="_roomInfoOrganizationFilter" class="organizationFilter" role="radiogroup">\n            <li>\n              <input type="radio" id="_roomInfoOrgFilterSelectAll" value="all" name="__roominfo_org_filter" checked="" />\n              <label for="_roomInfoOrgFilterSelectAll" data-delay="0">' + language_1.Language.getLang("%%%organization_filter_radio_all%%%") + '</label>\n            </li>\n            <li>\n              <input type="radio" id="_roomInfoOrgFilterSelectOrganized" value="organized" name="__roominfo_org_filter" />\n              <label for="_roomInfoOrgFilterSelectOrganized" data-delay="0">' + language_1.Language.getLang("%%%organization_filter_radio_organized%%%") + '</label>\n            </li>\n          </ul>\x3c!-- /ORGANIZATION FILTER --\x3e\n        </div>\n        <div id="_roomInfoSelectRole" class="memberTableSelectRole"></div>\x3c!-- /ROLE SELECT --\x3e\n      </div>\n      <div class="contactTableBox">\n        <table id="_roomInfoContact" class="_memberTableContact memberTable"></table>\n      </div>\n    </div> \x3c!-- roomInfoMemberListBox --\x3e\n    \x3c!-- INVITATION LINK SETTING --\x3e\n    <div class="controlContentBody addRoomInvitationLinkSetting">\n      <div class="invitationLinkActivate">\n        <div class="invitationLinkActivateLabel">\n          <div class="invitationLinkActivateLabelCheckBox">\n            <input type="checkbox" id="_addRoomInvitationLinkSettingStatus" data-name="active_invitation_link" class="_checkBox" data-label="' + language_1.Language.getLang("%%%invitation_link%%%") + '" value="">\n          </div>\n          <p class="invitationLinkActivateLabelItem">\n            <a href="http://link.chat-work.com/h_invitation_link_' + ("ja" === LANGUAGE ? "ja" : "en") + '" class="_showDescription" aria-label="' + language_1.Language.getLang("%%%invitation_link_help_tool_tip%%%") + '" data-delay="0" target="_blank"><span class="icoFontHelp anchorIcon"></span></a>\n            <span> : </span>\n          </p>\n        </div>\n        <div class="invitationLinkActivateBody">\n          <div id="_addRoomInvitationLinkDisabled" class="invitationLinkDisabled">\n            <p class="invitationLinkDisabledBody">' + language_1.Language.getLang("%%%invitation_link_setting_status_disable%%%") + '</p>\n          </div>\x3c!-- INVITATION LINK DISABLED --\x3e\n          <div id="_addRoomInvitationLinkActive" class="invitationLinkActive">\n            <div class="js_invitationLinkDisplay invitationLinkDisplay">\n              <div class="invitationLinkDisplayBody">\n                <div class="invitationLinkDisplayBodyItem">\n                  <input type="text" class="js_invitationLinkDisplayInput invitationLinkDisplayInput" readonly>\n                </div>\n                <div class="js_invitationLinkBtnCopy _button">' + language_1.Language.getLang("%%%invitation_link_code_copy%%%") + '</div>\n                <p class="js_invitationLinkOpenEditor invitationLinkDisplayBodyItem invitationLinkEditorDrawer">\n                  <span class="icoFontSetting icoSizeLarge"></span>\n                </p>\n              </div>\n            </div>\n            <div class="js_invitationLinkEditor">\n              <div class="invitationLinkEditorForm">\n                <p class="invitationLinkEditorBodyItem">\n                  <span class="js_invitationLinkURL"></span>\n                </p>\n                <input type="text" class="js_invitationLinkEditorInput" name="__cwform_link_code">\n                <div class="js_invitationLinkBtnEdited _button btnPrimary">' + language_1.Language.getLang("%%%button_complete%%%") + '</div>\n                <p class="js_invitationLinkCloseEditor invitationLinkEditorBodyItem invitationLinkEditorDrawer">\n                  <span class="icoFontCancel icoSizeLarge"></span>\n                </p>\n                <div class="invitationLinkEditorBodyItem">\n                  <img class="js_invitationLinkCodeLoading controlContentLoaderImg" src="./imagenew/all/common/loader/img_loader_gray.gif">\n                </div>\n                <div class="invitationLinkEditorAlert">\n                  <p class="invitationLinkEditorAlertItem"><span class="js_invitationLinkCodeUsed"></span></p>\n                </div>\n              </div>\n              <div class="invitationLinkEditorBody">\n                <input type="checkbox" id="_addRoomInvitationLinkJoinNeedAccept" name="__cwform_join_need_accept" data-label="' + language_1.Language.getLang("%%%invitation_link_setting_join_accept%%%") + '" value="send">\n              </div>\n            </div>\x3c!-- INVITATION LINK EDITOR --\x3e\n          </div>\x3c!-- INVITATION LINK ACTIVE --\x3e\n        </div>\x3c!-- INVITATION LINK ACTIVATE BODY --\x3e\n      </div>\x3c!-- INVITATION LINK ACTIVATE --\x3e\n    </div>\x3c!-- /INVITATION LINK SETTING --\x3e\n  </div>\n  <div id="_roomInfoMemberHidden"></div>\x3c!-- DATA STOCKER --\x3e\n  <input type="hidden" name="__cwform_public" id="_roomInfoPublic" value="">\n</div>\x3c!-- /MEMBER BOX --\x3e\n'
    }, {
        "../lib/language": 384
    }],
    449: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.sideContentTemplate = '\n<div class="sideContentMenu">\n  <div id="_sideContentMenu__header" class="sideContentMenu__header">\n    <h2 id="_sideContentTitle"\n        class="sideContentMenu__title"\n    >\n      <span id="_sideContentTitleText">' + language_1.Language.getLang("%%%chat_menu_chatlist%%%") + '</span>\n    </h2>\n    <div id="_addDropDown"\n         aria-label="' + language_1.Language.getLang("%%%chatroom_create_title%%%") + ", " + language_1.Language.getLang("%%%contact_add%%%") + '"\n    ></div>\n  </div>\n\n  <div id="_chatFilterMenu"\n       class="chatFilterMenu"\n  >\n      <div id="_sideChatMoveMyChat"\n           class="chatFilterMenu__home _button"\n           role="button"\n           aria-label="' + language_1.Language.getLang("%%%menu_mychat_hint%%%") + '"\n      >\n          <span class="chatFilterMenu__homeIcon icoFontHome"></span>\n      </div>\n\n      <ul id="_chatFilterList"\n          class="chatFilterMenu__typeGroup"\n      >\n          <li id="_sideChatFilterUnread" aria-label="' + language_1.Language.getLang("%%%chat_filter_readonly%%%") + '">\n              <span class="chatFilterMenu__unreadIcon icoFontActionUnread"></span>\n              <p id="_chatUnreadStatus"\n                 class="chatFilterMenu__unreadCount"\n                 style="display: none;"\n              ></p>\n          </li>\n\n          <li id="_sideChatFilterTo" aria-label="' + language_1.Language.getLang("%%%chat_filter_toonly%%%") + '">\n              <span class="chatFilterMenu__mentionIcon icoFontTo"></span>\n              <p id="_chatToUnreadStatus"\n                 class="chatFilterMenu__mentionCount"\n                 style="display: none;"\n              ></p>\n          </li>\n\n          <li id="_sideChatFilterTask" aria-label="' + language_1.Language.getLang("%%%chat_filter_taskonly%%%") + '">\n              <span class="chatFilterMenu__taskIcon icoFontActionTask"></span>\n              <p id="_chatTaskStatus"\n                 class="chatFilterMenu__taskCount"\n                 style="display: none;"\n              ></p>\n          </li>\n      </ul>\n\n      <div id="_chatCategory"\n           class="chatFilterMenu__category _button"\n           role="button"\n           aria-label="' + language_1.Language.getLang("%%%chat_category_select%%%") + '"\n      >\n          <span class="chatFilterMenu__categoryIcon icoFontCategory"></span>\n      </div>\n  </div>\n\n  <div id="_roomListArea"\n       class="_overflow chatRoomListArea"\n  >\n    <div id="_categoryDisplay"\n         class="chatCategoryTitle"\n         style="display:none"\n    >\n      <span id="_categoryDisplayTitle"\n            class="categoryDisplayTitle"\n      ></span>\n      <span id="_categoryDisplayCancel"\n            class="icoFontCancel icoSizeLarge linkIconStatus categoryCancel"\n            role="button"\n            aria-label="' + language_1.Language.getLang("%%%button_cancel%%%") + '"\n      ></span>\n    </div>\n    <ul id="_roomListItems"\n        class="menuListTitle cwTextUnselectable"\n        role="list"\n    ></ul>\n\n    <div id="_chatListEmptyArea">\n        <div id="_chatListUnreadEmpty"\n             class="_chatListEmpty chatListEmptyArea"\n             style="display: none;"\n        >\n            <img src="./imagenew/common/empty/img_unread_empty.png" alt="">\n            <p>' + language_1.Language.getLang("%%%chat_filter_readonly_empty%%%") + '</p>\n        </div>\n\n        <div id="_chatListToEmpty"\n             class="_chatListEmpty chatListEmptyArea"\n             style="display: none;">\n            <img src="./imagenew/common/empty/img_to_empty.png" alt="">\n            <p>' + language_1.Language.getLang("%%%chat_filter_toonly_empty%%%") + '</p>\n        </div>\n\n        <div id="_chatListTaskEmpty"\n             class="_chatListEmpty chatListEmptyArea"\n             style="display: none;">\n            <img src="./imagenew/common/empty/img_side_task_empty.png" alt="">\n            <p>' + language_1.Language.getLang("%%%chat_filter_taskonly_empty%%%") + "</p>\n        </div>\n    </div>\x3c!-- /#_chatListEmptyArea --\x3e\n  </div>\x3c!-- /#roomListArea --\x3e\n</div>"
    }, {
        "../lib/language": 384
    }],
    450: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language");
        exports.subRoomInformationTemplate = '\n  <div class="subRoomInformation">\n    <div id="_roomRequestArea" class="subRoomInformation__memberRequest" style="display:none"></div>\n    <div id="_subRoomInfoInner" class="subRoomInformation__main">\n      <div id="_subRoomInfoTitle" class="subRoomInformation__roomNameContainer">\n        <img id="_subRoomIcon" src="' + CF_PATH + '/avatar/ico_avatar_loading.png" class="subRoomInformation__avatar" />\n        <p id="_subRoomName" class="subRoomInformation__roomName"></p>\n        <div id="_subEditRoomInfo" role="button" class="_showDescription _button subRoomInformation__editButton"\n           aria-label="' + language_1.Language.getLang("%%%chatroom_info_edit%%%") + '" style="display:none">\n          <span class="icoFontActionEdit icoSizeLarge subRoomInformation__editButtonIcon"></span>\n        </div>\n      </div>\n      <div id="_subRoomProfileLinkArea" class="subRoomInformation__profileLink" style="display:none">\n        <div id="_subRoomProfileLink" class="_openProfile"><a>' + language_1.Language.getLang("%%%menu_profile_setting%%%") + '</a></div>\n      </div>\n      <div id="_subRoomDescriptionArea" class="subRoomInformation__descriptionContainer" style="display:none">\n        <div id="_subRoomDescriptionWrapper" class="subRoomInformation__description">\n          <div id="_subRoomDescription" class="subRoomInformation__descriptionText"></div>\n        </div>\n      </div>\n      <div id="_subRoomJoinLinkArea" class="subRoomInformation__inviteContainer" style="display:none">\n        <a id="_subRoomJoinLink" class="subRoomInformation__inviteButton" target="_blank">\n          ' + language_1.Language.getLang("%%%invitelink%%%") + '<span class="icoFontLinkBlank subRoomInformation__inviteButtonIcon"></span>\n        </a>\n      </div>\n    </div>\n  </div>\n'
    }, {
        "../lib/language": 384
    }],
    451: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.svgSpriteTemplate = '<svg style="position:absolute"><symbol viewBox="0 0 10 10" id="icon_actionNavReply"><path d="M7.143 3.572H2.586l2.1-2.1a.357.357 0 0 0 0-.505L4.181.462a.358.358 0 0 0-.505 0L.104 4.033a.358.358 0 0 0 0 .506L3.676 8.11c.14.14.365.14.505 0l.505-.506a.357.357 0 0 0 0-.505L2.586 5h4.557C7.93 5 8.57 5.64 8.57 6.43v2.5c0 .197.16.357.358.357h.714c.197 0 .357-.16.357-.357v-2.5a2.857 2.857 0 0 0-2.857-2.857"/></symbol><symbol viewBox="0 0 10 10" id="icon_assistant"><path d="M7.5 6.9c-.5-.2-1.4-.6-1.6-.8-.3-.4 0-.7 0-.7.2-.2.4-.4.6-.7h-1c-.2 0-.3-.1-.3-.3s.1-.4.3-.4h1.2c0-.2.1-.4.1-.6 0-1.3-.7-2.3-1.8-2.3s-1.8 1-1.8 2.3c0 .8.3 1.5.8 1.9 0 0 .4.4.1.7-.2.2-1 .6-1.5.9-.5.3-1.4.8-1.4 1.5C1.2 9.2 2.6 10 5 10s3.8-.9 3.8-1.6c0-.7-.8-1.2-1.3-1.5z"/><path d="M2.6 4.7V3.2C2.6 1.7 3.7.5 5 .5s2.4 1.2 2.4 2.7v1.6c.6-.2.9-.6.9-1.2 0-.4-.2-.7-.5-.9C7.7 1.2 6.5 0 5 0S2.3 1.2 2.1 2.7c-.2.2-.4.5-.4.9 0 .6.3 1 .9 1.1z"/></symbol><symbol viewBox="0 0 10 10" id="icon_cancel"><path d="M8.5 0L4.958 3.543 1.414 0 0 1.415l3.544 3.542L0 8.501l1.414 1.413 3.544-3.543L8.5 9.914l1.415-1.413-3.544-3.544 3.544-3.542z"/></symbol><symbol viewBox="0 0 10 10" id="icon_chatTimeLineReply"><path d="M1.429 3.214h1.428c.434 0 .714.32.714.715 0 .394-.28.714-.714.714H1.43V3.214zm3.41 4.643H3.41L2.226 5.714h-.797v2.143H0V2.143l2.923.006c1.154.03 1.898.813 1.898 1.78 0 .765-.467 1.413-1.232 1.666l1.25 2.262zm.875-5.714h4.107v1.071H7.144v1.107h2.5v1.071h-2.5v1.394H10v1.071H5.714V2.143z"/></symbol><symbol viewBox="0 0 10 10" id="icon_chatTimeLineReplyBadge"><path d="M6.67 3.336H3.192l1.818-1.819a.415.415 0 0 0 0-.589L4.42.34a.415.415 0 0 0-.589 0L.297 3.874a.416.416 0 0 0 0 .59L3.832 8a.415.415 0 0 0 .59 0l.589-.589a.415.415 0 0 0 0-.59L3.192 5.003H6.67c.92 0 1.667.746 1.667 1.667v2.083c0 .23.186.417.416.417h.834c.23 0 .416-.187.416-.417V6.67A3.333 3.333 0 0 0 6.67 3.336"/></symbol><symbol viewBox="0 0 10 10" id="icon_chatTimeLineTo"><path d="M7.143 6.786c-.868 0-1.429-.8-1.429-1.786s.561-1.786 1.429-1.786S8.57 4.014 8.57 5s-.56 1.786-1.428 1.786m0-4.643C8.879 2.143 10 3.423 10 5c0 1.578-1.121 2.857-2.857 2.857-1.736 0-2.857-1.28-2.857-2.857 0-1.578 1.121-2.857 2.857-2.857zM0 2.32h4.286v1.072H2.857v4.286H1.43V3.393H0V2.32z"/></symbol><symbol viewBox="0 0 10 10" id="icon_plus"><path d="M4 0v4H0v2h4v4h2V6h4V4H6V0z"/></symbol><symbol viewBox="0 0 10 10" id="icon_triangleDown"><path d="M0 2.5l5 6.25 5-6.25z"/></symbol></svg>'
    }, {}],
    452: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var language_1 = require("../lib/language"),
            onBoardingTemplate = IS_BIWA_ONBOARDING_PHASE_1 ? '\n<div id="_tutorialStep" class="tutorialStep bobPhase1">\n <div class="tutorialContentArea">\n  <h3 id="_tutorialHeader" class="tutorialHeader"></h3>\n  <div id="_tutorialMessage"></div>\n </div>\n <div class="tooltipFooter">\n  <div id="_tutorialShowMovieButton" role="button">動画を見る</div>\n\n  <div id="tutorialMovieChat"    role="button" class="movie wistia_embed wistia_async_e37lim1y13 popover=true popoverContent=link autoplay=true"></div>\n  <div id="tutorialMovieMessage" role="button" class="movie wistia_embed wistia_async_0fr2n4mj6s popover=true popoverContent=link autoPlay=true"></div>\n  <div id="tutorialMovieTask"    role="button" class="movie wistia_embed wistia_async_vrawkswvzo popover=true popoverContent=link autoPlay=true"></div>\n  <div id="tutorialMovieContact" role="button" class="movie wistia_embed wistia_async_i6kxkml2qd popover=true popoverContent=link autoPlay=true"></div>\n\n  <div class="tutorialStepArea">\n   <div class="tutorialStepIndicator"> </div>\n   <a id="_tutorialNextButton" class="tutorialNextButton"><span class="label">' + language_1.Language.getLang("%%%button_next%%%") + '</span><span class="icoFontTriangleRight"></span></a>\n  </div>\n </div>\n</div>' : '\n<div id="_tutorialStep" class="tutorialStep">\n <div class="tutorialContentArea">\n  <div id="_tutorialMessage"></div>\n </div>\n <div class="tooltipFooter"><div id="_tutorialNextButton" role="button">' + language_1.Language.getLang("%%%button_next%%%") + "</div></div>\n</div>";
        exports.tooltipTemplate = '\n \x3c!-- ここからエモーティコン用のツールチップ  --\x3e\n <div id="_emoticonList" class="emoticonList" style="display: none;">\n  <ul id="_emoticonGallery" class="emoticonGallery clearfix"></ul>\n  <div id="_emoticonDescription" class="tooltipFooter"></div>\n </div>\x3c!-- #_emoticonList --\x3e\n\n <div id="_quickReply" class="emoticonList" style="display: none;">\n  <ul id="_quickReplyGallery" class="emoticonGallery clearfix"></ul>\n  <div id="_quickReplyDescription" class="tooltipFooter"></div>\n </div>\x3c!-- #_quickReply --\x3e\n\n \x3c!-- ここからTO選択用のツールチップ  --\x3e\n <div id="_toList" style="display: none;">\n  <div id="_toListFooter" class="tooltipFooter"><span id="_toListHint" style="display: none">' + language_1.Language.getLang("%%%chatsend_shift_multiselect%%%") + '</span><a id="_nickNameSetting">' + language_1.Language.getLang("%%%chatsend_nickname_setting%%%") + '</a></div>\n </div>\x3c!-- #_contactToList --\x3e\n\n <div id="_joinLiveTip" style="display: none;">\n  <ul>\n   <li class="_joinLiveByVideo">' + language_1.Language.getLang("%%%live_video%%%") + '</li>\n   <li class="_joinLiveByVoice">' + language_1.Language.getLang("%%%live_voice%%%") + '</li>\n  </ul>\n </div>\n\n \x3c!-- ここからタスクメンバー選択用のツールチップ  --\x3e\n <div id="_taskAssignList" class="toolTiptaskAssignList" style="display: none;">\n </div>\x3c!-- #_taskAssignList --\x3e\n\n <div id="_taskAssignQuickList" style="display: none"><div id="_assignQuickBox" class="taskAssignQuickBox cwNoWrap"></div></div>\n\n \x3c!-- ここからタスクメンバー選択用のツールチップ  --\x3e\n <div id="_taskEditList" style="display: none;">\n </div>\x3c!-- #_taskAssignList --\x3e\n\n\x3c!-- ここからファイルのドラッグ＆ドロップ用ツールチップ --\x3e\n<div id="_fileDrop" class="fileDropTooltip" style="display: none;">\n <div id="_dropZone" class="fileDropZone">\n  <p>' + language_1.Language.getLang("%%%file_drop_area%%%") + '</p>\n </div>\n</div>\x3c!-- #_fileDrop --\x3e\n\n\x3c!-- ここからクリップボード画像の貼り付けツールチップ --\x3e\n<div id="_imageFileDrop" class="fileDropTooltip" style="display: none;">\n  <div class="imageDropHeader">\n    <p class="imageDropTooltipTitle">' + language_1.Language.getLang("%%%imagedrop_tooltip_title%%%") + '</p>\n    <div id="_imageFileDropClose" role="button" class="imageFileDropClose _showDescription _button btnNoPadding" aria-label="' + language_1.Language.getLang("%%%button_close%%%") + '">\n      <span class="icoFontCancel icoSizeLarge"></span>\n     </div>\n  </div>\n  <div id="_imageDropZone" class="imageFileDropZone"></div>\n  <div class="imageDropFooter">\n    <span class="imageDropFooterText">' + language_1.Language.getLang("%%%imagedrop_tooltip_change_filename%%%") + '</span>\n    <input type="text" id="_imageDropFileNameInput" class="imageDropFileNameInput">\n    <span class="imageDropFooterText">.png</span>\n    <div id="_imageDropSendButton" role="button" class="button btnPrimary" aria-label="' + language_1.Language.getLang("%%%button_send%%%") + '">' + language_1.Language.getLang("%%%button_send%%%") + '</div>\n  </div>\n</div>\x3c!-- #_imageFileDrop --\x3e\n\n\x3c!-- ファイルの送信用補助レイヤ --\x3e\n<div id="_dragZone" class="blackBackground" style="display: none;"></div>\n\n\n\x3c!-- チュートリアル用 --\x3e\n<div id="_expose" class="blackBackground" style="display: none;"></div>\n\n' + onBoardingTemplate + '\n\n<div id="_fileUploadTip" style="padding:20px; display: none;">\n <div style="width:350px;height:27px;text-align: center">\n  <form method="POST" enctype="multipart/form-data" action="' + S3_PATH + '" target="form_upload">\n   <input id="_fileInput" type="file" name="file" multiple="multiple"/>\n  </form>\n  <div id="_fileUploadSending" style="display: none"><img src="./imagenew/all/common/loader/img_loader_white.gif" alt="Loading" /></div>\n </div>\n</div>\n\n\x3c!-- ここからカテゴリ用ツールチップ --\x3e\n<div id="_chatCategoryList" style="display: none;">\n <div class="chatCategoryListArea">\n  <ul id="_chatCagegoryUserList" class="chatCategoryList"></ul>\n  <ul id="_chatCagegorySystemList" class="chatCategoryList">\n   <li class="_chatCategoryItem" data-cat-id="contact"><span class="_categoryName">' + language_1.Language.getLang("%%%directchat%%%") + '</span></li>\n   <li class="_chatCategoryItem" data-cat-id="group"><span class="_categoryName">' + language_1.Language.getLang("%%%groupchat%%%") + '</span></li>\n  </ul>\n </div>\n <div id="_chatCategoryAdd" class="tooltipFooter linkStatus"><span class="icoSizeLarge icoFontAddBtn"></span>' + language_1.Language.getLang("%%%chat_category_create%%%") + '</div>\n</div>\x3c!-- .toolTipCategory --\x3e\n\x3c!-- end side_content_tooltip --\x3e\n\n \x3c!-- ここからタスクメンバー選択用のツールチップ  --\x3e\n <div id="_speakerTip" class="speakerTip" style="display:none">\n </div>\x3c!-- #_allMemberTip --\x3e\n\n\x3c!-- ここから引用用のツールチップ --\x3e\n<div id="_quoteTip" class="quoteTip" style="display:none">\n <ul class="btnNavList">\n  <li id="_quotePartlyToMessage" role="button" class="button btn24 btnLarge">' + language_1.Language.getLang("%%%chat_partial_quote_message%%%") + '</li>\n  <li id="_quotePartlyToTask" role="button" class="button btn24 btnLarge">' + language_1.Language.getLang("%%%chat_partial_quote_task%%%") + '</li>\n </ul>\n</div>\n\n\x3c!-- ここからメンバーのmore表示用チップ --\x3e\n<div id="_showMoreMemberTip" style="display:none"></div>\n\n\x3c!-- ここからタスク担当のメンバーのmore表示用チップ --\x3e\n<div id="_showMoreAssignMemberTip" style="display:none"></div>\n\n\x3c!-- ここからプロフィール表示用ツールチップ --\x3e\n<div id="_profileTip"  class="speakerProfileTooltipArea" style="display: none;"></div>\n\n\x3c!-- ホバー用ツールチップ --\x3e\n<div id="_nameTip" style="display:none">\n <p id="_nameTipContent"></p>\n</div>\n\n\x3c!-- 返信ツールチップ --\x3e\n<div id="_replyMessageTip" style="display:none;">\n <p id="_replyMessageTipContent" class="replyMessageTooltipContent"></p>\n <div id="_replyMessageButtonArea"></div>\n</div>\n\n\x3c!-- チャットファイルツールチップ --\x3e\n<div id="_chatFileListTip" class="chatFileListTip" style="display: none;"></div>\n\n\x3c!-- ファイルツールチップ詳細 --\x3e\n<div id="_chatFileDetailTip" class="chatFileDetailTip" style="display: none;">\n <div class="_fileDetailPreview filePreviewArea"></div>\n <div class="fileInfoArea controlGroup">\n  <label class="controlLabel">' + language_1.Language.getLang("%%%file_name%%%") + '</label>\n  <div class="_fileDetailName controlContent autotrim"></div>\n  <label class="controlLabel">' + language_1.Language.getLang("%%%file_size%%%") + ':</label>\n  <div class="_fileDetailSize controlContent autotrim"></div>\n  <label class="controlLabel">' + language_1.Language.getLang("%%%file_upload_by%%%") + ':</label>\n  <div class="_fileDetailUploadBy controlContent autotrim"></div>\n  <label class="controlLabel">' + language_1.Language.getLang("%%%file_upload_datetime%%%") + ':</label>\n  <div class="_fileDetailUploadDate controlContent autotrim"></div>\n  <label class="controlLabel">' + language_1.Language.getLang("%%%chat%%%") + ':</label>\n  <div class="controlContent autotrim"><a class="_fileDetailChat _roomLink"></a></div>\n </div>\n</div>\n\n<div id="_profileAvatarUpload" class="profileAvatarUpload" style="display: none;">\n <form id="_profileAvatarForm">\n  <div class="profileAvatarUploadInner">\n   <span id="_profileAvatarImage"></span>\n   <div class="profileAvatarUploadInputArea">\n    <select id="_profileAvatarUploadType">\n     <option value=""> - ' + language_1.Language.getLang("%%%button_change_long%%%") + '</option>\n     <option value="upload">' + language_1.Language.getLang("%%%chatroom_icon_type_upload%%%") + '</option>\n    </select>\n    <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus" data-key="Avatar">\n     <span id="_profilePrivacyAvatar" class="icoFontPublic _privacyIcon" data-name="avatar_priv" data-value="public"></span><span class="icoFontTriangleDown"></span>\n    </div>\n    <div id="_profileAvatarUploadInput" class="profileAvatarUploadInput"></div>\n   </div>\n  </div>\n  <div class="tooltipFooter">\n   <div id="_profileAvatarSubmit" class="_button btnPrimary">' + language_1.Language.getLang("%%%button_save_long%%%") + '</div>\n   <div id="_profileAvatarCancel" class="_button">' + language_1.Language.getLang("%%%button_cancel%%%") + '</div>\n  </div>\n </form>\n</div>\n\n<div id="_profileCoverUpload" class="profileCoverUpload" style="display: none;">\n <form id="_profileCoverForm">\n  <div class="profileCoverUploadInner">\n   <div id="_profileCoverImage" class="profileCoverImageArea"></div>\n   <img src="./imagenew/all/common/profile/img_cover_size.png" alt="カバー画像のサイズは幅800px、縦250pxです" />\n   <div id="_profileCoverUploadInput" class="profileCoverUploadInput">\n    <input type="file" name="__cwform_cover_upload_file" class="_cwValidateFileImage" />\n    <p>' + language_1.Language.getLang("%%%profile_image_limit%%%") + '</p>\n   </div>\n   <div class="profilePrivacysetting _profilePrivacyBox linkIconStatus" data-key="Cover">\n    <span id="_profilePrivacyCover" class="icoFontPublic _privacyIcon" data-name="cover_priv" data-value="public"></span><span class="icoFontTriangleDown"></span>\n   </div>\n  </div>\x3c!-- .profileCoverUploadInner --\x3e\n  <div class="tooltipFooter">\n   <div id="_profileCoverSubmit" class="_button btnPrimary">' + language_1.Language.getLang("%%%button_save_long%%%") + '</div>\n   <div id="_profileCoverCancel" class="_button">' + language_1.Language.getLang("%%%button_cancel%%%") + "</div>\n  </div>\n </form>\n</div>\n"
    }, {
        "../lib/language": 384
    }],
    453: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var InviteMailAccountView_1 = require("./InviteMailAccountView"),
            common_1 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            AccountView = function() {
                function AccountView(model) {
                    this.model = model, this.show_limit_contact_base = {
                        contact: 80,
                        myrequest: 80,
                        request: 80,
                        norequest: 80
                    }, this.show_limit_contact = {}, this.tab_type = "invitemail", this.contact_dialog_shown = !1, this.checked_email_dat = {}, this.noexist_email_dat = {}, this.inviteEmailView = new InviteMailAccountView_1.InviteMailAccountView, this.is_prepared_edit_profile = !1, this.last_checked_cwid = "", this.type_timer = null, this.is_valid_cwid = !1, this.profiletip = null, this.profile_window = null, this.contact_window = null, this.contact_window_allcheck = null, this.contact_window_pager_num = 0, this.contact_window_pager_index = 0, this.contact_window_pager_view_num = boot_1.TM.contactwindow_pager_view_num, this.contact_window_pager = null, this.checked_contact_flag = {}, this.addcontact_search_xhr = null, this.addcontact_search_timer = null, this.search_stat_default = {
                        isSearched: !1,
                        isLoading: !1,
                        lastType: "",
                        lastQuery: "",
                        accountIdList: [],
                        inviteMailList: []
                    }, this.search_stat = $.extend({}, this.search_stat_default), this.loading_profile_aid = 0;
                    for (var idx in this.show_limit_contact_base) this.show_limit_contact[idx] = this.show_limit_contact_base[idx]
                }
                return AccountView.prototype.prepare = function() {
                    function isDoubleClick(button) {
                        return button.data("_requestContact_doubleClick")
                    }

                    function disableDoubleClick(button) {
                        button.data("_requestContact_doubleClick", setTimeout(function() {
                            button.removeData("_requestContact_doubleClick")
                        }, 3e3))
                    }
                    var self = this;
                    boot_1.CW.view.registerKeyboardShortcut(67, !1, !1, !1, !1, function() {
                        self.openContactWindow()
                    }), $("#_openContactWindow").click(function() {
                        self.openContactWindow(), boot_1.TREASURE.trackEvent("contact_list", "click", {
                            label: "contact_list_navigation"
                        })
                    });
                    var nametip = $("#_nameTip").cwToolTip({
                        theme: "black",
                        noAnimation: !0
                    });
                    self.inviteEmailView.prepare(), $C("#_wrapper").on("mouseover", "._avatarHoverTip", function() {
                        var img = $(this);
                        $C("#_nameTipContent").text(boot_1.AC.getName(Number(img.attr("data-aid")))), nametip.open(img)
                    }).on("mouseout", "._avatarHoverTip", function() {
                        nametip.close()
                    }).on("click", "._avatarClickTip", function() {
                        var tipFrom = $(this),
                            account_id = tipFrom.attr("data-aid");
                        self.openProfileTip(account_id, tipFrom)
                    }).on("click", "._speakerName", function() {
                        return $(this).closest("._message").find("._speaker ._avatarClickTip").click(), !1
                    }).on("click", "._skypeCall", function() {
                        var skype_id = $(this).attr("data-skype-id");
                        document.location.href = "skype:" + skype_id + "?call"
                    }).on("click", "._openProfile", function() {
                        var aid = $(this).attr("data-aid");
                        aid && self.openProfileWindow(aid)
                    }).on("click", "._profileEdit", function() {
                        self.openProfileEditWindow()
                    }).on("click", "._requestContact", function() {
                        var button = $(this);
                        if (!isDoubleClick(button)) {
                            disableDoubleClick(button);
                            var aid = Number(button.attr("data-aid")),
                                aid_list = [aid],
                                add_contact_confirm_dialog = $("#_addContactConfirmDialog").cwDialog({
                                    title: language_1.Language.getLang("%%%add_contact_confirm_dialog_title%%%"),
                                    width: 400,
                                    autoOpen: !1,
                                    hide: "fade",
                                    buttonLabels: [language_1.Language.getLang("%%%button_send%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                                    buttonSubmit: 0,
                                    buttonCancel: 1,
                                    buttonClick: function(idx) {
                                        if (0 === idx) return self.requestContact(aid_list, button.cwButton()), void add_contact_confirm_dialog.close();
                                        add_contact_confirm_dialog.close()
                                    },
                                    open: function(aid_list) {
                                        var body_text = language_1.Language.getLang("%%%add_contact_confirm_body_with_account_names%%%", {
                                            account_names: function() {
                                                return aid_list.map(function(aid) {
                                                    return boot_1.AC.getNameWithSuffix(aid)
                                                }).join()
                                            }()
                                        });
                                        $("#_addContactConfirmLead").html(body_text)
                                    }
                                });
                            add_contact_confirm_dialog.open(aid_list)
                        }
                    }).on("click", "._cancelMyRequest", function() {
                        var button = $(this);
                        if (!isDoubleClick(button)) {
                            disableDoubleClick(button);
                            var aid = button.closest("._contactPanel").attr("data-aid"),
                                button_wg = button.cwButton();
                            button_wg.disable(), boot_1.CW.post("gateway.php", {
                                cmd: "cancel_contact_request",
                                aid: aid
                            }, function() {
                                boot_1.CW.watch()
                            }, function(error_message) {
                                boot_1.CW.alert(error_message), button_wg.enable()
                            })
                        }
                    }).on("click", "._acceptContactRequest", function() {
                        var button = $(this);
                        if (!isDoubleClick(button)) {
                            disableDoubleClick(button);
                            var aid = button.attr("data-aid"),
                                button_wg = button.cwButton();
                            button_wg.disable(), boot_1.CW.post("gateway.php", {
                                cmd: "accept_contact_request",
                                a: [aid]
                            }, function(json) {
                                void 0 != json.error ? (boot_1.CW.view.showContactLimitErrorDialog(json.error), button_wg.enable()) : boot_1.CW.watch()
                            }, function(error_message) {
                                boot_1.CW.alert(error_message), button_wg.enable()
                            })
                        }
                    }).on("click", "._rejectContactRequest", function() {
                        var button = $(this);
                        if (!isDoubleClick(button)) {
                            disableDoubleClick(button);
                            var aid = button.attr("data-aid"),
                                button_wg = button.cwButton();
                            button_wg.disable(), boot_1.CW.confirm(language_1.Language.getLang("%%%contact_confirm_reject_request%%%", {
                                name: boot_1.AC.getName(Number(aid))
                            }), function() {
                                boot_1.CW.post("gateway.php", {
                                    cmd: "reject_contact_request",
                                    aid: aid
                                }, function() {
                                    boot_1.CW.watch()
                                }, function(error_message) {
                                    boot_1.CW.alert(error_message), button_wg.enable()
                                })
                            }, function() {
                                button_wg.enable()
                            })
                        }
                    }).on("click", "._deleteContact", function() {
                        var button = $(this);
                        if (!isDoubleClick(button)) {
                            disableDoubleClick(button);
                            var aid = button.closest("._contactPanel").attr("data-aid"),
                                button_wg = button.cwButton();
                            button_wg.disable(), boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%contact_confirm_delete%%%", {
                                name: boot_1.AC.getName(Number(aid))
                            }), function() {
                                boot_1.CW.post("gateway.php", {
                                    cmd: "delete_contact",
                                    aid: aid
                                }, function() {
                                    boot_1.CW.watch()
                                }, function(error_message) {
                                    boot_1.CW.alert(error_message), button_wg.enable()
                                })
                            }, function() {
                                button_wg.enable()
                            })
                        }
                    }).on("click", "#_addNoContactMember", function() {
                        if (!isDoubleClick($(this))) {
                            disableDoubleClick($(this));
                            var button = $(this).cwButton(),
                                room_id = button.$el.attr("data-rid"),
                                room = boot_1.RL.rooms[room_id];
                            if (room) {
                                var aid_list = [];
                                for (var aid in room.member_dat) boot_1.AC.isContact(aid) || aid_list.push(aid);
                                aid_list.length > 0 && self.requestContact(aid_list, button)
                            }
                        }
                    }), $("#_myProfile").click(function() {
                        self.openProfileWindow(boot_1.AC.myid)
                    }), $(".cw_user_add_desc").click(function() {
                        boot_1.CW.view.showUserAdmin()
                    })
                }, AccountView.prototype.prepareEditProfile = function() {
                    var self = this;
                    if (!self.is_prepared_edit_profile) {
                        self.is_prepared_edit_profile = !0;
                        var avatar_upload_tip = $("#_profileAvatarUpload").cwToolTip();
                        $("#_profileAvatarUploadType").cwSelectBox({
                            parentFloatBox: avatar_upload_tip.$el,
                            update: function(value) {
                                switch (value) {
                                    case "upload":
                                        $("#_profileAvatarUploadInput").html('<input type="file" name="__cwform_avatar_upload_file" class="_cwValidateFileImage" /><div>' + language_1.Language.getLang("%%%profile_image_limit%%%") + "</div>");
                                        break;
                                    default:
                                        $C("#_profileAvatarUploadInput").quickEmpty()
                                }
                            }
                        }), $("#_profileEditAvatarControl").click(function() {
                            avatar_upload_tip.open($(this))
                        }), $("#_profileAvatarSubmit").click(function() {
                            var form = new FormData($("#_profileAvatarForm").get(0));
                            form.append("__cwform_avatar_priv", $("#_profilePrivacyAvatar").attr("data-value")), boot_1.CW.fileUpload("edit_profile_avatar_image", form), avatar_upload_tip.close(), boot_1.CW.showProgress(language_1.Language.getLang("%%%saving%%%"))
                        }), $("#_profileAvatarCancel").click(function() {
                            avatar_upload_tip.close()
                        });
                        var cover_upload_tip = $("#_profileCoverUpload").cwToolTip();
                        $("#_profileEditCoverControl").click(function() {
                            cover_upload_tip.open($(this))
                        }), $("#_profileCoverSubmit").click(function() {
                            var form = new FormData($("#_profileCoverForm").get(0));
                            form.append("__cwform_cover_priv", $("#_profilePrivacyCover").attr("data-value")), boot_1.CW.fileUpload("edit_profile_cover_image", form), cover_upload_tip.close(), boot_1.CW.showProgress(language_1.Language.getLang("%%%saving%%%"))
                        }), $("#_profileCoverCancel").click(function() {
                            cover_upload_tip.close()
                        });
                        var privacy_list = [{
                            value: "public",
                            label: '<span class="icoFontPublic"></span> ' + language_1.Language.getLang("%%%profile_setting_privacy_public%%%")
                        }, {
                            value: "contact",
                            label: '<span class="icoFontContact"></span> ' + language_1.Language.getLang("%%%profile_setting_privacy_contact%%%")
                        }];
                        $("#_profileEditContent").on("click", "._profilePrivacyBox", function() {
                            var box = $(this),
                                pvdrop_selected = box.attr("data-key");
                            $.cwDropDown.isInit(this) || $(this).cwDropDown({
                                offsetLeft: 2,
                                useHtmlLabel: !0,
                                list: privacy_list,
                                select: function(value) {
                                    self.setPrivacySettingIcon(pvdrop_selected, value), this.close()
                                }
                            }).open()
                        }), $("#_profileAvatarUpload").on("click", "._profilePrivacyBox", function() {
                            var box = $(this),
                                pvdrop_selected = box.attr("data-key");
                            $.cwDropDown.isInit(this) || $(this).cwDropDown({
                                parentFloatBox: avatar_upload_tip.$el,
                                useHtmlLabel: !0,
                                offsetLeft: 2,
                                list: privacy_list,
                                select: function(value) {
                                    self.setPrivacySettingIcon(pvdrop_selected, value), this.close()
                                }
                            }).open()
                        }), $("#_profileCoverUpload").on("click", "._profilePrivacyBox", function() {
                            var box = $(this),
                                pvdrop_selected = box.attr("data-key");
                            $.cwDropDown.isInit(this) || $(this).cwDropDown({
                                parentFloatBox: cover_upload_tip.$el,
                                offsetLeft: 2,
                                useHtmlLabel: !0,
                                list: privacy_list,
                                select: function(value) {
                                    self.setPrivacySettingIcon(pvdrop_selected, value), this.close()
                                }
                            }).open()
                        }), boot_1.CW.is_business && $("#_profileInputOrgName").click(function() {
                            $("#_profileSelectOrgnameTypeIndividual").click()
                        }), $("#_profileInputChatWorkId").keyup(function() {
                            self.checkCWID($(this).val())
                        }).blur(function() {
                            self.checkCWID($(this).val())
                        })
                    }
                }, AccountView.prototype.checkCWID = function(cwid_base) {
                    var self = this,
                        cwid = cwid_base.trim();
                    if (cwid != self.last_checked_cwid) {
                        if (self.last_checked_cwid = cwid, self.type_timer && (clearTimeout(self.type_timer), self.type_timer = null), boot_1.AC.getChatWorkId(boot_1.AC.myid) == cwid) return $("#_profileCWIDLoading").hide(), $("#_profileCWIDStatus").text(""), void(self.is_valid_cwid = !0);
                        if (!cwid) return $("#_profileCWIDLoading").hide(), void $("#_profileCWIDStatus").text("");
                        if (cwid.length > 50) return $("#_profileCWIDLoading").hide(), $("#_profileCWIDStatus").text(language_1.Language.getLang("%%%error_maxlength%%%", {
                            length: 50
                        })).css("color", "red"), void(self.is_valid_cwid = !1);
                        if (!cwid.match(/^[-_a-zA-Z0-9]+$/)) return $("#_profileCWIDLoading").hide(), $("#_profileCWIDStatus").text(language_1.Language.getLang("%%%error_invalidchar%%%")).css("color", "red"), void(self.is_valid_cwid = !1);
                        $("#_profileCWIDLoading").show(), $("#_profileCWIDStatus").text(""), self.type_timer = setTimeout(function() {
                            $("#_profileCWIDLoading").show(), boot_1.CW.get("gateway.php", {
                                cmd: "check_chatwork_id",
                                cwid: cwid
                            }, function(json) {
                                $("#_profileCWIDLoading").hide(), json.used ? ($("#_profileCWIDStatus").text(language_1.Language.getLang("%%%error_already_used%%%")).css("color", "red"), self.is_valid_cwid = !1) : ($("#_profileCWIDStatus").text(language_1.Language.getLang("%%%available%%%")).css("color", "green"), self.is_valid_cwid = !0)
                            })
                        }, 1e3)
                    }
                }, AccountView.prototype.deleteContact = function(aid) {
                    boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%contact_confirm_delete%%%", {
                        name: boot_1.AC.getName(aid)
                    }), function() {
                        boot_1.CW.post("gateway.php", {
                            cmd: "delete_contact",
                            aid: aid
                        }, function() {
                            boot_1.CW.watch()
                        })
                    })
                }, AccountView.prototype.updateAccountProfiles = function(selector) {
                    for (var elements = document.querySelector("#_wrapper").querySelectorAll(selector), i = 0; i < elements.length; i++) {
                        var element = elements[i],
                            match = element.className.match(/(_avatarAid|_coverAid|_nameAid|cw_onm|cw_cwid)(\d+)/);
                        if (match) {
                            var command = match[1],
                                account_id = match[2];
                            "_avatarAid" === command ? element.src = boot_1.CW.getAvatarPanel(Number(account_id), {
                                src: !0
                            }) : "_coverAid" === command ? element.src = boot_1.CW.getCoverPanel(Number(account_id), {
                                src: !0
                            }) : "_nameAid" === command ? element.textContent = boot_1.AC.getName(Number(account_id)) : "cw_onm" === command ? element.textContent = boot_1.AC.getOrgName(Number(account_id)) : "cw_cwid" === command && (element.textContent = boot_1.AC.getChatWorkId(Number(account_id)))
                        }
                    }
                }, AccountView.prototype.makeProfileSelector = function(selector, aid_list) {
                    return "" + selector + aid_list.join("," + selector)
                }, AccountView.prototype.updateAvatarAndName = function(aid_list) {
                    var self = this,
                        filtered_list = aid_list.filter(function(aid) {
                            return aid < Number.MAX_SAFE_INTEGER
                        });
                    self.updateAccountProfiles([self.makeProfileSelector("img._avatarAid", filtered_list), self.makeProfileSelector("._nameAid", filtered_list)].join(",")), setTimeout(function() {
                        self.updateAccountProfiles([self.makeProfileSelector(".cw_onm", filtered_list), self.makeProfileSelector(".cw_cwid", filtered_list)].join(","))
                    }, 100)
                }, AccountView.prototype.updateAvatarAndNameAndCover = function(aid_list) {
                    var self = this,
                        filtered_list = aid_list.filter(function(aid) {
                            return aid < Number.MAX_SAFE_INTEGER
                        });
                    self.updateAccountProfiles([self.makeProfileSelector("img._avatarAid", filtered_list), self.makeProfileSelector("._nameAid", filtered_list)].join(",")), setTimeout(function() {
                        self.updateAccountProfiles([self.makeProfileSelector("img._coverAid", filtered_list), self.makeProfileSelector(".cw_onm", filtered_list), self.makeProfileSelector(".cw_cwid", filtered_list)].join(","))
                    }, 100)
                }, AccountView.prototype.showAddContactMessage = function(success_list) {
                    var message_list = [];
                    for (var idx in success_list) switch (success_list[idx]) {
                        case "request_contact":
                            message_list.push(language_1.Language.getLang("%%%contact_myrequest%%%"));
                            break;
                        case "invite_contact":
                            message_list.push(language_1.Language.getLang("%%%contact_invite%%%"))
                    }
                    message_list && boot_1.CW.alert(message_list.join(language_1.Language.getLang("%%%word_separator%%%")) + language_1.Language.getLang("%%%contact_is_completed%%%"))
                }, AccountView.prototype.showChatWorkIdRequestDialog = function(account_dat) {
                    var self = this,
                        aid = account_dat.aid;
                    self.openProfileWindow(aid)
                }, AccountView.prototype.getNoRequestDat = function(room_id) {
                    var self = this,
                        account_dat = {},
                        rooms_dat = {};
                    boot_1.RL.rooms[room_id] ? rooms_dat[room_id] = boot_1.RL.rooms[room_id] : rooms_dat = boot_1.RL.rooms;
                    for (var rid in rooms_dat) {
                        var room = boot_1.RL.rooms[rid];
                        for (var aid in room.member_dat) self.model.myid == aid || self.model.isContact(aid) || self.model.myrequest_dat[aid] || (account_dat[aid] = self.model.account_dat[aid])
                    }
                    return account_dat
                }, AccountView.prototype.buildMyStatus = function() {
                    var self = this,
                        myicon = boot_1.CW.getAvatarPanel(self.model.myid, {
                            size: "small",
                            hovertip: !1,
                            clicktip: !1
                        });
                    $("#_myStatusIcon").html(myicon), $("#_myStatusName").html(boot_1.CW.getName(self.model.myid) + '<span class="openAction icoFontTriangleDown"></span>'), boot_1.CW.view.endInitLoad()
                }, AccountView.prototype.buildMyContact = function() {
                    this.buildContactWindow()
                }, AccountView.prototype.openProfileTip = function(account_id, tip_from) {
                    var self = this;
                    self.profiletip || (self.profiletip = $("#_profileTip").cwToolTip({
                        open: function() {
                            this.$el.html(self.getContactPanel(this.data.account_id))
                        }
                    }), self.profiletip.$el.on("click", "._moveButton", function() {
                        self.profiletip.close()
                    })), self.profiletip.data.account_id = account_id, self.profiletip.open(tip_from)
                }, AccountView.prototype.openProfileWindow = function(account_id) {
                    var self = this;
                    null === self.profile_window && (self.profile_window = $("#_profileContent").cwDialog({
                        width: 815,
                        open: function(aid) {
                            self.assignDetailInfo(this.$el, aid), this.setOption({
                                title: boot_1.AC.getName(aid)
                            })
                        },
                        openCallback: function() {
                            this.$el.scrollTop(0)
                        }
                    }), self.profile_window.$el.on("click", "._moveButton", function() {
                        self.profile_window.close()
                    })), self.profile_window.open(account_id)
                }, AccountView.prototype.closeProfileWindow = function() {
                    this.profile_window.close()
                }, AccountView.prototype.openProfileEditWindow = function() {
                    var self = this;
                    self.prepareEditProfile();
                    var account_id = boot_1.AC.myid;
                    $("#_profileEditContent").cwDialog({
                        title: boot_1.AC.getName(account_id),
                        width: 815,
                        buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(index) {
                            switch (index) {
                                case 0:
                                    var error_list = [],
                                        name = $("#_profileInputName").val().trim();
                                    $("#_profileInputName").val(name), name || error_list.push(language_1.Language.getLang("%%%profile_error_no_displayname%%%"));
                                    var cwid = $("#_profileInputChatWorkId").val().trim();
                                    if ($("#_profileInputChatWorkId").val(cwid), cwid && (self.is_valid_cwid || error_list.push(language_1.Language.getLang("%%%profile_error_invalid_cwid%%%"))), error_list.length) boot_1.CW.alert(error_list.join("\n"));
                                    else {
                                        var sparam = {
                                            cmd: "send_profile_setting"
                                        };
                                        $("#_profileEditContent").find("[data-name]").each(function() {
                                            var item = $(this),
                                                data_val = item.attr("data-value");
                                            if (void 0 == data_val && (data_val = item.val()), $.cwCheckBox.isInit(this)) {
                                                var check = item.cwCheckBox();
                                                check.isChecked() && (sparam[check.$el.attr("data-name")] = check.getVal())
                                            } else "radio" == item.attr("type") ? item[0].checked && (sparam[item.attr("data-name")] = data_val) : sparam[item.attr("data-name")] = data_val
                                        }), void 0 == sparam.allow_search && (sparam.allow_search = "0"), boot_1.CW.post("gateway.php", sparam, function(json) {
                                            var map = {
                                                    name: "nm",
                                                    orgname: "onm",
                                                    department: "dp",
                                                    title: "tt",
                                                    cwid: "cwid",
                                                    skype: "sp",
                                                    twitter: "tw",
                                                    facebook: "fb",
                                                    address: "ad",
                                                    email: "mail",
                                                    introduction: "intro",
                                                    tel_extension: "etel",
                                                    tel_mobile: "mtel",
                                                    tel_organization: "otel",
                                                    url: "url"
                                                },
                                                account_dat = {},
                                                priv_key = "";
                                            for (var mkey in map) json[mkey] && (account_dat[map[mkey]] = json[mkey]), priv_key = mkey + "_priv", json[priv_key] && (account_dat[map[mkey] + "_priv"] = json[priv_key]);
                                            boot_1.AC.setAccountDat(boot_1.AC.myid, account_dat), self.assignDetailInfo(self.profile_window.$el, boot_1.AC.myid), self.profile_window.setOption({
                                                title: boot_1.AC.getName(boot_1.AC.myid)
                                            }), void 0 != json.allow_search && (boot_1.ST.data.allow_search = parseInt(json.allow_search, 10)), boot_1.CW.watch()
                                        }, function() {
                                            boot_1.CW.alert(language_1.Language.getLang("%%%raise_error%%%"))
                                        }), this.close()
                                    }
                            }
                        },
                        open: function() {
                            self.closeProfileWindow(), boot_1.CW.is_business ? (boot_1.CW.is_admin && $("#_profileCommonOrgNameLink").show(), $("#_profileEditOrgNameLoading").show(), boot_1.CW.post("gateway.php", {
                                cmd: "get_common_organization_info"
                            }, function(json) {
                                $("#_profileEditOrgNameLoading").hide(), "" !== json.onm ? ($("#_profileEditOrgName ._profileSelectOrgNameType").show(), $("#_profileSelectOrgnameTypeCommonLabel").text(json.onm)) : $("#_profileEditOrgName ._profileSelectOrgNameType").hide(), json.use_common ? ($("#_profileSelectOrgnameTypeCommon").prop("checked", !0), $("#_profileInputOrgName").val("")) : ($("#_profileSelectOrgnameTypeIndividual").prop("checked", !0), $("#_profileInputOrgName").val(boot_1.AC.getOrgName(account_id)))
                            })) : $("#_profileInputOrgName").val(boot_1.AC.getOrgName(account_id)), $("#_profileEditAvatar").html(boot_1.CW.getAvatarPanel(account_id, {
                                size: "huge",
                                clicktip: !1,
                                hovertip: !1
                            })), $("#_profileEditCover").html(boot_1.CW.getCoverPanel(account_id)), $("#_profileAvatarImage").html(boot_1.CW.getAvatarPanel(account_id, {
                                size: "large",
                                clicktip: !1,
                                hovertip: !1
                            })), $("#_profileCoverImage").html(boot_1.CW.getCoverPanel(account_id)), $("#_profileInputName").val(boot_1.AC.getName(account_id)), "1" == boot_1.ST.data.allow_search ? $("#_profileAllowSearch").cwCheckBox().check() : $("#_profileAllowSearch").cwCheckBox().unCheck(), $("#_profileInputChatWorkId").val(boot_1.AC.getChatWorkId(account_id)), $("#_profileInputIntroduction").val(boot_1.AC.getIntroduction(account_id)), $("#_profileInputFacebook").val(boot_1.AC.getFacebook(account_id)), $("#_profileInputTwitter").val(boot_1.AC.getTwitter(account_id)), $("#_profileInputSkype").val(boot_1.AC.getSkype(account_id)), $("#_profileInputDepartment").val(boot_1.AC.getDepartment(account_id)), $("#_profileInputTitle").val(boot_1.AC.getTitle(account_id)), $("#_profileInputAddress").val(boot_1.AC.getAddress(account_id)), $("#_profileInputUrl").val(boot_1.AC.getUrl(account_id)), $("#_profileInputEmail").val(boot_1.AC.getEmail(account_id)), $("#_profileInputOrgTel").val(boot_1.AC.getOrgTel(account_id)), $("#_profileInputExtensionTel").val(boot_1.AC.getExtensionTel(account_id)), $("#_profileInputtMobileTel").val(boot_1.AC.getMobileTel(account_id)), self.setPrivacySettingIcon("Avatar", boot_1.AC.getAvatarPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Cover", boot_1.AC.getCoverPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("OrgName", boot_1.AC.getOrgNamePriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Department", boot_1.AC.getDepartmentPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Title", boot_1.AC.getTitlePriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Url", boot_1.AC.getUrlPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Address", boot_1.AC.getAddressPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Introduction", boot_1.AC.getIntroductionPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Skype", boot_1.AC.getSkypePriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Twitter", boot_1.AC.getTwitterPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Facebook", boot_1.AC.getFacebookPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("Email", boot_1.AC.getEmailPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("OrgTel", boot_1.AC.getOrgTelPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("ExtensionTel", boot_1.AC.getExtensionTelPriv(boot_1.AC.myid)), self.setPrivacySettingIcon("MobileTel", boot_1.AC.getMobileTelPriv(boot_1.AC.myid));
                            var photo_edit_bar = $("#_profileEditContent").find("._profilePhotoEditBar");
                            photo_edit_bar.hide(), setTimeout(function() {
                                photo_edit_bar.fadeIn()
                            }), self.checkCWID(boot_1.AC.getChatWorkId(account_id))
                        },
                        close: function() {
                            self.openProfileWindow(boot_1.AC.myid)
                        }
                    }).open()
                }, AccountView.prototype.setPrivacySettingIcon = function(profile_key, privacy_setting) {
                    return privacy_setting && $("#_profilePrivacy" + profile_key).removeClass().addClass("icoFont" + common_1.ucfirst(privacy_setting)).attr("data-value", privacy_setting), this
                }, AccountView.prototype.prepareContactWindow = function() {
                    var self = this;
                    self.contact_window = $("#_contactWindow").cwFloatWindow({
                        width: 920,
                        title: language_1.Language.getLang("%%%menu_contact_admin%%%"),
                        open: function() {
                            self.selectDefaultTabInContactWindow()
                        }
                    }), $("#_contactWindowTab").on("click", "li", function() {
                        if ("_contactWindowTabContact" === this.id && self.reachedContactLimit()) return boot_1.CW.view.showContactLimitErrorDialog({
                            plan_name: PLAN_NAME,
                            limit_num: boot_1.CW.contact_limit_num
                        }), !1;
                        $C("#_contactWindowTab li").removeClass("floatTabSelect"), $C("#_contactWindowSearch").focus(), self.tab_type = $(this).addClass("floatTabSelect").attr("data-type"), self.clearSearchContact(), contactfilter.setVal(""), $C("#_contactWindowBox").scrollTop(0), "_contactWindowTabInviteEmail" === this.id ? boot_1.TREASURE.trackEvent("contact_list", "open", {
                            label: "mail_invitation"
                        }) : "_contactWindowTabContact" === this.id ? boot_1.TREASURE.trackEvent("contact_list", "open", {
                            label: "new_contact"
                        }) : "_contactWindowTabMyContact" === this.id ? boot_1.TREASURE.trackEvent("contact_list", "open", {
                            label: "contact_list"
                        }) : "_contactWindowTabMyRequest" === this.id ? boot_1.TREASURE.trackEvent("contact_list", "open", {
                            label: "request_contact_list"
                        }) : "_contactWindowTabRequest" === this.id ? boot_1.TREASURE.trackEvent("contact_list", "open", {
                            label: "unapproval_contact_list"
                        }) : "_contactWindowTabNoRequest" === this.id && boot_1.TREASURE.trackEvent("contact_list", "open", {
                            label: "unconnected_contact_list"
                        })
                    });
                    var contactfilter = $("#_contactWindowSearch").cwSearchBox({
                        update: function() {
                            "addcontact" == self.tab_type ? self.searchContact("word", this.getVal()) : self.buildContactWindow()
                        }
                    });
                    $("#_addContactByMail").hide();
                    var action_buttons = $("#_contactWindowCheckActionArea").find("._button").cwButton();
                    $C("#_contactWindowList").on("click", "._contactList", function() {
                        $C("#_contactWindowList").find("._contactList").removeClass("adminDetailSelected");
                        var contact = $(this);
                        contact.addClass("adminDetailSelected"), self.buildContactDetail(contact.attr("data-aid")), boot_1.TREASURE.trackEvent("contact_list", "click", {
                            label: "contact_list_user"
                        })
                    }).on("cwCheckBox_update", function(event, is_check, account_id) {
                        is_check ? self.checked_contact_flag[account_id] = is_check : self.checked_contact_flag[account_id] && delete self.checked_contact_flag[account_id];
                        var contact_num = $C("#_contactWindowList").find("._contactList").length,
                            check_num = Object.keys(self.checked_contact_flag).length;
                        check_num ? (check_num == contact_num ? self.contact_window_allcheck.check() : self.contact_window_allcheck.partialCheck(), action_buttons.enable()) : (self.contact_window_allcheck.unCheck(), action_buttons.disable())
                    }).on("click", "._inviteContact", function() {
                        var invite_mail_list = self.search_stat.inviteMailList;
                        invite_mail_list.length > 0 && (boot_1.CW.showProgress(language_1.Language.getLang("%%%contact_doing_invite%%%")), boot_1.CW.post("gateway.php", {
                            cmd: "invite_contact",
                            e: invite_mail_list,
                            nm: boot_1.AC.getName(boot_1.AC.myid),
                            av: boot_1.CW.getAvatarPanel(boot_1.AC.myid, {
                                src: !0
                            })
                        }, function() {
                            boot_1.CW.hideProgress(), boot_1.CW.alert(language_1.Language.getLang("%%%contact_done_invite%%%")), self.clearSearchContact(), self.buildContactWindow()
                        }, function(error_message) {
                            boot_1.CW.hideProgress(), boot_1.CW.alert(error_message)
                        }))
                    }), self.contact_window_allcheck = $C("#_contactWindowCheckAll").cwCheckBox(), self.contact_window_allcheck_button = $("#_contactWindowCheckAllButton").cwButton({
                        click: function() {
                            self.contact_window_allcheck.toggle()
                        },
                        disable: function() {
                            self.contact_window_allcheck.disable()
                        },
                        enable: function() {
                            self.contact_window_allcheck.enable()
                        }
                    }), $C("#_contactWindowCheckAll").cwCheckBox({
                        update: function(is_checked, value, is_partial) {
                            var contact_window_allcheck = this;
                            is_partial || (contact_window_allcheck.isChecked() ? $C("#_contactWindowList").find("._cwCBUnchecked").each(function() {
                                $(this).cwCheckBox().check()
                            }) : $C("#_contactWindowList").find("._cwCBChecked").each(function() {
                                $(this).cwCheckBox().unCheck()
                            }))
                        }
                    }), $("#_contactDetailClose").click(function() {
                        $C("#_contactWindowList").find("._contactList").removeClass("adminDetailSelected"), $C("#_contactDetailArea").attr("data-aid", "").hide(), $C("#_contactDetailBlankArea").show()
                    }), $("#_contactWindowCancel").cwButton({
                        click: function() {
                            var aid_list = [];
                            for (var aid in self.checked_contact_flag) aid_list.push(aid);
                            aid_list.length > 0 && (boot_1.CW.showProgress(language_1.Language.getLang("%%%canceling%%%")), boot_1.CW.post("gateway.php", {
                                cmd: "cancel_contact_request",
                                a: aid_list
                            }, function() {
                                boot_1.CW.hideProgress()
                            }, function(error_message) {
                                boot_1.CW.hideProgress(), boot_1.CW.alert(error_message)
                            }))
                        }
                    }), $("#_contactWindowDelete").cwButton({
                        click: function() {
                            var aid_list = [];
                            for (var aid in self.checked_contact_flag) aid_list.push(aid);
                            boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%contact_multi_delete_confirm%%%", {
                                num: aid_list.length
                            }), function() {
                                aid_list.length > 0 && (boot_1.CW.showProgress(language_1.Language.getLang("%%%deleting%%%")), boot_1.CW.post("gateway.php", {
                                    cmd: "delete_contact",
                                    a: aid_list
                                }, function() {
                                    boot_1.CW.hideProgress(), boot_1.CW.watch()
                                }, function(error_message) {
                                    boot_1.CW.hideProgress(), boot_1.CW.alert(error_message)
                                }))
                            })
                        }
                    }), $("#_contactWindowAccept").cwButton({
                        click: function() {
                            var aid_list = [];
                            for (var aid in self.checked_contact_flag) aid_list.push(aid);
                            aid_list.length > 0 && (boot_1.CW.showProgress(language_1.Language.getLang("%%%accepting%%%")), boot_1.CW.post("gateway.php", {
                                cmd: "accept_contact_request",
                                a: aid_list
                            }, function(json) {
                                void 0 != json.error && boot_1.CW.view.showContactLimitErrorDialog(json.error), boot_1.CW.hideProgress()
                            }, function(error_message) {
                                boot_1.CW.hideProgress(), boot_1.CW.alert(error_message)
                            }))
                        }
                    }), $("#_contactWindowAdd").cwButton({
                        click: function() {
                            var aid_list = [];
                            for (var aid in self.checked_contact_flag) aid_list.push(aid);
                            aid_list.length > 0 && self.requestContact(aid_list, this)
                        }
                    });
                    var contactpager_list = ["first", "prev", "next", "last"];
                    self.contact_window_pager = $("#_contactWindowPager").cwButtonBar({
                        update: function(idx) {
                            switch (contactpager_list[idx]) {
                                case "first":
                                    self.contact_window_pager_index = 0;
                                    break;
                                case "prev":
                                    self.contact_window_pager_index--, self.contact_window_pager_index < 0 && (self.contact_window_pager_index = 0);
                                    break;
                                case "next":
                                    self.contact_window_pager_index++, self.contact_window_pager_index >= self.contact_window_pager_num && (self.contact_window_pager_index = self.contact_window_pager_num - 1);
                                    break;
                                case "last":
                                    self.contact_window_pager_index = self.contact_window_pager_num - 1
                            }
                            self.buildContactWindow({
                                resetPager: !1
                            }), $C("#_contactWindowBox").scrollTop(0)
                        }
                    })
                }, AccountView.prototype.requestContact = function(aid_list, button, success_callback) {
                    var self = this;
                    button || (button = {
                        enable: function() {},
                        disable: function() {}
                    });
                    var add_contact = function() {
                        var callback = {
                            common: function() {
                                button.enable()
                            },
                            success: success_callback
                        };
                        button.disable(), self.addContact(aid_list, callback)
                    };
                    aid_list.length > 1 ? boot_1.CW.view.confirm(language_1.Language.getLang("%%%contact_multi_add_confirm%%%", {
                        num: aid_list.length
                    }), add_contact) : 1 == aid_list.length && add_contact()
                }, AccountView.prototype.addContact = function(aid_list, callback) {
                    var self = this;
                    aid_list.length > 1 && boot_1.CW.showProgress(language_1.Language.getLang("%%%contact_multi_adding%%%")), boot_1.CW.post("gateway.php", {
                        cmd: "request_contact",
                        a: aid_list
                    }, function(json) {
                        if (void 0 != json.error) boot_1.CW.view.showContactLimitErrorDialog(json.error), callback.common();
                        else {
                            for (var i = 0; i < json.requested_list.length; i++) {
                                var aid = json.requested_list[i];
                                self.model.myrequest_dat[aid] = {
                                    nm: boot_1.AC.getName(aid),
                                    mg: void 0
                                }
                            }
                            boot_1.CW.watch()
                        }
                        boot_1.CW.hideProgress(), callback.success && callback.success()
                    }, function(error_message) {
                        boot_1.CW.alert(error_message), callback.common(), boot_1.CW.hideProgress()
                    })
                }, AccountView.prototype.openContactWindow = function() {
                    var self = this;
                    self.contact_window || self.prepareContactWindow(), self.contact_window.open(), self.inviteEmailView.init(), self.buildContactWindow()
                }, AccountView.prototype.getSearchStat = function() {}, AccountView.prototype.searchContact = function(type, query) {
                    var self = this;
                    if (self.search_stat.lastType != type || self.search_stat.lastQuery != query) {
                        switch (self.clearSearchContact(), self.search_stat.isLoading = !0, self.search_stat.lastType = type, self.search_stat.lastQuery = query, self.search_stat.accountIdList = [], self.search_stat.inviteMailList = [], type) {
                            case "word":
                                query ? self.addcontact_search_timer = setTimeout(function() {
                                    self.addcontact_search_timer = null, self.addcontact_search_xhr = boot_1.CW.post("r/gateway.php", {
                                        cmd: "search_contact",
                                        q: query
                                    }, function(json) {
                                        if (void 0 != json.error) boot_1.CW.view.showContactLimitErrorDialog(json.error);
                                        else {
                                            for (var account_id in json.account_dat) boot_1.AC.myid != account_id && self.search_stat.accountIdList.push(account_id), boot_1.AC.isUnknown(account_id) && boot_1.AC.setAccountDat(account_id, json.account_dat[account_id]);
                                            if (json.error_dat && json.error_dat.noexist)
                                                for (var noexist_list = json.error_dat.noexist, i = 0, noex_len = noexist_list.length; i < noex_len; i++) {
                                                    var mail = noexist_list[i];
                                                    self.search_stat.inviteMailList.push(mail)
                                                }
                                        }
                                        self.search_stat.isSearched = !0, self.search_stat.isLoading = !1, self.buildContactWindow()
                                    })
                                }, 1e3) : (self.search_stat.isSearched = !1, self.search_stat.isLoading = !1, self.buildContactWindow());
                                break;
                            case "mail":
                                var address_list = query.split("\n");
                                self.addcontact_search_xhr = boot_1.CW.post("gateway.php", {
                                    cmd: "check_address",
                                    a: address_list
                                }, function(json) {
                                    if (void 0 != json.error) boot_1.CW.view.showContactLimitErrorDialog(json.error);
                                    else {
                                        for (var email in json.address_dat) {
                                            var account_id = json.address_dat[email].aid;
                                            self.search_stat.accountIdList.push(account_id), boot_1.AC.isUnknown(account_id) && boot_1.AC.setAccountDat(account_id, json.address_dat[email])
                                        }
                                        var error_list = [];
                                        if (void 0 != json.error_dat) {
                                            var error_alert_message = "";
                                            for (var key in json.error_dat) {
                                                var error_mail_num = json.error_dat[key].length;
                                                if ("noexist" == key)
                                                    for (var i = 0; i < error_mail_num; i++) self.search_stat.inviteMailList.push(json.error_dat[key][i]);
                                                else {
                                                    error_list = error_list.concat(json.error_dat[key]), error_alert_message && (error_alert_message += "\n\n");
                                                    var another_length = 0,
                                                        for_length = 0;
                                                    error_mail_num > 3 ? (for_length = 3, another_length = error_mail_num - 3) : for_length = error_mail_num;
                                                    for (var error_mail_list = "", i = 0; i < for_length; i++) error_mail_list && (error_mail_list += ","), error_mail_list += json.error_dat[key][i];
                                                    error_alert_message += error_mail_list, another_length > 0 && (error_alert_message += language_1.Language.getLang("%%%contact_rest_number%%%", {
                                                        rest_number: another_length
                                                    })), "invalid" == key ? error_alert_message += language_1.Language.getLang("%%%contact_error_is_not_mailaddress%%%") : "limited" == key ? error_alert_message += language_1.Language.getLang("%%%contact_error_is_over_contactnum%%%") : "external" == key && (error_alert_message += language_1.Language.getLang("%%%contact_error_is_disable_external%%%"))
                                                }
                                            }
                                            error_alert_message && boot_1.CW.alert(error_alert_message)
                                        }
                                        self.search_stat.isSearched = !0, self.search_stat.isLoading = !1, self.buildContactWindow()
                                    }
                                })
                        }
                        self.buildContactWindow()
                    }
                }, AccountView.prototype.clearSearchContact = function() {
                    var self = this;
                    self.addcontact_search_xhr && (self.addcontact_search_xhr.abort(), self.addcontact_search_xhr = null), self.addcontact_search_timer && clearTimeout(self.addcontact_search_timer), self.contact_window_allcheck.unCheck(!0), self.checked_contact_flag = {}, self.search_stat = $.extend({}, self.search_stat_default)
                }, AccountView.prototype.selectDefaultTabInContactWindow = function() {
                    var self = this,
                        id = self.inviteEmailView.tabId;
                    0 === $C("#" + id).length && (id = "_contactWindowTabContact"), self.reachedContactLimit() && (id = "_contactWindowTabMyContact"), $C("#" + id).click()
                }, AccountView.prototype.buildContactWindow = function(user_option) {
                    void 0 === user_option && (user_option = {});
                    var self = this;
                    $.extend({
                        resetPager: !0
                    }, user_option).resetPager && (self.contact_window_pager_index = 0);
                    var request_num = Object.keys(self.model.request_dat).length;
                    if (request_num > 0 ? $("#_myAllContactNum").text(request_num).show() : $("#_myAllContactNum").hide(), self.contact_window && self.contact_window.isOpen()) {
                        self.checked_contact_flag = {};
                        var account_list = self.search_stat.accountIdList,
                            invite_mail_list = self.search_stat.inviteMailList,
                            html = "",
                            filter_word_list = [],
                            empty_result_message = "",
                            aid_check = function(aid, filter_word_list) {
                                return aid != self.model.myid && !(filter_word_list.length > 0 && !self.model.isMatchedWithKeyList(filter_word_list, aid))
                            };
                        "invitemail" === self.tab_type && 0 === $C("#" + self.inviteEmailView.tabId).length && (self.tab_type = "addcontact"), self.contact_window_allcheck_button.disable(), $C("#_contactWindowNavigation ._contactWindowNavigationItem").hide(), "invitemail" == self.tab_type ? (self.inviteEmailView.show(), $C("#_contactWindowNavigation").hide(), $C("#_contactDetailAreaWrapper").hide(), $C("#_contactWindowBox").hide()) : ($C("#_contactWindowNavigation").show(), $C("#_contactDetailAreaWrapper").show(), $C("#_contactWindowBox").show(), self.inviteEmailView.hide());
                        var word;
                        switch (self.tab_type) {
                            case "addcontact":
                                empty_result_message = language_1.Language.getLang("%%%contact_search_introduction%%%"), $C("#_addContactType").show(), $C("#_contactWindowAdd").show().cwButton().disable(), $C("#_contactWindowSearch").attr("placeholder", language_1.Language.getLang("%%%contact_search_placeholder%%%"));
                                for (var tmp_account_list = [], i = 0, acc_len = account_list.length; i < acc_len; i++) {
                                    var aid = account_list[i];
                                    boot_1.AC.isContact(aid) || boot_1.AC.request_dat[aid] || boot_1.AC.myrequest_dat[aid] || tmp_account_list.push(aid)
                                }
                                account_list = tmp_account_list;
                                break;
                            case "contact":
                                empty_result_message = language_1.Language.getLang("%%%contact_search_not_found%%%"), $C("#_contactWindowSearch").attr("placeholder", language_1.Language.getLang("%%%contact_search%%%")), word = $C("#_contactWindowSearch").val().toLowerCase(), self.search_stat.isSearched = !1, word && (filter_word_list = boot_1.CW.splitWithSpace(word), self.search_stat.isSearched = !0), account_list = [];
                                for (var i = 0, cnt_len = self.model.contact_list.length; i < cnt_len; i++) {
                                    var aid = self.model.contact_list[i];
                                    aid_check(aid, filter_word_list) && account_list.push(aid)
                                }
                                $C("#_contactWindowDelete").show().cwButton().disable();
                                break;
                            case "myrequest":
                                $C("#_contactWindowSearch").attr("placeholder", language_1.Language.getLang("%%%contact_search%%%")), word = $C("#_contactWindowSearch").val().toLowerCase(), self.search_stat.isSearched = !1, word && (filter_word_list = boot_1.CW.splitWithSpace(word), self.search_stat.isSearched = !0), account_list = [];
                                for (var aid in self.model.myrequest_dat) aid_check(aid, filter_word_list) && account_list.push(aid);
                                $C("#_contactWindowCancel").show().cwButton().disable();
                                break;
                            case "request":
                                $C("#_contactWindowSearch").attr("placeholder", language_1.Language.getLang("%%%contact_search%%%")), word = $C("#_contactWindowSearch").val().toLowerCase(), self.search_stat.isSearched = !1, word && (filter_word_list = boot_1.CW.splitWithSpace(word), self.search_stat.isSearched = !0), account_list = [];
                                for (var aid in self.model.request_dat) aid_check(aid, filter_word_list) && account_list.push(aid);
                                $C("#_contactWindowAccept").show().cwButton().disable();
                                break;
                            case "norequest":
                                $C("#_contactWindowSearch").attr("placeholder", language_1.Language.getLang("%%%contact_search%%%")), word = $C("#_contactWindowSearch").val().toLowerCase(), self.search_stat.isSearched = !1, word && (filter_word_list = boot_1.CW.splitWithSpace(word), self.search_stat.isSearched = !0), account_list = [];
                                var norequest_dat = self.getNoRequestDat();
                                for (var aid in norequest_dat) aid_check(aid, filter_word_list) && account_list.push(aid);
                                html += '<div class="contactAddAllHint">' + language_1.Language.getLang("%%%contact_add_all_hint%%%") + "</div>", $C("#_contactWindowAdd").show().cwButton().disable()
                        }
                        self.search_stat.isLoading ? html += '<div class="contentLoading"><img src="./imagenew/all/common/loader/img_loader_gray.gif" />' + language_1.Language.getLang("%%%loading%%%") + "</div>" : 0 == account_list.length && 0 == invite_mail_list.length && (self.search_stat.isSearched ? html += '<div class="emptyAdminContent"><img src="./imagenew/common/empty/img_contact_empty.png" alt="" /><p>' + language_1.Language.getLang("%%%contact_error_search_user_not_found%%%") + "</p></div>" : html += '<div class="emptyAdminContent"><img src="./imagenew/common/empty/img_contact_empty.png" alt="" /><p>' + empty_result_message + "</p></div>"), account_list.sort(function(a, b) {
                            return self.model.getName(a).localeCompare(self.model.getName(b))
                        }), self.model.contact_list.length > 1 ? $C("#_contactWindowListNum").text("(" + (self.model.contact_list.length - 1).toLocaleString() + ")") : $C("#_contactWindowListNum").text("");
                        var myrequest_num = Object.keys(self.model.myrequest_dat).length;
                        if (myrequest_num > 0) $C("#_contactWindowTabMyRequest").show(), $C("#_contactWindowMyRequestNum").text("(" + myrequest_num.toLocaleString() + ")");
                        else if ($C("#_contactWindowTabMyRequest").hide(), "myrequest" == self.tab_type) return void self.selectDefaultTabInContactWindow();
                        if (request_num > 0) $C("#_contactWindowTabRequest").show(), $C("#_contactWindowRequestNum").html('<span class="contactRequestNum">' + request_num.toLocaleString() + "</span>").show();
                        else if ($C("#_contactWindowTabRequest").hide(), "request" == self.tab_type) return void self.selectDefaultTabInContactWindow();
                        var norequest_num = Object.keys(self.getNoRequestDat()).length;
                        if (norequest_num > 0) $C("#_contactWindowTabNoRequest").show(), $C("#_contactWindowNoRequestNum").text("(" + norequest_num.toLocaleString() + ")");
                        else if ($C("#_contactWindowTabNoRequest").hide(), "norequest" == self.tab_type) return void self.selectDefaultTabInContactWindow();
                        var invite_length = invite_mail_list.length;
                        if (invite_length > 0) {
                            html += '<li class="inviteMailNotFound subContentShadow"><p class="alert alertWarning">' + language_1.Language.getLang("%%%contact_mail_not_found%%%") + "</p><ul>";
                            for (var i = 0; i < invite_length; i++) {
                                var mail = invite_mail_list[i];
                                html += "<li>" + common_1.escape_html(mail) + "</li>"
                            }
                            html += '</ul><div class="btnInviteContentArea"><div class="_inviteContact button btnPrimary">' + language_1.Language.getLang("%%%contact_do_invite%%%") + "</div></div></li>"
                        }
                        var disp_contact_list = [],
                            filtererd_length = account_list.length;
                        if (self.contact_window_pager_num = parseInt(filtererd_length / self.contact_window_pager_view_num, 10), filtererd_length % self.contact_window_pager_view_num != 0 && self.contact_window_pager_num++, filtererd_length >= self.contact_window_pager_view_num) {
                            var idx_start = self.contact_window_pager_index * self.contact_window_pager_view_num,
                                idx_end = idx_start + self.contact_window_pager_view_num;
                            idx_end > filtererd_length && (idx_end = filtererd_length);
                            for (var idx = idx_start; idx < idx_end; idx++) disp_contact_list.push(account_list[idx])
                        } else disp_contact_list = account_list;
                        var disp_len = disp_contact_list.length;
                        disp_len > 0 && self.contact_window_allcheck_button.enable();
                        for (var detail_contact_id = $C("#_contactDetailArea").attr("data-contact-id"), detail_contact_is_found = !1, contact_option = {
                            profileLink: !1,
                            shortButton: !1,
                            footerButton: !0,
                            showCover: !1,
                            showMoveChat: !0,
                            showLive: !0,
                            showDeleteContact: !1,
                            showCheckBox: !0,
                            isChecked: !1
                        }, i = 0; i < disp_len; i++) {
                            var aid = disp_contact_list[i];
                            html += '<li class="_contactList subContentShadow" data-aid="' + aid + '">' + self.getContactPanel(aid, contact_option) + "</li>", detail_contact_id == aid && (detail_contact_is_found = !0)
                        }
                        detail_contact_is_found || $C("#_contactDetailClose").click(), self.contact_window_allcheck.unCheck(!0), $C("#_contactWindowList").html(html), account_list.length ? $C("#_contactWindowPagerIndex").text((self.contact_window_pager_index + 1).toString() + " / " + self.contact_window_pager_num) : $C("#_contactWindowPagerIndex").text(""), self.contact_window_pager.enableButtonAll(), 0 == self.contact_window_pager_index && self.contact_window_pager.disableButton(0).disableButton(1), self.contact_window_pager_num - self.contact_window_pager_index <= 1 && self.contact_window_pager.disableButton(2).disableButton(3), "invitemail" == self.tab_type ? self.inviteEmailView.giveFocus() : $C("#_contactWindowSearch").focus()
                    }
                }, AccountView.prototype.buildContactDetail = function(account_id) {
                    var self = this;
                    boot_1.AC.account_dat[account_id] && ($C("#_contactDetailBlankArea").hide(), $C("#_contactDetailArea").show(), self.assignDetailInfo($C("#_contactDetailArea"), account_id))
                }, AccountView.prototype.assignDetailInfo = function(wrapper, aid) {
                    var self = this;
                    if (self.loading_profile_aid) return !1;
                    if (!boot_1.AC.hasDetailData(aid)) {
                        wrapper.hide();
                        var get_priv_setting = !1;
                        return aid == boot_1.AC.myid && (get_priv_setting = !0), self.loading_profile_aid = aid, boot_1.AC.refreshAccountDetailData(aid, get_priv_setting, function() {
                            self.loading_profile_aid = 0, self.assignDetailInfo(wrapper, aid)
                        }), !1
                    }
                    wrapper.find("._profileName").html(boot_1.CW.getName(aid)), wrapper.find("._profileAvatar").html(boot_1.CW.getAvatarPanel(aid, {
                        size: "huge",
                        clicktip: !1,
                        hovertip: !1
                    })), wrapper.find("._profileCover").html(boot_1.CW.getCoverPanel(aid)), wrapper.find("._profileContactDetailCover").html(boot_1.CW.getCoverPanel(aid)), wrapper.find("._profileOrgName").html(boot_1.CW.getOrgName(aid));
                    var cwidlink = boot_1.CW.getChatWorkIdLink(aid);
                    cwidlink ? wrapper.find("._profileChatWorkIdLink").html(language_1.Language.getLang("%%%profile_chatworkidtip%%%") + cwidlink).show() : wrapper.find("._profileChatWorkIdLink").hide();
                    var intro = boot_1.AC.getIntroduction(aid);
                    intro ? wrapper.find("._profileNameDescription").html("<pre>" + boot_1.CW.renderMessage(intro) + "</pre>").show() : wrapper.find("._profileNameDescription").hide(), wrapper.find("._profileDepartment").text(boot_1.AC.getDepartment(aid)), wrapper.find("._profileTitle").text(boot_1.AC.getTitle(aid)), wrapper.find("._profileAddress").text(boot_1.AC.getAddress(aid));
                    var url = boot_1.AC.getUrl(aid);
                    if (url.match(/^(https?|ftp)(:\/\/[-_.!~*\'()a-zA-Z0-9;\/?:\@&=+\$,%#]+)$/)) {
                        var escaped_url = common_1.escape_html(url);
                        wrapper.find("._profileUrl").html('<a href="' + escaped_url + '" rel="noopener noreferrer" target="_blank">' + escaped_url + "</a>")
                    } else wrapper.find("._profileUrl").text(url);
                    var email = boot_1.AC.getEmail(aid);
                    if (email.match(/^[A-Za-z0-9]+[\w-]+@[\w\.-]+\.\w{2,}$/)) {
                        var escaped_mail = common_1.escape_html(email);
                        wrapper.find("._profileEmail").html('<a href="mailto:' + escaped_mail + '">' + escaped_mail + "</a>")
                    } else wrapper.find("._profileEmail").text(email);
                    wrapper.find("._profileOrgTel").text(boot_1.AC.getOrgTel(aid)), wrapper.find("._profileExtensionTel").text(boot_1.AC.getExtensionTel(aid)), wrapper.find("._profileMobileTel").text(boot_1.AC.getMobileTel(aid));
                    var sns_html = "",
                        escaped_facebook = common_1.escape_html(boot_1.AC.getFacebook(aid)),
                        escaped_twitter = common_1.escape_html(boot_1.AC.getTwitter(aid)),
                        skype = boot_1.AC.getSkype(aid),
                        escaped_skype = common_1.escape_html(skype);
                    escaped_facebook && (sns_html = '<li class="profileSNSItem"><span class="icoFontFacebook profileSNSItem__icon"></span><span class="icoTextHide">facebook</span><a href="https://www.facebook.com/' + escaped_facebook + '" target="_blank">' + escaped_facebook + "</a></li>"), escaped_twitter && (sns_html += '<li class="profileSNSItem"><span class="icoFontTwitter profileSNSItem__icon"></span><span class="icoTextHide">twitter</span><a href="http://twitter.com/' + escaped_twitter + '" rel="noopener noreferrer" target="_blank">' + escaped_twitter + "</a></li>"), skype && (sns_html += '<li class="profileSNSItem"><span class="icoFontSkype profileSNSItem__icon"></span><span class="icoTextHide">skype</span><a href="skype:' + escaped_skype + '?call">' + escaped_skype + "</a></li>"), wrapper.find("._profileSNS").html(sns_html);
                    var contact_action = self.getContactButton(aid, {
                        shortButton: !1,
                        showMoveChat: !0,
                        showLive: !0,
                        showDeleteContact: !1
                    });
                    aid == boot_1.AC.myid && (contact_action = '<div class="_profileEdit button">' + language_1.Language.getLang("%%%profile_edit%%%") + "</div>" + contact_action), wrapper.find("._profileButton").html(contact_action), wrapper.show()
                }, AccountView.prototype.getContactPanel = function(account_id, user_option) {
                    void 0 === user_option && (user_option = {});
                    var self = this,
                        option = $.extend({
                            profileLink: !0,
                            showButton: !0,
                            footerButton: !0,
                            showCover: !0,
                            showLive: !0,
                            showCheckBox: !1,
                            isChecked: !1
                        }, user_option),
                        cwlink_label = "",
                        cwlink = boot_1.CW.getChatWorkIdLink(account_id);
                    cwlink && (cwlink_label = '<dd id="profileTipChatWorkId">' + language_1.Language.getLang("%%%profile_chatworkidtip%%%") + "<span>" + cwlink + "</span></dd>");
                    var direct_call = "";
                    boot_1.AC.getRoomId(account_id) && option.showLive && ("ipad" === MOBILE ? direct_call = '<div class="btnGroup"><div class="button btnDisable"><span class="icoFontVideoChat icoSizeLarge"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%live_join%%%") + "</span></div></div>" : account_id != boot_1.AC.myid && (direct_call = '<div class="btnGroup"><div class="_joinLive button" data-aid="' + account_id + '"><span class="icoFontVideoChat icoSizeLarge"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%live_join%%%") + "</span></div></div>"));
                    var contact_action = "";
                    option.showButton ? (option.showLive = !1, contact_action = self.getContactButton(account_id, option)) : contact_action = "";
                    var name = "";
                    option.profileLink && !boot_1.AC.isUndisclosed(account_id) ? (contact_action += '<div class="_profileTipButton _openProfile _moveButton button" data-aid="' + account_id + '">' + language_1.Language.getLang("%%%menu_profile_setting%%%") + "</div>", name = '<span class="_profileTipButton _openProfile profileTipName anchorText" data-aid="' + account_id + '">' + boot_1.CW.getName(account_id) + "</span>") : name = option.showCheckBox ? '<span class="_profileTipCheckLabel">' + boot_1.CW.getName(account_id) + "</span>" : boot_1.CW.getName(account_id);
                    var cover = "";
                    option.showCover && (cover = boot_1.CW.getCoverPanel(account_id));
                    var button = "",
                        footer = "";
                    option.showButton && contact_action && (option.footerButton ? footer = '<div class="tooltipFooter"><div class="btnGroup"><div class="_profileTipButton">' + contact_action + "</div></div></div>" : button = '<div class="btnGroup">' + contact_action + "</div>");
                    var checkbox = "";
                    option.showCheckBox && (checkbox = $.cwCheckBox.create(option.isChecked, "", account_id, {
                        class: "_contactPanelCheck"
                    }));
                    var requestMessage = "";
                    if ("request" === self.tab_type && boot_1.AC.getRequestMessage(account_id)) {
                        var $requestMessage = $("<div>").addClass("speakerProfileTooltipMessage").append($("<pre>").addClass("message").text(boot_1.AC.getRequestMessage(account_id)));
                        requestMessage = $("<div>").append($requestMessage).html()
                    }
                    return '<div class="_contactPanel" data-aid="' + account_id + '"><div class="profileImgToolTip">' + cover + '<div class="profileTooltipAvater">' + boot_1.CW.getAvatarPanel(account_id, {
                            hovertip: !1,
                            clicktip: !1,
                            size: "large"
                        }) + '</div></div><div class="speakerProfileTooltipContent clearfix">' + checkbox + "<dl><dt>" + name + '</dt><dd id="_profileTipOrgName">' + boot_1.CW.getOrgName(account_id) + "</dd>" + cwlink_label + direct_call + button + "</dl></div>" + requestMessage + footer
                }, AccountView.prototype.getContactButton = function(account_id, user_option) {
                    var option = $.extend({
                            shortButton: !1,
                            showMoveChat: !0,
                            showLive: !0,
                            showDeleteContact: !1
                        }, user_option),
                        contact_action = "",
                        room_id = boot_1.AC.getRoomId(account_id);
                    if (room_id) {
                        if (option.showLive && ("ipad" === MOBILE ? contact_action += '<div class="button btnDisable"><span class="icoFontVideoChat"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%live_join%%%") + "</span></div>" : account_id != boot_1.AC.myid && (contact_action += '<div class="_joinLive button" data-aid="' + account_id + '"><span class="icoFontVideoChat"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%live_join%%%") + "</span></div>")), option.showMoveChat) {
                            var chat_jump_text = language_1.Language.getLang("%%%directchat%%%");
                            account_id == boot_1.AC.myid && (chat_jump_text = language_1.Language.getLang("%%%mychat%%%")), contact_action += '<div class="_roomLink _moveButton button" data-rid="' + room_id + '">' + chat_jump_text + "</div>"
                        }
                        account_id != boot_1.AC.myid && option.showDeleteContact && (option.shortButton ? contact_action += '<div class="_deleteContact _actionButton button"><span class="icoFontActionDelete"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_delete%%%") + "</span></div>" : contact_action += '<div class="_deleteContact _actionButton button">' + language_1.Language.getLang("%%%contact_delete%%%") + "</div>")
                    } else boot_1.AC.myrequest_dat[account_id] ? contact_action = option.shortButton ? '<div class="_cancelMyRequest _actionButton button">' + language_1.Language.getLang("%%%button_cancel%%%") + "</div>" : '<div class="_cancelMyRequest _actionButton button">' + language_1.Language.getLang("%%%contact_request_cancel%%%") + "</div>" : boot_1.AC.request_dat[account_id] ? contact_action = option.shortButton ? '<div class="_acceptContactRequest _actionButton button btnPrimary" data-aid="' + account_id + '">' + language_1.Language.getLang("%%%button_accept%%%") + '</div><div class="_rejectContactRequest _actionButton button" data-aid="' + account_id + '">' + language_1.Language.getLang("%%%button_reject%%%") + "</div>" : '<div class="_acceptContactRequest _actionButton button btnPrimary" data-aid="' + account_id + '">' + language_1.Language.getLang("%%%button_accept_long%%%") + '</div><div class="_rejectContactRequest _actionButton button" data-aid="' + account_id + '">' + language_1.Language.getLang("%%%button_reject_long%%%") + "</div>" : boot_1.AC.isDeleted(account_id) || boot_1.AC.isUndisclosed(account_id) || (contact_action = option.shortButton ? '<div class="_requestContact _actionButton button btnPrimary" data-aid="' + account_id + '">' + language_1.Language.getLang("%%%button_add%%%") + "</div>" : '<div class="_requestContact _actionButton button btnPrimary" data-aid="' + account_id + '">' + language_1.Language.getLang("%%%contactpanel_add_contact%%%") + "</div>");
                    return contact_action
                }, AccountView.prototype.reachedContactLimit = function() {
                    var self = this,
                        limit_num = boot_1.CW.contact_limit_num;
                    return limit_num && self.model.contact_list.length - 1 >= limit_num
                }, AccountView
            }();
        exports.AccountView = AccountView
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/language": 384,
        "./InviteMailAccountView": 459
    }],
    454: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Clipboard = require("clipboard"),
            common_1 = require("../lib/common"),
            common_2 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            S = require("string"),
            language_1 = require("../lib/language"),
            emoticons_1 = require("../lib/emoticon/emoticons"),
            chattext = $C("#_chatText"),
            fsa = $("#_fileSendStatusArea"),
            fst = $("#_fileStatus"),
            csa = $("#_chatSendArea"),
            ChatSendView = function() {
                function ChatSendView(model) {
                    this.model = model, this.file_send_retry_count = 0, this.send_type = "chat", this.press_key = 0, this.timeline_actionbar = null, this.emo_tip = null, this.expanded_room_id = 0, this.timeline_min_height = boot_1.TM.timeline_min_height, this.chattext_min_content_height = boot_1.TM.chattext_min_content_height, this.chatSendArea_expandto_height_default = boot_1.TM.chatSendArea_expandto_height_default, this.chatSendArea_initial_height = boot_1.TM.chatSendArea_initial_height, this.chattext_padding_height = boot_1.messageArea.getWrapperPaddingHeight(), this.mainContent_roomHeader_outer_height = $("#_roomHeader").outerHeight(!0), this.chatText_line_height = 30, this.latest_content_height = 0, chattext = $C("#_chatText"), fsa = $("#_fileSendStatusArea"), fst = $("#_fileStatus"), csa = $("#_chatSendArea")
                }
                return ChatSendView.prototype.reset_send_file = function() {
                    var self = this;
                    self.file_send_retry_count = 0, self.sending = !1
                }, ChatSendView.prototype.prepare = function() {
                    var self = this;
                    self.prepareSendArea(), self.prepareTo(), self.prepareEmoticonImage(), self.prepareSendFile(), $("#_emoticon").click(function() {
                        boot_1.TREASURE.trackEvent("message_input", "open", {
                            label: "emoticon_balloon"
                        }), self.emo_tip || self.prepareEmoticon(), self.emo_tip.open($(this))
                    }), boot_1.messageArea.clearCaretPos(), $("#_mainContentExpandLeft").click(function() {
                        boot_1.RL.view.toggleFold()
                    }), "free" === SERVICE_PLAN ? ($("#_mainContentExpandRight").hide(), $(".chatSendAreaContent").css("margin-right", "4px")) : $("#_mainContentExpandRight").click(function() {
                        boot_1.RS.view.toggleFold()
                    }), boot_1.CW.view.registerKeyboardShortcut(37, !0, !1, !1, !1, function() {
                        boot_1.RL.view.toggleFold()
                    }).registerKeyboardShortcut(37, !1, !1, !1, !0, function() {
                        boot_1.RL.view.toggleFold()
                    }).registerKeyboardShortcut(39, !0, !1, !1, !1, function() {
                        boot_1.RS.view.toggleFold()
                    }).registerKeyboardShortcut(39, !1, !1, !1, !0, function() {
                        boot_1.RS.view.toggleFold()
                    }).registerKeyboardShortcut(77, !1, !1, !1, !1, function() {
                        boot_1.messageArea.focus()
                    }), $C("#_editCancel").click(function() {
                        self.clearChatEdit(), self.clearChatText(), boot_1.messageArea.blur()
                    }), self.prepareTimeLine()
                }, ChatSendView.prototype.prepareTimeLine = function() {
                    var self = this,
                        message_wrapper = $("#_timeLine,#_messageSearchResult,#_taskDetailTimeLine,#_replyMessageTip"),
                        timeline = $C("#_timeLine"),
                        messageSearchResult = $("#_messageSearchResult");
                    timeline.on("click", ".chatwork-token-url", function(e) {
                        var hostname = e.target.hostname,
                            is_amazon_url = hostname.match(/^(www\.)?amazon\.(com|jp|co\.jp)$/) || hostname.match(/^amzn\.to$/);
                        boot_1.TREASURE.trackEvent("timeline", "click", {
                            label: "click_url",
                            is_amazon_url: !!is_amazon_url
                        })
                    });
                    var action_func = {
                        reply: function(message_id) {
                            var chat_dat = boot_1.RM.timeline.chat_id2chat_dat[message_id];
                            if (chat_dat) {
                                boot_1.messageArea.focus();
                                var name;
                                name = boot_1.CW.is_business && boot_1.ST.data.private_nickname && !boot_1.RM.isInternal() ? boot_1.AC.getDefaultNickName(chat_dat.aid) : boot_1.AC.getNickName(chat_dat.aid), self.setReplayText(chat_dat.aid, boot_1.RM.id, message_id, name), boot_1.TREASURE.trackEvent("message_action", "click", {
                                    label: "reply_action"
                                })
                            }
                        },
                        edit: function(message_id) {
                            if (!boot_1.RM.timeline.chat_id2chat_dat[message_id]) return boot_1.CW.alert(language_1.Language.getLang("%%%chatsend_error_no_exist_for_edit%%%")), !1;
                            self.setChatEdit(message_id, boot_1.RM);
                            var elm = chattext[0];
                            if (elm.createTextRange) {
                                var range = elm.createTextRange();
                                range.move("character", elm.value.length), range.select()
                            } else elm.setSelectionRange && elm.setSelectionRange(elm.value.length, elm.value.length);
                            boot_1.TREASURE.trackEvent("message_action", "click", {
                                label: "edit_message_action"
                            })
                        },
                        task: function(message_id) {
                            this.$el.parents("#_messageSearchResultBox").length ? boot_1.TREASURE.trackEvent("message_search", "click", {
                                label: "task_in_message_search"
                            }) : boot_1.TREASURE.trackEvent("message_action", "click", {
                                label: "task_action"
                            });
                            var chat_dat = boot_1.RM.timeline.chat_id2chat_dat[message_id];
                            if (void 0 == chat_dat && (chat_dat = boot_1.SC.view.msg_dat[message_id]), chat_dat) {
                                void 0 != chat_dat.rid && boot_1.RL.selectRoom(chat_dat.rid);
                                var quoted_msg = "[" + language_1.Language.getLang("%%%chatsend_quote%%%") + " aid=" + chat_dat.aid + " time=" + chat_dat.tm + "]" + chat_dat.msg + "[/" + language_1.Language.getLang("%%%chatsend_quote%%%") + "]\n";
                                return boot_1.RS.view.setTask(quoted_msg, null, null, !0, !0), $C("#_subContentArea").scrollTo($C("#_taskAddArea")), !1
                            }
                        },
                        unread: function(message_id) {
                            boot_1.TREASURE.trackEvent("message_action", "click", {
                                label: "unread_message_action"
                            });
                            var cur_room = boot_1.RM;
                            boot_1.CW.get("gateway.php", {
                                cmd: "read",
                                room_id: cur_room.id,
                                last_chat_id: message_id,
                                unread: 1
                            }, function(json) {
                                cur_room.id == boot_1.RM.id && (cur_room.read_num = json.read_num, cur_room.build({
                                    readLock: !0
                                }))
                            })
                        },
                        link: function(message_id) {
                            this.$el.parents("#_messageSearchResultBox").length ? boot_1.TREASURE.trackEvent("message_search", "click", {
                                label: "message_link_in_message_search"
                            }) : boot_1.TREASURE.trackEvent("message_action", "click", {
                                label: "message_link_action"
                            });
                            var message = this.findItemById(message_id),
                                room_id = message.attr("data-rid");
                            boot_1.RM.id != room_id && boot_1.RL.selectRoom(room_id), boot_1.messageArea.focus(), self.setLinkText(Number(room_id), Number(message_id))
                        },
                        delete: function(message_id) {
                            boot_1.TREASURE.trackEvent("message_action", "click", {
                                label: "delete_message_action"
                            });
                            var file_id = 0,
                                is_task = !1,
                                match = boot_1.RM.timeline.chat_id2chat_dat[message_id].msg.match(/^\[info\][\s\S]+\[download:([0-9]+)\][^\[]+\[\/download\]\[\/info\]$/);
                            if (match ? (file_id = match[1], boot_1.FL.file_id2file_dat[file_id] && "open" == boot_1.FL.file_id2file_dat[file_id].st || (file_id = 0)) : (match = boot_1.RM.timeline.chat_id2chat_dat[message_id].msg.match(/^\[info\].+\[task aid=[0-9,]+ st=open lt=[0-9]+\][\s\S]+\[\/task\]\[\/info\]$/)) && (is_task = !0), file_id) {
                                var file_dat = boot_1.FL.file_id2file_dat[file_id];
                                $("#_plainDialogBody").html('<div class="deleteContent"><p class="deleteLabel">' + language_1.Language.getLang("%%%chatsend_delete_filetip%%%") + '</p><span class="deleteMeta">' + common_2.escape_html(file_dat.fn) + "</span></div>");
                                var disable_delete_button_click = !1;
                                $("#_plainDialog").cwDialog({
                                    title: language_1.Language.getLang("%%%chatsend_confirm_delete_with_file%%%"),
                                    width: 500,
                                    height: "auto",
                                    buttonLabels: [language_1.Language.getLang("%%%button_cancel%%%"), language_1.Language.getLang("%%%chatsend_button_delete_with_file%%%"), language_1.Language.getLang("%%%chatsend_button_delete_message_only%%%")],
                                    buttonDelete: [1, 2],
                                    buttonCancel: 0,
                                    buttonClick: function(index) {
                                        var this_dialog = this;
                                        switch (index) {
                                            case 1:
                                                if (disable_delete_button_click) return;
                                                disable_delete_button_click = setTimeout(function() {
                                                    disable_delete_button_click = !1
                                                }, 5e3), boot_1.FL.deleteFile(file_id, function() {
                                                    disable_delete_button_click = clearTimeout(disable_delete_button_click), self.model.deleteChat(message_id, boot_1.RM.id), this_dialog.close()
                                                }, function() {
                                                    disable_delete_button_click = clearTimeout(disable_delete_button_click), boot_1.CW.alert(language_1.Language.getLang("%%%file_delete_error_try_again%%%"))
                                                });
                                                break;
                                            case 2:
                                                self.model.deleteChat(message_id, boot_1.RM.id), this_dialog.close()
                                        }
                                    }
                                }).open()
                            } else if (is_task) {
                                var task_id_list = [];
                                for (var task_id in boot_1.TK.task_id2task_dat) {
                                    var task_dat = boot_1.TK.task_id2task_dat[task_id];
                                    "deleted" != task_dat.st && task_dat.cid && task_dat.cid == message_id && task_id_list.push(task_id)
                                }
                                var task_len = task_id_list.length;
                                if (task_len > 0) {
                                    for (var task_html = "", i = 0; i < task_len; i++) {
                                        var task_id = task_id_list[i],
                                            task_dat = boot_1.TK.task_id2task_dat[task_id];
                                        task_html += boot_1.TK.view.getTaskPanel(task_dat, {
                                            type: "preview"
                                        })
                                    }
                                    $("#_plainDialogBody").html('<div class="deleteContent"><p class="deleteLabel">' + language_1.Language.getLang("%%%chatsend_delete_tasktip%%%") + '</p><pre><div class="deleteMeta">' + task_html + "</div></pre></div>");
                                    var pdialog = $("#_plainDialog");
                                    pdialog.cwDialog({
                                        title: language_1.Language.getLang("%%%chatsend_confirm_delete_with_task%%%"),
                                        width: 500,
                                        buttonLabels: [language_1.Language.getLang("%%%button_cancel%%%"), language_1.Language.getLang("%%%chatsend_button_delete_with_task%%%"), language_1.Language.getLang("%%%chatsend_button_delete_message_only%%%")],
                                        buttonDelete: [1, 2],
                                        buttonCancel: 0,
                                        buttonClick: function(index) {
                                            switch (index) {
                                                case 1:
                                                    boot_1.TK.deleteTask(task_id_list), self.model.deleteChat(message_id, boot_1.RM.id), this.close();
                                                    break;
                                                case 2:
                                                    self.model.deleteChat(message_id, boot_1.RM.id), this.close()
                                            }
                                        }
                                    }).open(), pdialog.scrollTop(0)
                                } else boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%chatsend_confirm_delete%%%"), function() {
                                    self.model.deleteChat(message_id, boot_1.RM.id)
                                })
                            } else boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%chatsend_confirm_delete%%%"), function() {
                                self.model.deleteChat(message_id, boot_1.RM.id)
                            })
                        },
                        copy: function(message_id) {
                            boot_1.TREASURE.trackEvent("message_action", "click", {
                                label: "copy_message_action"
                            });
                            var msg_dat = boot_1.RM.timeline.chat_id2chat_dat[message_id];
                            msg_dat && $("#_textCopyDialog").cwDialog({
                                width: "auto",
                                height: 280,
                                title: language_1.Language.getLang("%%%chat_action_copy_title%%%"),
                                autoOpen: !0,
                                modal: !0,
                                open: function() {
                                    var txt = $("#_textCopyDialogText");
                                    txt.val(msg_dat.msg), $("#_copyMessage").quickEmpty(), $("#_textCopyButton").show(), $("#_copyToClipBoard").attr("data-clipboard-target", "#_textCopyDialogText"), new Clipboard("#_copyToClipBoard").on("success", function() {
                                        $("#_copyMessage").text(language_1.Language.getLang("%%%text_copied%%%"))
                                    }), setTimeout(function() {
                                        txt[0].select()
                                    })
                                }
                            })
                        },
                        move: function(message_id) {
                            boot_1.TREASURE.trackEvent("message_search", "click", {
                                label: "message_jump_in_search"
                            });
                            var message = this.findItemById(message_id),
                                room_id = message.attr("data-rid");
                            room_id && message_id && boot_1.RL.selectRoom(room_id, message_id)
                        },
                        quote: function(message_id) {
                            this.$el.parents("#_messageSearchResultBox").length ? boot_1.TREASURE.trackEvent("message_search", "click", {
                                label: "quote_in_message_search"
                            }) : boot_1.TREASURE.trackEvent("message_action", "click", {
                                label: "quote_action"
                            });
                            var chat_dat = boot_1.RM.timeline.chat_id2chat_dat[message_id];
                            void 0 == chat_dat && (chat_dat = boot_1.SC.view.msg_dat[message_id]), chat_dat && (void 0 != chat_dat.rid && boot_1.RL.selectRoom(chat_dat.rid), boot_1.messageArea.focus(), self.setQuoteText(chat_dat.aid, chat_dat.tm, chat_dat.msg))
                        }
                    };
                    self.timeline_actionbar = timeline.cwActionBar({
                        itemSelector: "._message",
                        hoverSelector: "._chatTimeLineMessageBox",
                        hoverClass: "chatTimeLineMessageHover",
                        checkIgnoreItem: function(item) {
                            if ("1" === item.attr("data-deleted")) return !0
                        },
                        idKey: "data-mid",
                        descriptionDelay: boot_1.TM.messagetip_delay,
                        open: function(message_id) {
                            var type_list, more_type_list, chat_dat = boot_1.RM.timeline.chat_id2chat_dat[message_id];
                            chat_dat && chat_dat.id != self.model.chatedit_id ? chat_dat.aid != boot_1.AC.myid ? (type_list = ["reply", "quote", "task", "link"], more_type_list = ["copy", "unread"]) : (type_list = ["quote", "task", "edit", "link"], more_type_list = ["copy", "unread", "delete"]) : (type_list = [], more_type_list = []), this.setActionList(type_list), this.setMoreActionList(more_type_list)
                        }
                    }), ["reply", "quote", "task", "edit", "link", "copy", "unread", "delete"].forEach(function(type) {
                        var ctype = common_2.ucfirst(type);
                        self.timeline_actionbar.addAction(type, {
                            label: language_1.Language.getLang("%%%chat_action_" + type + "%%%"),
                            description: language_1.Language.getLang("%%%chat_action_" + type + "_desc%%%"),
                            iconClass: "icoFontAction" + ctype,
                            click: function(action_type) {
                                return function() {
                                    for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                    action_func[action_type].apply(this, args)
                                }
                            }(type)
                        })
                    });
                    var message_actionbar = messageSearchResult.cwActionBar({
                        itemSelector: "._message",
                        hoverSelector: "._chatTimeLineMessageBox",
                        hoverClass: "chatTimeLineMessageHover",
                        idKey: "data-mid",
                        actionList: ["move", "quote", "task", "link"],
                        descriptionDelay: boot_1.TM.messagetip_delay
                    });
                    ["quote", "task", "move", "link"].forEach(function(type) {
                        var ctype = common_2.ucfirst(type);
                        message_actionbar.addAction(type, {
                            label: language_1.Language.getLang("%%%chat_action_" + type + "%%%"),
                            description: language_1.Language.getLang("%%%chat_action_" + type + "_desc%%%"),
                            iconClass: "icoFontAction" + ctype,
                            click: function() {
                                for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                                action_func[type].apply(this, args), boot_1.SC.view.closeMessageSearchWindow()
                            }
                        })
                    });
                    var more_assign_tip = null;
                    message_wrapper.on("mouseover", "._timeStamp", function() {
                        var timeStamp = $(this),
                            time = timeStamp.attr("data-tm"),
                            utime = timeStamp.attr("data-utm"),
                            is_deleted = timeStamp.attr("data-deleted");
                        $.cwMessageTip.isInit(timeStamp[0]) || timeStamp.cwMessageTip({
                            useHtml: !0,
                            message: function() {
                                var text = language_1.Language.getLang("%%%chat_post_label%%%") + ": " + boot_1.CW.getDate(time);
                                if (utime) {
                                    var edit_label = language_1.Language.getLang("%%%chat_edit_label%%%");
                                    "1" === is_deleted && (edit_label = language_1.Language.getLang("%%%chat_delete_label%%%")), text += "<br />" + edit_label + ": " + boot_1.CW.getDate(utime)
                                }
                                return text
                            }
                        }).open()
                    }).on("click", "._showMore", function() {
                        var task = $(this).closest("._task"),
                            message = task.closest("._message"),
                            message_id = message.attr("data-mid"),
                            room_id = message.attr("data-rid");
                        task.find("._taskBody").removeClass("taskBodyHide"), task.find("._showMore").hide(), boot_1.RL.rooms[room_id].timeline.view.task_showmore_flag[message_id] = !0
                    }).on("click", "._replyMessage", function() {
                        var reply = $(this);
                        if (0 !== reply.closest("#_replyMessageTip").length) {
                            var current_reply = replytip.tipFrom,
                                rid = current_reply.attr("data-rid"),
                                mid = current_reply.attr("data-mid");
                            return boot_1.RL.selectRoom(rid, mid, {
                                highlight: !1,
                                smoothScroll: !0,
                                messageHashUpdate: !1,
                                jumpToCallback: function() {
                                    $("#_messageId" + mid).find("._replyMessage[data-mid=" + reply.attr("data-mid") + "]").click()
                                }
                            }), replytip.close(), !1
                        }
                        replytip.open(reply)
                    }).on("mouseup", "._message", function(e) {
                        var msg = $(this),
                            qt = self.getTextSelection().trim();
                        if (qt) {
                            var message_id = parseInt(msg.attr("data-mid"), 10),
                                chat_dat = boot_1.RM.timeline.chat_id2chat_dat[message_id];
                            if (void 0 == chat_dat);
                            else {
                                quote_object = {
                                    aid: chat_dat.aid,
                                    time: chat_dat.tm,
                                    body: qt
                                };
                                var qtip = $C("#_quoteTip").cwToolTip();
                                qtip.isOpen() ? ($.cwFloatBox.skip(), setTimeout(function() {
                                    self.getTextSelection().trim() || qtip.close()
                                })) : qtip.open({
                                    x: e.clientX,
                                    y: e.clientY - 7
                                })
                            }
                        }
                    }).on("click", "._moveArrow", function() {
                        var message = $(this).closest("._message"),
                            room_id = message.attr("data-rid");
                        boot_1.RL.rooms[room_id].timeline.view.clearHighlight(message)
                    }).on("mouseup", "._speakerName", function() {
                        return $(this).closest("._message").find("._speaker ._avatarClickTip").triggerHandler("click"), !1
                    }).on("click", "._showMoreMemberTask", function() {
                        more_assign_tip || (more_assign_tip = $("#_showMoreAssignMemberTip").cwListTip({
                            search: !0,
                            useHtmlLabel: !0,
                            multiSelect: !1,
                            selectable: !1,
                            list: function() {
                                for (var mem_list = this.data.link.attr("data-aid-list").split(","), list = [], mem_length = mem_list.length, idx = 0; idx < mem_length; idx++) {
                                    var account_id = mem_list[idx],
                                        name = boot_1.AC.getName(account_id);
                                    list.push({
                                        keys: boot_1.AC.getSearchKeys(account_id),
                                        value: account_id,
                                        label: boot_1.CW.getAvatarPanel(account_id, {
                                            clicktip: !1,
                                            size: "small"
                                        }) + '<p class="autotrim">' + common_2.escape_html(name) + "</p>"
                                    })
                                }
                                return list
                            },
                            select: function(account_id) {
                                boot_1.AC.view.openProfileWindow(account_id), this.close()
                            }
                        }));
                        var link = $(this);
                        more_assign_tip.data.link = link, more_assign_tip.open(link)
                    }).on("copy", "._message", function(e) {
                        var selection = window.getSelection ? window.getSelection() : document.getSelection ? document.getSelection() : void 0;
                        if (selection) {
                            var range = selection.getRangeAt(0),
                                fragment = range.cloneContents(),
                                wrapperTag = document.createElement("div");
                            wrapperTag.appendChild(fragment.cloneNode(!0));
                            var copiedTag = $(wrapperTag),
                                mentions = copiedTag.find(".chatTimeLineTo"),
                                replies = copiedTag.find(".chatTimeLineReply");
                            if (mentions.length || replies.length) {
                                var actionArea = copiedTag.find(".actionArea");
                                actionArea.length && (actionArea.before("\n"), actionArea.remove());
                                var timeStamp = copiedTag.find(".timeStamp");
                                timeStamp.length && timeStamp.before("\n"), mentions.each(function(index, element) {
                                    var mention = $(element),
                                        toId = mention.next().attr("data-aid");
                                    mention.text("[To:" + toId + "]")
                                }), replies.each(function(index, element) {
                                    var replay = $(element),
                                        avatarId = replay.next().attr("data-aid"),
                                        roomId = replay.attr("data-rid"),
                                        messageId = replay.attr("data-mid");
                                    replay.text("[" + language_1.Language.getLang("%%%chatsend_reply%%%") + " aid=" + avatarId + " to=" + roomId + "-" + messageId + "]")
                                }), e.preventDefault();
                                e.originalEvent.clipboardData.setData("text", copiedTag.text())
                            }
                        }
                    }), $C("#_wrapper").on("click", "._messageLink", function() {
                        var reply = $(this);
                        replytip.open(reply)
                    }), timeline.scroll(function() {
                        if (boot_1.RM.timeline) {
                            if (timeline.scrollTop() < 10 && (boot_1.RM.timeline.has_old ? boot_1.RM.timeline.loadOld() : boot_1.RM.timeline.build({
                                    everScroll: !0
                                })), boot_1.RM.timeline.view.has_new) {
                                $("#_messageIdEnd").offset().top < csa.offset().top + 50 && boot_1.RM.timeline.build({
                                    everScroll: !0
                                })
                            }
                        }
                    }).on("click", "._editCancel", function() {
                        $C("#_editCancel").click()
                    }).on("mouseup", "._avatarHoverTip", function() {
                        return !1
                    }).on("mouseup", "._messageActionNav", function() {
                        return !1
                    });
                    var reply_rid = 0,
                        reply_mid = 0,
                        reply_build = function(tipFrom, loaded) {
                            reply_rid = 0, reply_mid = 0;
                            var message_id = tipFrom.attr("data-mid"),
                                room_id = tipFrom.attr("data-rid"),
                                chat_dat = null,
                                room = boot_1.RL.rooms[room_id];
                            if (room && (room.prepareBuild(), chat_dat = room.timeline.chat_id2chat_dat[message_id]), $C("#_replyMessageButtonArea").hide(), chat_dat) {
                                reply_rid = room.id, reply_mid = chat_dat.id;
                                var html = room.timeline.view.getMessagePanel(chat_dat, {
                                    idPrefix: "replyTip"
                                });
                                $C("#_replyMessageTipContent").html(html);
                                var button_html = '<div class="tooltipFooter"><div class="_replyMoveButton _roomLink button" data-rid="' + reply_rid + '" data-mid="' + reply_mid + '">' + language_1.Language.getLang("%%%jump_to_message%%%") + "</div></div>";
                                $C("#_replyMessageButtonArea").html(button_html).show()
                            } else room ? loaded ? $C("#_replyMessageTipContent").html(language_1.Language.getLang("%%%chat_error_not_found%%%")) : (room.load({
                                jumpTo: message_id,
                                autoBuild: !1
                            }, function() {
                                reply_build(tipFrom, !0), replytip.move(tipFrom)
                            }), $C("#_replyMessageTipContent").html('<div class="contentLoading"><img src="./imagenew/all/common/loader/img_loader_white.gif" />' + language_1.Language.getLang("%%%chat_loading%%%") + "</div>")) : $C("#_replyMessageTipContent").html(language_1.Language.getLang("%%%chat_error_not_found%%%"))
                        },
                        replytip = $("#_replyMessageTip").cwToolTip({
                            width: 400,
                            open: function(tipFrom) {
                                reply_build(tipFrom)
                            },
                            postOpen: function() {
                                $C("#_replyMessageTipContent").scrollTop(0)
                            },
                            close: function() {
                                reply_rid = 0, reply_mid = 0
                            }
                        });
                    replytip.$el.on("click", "._messageLink", function() {
                        replytip.close();
                        var reply = $(this),
                            current_reply = replytip.tipFrom,
                            rid = current_reply.attr("data-rid"),
                            mid = current_reply.attr("data-mid");
                        boot_1.RL.selectRoom(rid, mid, {
                            highlight: !1,
                            smoothScroll: !0,
                            messageHashUpdate: !1,
                            jumpToCallback: function() {
                                $("#_messageId" + mid).find("._messageLink[data-mid=" + reply.attr("data-mid") + "]").click()
                            }
                        })
                    }).on("click", "._replyMoveButton", function() {
                        replytip.close()
                    });
                    var quote_object;
                    $("#_quotePartlyToMessage").click(function() {
                        boot_1.TREASURE.trackEvent("message_action", "click", {
                            label: "part_message_quote_action"
                        }), $C("#_quoteTip").cwToolTip().close(), self.setQuoteText(quote_object.aid, quote_object.time, quote_object.body), boot_1.messageArea.focus()
                    }), $("#_quotePartlyToTask").click(function() {
                        boot_1.TREASURE.trackEvent("message_action", "click", {
                            label: "part_task_quote_action"
                        }), $C("#_quoteTip").cwToolTip().close();
                        var lang = language_1.Language.getLang("%%%chatsend_quote%%%");
                        boot_1.RS.view.setTask("[" + lang + " aid=" + quote_object.aid + " time=" + quote_object.time + "]" + quote_object.body + "[/" + lang + "]\n", null, null, !0, !0)
                    })
                }, ChatSendView.prototype.prepareSendArea = function() {
                    var self = this,
                        imagedrop_tip = $("#_imageFileDrop").cwToolTip({
                            open: function() {
                                $("#_dragZone").show(), setTimeout(function() {
                                    $("#_imageDropFileNameInput").focus()
                                })
                            },
                            close: function() {
                                $("#_dragZone").hide()
                            }
                        });
                    $("#_imageFileDrop").on("click", "#_imageFileDropClose", function() {
                        imagedrop_tip.close(), $(this).removeData("send_file")
                    }).on("click", "#_imageDropSendButton", function() {
                        var name = $("#_imageDropFileNameInput").val(),
                            file = $(this).data("send_file");
                        self.sendFiles(boot_1.RM.id, [{
                            file: file,
                            name: name + "." + file.type.split("/").pop()
                        }]), imagedrop_tip.close(), $(this).removeData("send_file")
                    }).on("keypress", "#_imageDropFileNameInput", function(e) {
                        13 === e.keyCode && $("#_imageDropSendButton").click()
                    }), $("#_sendEnterAction").cwCheckBox({
                        update: function() {
                            boot_1.TREASURE.trackEvent("message_input", "open", {
                                label: "message_enter_action"
                            });
                            var change = !1;
                            this.isChecked() ? "br" == boot_1.ST.data.enter_action && (change = !0, boot_1.ST.data.enter_action = "send") : "send" == boot_1.ST.data.enter_action && (change = !0, boot_1.ST.data.enter_action = "br"), change && ("send" == boot_1.ST.data.enter_action ? this.check() : this.unCheck(), self.updatePlaceholder(), boot_1.CW.post("gateway.php", {
                                cmd: "send_chat_setting",
                                data: {
                                    enter_action: boot_1.ST.data.enter_action
                                }
                            }))
                        }
                    }), $("#_sendEnterActionArea").click(function() {
                        return $("#_sendEnterAction").cwCheckBox().toggle(), $(this).cwMessageTip().refresh(), !1
                    }).cwMessageTip({
                        closeOnClick: !1,
                        message: function() {
                            var msg = language_1.Language.getLang("%%%chatsend_enter_action_explain%%%") + ": ";
                            return $("#_sendEnterAction").cwCheckBox().isChecked() ? msg += language_1.Language.getLang("%%%on%%%") : msg += language_1.Language.getLang("%%%off%%%"), msg
                        }
                    }), boot_1.messageArea.clearValue(), self.model.chatedit_id = 0, $C("#_sendButton").click(function() {
                        self.sendMessage(), boot_1.TREASURE.trackEvent("message_input", "click", {
                            label: "send_message"
                        })
                    }).keydown(function(e) {
                        if (9 != e.keyCode) return 13 == e.keyCode && self.sendMessage(), !1
                    }), boot_1.messageArea.bindEvent("change", function() {
                        self.resizeChatArea(), boot_1.messageArea.updateCaretPos()
                    }), boot_1.messageArea.bindEvent("keydown", function(e) {
                        self.chatTextKeyDown(e), self.resizeChatArea()
                    }), boot_1.messageArea.bindEvent("keyup", function(e) {
                        $.support.isWindowsFirefox || (self.chatTextKeyUp(e), self.resizeChatArea())
                    }), boot_1.messageArea.bindEvent("focus", function() {
                        self.expandChatArea(!0)
                    }), boot_1.messageArea.bindEvent("blur", function() {
                        boot_1.messageArea.updateCaretPos(), self.expandChatArea(!1)
                    }), boot_1.messageArea.blur(), boot_1.messageArea.bindPasteImageEvent(function(item) {
                        var file = item.getAsFile(),
                            src = (item.type.split("/").pop(), URL.createObjectURL(file));
                        $("#_imageDropZone").html('<img src="' + src + '">');
                        var default_filename = "screenshot_" + boot_1.CW.getDate(common_2.time(), "Y_m_d");
                        $("#_imageDropFileNameInput").val(default_filename), $("#_imageDropSendButton").data("send_file", file), imagedrop_tip.open($("#_file"))
                    })
                }, ChatSendView.prototype.updatePlaceholder = function() {
                    if (boot_1.RM && boot_1.RM.view.disabled_send) return void boot_1.messageArea.clearPlaceholder();
                    var message = language_1.Language.getLang("%%%chatsend_chat_explain%%%");
                    "send" == boot_1.ST.data.enter_action ? message += language_1.Language.getLang("%%%chatsend_enter_action_explain_enter%%%") : message += language_1.Language.getLang("%%%chatsend_enter_action_explain_enter_send%%%"), boot_1.messageArea.setPlaceholder(message)
                }, ChatSendView.prototype.getTextSelection = function() {
                    function rec(elem) {
                        return $(elem).contents().map(function() {
                            return 3 === this.nodeType ? this.nodeValue : 1 === this.nodeType && "img" === this.nodeName.toLocaleLowerCase() ? this.getAttribute("alt") || "" : 1 === this.nodeType && "a" === this.nodeName.toLocaleLowerCase() ? this.getAttribute("href") || "" : rec(this)
                        }).get()
                    }
                    var text = "";
                    try {
                        text = window.getSelection().getRangeAt(0).toString();
                        var fragment = window.getSelection().getRangeAt(0).cloneContents();
                        text = rec(fragment).join("")
                    } catch (e) {
                        text = ""
                    }
                    return text
                }, ChatSendView.prototype.getSendType = function() {
                    return this.send_type
                }, ChatSendView.prototype.prepareEmoticonImage = function() {
                    var html = emoticons_1.emoticons.getEmoticons().map(function(emo) {
                        return '<li><img src="' + emo.src + '" title="' + emo.title + '" alt="' + emo.tag + '"/></li>'
                    }).join("");
                    $("#_emoticonGallery").html(html)
                }, ChatSendView.prototype.prepareEmoticon = function() {
                    var self = this,
                        emoticon_hint = "";
                    emoticon_hint = common_1._is_mac ? language_1.Language.getLang("%%%chatsend_shift_and_command_hint%%%") : language_1.Language.getLang("%%%chatsend_shift_and_ctrl_hint%%%"), self.emo_tip = $("#_emoticonList").cwToolTip({
                        open: function() {
                            $C("#_emoticonDescription").text(emoticon_hint)
                        }
                    }), $C("#_emoticonList").on("mouseenter", "li", function() {
                        var img = $(this).find("img");
                        $C("#_emoticonDescription").text(img.attr("title") + " " + img.attr("alt"))
                    }).on("mouseleave", "li", function() {
                        $C("#_emoticonDescription").text(emoticon_hint)
                    }).on("click", "li", function() {
                        boot_1.CW.view.key.ctrl || boot_1.CW.view.key.command ? (self.emo_tip.close(), self.sendMessage($(this).find("img").prop("alt"), !0)) : (boot_1.messageArea.focus(), self.setEmoticonText($(this).find("img").prop("alt")), boot_1.CW.view.key.shift || self.emo_tip.close())
                    })
                }, ChatSendView.prototype.prepareTo = function() {
                    var self = this,
                        to_listtip = $("#_toList").cwListTip({
                            fixHeight: !0,
                            search: !0,
                            multiSelect: !1,
                            selectOptionArea: '<span id="_toListSelectAll" class="linkStatus">' + language_1.Language.getLang("%%%selectall_full%%%") + "</span>",
                            useHtmlLabel: !0,
                            selectable: !1,
                            placeHolder: language_1.Language.getLang("%%%chatroom_search_member%%%"),
                            list: function() {
                                if (!boot_1.RM) return [];
                                var mem_list = boot_1.RM.getSortedMemberList(),
                                    list = [],
                                    mem_length = mem_list.length;
                                this.data.aid2name = {};
                                for (var idx = 0; idx < mem_length; idx++) {
                                    var account_id = mem_list[idx];
                                    if (account_id != boot_1.AC.myid) {
                                        var name;
                                        name = boot_1.CW.is_business && boot_1.ST.data.private_nickname && !boot_1.RM.isInternal() ? boot_1.AC.getDefaultNickName(account_id) : boot_1.AC.getNickName(account_id), this.data.aid2name[account_id] = name, list.push({
                                            keys: boot_1.AC.getSearchKeys(account_id),
                                            value: account_id,
                                            label: boot_1.CW.getAvatarPanel(account_id, {
                                                clicktip: !1,
                                                size: "small"
                                            }) + '<p class="autotrim">' + common_2.escape_html(name) + "</p>"
                                        })
                                    }
                                }
                                return list
                            },
                            select: function(account_id) {
                                var name = this.data.aid2name[account_id];
                                self.setToText(account_id, name), boot_1.CW.view.key.shift || boot_1.CW.view.key.ctrl ? this.searchbox.$el.focus() : (this.close(), boot_1.messageArea.focus())
                            }
                        });
                    $("#_to").click(function() {
                        to_listtip.open($(this)), boot_1.TREASURE.trackEvent("message_input", "open", {
                            label: "to_balloon"
                        })
                    }), $("#_toListSelectAll").click(function() {
                        for (var mem_list = to_listtip.getList(), to_text = "", i = 0, mem_length = mem_list.length; i < mem_length; i++) {
                            var account_id = mem_list[i].value;
                            to_text += "[To:" + account_id + "] " + to_listtip.data.aid2name[account_id] + "\n"
                        }
                        self.setChatText(to_text, !0), to_listtip.close(), boot_1.messageArea.focus()
                    }), to_listtip.ul.on("mouseenter", "li", function() {
                        $C("#_nickNameSetting").hide(), $C("#_toListHint").show()
                    }).on("mouseleave", "li", function() {
                        $C("#_nickNameSetting").show(), $C("#_toListHint").hide()
                    }), $("#_nickNameSetting").click(function() {
                        self.openSettingNickname(boot_1.RM.id), $("#_toList").cwListTip().close()
                    })
                }, ChatSendView.prototype.prepareSendFile = function() {
                    var self = this;
                    self.sending = !1, $("#_file").click(function() {
                        boot_1.TREASURE.trackEvent("message_input", "click", {
                            label: "upload_file"
                        }), $C("#_fileUploadTip").show(), $C("#_fileInput").click()
                    });
                    var elem_dragging = !1,
                        dropbox_hided = !0,
                        dropbox_showing = null,
                        filedrop_tip = $("#_fileDrop").cwToolTip({
                            open: function() {
                                dropbox_hided = !1, $C("#_dragZone").show(), $C("#_dropZone").css("background-color", "#fff")
                            },
                            close: function() {
                                $C("#_dragZone").hide(), dropbox_hided = !0
                            }
                        });
                    $(document.body).on("dragstart", function() {
                        elem_dragging = !0
                    }).on("dragover", function(e) {
                        e.stopPropagation(), e.preventDefault(), e.originalEvent.dataTransfer.dropEffect = "none"
                    }).on("dragenter", function() {
                        return !elem_dragging && (!!$C("#_file").isVisible() && (dropbox_showing || (dropbox_showing = setTimeout(function() {
                                dropbox_hided && filedrop_tip.open($("#_file")), dropbox_showing = null
                            })), !1))
                    }).on("dragend", function() {
                        elem_dragging = !1
                    }), $C("#_dragZone").on("dragleave", function() {
                        return !elem_dragging && (dropbox_showing || filedrop_tip.close(), !1)
                    }).on("drop", function(e) {
                        return e.stopPropagation(), e.preventDefault(), !1
                    }), $C("#_dropZone").on("dragover", function() {
                        return !elem_dragging && ($C("#_dropZone").css("background-color", "#E9F4F5"), !1)
                    }).on("dragleave", function() {
                        return !elem_dragging && ($C("#_dropZone").css("background-color", "#fff"), !1)
                    }).on("dragover", function(e) {
                        e.stopPropagation(), e.preventDefault(), e.originalEvent.dataTransfer.dropEffect = "copy"
                    }).on("drop", function(e) {
                        if (e.stopPropagation(), e.preventDefault(), elem_dragging) return !1;
                        var fileList = e.originalEvent.dataTransfer.files || [];
                        if (!fileList.length) return !1;
                        var files = Array.from(fileList);
                        return self.sendFiles(boot_1.RM.id, files.map(function(file) {
                            return {
                                file: file,
                                name: file.name
                            }
                        })), setTimeout(function() {
                            filedrop_tip.close(), dropbox_hided = !0
                        }), !1
                    }), $C("#_fileInput").change(function() {
                        if ((this.files || []).length) {
                            var fileList = Array.from(this.files);
                            self.sending = !0, self.sendFiles(boot_1.RM.id, fileList.map(function(file) {
                                return {
                                    file: file,
                                    name: file.name
                                }
                            }))
                        }
                    }), $("#cw_upload_error_dialog").dialog({
                        width: 600,
                        height: "auto",
                        title: language_1.Language.getLang("%%%storage_cancel_send_cancel%%%", {
                            object: language_1.Language.getLang("%%%file%%%")
                        }),
                        autoOpen: !1,
                        modal: !0,
                        hide: "fade",
                        resizable: !1,
                        buttons: [boot_1.DIALOG_CLOSE_BUTTON]
                    }), $("#cw_upload_error_link").click(function() {
                        $("#cw_upload_error_dialog").dialog("close"), "free" == boot_1.CW.plan ? boot_1.CW.view.showServiceAdmin("upgrade") : boot_1.CW.view.showOptionPlanPrice()
                    })
                }, ChatSendView.prototype.testShowSendFiles = function(filename, size, loaded_percent) {
                    var fileinfo = {
                            name: filename,
                            size: size
                        },
                        progress = $('<li><p class="fileSendStatusMeta autotrim">' + common_2.escape_html(fileinfo.name) + " (" + common_2.bytename(fileinfo.size) + ')</p><div class="fileSendStatusBarArea"><div class="_fileSendStatusBarProgress fileSendStatusBar fileSendStatusBarProgress"></div></div><p class="_fileSendProgress fileSendProgress">0%</p><span class="_fileSendCancel icoFontCancel icFileSendCancel"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_cancel%%%") + "</span></li>");
                    fsa.append(progress).show(), progress.find("._fileSendProgress").text(loaded_percent + "%"), progress.find("._fileSendStatusBarProgress").css("width", loaded_percent + "%"), boot_1.CS.view.resizeChatArea(!0), progress.find("._fileSendCancel").click(function() {
                        progress.fadeOut("fast", function() {
                            progress.remove(), boot_1.CS.view.resizeChatArea(!0)
                        })
                    })
                }, ChatSendView.prototype.sendFiles = function(room_id, files) {
                    var self = this,
                        executable_extensions = ["ade", "adp", "bat", "chm", "cmd", "com", "cpl", "exe", "hta", "ins", "isp", "jse", "lib", "mde", "msc", "msp", "mst", "pif", "scr", "sct", "shb", "sys", "vb", "vbe", "vbs", "vxd", "wsc", "wsf", "wsh", "lnk"];
                    if (files.map(function(f) {
                            return (f.name.match(/\.([^\.]+)$/) || [""]).pop().toLowerCase()
                        }).find(function(ext) {
                            return ext.includes(extension)
                        })) return boot_1.CW.alert(language_1.Language.getLang("%%%error_upload_executable%%%")), void self.reset_send_file();
                    for (var i = 0; i < files.length; i++) {
                        var fileinfo = files[i],
                            extension = "",
                            match = fileinfo.name.match(/\.([^\.]+)$/);
                        match && (extension = match[1].toLowerCase());
                        if (fileinfo.file.size >= 5368709120) return boot_1.CW.alert(language_1.Language.getLang("%%%error_upload_over_max_filesize%%%", {
                            max_size: common_2.bytename(5368709120),
                            size: common_2.bytename(fileinfo.file.size)
                        })), void self.reset_send_file();
                        if (executable_extensions.includes(extension)) return boot_1.CW.alert(language_1.Language.getLang("%%%error_upload_executable%%%")), void self.reset_send_file()
                    }
                    for (var upload_list = [], i_1 = 0; i_1 < files.length; i_1++) {
                        var fileinfo_1 = files[i_1];
                        upload_list.push({
                            key: i_1,
                            name: fileinfo_1.name,
                            size: fileinfo_1.file.size
                        })
                    }
                    boot_1.CW.post("gateway.php", {
                        cmd: "get_s3_post_object",
                        room_id: room_id,
                        list: upload_list,
                        noredirect: !0,
                        region: "tokyo"
                    }, function(json) {
                        for (var i = 0, info_len = json.upload_info.length; i < info_len; i++) {
                            var info_dat = json.upload_info[i],
                                fd = new FormData;
                            fd.append("key", info_dat.uri), fd.append("AWSAccessKeyId", info_dat.accesskey), fd.append("acl", info_dat.acl), fd.append("policy", info_dat.policy), fd.append("signature", info_dat.signature), fd.append("Content-Type", "application/octet-stream"), fd.append("Content-Disposition", info_dat.disposition), fd.append("x-amz-server-side-encryption", "AES256"), info_dat.auth_token && fd.append("x-amz-security-token", info_dat.auth_token), fd.append("file", files[info_dat.key].file, files[info_dat.key].name),
                                function(fileinfo, info_dat) {
                                    var user_aborted = !1,
                                        ajax = $.ajax({
                                            url: S3_PATH,
                                            type: "POST",
                                            data: fd,
                                            processData: !1,
                                            contentType: !1,
                                            xhr: function() {
                                                var xhr = new window.XMLHttpRequest;
                                                return xhr.upload.addEventListener("progress", function(e) {
                                                    if (e.lengthComputable) {
                                                        var loaded_percent = parseInt(e.loaded / e.total * 100, 10);
                                                        progress.find("._fileSendProgress").text(loaded_percent + "%"), progress.find("._fileSendStatusBarProgress").css("width", loaded_percent + "%")
                                                    }
                                                }), xhr
                                            },
                                            success: function() {
                                                progress.find("._fileSendProgress").text("100%"), progress.find("._fileSendStatusBarProgress").css("width", "100%"), boot_1.CW.get(info_dat.redirect, {}, function() {
                                                    progress.fadeOut("fast", function() {
                                                        progress.remove(), boot_1.CS.view.resizeChatArea(!0)
                                                    })
                                                }, function() {
                                                    boot_1.CW.view.alert(language_1.Language.getLang("%%%error_upload%%%") + language_1.Language.getLang("%%%_chatwork_path_help_file_upload_error%%%"), "", !0), progress.remove(), boot_1.CS.view.resizeChatArea(!0)
                                                })
                                            },
                                            error: function() {
                                                user_aborted || boot_1.CW.view.alert(language_1.Language.getLang("%%%error_upload%%%") + language_1.Language.getLang("%%%_chatwork_path_help_file_upload_error%%%"), "", !0), progress.remove(), boot_1.CS.view.resizeChatArea(!0)
                                            }
                                        }),
                                        progress = $('<li><p class="fileSendStatusMeta autotrim">' + common_2.escape_html(fileinfo.name) + " (" + common_2.bytename(fileinfo.file.size) + ')</p><div class="fileSendStatusBarArea"><div class="_fileSendStatusBarProgress fileSendStatusBar fileSendStatusBarProgress"></div></div><p class="_fileSendProgress fileSendProgress">0%</p><span class="_fileSendCancel icoFontCancel icFileSendCancel"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_cancel%%%") + "</span></li>");
                                    fsa.append(progress).show(), fst.fadeIn(), progress.slideDown("fast", function() {
                                        boot_1.CS.view.resizeChatArea(!0)
                                    }), progress.find("._fileSendCancel").click(function() {
                                        user_aborted = !0, ajax.abort()
                                    })
                                }(files[info_dat.key], info_dat)
                        }
                    }, function(error) {
                        error.includes("is_storage_limit") ? boot_1.CW.showStorageLimitDialog("file") : $.isArray(error) ? boot_1.CW.alert(language_1.Language.getLang("%%%error_upload%%%") + " " + error.join("\n")) : boot_1.CW.alert(language_1.Language.getLang("%%%error_upload%%%"))
                    })
                }, ChatSendView.prototype.initChatText = function() {
                    var self = this;
                    boot_1.messageArea.clearValue(), self.expandChatArea(!1), boot_1.CS.clearChatEdit(), boot_1.messageArea.blur(), boot_1.RS.view.initTaskArea()
                }, ChatSendView.prototype.sendMessage = function(message, not_clear) {
                    var self = this;
                    if (!boot_1.RM.id) return void boot_1.CW.alert(language_1.Language.getLang("%%%error_no_select%%%"));
                    if (!boot_1.RM.view.disabled_send && (void 0 == message && (message = boot_1.messageArea.getValue()), message = S(message).trimRight().s, 0 != message.length)) {
                        var room_id = boot_1.RM.id;
                        boot_1.messageArea.focus();
                        var edit_id;
                        not_clear || (edit_id = self.model.chatedit_id, self.clearChatEdit(edit_id), self.clearChatText(), boot_1.CS.deleteChatDraft(boot_1.RM.id)), message = boot_1.CS.convertToSend(message);
                        var cur_room = boot_1.RM,
                            sending_id = 0;
                        edit_id || (sending_id = cur_room.addSendingChat(message)), self.model.sendMessage(room_id, message, {
                            read: 1,
                            edit_id: edit_id
                        }, function(json) {
                            if (sending_id) {
                                cur_room.setMessageIdForSendingId(sending_id, json.new_message_id);
                                setTimeout(function() {
                                    cur_room.message_id2sending_id[json.new_message_id] && boot_1.CW.watch()
                                }, 900)
                            }
                            edit_id && cur_room.timeline.editChat(edit_id, message), cur_room.id == boot_1.RM.id && cur_room.build(), $.support.isWindowsFirefox && boot_1.messageArea.clearValue()
                        }, function(error) {
                            sending_id && cur_room.deleteSendingChat(sending_id), error ? boot_1.CW.alert(error) : boot_1.CW.alert(language_1.Language.getLang("%%%chatsend_error_send%%%")), boot_1.RL.selectRoom(cur_room.id), self.setChatText(message)
                        })
                    }
                }, ChatSendView.prototype.chatTextKeyDown = function(e) {
                    var self = this;
                    if (self.chat_ctrl = void 0 === e.modifiers ? e.ctrlKey : e.modifiers & Event.CONTROL_MASK, self.chat_shift = void 0 === e.modifiers ? e.shiftKey : e.modifiers & Event.SHIFT_MASK, self.chat_alt = void 0 === e.modifiers ? e.altKey : e.modifiers & Event.ALT_MASK, self.chat_command = void 0 === e.modifiers ? e.metaKey : e.modifiers & Event.META_MASK, window.press_key = self.press_key = e.keyCode, 38 == self.press_key) {
                        var last_chat_id = boot_1.RM.timeline.getLastChatId();
                        boot_1.messageArea.isEmpty() && boot_1.RM.timeline.chat_id2chat_dat[last_chat_id].aid == boot_1.AC.myid && self.setChatEdit(last_chat_id, boot_1.RM)
                    } else 27 == self.press_key && self.clearChatEdit();
                    if ($.support.isWindowsFirefox && self.chatTextKeyUp(e), "send" == boot_1.ST.data.enter_action) {
                        if (13 == self.press_key) {
                            if (!(self.chat_shift || self.chat_ctrl || self.chat_alt || self.chat_command)) return e.preventDefault(), !1;
                            if (self.chat_command) return self.chatTextKeyUp({
                                keyCode: 13
                            }), e.preventDefault(), !1
                        }
                    } else if (13 == self.press_key && (self.chat_ctrl || self.chat_shift || self.chat_alt || self.chat_command)) return self.chat_command && self.chatTextKeyUp({
                        keyCode: 13
                    }), e.preventDefault(), !1;
                    boot_1.RM && self.raiseRoomToTop(boot_1.RM.id)
                }, ChatSendView.prototype.chatTextKeyUp = function(e) {
                    var self = this,
                        up_key = e.keyCode;
                    if (13 == up_key && 13 == self.press_key) {
                        if ("send" == boot_1.ST.data.enter_action) self.chat_shift || self.chat_ctrl || self.chat_alt || self.chat_command ? (self.chat_ctrl || self.chat_alt || self.chat_command) && boot_1.messageArea.insertValue("\n") : self.sendMessage();
                        else if (self.chat_ctrl || self.chat_shift || self.chat_alt || self.chat_command) return self.sendMessage(), !1;
                        boot_1.messageArea.replaceCodeBlock()
                    }
                    boot_1.messageArea.isEmpty() && boot_1.CS.clearChatEdit(), 27 == self.press_key && 27 == up_key && boot_1.messageArea.blur()
                }, ChatSendView.prototype.expandChatArea = function(flag) {
                    var self = this;
                    boot_1.RM && boot_1.RM.id != self.expanded_room_id && (!boot_1.RM.view.disabled_send && flag ? (self.expanded_room_id = boot_1.RM.id, self.resizeChatArea(!0)) : (self.expanded_room_id = 0, self.resizeChatArea(!0)))
                }, ChatSendView.prototype.resizeChatArea = function(force_build) {
                    var self = this;
                    fsa.isVisible() && 0 == fsa.find("li").length && (fsa.hide(), fst.fadeOut(), $C("#_fileInput").val(""));
                    var current_send_area_height = csa.height(),
                        current_height = boot_1.messageArea.getHeight(),
                        current_scrolltop = boot_1.messageArea.getScrollTop();
                    boot_1.messageArea.setHeight(0);
                    var content_height = boot_1.messageArea.getScrollHeight();
                    if (content_height < self.chattext_min_content_height && (content_height = self.chattext_min_content_height), !force_build && self.latest_content_height == content_height) return boot_1.messageArea.setHeight(current_height), void(0 != current_scrolltop && boot_1.messageArea.setScrollTop(current_scrolltop));
                    var fileSendStatusArea_height = fsa.outerHeight(),
                        chatSendToolbar_height = $C("#_chatSendToolbar").outerHeight(),
                        new_height = content_height + self.chattext_padding_height + chatSendToolbar_height + fileSendStatusArea_height,
                        min_height = 0;
                    min_height = self.expanded_room_id ? self.chatSendArea_expandto_height_default + fileSendStatusArea_height : self.chatSendArea_initial_height + fileSendStatusArea_height, new_height < min_height && (new_height = min_height);
                    var mainContent_height = $C("#_mainContent").height();
                    if (mainContent_height - new_height < self.timeline_min_height ? boot_1.messageArea.setWrapperHeight(mainContent_height - self.timeline_min_height - self.chattext_padding_height - chatSendToolbar_height - fileSendStatusArea_height) : boot_1.messageArea.clearWrapperHeight(), force_build || current_send_area_height != new_height) {
                        var chattext_height = new_height - chatSendToolbar_height - fileSendStatusArea_height - self.chattext_padding_height;
                        boot_1.messageArea.setHeight(chattext_height);
                        var sendArea_outer_height = csa.outerHeight(),
                            timeline_height = mainContent_height - self.mainContent_roomHeader_outer_height - sendArea_outer_height,
                            tl = $C("#_timeLine"),
                            current_timeline_height = tl.height(),
                            current_timeline_scrolltop = tl.scrollTop();
                        tl.height(timeline_height), tl.scrollTop(current_timeline_scrolltop + (current_timeline_height - timeline_height))
                    } else boot_1.messageArea.setHeight(current_height);
                    self.latest_content_height < content_height ? boot_1.messageArea.setScrollTop(current_scrolltop + self.chatText_line_height) : boot_1.messageArea.setScrollTop(current_scrolltop), self.latest_content_height = content_height
                }, ChatSendView.prototype.disableChatArea = function() {
                    $C("#_chatSendTool").hide(), $C("#_sendEnterActionArea").hide(), $C("#_editCancel").click(), $C("#_sendButton").cwButton().disable(), boot_1.messageArea.setPlaceholder(language_1.Language.getLang("%%%chatsend_not_allow_send_messages%%%"))
                }, ChatSendView.prototype.enableChatArea = function() {
                    var self = this;
                    $C("#_chatSendTool").show(), $C("#_sendEnterActionArea").show(), $C("#_sendButton").cwButton().enable(), self.updatePlaceholder()
                }, ChatSendView.prototype.setChatText = function(text, insert) {
                    this.setMessageText(insert, function() {
                        text = boot_1.CS.convertToEdit(text), insert ? boot_1.messageArea.insertValue(text) : boot_1.messageArea.setValue(text)
                    })
                }, ChatSendView.prototype.clearChatText = function() {
                    this.setMessageText(!1, function() {
                        boot_1.messageArea.clearValue()
                    })
                }, ChatSendView.prototype.setLinkText = function(room_id, message_id) {
                    this.setMessageText(!0, function() {
                        boot_1.messageArea.insertLinkText(room_id, message_id)
                    })
                }, ChatSendView.prototype.setToText = function(aid, name) {
                    this.setMessageText(!0, function() {
                        boot_1.messageArea.insertToText(aid, name)
                    })
                }, ChatSendView.prototype.setEmoticonText = function(emoticon) {
                    this.setMessageText(!0, function() {
                        boot_1.messageArea.insertEmoticonText(emoticon)
                    })
                }, ChatSendView.prototype.setQuoteText = function(aid, time, body) {
                    this.setMessageText(!0, function() {
                        boot_1.messageArea.insertQuoteText(aid, time, body)
                    })
                }, ChatSendView.prototype.setReplayText = function(aid, rid, message_id, name) {
                    this.setMessageText(!0, function() {
                        boot_1.messageArea.insertReplayText(aid, rid, message_id, name)
                    })
                }, ChatSendView.prototype.restoreChatDraft = function(text) {
                    this.setMessageText(!1, function() {
                        boot_1.messageArea.setDraftValue(text), boot_1.messageArea.focus()
                    })
                }, ChatSendView.prototype.setMessageText = function(insert, callback) {
                    var self = this;
                    self.expandChatArea(!0), boot_1.RM && insert && self.raiseRoomToTop(boot_1.RM.id), callback(), self.resizeChatArea(!0), boot_1.messageArea.scrollBottom()
                }, ChatSendView.prototype.setChatEdit = function(chat_id, room) {
                    var self = this;
                    if (self.model.chatedit_id != chat_id) {
                        if (self.model.chatedit_id = chat_id, self.setChatEditColor(), !room) return !1;
                        if (room.timeline.chat_id2chat_dat[chat_id]) {
                            var draft = (boot_1.CS.getChatDraft(room.id) || {}).text;
                            self.setChatText(draft || room.timeline.chat_id2chat_dat[chat_id].msg)
                        }
                        boot_1.messageArea.focus()
                    }
                    boot_1.RM.timeline.build()
                }, ChatSendView.prototype.setChatEditColor = function() {
                    $C("#_editInfo").show(), $C("#_externalInfo").hide(), $C("#_sendButton").cwButton({
                        text: language_1.Language.getLang("%%%button_save%%%")
                    }), boot_1.messageArea.setEditingMode()
                }, ChatSendView.prototype.clearChatEdit = function(no_build) {
                    var self = this;
                    self.model.chatedit_id && ($C("#_editInfo").hide(), self.clearChatText(), boot_1.messageArea.clearEditingMode(), $C("#_sendButton").cwButton({
                        text: language_1.Language.getLang("%%%button_send%%%")
                    }), self.model.chatedit_id = 0, no_build || boot_1.RM.timeline.build())
                }, ChatSendView.prototype.raiseRoomToTop = function(room_id) {
                    boot_1.messageArea.isEmpty() && (boot_1.RL.setLastUpdateTime(room_id, common_2.time()), boot_1.RL.build(), $C("#_roomListArea").scrollTop(0))
                }, ChatSendView.prototype.prepareSettingNickname = function() {
                    this.nickname_dialog = $("#_nicknameDialog").cwDialog({
                        title: language_1.Language.getLang("%%%nickname_title%%%"),
                        width: 520,
                        autoOpen: !1,
                        hide: "fade",
                        buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(idx) {
                            if (0 === idx) {
                                var updated = !1,
                                    nickname_dat = {};
                                $("#_nicknameList").find("input").each(function() {
                                    var nickname = $(this).val(),
                                        aid = this.id.substr(9);
                                    boot_1.AC.getNickName(aid, !0) != nickname && (nickname_dat[aid] = nickname, updated = !0)
                                }), updated && boot_1.CW.post("gateway.php", {
                                    cmd: "send_nickname",
                                    n: nickname_dat
                                }, function(json) {
                                    for (var aid in json.nickname_dat) boot_1.AC.setNickName(aid, json.nickname_dat[aid])
                                }), this.close()
                            }
                        },
                        open: function(room_id) {
                            var html = "",
                                mem_list = [],
                                member_dat = boot_1.RL.rooms[room_id].member_dat;
                            for (var aid in member_dat) aid != boot_1.AC.myid && mem_list.push(aid);
                            mem_list.sort(function(a, b) {
                                return a == boot_1.AC.myid ? -1 : b == boot_1.AC.myid ? 1 : boot_1.AC.getMentionNum(b) - boot_1.AC.getMentionNum(a)
                            });
                            for (var idx_1 = 0, mem_len = mem_list.length; idx_1 < mem_len; idx_1++) {
                                var aid = mem_list[idx_1];
                                html += "<tr><td>" + boot_1.CW.getAvatarPanel(aid, {
                                        size: "medium",
                                        clicktip: !1,
                                        hovertip: !1
                                    }) + '</td><td class="name"><span class="autotrim">' + boot_1.CW.getName(aid) + '</span></td><td class="nickname"><input type="text" id="_nickname' + aid + '" value="' + common_2.escape_html(boot_1.AC.getNickName(aid, !0)) + '"/></td></tr>'
                            }
                            $("#_nicknameList").html(html).scrollTop(0)
                        }
                    })
                }, ChatSendView.prototype.openSettingNickname = function(room_id) {
                    var self = this;
                    self.nickname_dialog || self.prepareSettingNickname(), self.nickname_dialog.open(room_id)
                }, ChatSendView
            }();
        exports.ChatSendView = ChatSendView
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/common": 342,
        "../lib/emoticon/emoticons": 382,
        "../lib/language": 384,
        clipboard: 21,
        string: 290
    }],
    455: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var globalHeader_outer_height, content_margin_top, mainContent_outer_diff, sideContent_outer_diff, sideContentMenu_outer_height, subContentArea_padding_top, chatFilterMenu_outer_height, chatRoomDescriptionNav_outer_height, Cookies = require("js-cookie"),
            TutorialView_1 = require("./TutorialView"),
            common_1 = require("../lib/common"),
            common_2 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            renderAstToHtml_1 = require("../lib/cw-token/renderAstToHtml"),
            renderAstToText_1 = require("../lib/cw-token/renderAstToText"),
            language_1 = require("../lib/language"),
            notificationAPI_1 = require("../lib/notificationApi/notificationAPI"),
            filePreview_1 = require("../lib/file-preview/filePreview"),
            ChatWorkView = function() {
                function ChatWorkView(model) {
                    this.model = model, this.resize_delay_timer = null, this.is_biwa = !0, this.key = {}, this.keyfunc = {}, this.init_hash = "", this.ip_error_alerted = !1, this.unloading = !1, this.user_guide_dialog = null, this.announce_dialog = null, this.storage_limit_dialog = null, this.feedback_complete_dialog = null, this.limit_error_dialog = null, this.join_live_tip = null, this.iframe_loaded = !1,
                        this.iframe_func_list = [], this.dialog_id = 0, this.progress_dialog = null, this.post_load_func_list = [], this.post_loaded = !1, this.notify = null, this.cur_href = "", this.avatar_class_map = {
                        huge: "avatarHuge",
                        large: "avatarLarge",
                        medium: "avatarMedium",
                        small: "avatarSmall",
                        tiny: "avatarTiny"
                    }, this.is_end_init_loaded = !1, this.end_init_func_list = [], this.$window = $(window), this.previewlink_dialog = null, this.preview_req = null, this.announce_infomation_dat = {}, globalHeader_outer_height = $("#_globalHeader").outerHeight(!0), content_margin_top = parseInt($("#_content").css("margin-top"), 10), mainContent_outer_diff = $C("#_mainContent").outerHeight(!0) - $C("#_mainContent").innerHeight(), sideContent_outer_diff = $C("#_sideContent").outerHeight(!0) - $C("#_sideContent").innerHeight(), sideContentMenu_outer_height = $("#_sideContentMenu__header").outerHeight(!0), subContentArea_padding_top = parseInt($("#_subContentArea").css("padding-top"), 10), chatFilterMenu_outer_height = $("#_chatFilterMenu").outerHeight(!0), chatRoomDescriptionNav_outer_height = $("#_chatRoomDescriptionNav").outerHeight(!0)
                }
                return ChatWorkView.prototype.prepare = function() {
                    var self = this;
                    self.prepareHiddenIframe(), $C("#_wrapper").on("mouseenter", "._showDescription", function() {
                        if (!$.cwMessageTip.isInit(this)) {
                            var item = $(this),
                                option = {
                                    message: function() {
                                        return item.hasClass("_showDescription") ? item.attr("aria-label") : ""
                                    }
                                },
                                delay = item.attr("data-delay");
                            option.delay = void 0 != delay ? parseInt(delay, 10) : boot_1.TM.messagetip_delay, item.cwMessageTip(option).open()
                        }
                    }).on("mouseenter", "._externalMark", function() {
                        if (!$.cwMessageTip.isInit(this)) {
                            var item = $(this),
                                option = {
                                    message: language_1.Language.getLang("%%%chatroom_not_only_internal%%%"),
                                    offsetLeft: boot_1.TM.extermal_marktip_offset_left
                                };
                            item.cwMessageTip(option).open()
                        }
                    }).on("mouseenter", "._pin", function() {
                        if (!$.cwMessageTip.isInit(this)) {
                            var item = $(this),
                                option = {
                                    message: language_1.Language.getLang("%%%pin_hint%%%"),
                                    delayQuickMode: !1,
                                    delay: boot_1.TM.messagetip_delay
                                };
                            item.cwMessageTip(option).open()
                        }
                    }).on("click", "._joinLive", function() {
                        self.join_live_tip || self.prepareLive(), self.join_live_tip.open($(this))
                    }).on("click", "._profileTipCheckLabel", function() {
                        $(this).closest("._contactPanel").find("._cwCB").click()
                    }), $C("body").on("click", "._previewLink", function() {
                        var link = $(this);
                        return self.openPreviewLinkDialog(link.attr("data-type"), common_2.urldecode(link.attr("data-url")), link.attr("data-user-id"), link.attr("data-content-id")), !1
                    }).on("keypress", "form input[type=text]", function(e) {
                        if (13 == e.keyCode) return !1
                    }), $("#_openInfomation").click(function() {
                        self.openInformationPanel()
                    }), $("#_feedback").click(function() {
                        $("#_feedbackDialog").cwDialog({
                            title: language_1.Language.getLang("%%%menu_feedback%%%"),
                            width: "auto",
                            height: "auto",
                            autoOpen: !0,
                            buttonLabels: [language_1.Language.getLang("%%%button_send%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                            buttonCancel: 1,
                            buttonSubmit: 0,
                            buttonClick: function(index) {
                                switch (index) {
                                    case 0:
                                        var feedback_message = $("#_feedbackMessage"),
                                            msg = feedback_message.val();
                                        msg && (boot_1.CW.showProgress(language_1.Language.getLang("%%%sending%%%")), this.close(), boot_1.CW.sendFeedback({
                                            message: msg,
                                            version: 2,
                                            success: function() {
                                                boot_1.CW.hideProgress(), feedback_message.val(""), self.openFeedbackCompleteDialog()
                                            },
                                            error: function() {
                                                boot_1.CW.hideProgress(), boot_1.CW.alert(language_1.Language.getLang("%%%raise_error%%%"))
                                            }
                                        }))
                                }
                            }
                        }), $.cwFloatBox.close($C("#_informationBox"))
                    }), $("#_userGuideLink").click(function() {
                        self.openUserGuideDialog(), $.cwFloatBox.close($C("#_informationBox"))
                    }), $("#_cheatSheetLink").click(function() {
                        boot_1.CHEATSHEET.view.open(), $.cwFloatBox.close($C("#_informationBox"))
                    }), (boot_1.canPlayOgg || boot_1.canPlayMp3) && (self.embedAudio("BG_call"), $("#_audio_BG_call").on("ended", function() {
                        this.play()
                    })), self.init_hash = document.location.hash, $C("body").on("offline", function() {
                        boot_1.CW.setConnectionError()
                    }).on("change", "._cwValidateFileImage", function() {
                        var result = $.cwValidate.File.hasError(this, {
                            maxsize: 716800,
                            onlyimage: !0
                        });
                        if (result) {
                            var error_message = result.join("\n");
                            boot_1.CW.alert(error_message)
                        }
                    }), $(window).on("beforeunload", function() {
                        self.unloading = !0, setTimeout(function() {
                            self.unloading = !1
                        }, 3e3)
                    }).on("resize", function() {
                        null === self.resize_delay_timer && (self.resize_delay_timer = setTimeout(function() {
                            return self.model.resizeLayout()
                        }, 300))
                    });
                    var shortcut_on = !0,
                        on_focus = null;
                    $C("document").on("focus", "input,textarea", function() {
                        shortcut_on = !1, on_focus = $(this)
                    }).on("blur", "input,textarea", function() {
                        shortcut_on = !0, on_focus = null
                    }).keydown(function(e) {
                        if (self.key.ctrl = void 0 === e.modifiers ? e.ctrlKey : e.modifiers & Event.CONTROL_MASK, self.key.shift = void 0 === e.modifiers ? e.shiftKey : e.modifiers & Event.SHIFT_MASK, self.key.alt = void 0 === e.modifiers ? e.altKey : e.modifiers & Event.ALT_MASK, self.key.command = void 0 === e.modifiers ? e.metaKey : e.modifiers & Event.META_MASK, shortcut_on ? on_focus && 0 != on_focus.offset().top && (shortcut_on = !1) : on_focus && 0 == on_focus.offset().top && (shortcut_on = !0), shortcut_on && !$.cwDialog.isShown() && !$.cwFloatWindow.isShown()) {
                            var map = self.getKeyCombinationMap(e.keyCode, self.key.ctrl, self.key.shift, self.key.alt, self.key.command);
                            if (void 0 != self.keyfunc[map]) return $C("#_wrapper").click(), self.keyfunc[map](), !1
                        }
                        if (27 == e.keyCode) return !1
                    }).keyup(function(e) {
                        self.key.ctrl = void 0 === e.modifiers ? e.ctrlKey : e.modifiers & Event.CONTROL_MASK, self.key.shift = void 0 === e.modifiers ? e.shiftKey : e.modifiers & Event.SHIFT_MASK, self.key.alt = void 0 === e.modifiers ? e.altKey : e.modifiers & Event.ALT_MASK, self.key.command = void 0 === e.modifiers ? e.metaKey : e.modifiers & Event.META_MASK
                    }), $(window).blur(function() {
                        self.key.ctrl = !1, self.key.shift = !1, self.key.alt = !1, self.key.command = !1
                    }), $("#_openServiceAdmin").click(function() {
                        self.showServiceAdmin()
                    }), $("#_openServiceAdminUpgrade").click(function() {
                        self.showServiceAdmin("upgrade")
                    }), $("#_storageLimitLink").click(function() {
                        self.storage_limit_dialog.close(), "free" == self.model.plan ? self.showServiceAdmin("upgrade") : self.showOptionPlanPrice()
                    }), self.onEndInitLoad(function() {
                        self.resizeLayout(), $("#_loader").fadeOut("slow"), $("#_wrapper").css({
                            visibility: "visible"
                        });
                        for (var cookie_list = ["ui_roomfilter", "ui_fold_roomlist", "ui_fold_roomsub", "ui_chatlist_width", "ui_subcontent_width", "ui_category"], i = 0, clen = cookie_list.length; i < clen; i++) {
                            var ckey = cookie_list[i],
                                cval = Cookies.get(ckey);
                            void 0 !== cval && Cookies.set(ckey, cval, {
                                expires: 3650
                            })
                        }
                    })
                }, ChatWorkView.prototype.prepareLive = function() {
                    var self = this;
                    self.join_live_tip = $("#_joinLiveTip").cwToolTip({
                        open: function(tipFrom) {
                            this.data.live_id = tipFrom.attr("data-live-id"), this.data.account_id = tipFrom.attr("data-aid")
                        }
                    });
                    var open_live_window = function(type) {
                        var url;
                        self.join_live_tip.data.live_id ? url = boot_1.CW.getLiveUrlById(self.join_live_tip.data.live_id, type) : self.join_live_tip.data.account_id && (url = boot_1.CW.getLiveUrl(boot_1.AC.getRoomId(self.join_live_tip.data.account_id), [boot_1.AC.myid, self.join_live_tip.data.account_id], type)), window.open(url, "cwlive", "menubar=0,toolbar=0,titlebar=0,status=0,scrollbars=0,resizable=1"), self.join_live_tip.close()
                    };
                    self.join_live_tip.$el.on("click", "._joinLiveByVideo", function() {
                        open_live_window("video")
                    }).on("click", "._joinLiveByVoice", function() {
                        open_live_window("voice")
                    })
                }, ChatWorkView.prototype.prepareHiddenIframe = function() {
                    for (var self = this, hidden_iframe_list = [{
                        id: "_downloadFrame",
                        name: "_downloadFrame"
                    }], iframe_html = "", i = 0, if_len = hidden_iframe_list.length; i < if_len; i++) {
                        var ifr = hidden_iframe_list[i];
                        iframe_html += '<iframe id="' + ifr.id + '" name="' + ifr.name + '" src="" style="display: none"></iframe>'
                    }
                    setTimeout(function() {
                        $("#_hiddenIframe").html(iframe_html);
                        for (var i = 0, len = self.iframe_func_list.length; i < len; i++) self.iframe_func_list[i]();
                        self.iframe_func_list = [], self.iframe_loaded = !0
                    }, 3e3), $("#_liveNotificationClose").click(self.closeLiveNotification), $C("#_liveNotificationLiveButton").click(function() {
                        boot_1.CW.stopSound("BG_call")
                    })
                }, ChatWorkView.prototype.openLiveNotification = function(live_id, room_id) {
                    var room = boot_1.RL.rooms[room_id],
                        aid = room.getAccountId(),
                        message = "";
                    message = aid ? language_1.Language.getLang("%%%live_call_direct%%%", {
                        name: boot_1.AC.getName(aid)
                    }) : language_1.Language.getLang("%%%live_call_chat%%%", {
                        name: boot_1.AC.getName(aid),
                        chat_name: room.getName()
                    }), $C("#_liveNotificationMessage").text(message), $C("#_liveNotification").slideDown(), $C("#_liveNotificationLiveButton").attr("data-live-id", live_id), boot_1.CW.playSound("BG_call")
                }, ChatWorkView.prototype.closeLiveNotification = function() {
                    $C("#_liveNotification").slideUp(), boot_1.CW.stopSound("BG_call")
                }, ChatWorkView.prototype.onIframeReady = function(func) {
                    var self = this;
                    self.iframe_loaded ? func() : self.iframe_func_list.push(func)
                }, ChatWorkView.prototype.alert = function(msg, ok_callback, is_html) {
                    var self = this,
                        alert_body_id = "_alertDialogBody" + self.dialog_id,
                        alertDialog = $('<div id="_alertDialog' + self.dialog_id + '" class="dialog dialogPadding"><pre id="' + alert_body_id + '" class="alertDialogBody"></pre></div>');
                    $C("body").append(alertDialog);
                    var len;
                    is_html ? len = common_1.mlength($("#" + alert_body_id).html(msg).text()) : ($("#" + alert_body_id).text(msg), len = common_1.mlength(msg));
                    var width = 400;
                    len > 50 && (width = 500), alertDialog.cwDialog({
                        width: width,
                        minHeight: 100,
                        height: "auto",
                        autoOpen: !0,
                        buttonLabels: [language_1.Language.getLang("%%%button_ok%%%")],
                        buttonSubmit: 0,
                        buttonClick: function(index) {
                            switch (index) {
                                case 0:
                                    "function" == typeof ok_callback && ok_callback(), this.close()
                            }
                        },
                        close: function() {
                            alertDialog.remove()
                        }
                    }), self.dialog_id++
                }, ChatWorkView.prototype.set_confirm_dialog = function(args) {
                    var self = this,
                        confirm_body_id = "_confirmDialogBody" + self.dialog_id,
                        confirmDialog = $('<div id="_confirmDialog' + self.dialog_id + '" class="dialog dialogPadding">\n          <pre id="' + confirm_body_id + '" class="confirmDialogBody"></pre></div>');
                    $C("body").append(confirmDialog);
                    var len;
                    args.is_html ? len = common_1.mlength($("#" + confirm_body_id).html(args.msg).text()) : ($("#" + confirm_body_id).text(args.msg), len = common_1.mlength(args.msg));
                    var width = len > 50 ? 500 : 400;
                    confirmDialog.cwDialog({
                        width: width,
                        minHeight: 100,
                        height: "auto",
                        autoOpen: !0,
                        buttonLabels: [language_1.Language.getLang("%%%button_cancel%%%"), args.primary_button_label || language_1.Language.getLang("%%%button_ok%%%")],
                        buttonSubmit: 1,
                        buttonClick: function(index) {
                            switch (index) {
                                case 0:
                                    "function" == typeof args.cancel_callback && args.cancel_callback(), this.close();
                                    break;
                                case 1:
                                    args.ok_callback(), this.close()
                            }
                        },
                        close: function() {
                            confirmDialog.remove()
                        }
                    }), self.dialog_id++
                }, ChatWorkView.prototype.confirm = function(msg, ok_callback, cancel_callback, is_html) {
                    this.set_confirm_dialog({
                        msg: msg,
                        ok_callback: ok_callback,
                        cancel_callback: cancel_callback,
                        is_html: is_html
                    })
                }, ChatWorkView.prototype.confirmDelete = function(msg, ok_callback, cancel_callback, is_html, button_label) {
                    var self = this,
                        confirm_body_id = "_confirmDialogBody" + self.dialog_id,
                        confirmDialog = $('<div id="_confirmDialog' + self.dialog_id + '" class="dialog dialogPadding"><pre id="' + confirm_body_id + '" class="confirmDialogBody"></pre></div>');
                    $C("body").append(confirmDialog);
                    var confirm_body = $("#" + confirm_body_id),
                        len = common_1.mlength(msg);
                    is_html ? len = common_1.mlength(confirm_body.html(msg).text()) : confirm_body.text(msg), button_label || (button_label = language_1.Language.getLang("%%%button_delete_long%%%"));
                    var width = 300;
                    len > 50 && (width = 500), confirmDialog.cwDialog({
                        width: width,
                        minHeight: 100,
                        height: "auto",
                        autoOpen: !0,
                        buttonLabels: [language_1.Language.getLang("%%%button_cancel%%%"), button_label],
                        buttonDelete: 1,
                        buttonClick: function(index) {
                            switch (index) {
                                case 0:
                                    "function" == typeof cancel_callback && cancel_callback(), this.close();
                                    break;
                                case 1:
                                    this.isAgreed() && (ok_callback(), this.close())
                            }
                        },
                        close: function() {
                            confirmDialog.remove()
                        }
                    }), self.dialog_id++
                }, ChatWorkView.prototype.showProgress = function(msg) {
                    var self = this;
                    $("#_progressDialogBody").html('<div style="padding:10px" class="contentLoading"><img src="./imagenew/all/common/loader/img_loader_gray.gif" />' + msg + "</div>"), self.progress_dialog = $("#_progressDialog").cwDialog({
                        autoOpen: !0,
                        closeOnEscape: !1
                    })
                }, ChatWorkView.prototype.hideProgress = function() {
                    var self = this;
                    self.progress_dialog && (self.progress_dialog.close(), self.progress_dialog = null)
                }, ChatWorkView.prototype.registerKeyboardShortcut = function(keyCode, ctrl, shift, alt, command, func) {
                    var self = this;
                    return self.keyfunc[self.getKeyCombinationMap(keyCode, ctrl, shift, alt, command)] = func, self
                }, ChatWorkView.prototype.getKeyCombinationMap = function(key, ctrl, shift, alt, command) {
                    var map = "";
                    return map += ctrl ? "1" : "0", map += shift ? "1" : "0", map += alt ? "1" : "0", map += command ? "1" : "0", map += key
                }, ChatWorkView.prototype.onPostLoad = function(func) {
                    var self = this;
                    self.post_loaded ? func() : self.post_load_func_list.push(func)
                }, ChatWorkView.prototype.postLoad = function() {
                    var self = this;
                    if (1 == boot_1.CW.security_dat.disable_external && $("#_addContactType").remove(), 1 == self.model.security_dat.disable_send_file && $("#_file").remove(), 1 == self.model.security_dat.disable_download_file && ($("#_chatFileAll").remove(), $("#_openFileWindow").remove()), 1 == boot_1.CW.security_dat.disable_social_profile && $("#_profileSnsListEdit").hide(), self.init_hash.includes("contact_myrequest")) boot_1.AC.view.openContactWindow(), $("#_contactWindowTabMyRequest").click();
                    else if (self.init_hash.includes("contact_request")) boot_1.AC.view.openContactWindow(), $("#_contactWindowTabRequest").click();
                    else if (self.init_hash.includes("join=")) {
                        var tmp = self.init_hash.match(/join=([0-9]+)/);
                        if (tmp) {
                            var rid = tmp[1];
                            boot_1.RL.joinPublicChat(rid)
                        }
                    } else if (self.init_hash.includes("tutorial=")) boot_1.CW.view.startTutorial();
                    else if (self.init_hash.includes("contact=")) {
                        var tmp = self.init_hash.match(/contact=([^&\?]+)/);
                        if (tmp) {
                            var cwid = tmp[1],
                                is_added = !1;
                            if (cwid == boot_1.AC.getChatWorkId(boot_1.AC.myid)) boot_1.CW.alert(language_1.Language.getLang("%%%contact_cwid_error_myself%%%")), is_added = !0;
                            else
                                for (var idx in boot_1.AC.contact_list) {
                                    var aid = boot_1.AC.contact_list[idx];
                                    if (cwid == boot_1.AC.getChatWorkId(aid)) {
                                        boot_1.CW.alert(language_1.Language.getLang("%%%contact_cwid_error_already%%%", {
                                            chatwork_id: cwid
                                        })), is_added = !0;
                                        break
                                    }
                                }
                            is_added || boot_1.CW.get("gateway.php", {
                                cmd: "get_account_info_by_cwid",
                                cwid: cwid
                            }, function(json) {
                                json.account_dat ? (boot_1.AC.setAccountDat(json.account_dat.aid, json.account_dat), boot_1.AC.showChatWorkIdRequestDialog(json.account_dat)) : boot_1.CW.alert(language_1.Language.getLang("%%%contact_cwid_error_noexist%%%", {
                                    chatwork_id: cwid
                                }))
                            }, function(error_message) {
                                boot_1.CW.alert(error_message)
                            })
                        }
                    } else self.init_hash.includes("contact") ? boot_1.AC.view.openContactWindow() : self.init_hash.includes("mytask") ? boot_1.TK.view.openTaskWindow() : self.init_hash.includes("chat_setting") ? boot_1.ST.view.openSettingDialog() : self.init_hash.includes("profile_setting") ? boot_1.AC.view.openProfileWindow(boot_1.AC.myid) : self.init_hash.includes("service_admin") ? self.showServiceAdmin() : self.init_hash.includes("information") && self.openInformationPanel();
                    for (var i = 0, func_len = self.post_load_func_list.length; i < func_len; i++) self.post_load_func_list[i]();
                    $(window).scrollTop(0), self.post_loaded = !0
                }, ChatWorkView.prototype.popup = function(icon, title, body, room_id) {
                    var self = this;
                    self.notify && ("function" == typeof self.notify.cancel ? self.notify.cancel() : "function" == typeof self.notify.close && self.notify.close()), self.notify = notificationAPI_1.NotificationAPI.createNotification(icon, title, body), self.notify.room_id = room_id, self.notify.onclick = function() {
                        window.focus(), boot_1.RL.selectRoom(this.room_id), this.cancel()
                    }, self.notify.show()
                }, ChatWorkView.prototype.embedAudio = function(sound_type) {
                    var audio_file_name, audio_html, id = "_audio_" + sound_type;
                    boot_1.canPlayOgg ? audio_file_name = sound_type + ".ogg" : boot_1.canPlayMp3 && (audio_file_name = sound_type + ".mp3"), audio_html = '<audio id="' + id + '"><source src="./sound/' + audio_file_name + '"/></audio>', $C("#_audioList").append(audio_html)
                }, ChatWorkView.prototype.playSound = function(sound_type, sound_volume) {
                    var sound_dom, self = this,
                        id = "_audio_" + sound_type,
                        sound = $("#" + id);
                    sound.length || (self.embedAudio(sound_type), sound = $("#" + id)), void 0 == sound_volume && (sound_volume = boot_1.ST.data.sound_volume), sound_dom = sound[0], sound_dom.volume = sound_volume, sound_dom.load(), sound_dom.play()
                }, ChatWorkView.prototype.stopSound = function(sound_type) {
                    document.getElementById("_audio_" + sound_type).pause()
                }, ChatWorkView.prototype.changeFavicon = function(href) {
                    var self = this;
                    self.cur_href != href && (self.cur_href = href, $("#_favicon").remove(), $("head").append($('<link rel="shortcut icon" id="_favicon" href="' + href + '?1"  type="image/vnd.microsoft.icon" />')))
                }, ChatWorkView.prototype.alertUpdated = function() {
                    boot_1.CW.alert(language_1.Language.getLang("%%%chatwork_update%%%"))
                }, ChatWorkView.prototype.showUpdated = function() {
                    $("#cw_version_update").html('<a href="./">' + language_1.Language.getLang("%%%chatwork_do_update%%%") + "</a>").show()
                }, ChatWorkView.prototype.setOnline = function() {
                    $("#_statusAlert").fadeOut()
                }, ChatWorkView.prototype.setConnectionError = function(type) {
                    var self = this;
                    "NO LOGIN" == type || "NO TOKEN" == type || "IP ERROR" == type ? (self.unloading || ($("#_statusAlertMessage").html('<a href="./">' + language_1.Language.getLang("%%%connection_error_logout%%%") + "</a>"), $("#_statusAlert").fadeIn()), "IP ERROR" == type && (self.ip_error_alerted || self.model.alert(language_1.Language.getLang("%%%error_cant_login_ip%%%")), self.ip_error_alerted = !0)) : "INVALID USER" == type ? self.unloading || ($("#_statusAlertMessage").html('<a href="./">' + language_1.Language.getLang("%%%connection_error_invalid_user%%%") + "</a>"), $("#_statusAlert").fadeIn()) : "INVALID TOKEN" == type ? self.unloading || null === boot_1.RM || (self.setDrafts(), location.reload()) : self.unloading || ($("#_statusAlertMessage").html('<a href="./">' + language_1.Language.getLang("%%%connection_error_offline%%%") + "</a>"), $("#_statusAlert").fadeIn())
                }, ChatWorkView.prototype.firstWatch = function() {
                    if (document.location.hash) {
                        var tmp = document.location.hash.match(/#!rid(\d+)(?:-(\d+))?/);
                        if (tmp) {
                            var room_id = parseInt(tmp[1], 10),
                                chat_id = 0;
                            tmp[2] && (chat_id = parseInt(tmp[2], 10)), boot_1.RL.lazy_select = room_id, boot_1.RL.lazy_select_chat = chat_id
                        }
                    }
                }, ChatWorkView.prototype.renderMessage = function(text, user_option) {
                    var option = $.extend({
                        disable_download_file: boot_1.CW.security_dat.disable_download_file,
                        display_eset_link: boot_1.CW.displayEsetLink(),
                        display_trim_link: boot_1.ST.data.shorten_url,
                        mid: void 0,
                        text: !1
                    }, user_option);
                    return option.text ? renderAstToText_1.renderAstToText(text) : renderAstToHtml_1.renderAstToHtml(text, option)
                }, ChatWorkView.prototype.registerAvatar = function() {}, ChatWorkView.prototype.getAvatarClass = function(size) {
                    return this.avatar_class_map[size]
                }, ChatWorkView.prototype.getAvatarPanel = function(account_id, option) {
                    var self = this,
                        src = CF_PATH + "/avatar/" + boot_1.AC.getAvatarId(account_id),
                        extra_class = "";
                    return option.src ? src : (option.hovertip && (extra_class += " _avatarHoverTip"), option.clicktip && (extra_class += " _avatarClickTip avatarClickTip"), option.size && (extra_class += " " + self.getAvatarClass(option.size)), '<img class="' + extra_class + " _avatar _avatarAid" + account_id + '" data-aid="' + account_id + '" src="' + src + '">')
                }, ChatWorkView.prototype.getMessageBadgeAvatarPanel = function(account_id, option) {
                    var src = CF_PATH + "/avatar/" + boot_1.AC.getAvatarId(account_id),
                        extra_class = "";
                    return option.src ? src : (option.hovertip && (extra_class += " _avatarHoverTip"), option.clicktip && (extra_class += " _avatarClickTip"), '<img class="messageBadge__avatar ' + extra_class + " _avatarAid" + account_id + '" data-aid="' + account_id + '" src="' + src + '">')
                }, ChatWorkView.prototype.getCoverPanel = function(account_id, option) {
                    var src = CF_PATH + "/cover/" + boot_1.AC.getCoverId(account_id),
                        extra_class = "";
                    return option.src ? src : (option.extraclass && (extra_class += " " + option.extraclass), '<img class="' + extra_class + " _coverAid" + account_id + '" data-aid="' + account_id + '" src="' + src + '">')
                }, ChatWorkView.prototype.getName = function(account_id) {
                    return '<span class="_nameAid' + account_id + '">' + common_2.escape_html(boot_1.AC.getName(account_id)) + "</span>"
                }, ChatWorkView.prototype.getOrgName = function(account_id) {
                    return '<span class="cw_onm' + account_id + '">' + common_2.escape_html(boot_1.AC.getOrgName(account_id)) + "</span>"
                }, ChatWorkView.prototype.getDepartment = function(account_id) {
                    return '<span class="cw_dept' + account_id + '">' + common_2.escape_html(boot_1.AC.getDepartment(account_id)) + "</span>"
                }, ChatWorkView.prototype.getOrgTitle = function(account_id) {
                    var self = this;
                    return self.getOrgName(account_id) + " " + self.getDepartment(account_id)
                }, ChatWorkView.prototype.getFullName = function(account_id) {
                    return '<span class="cw_fnm' + account_id + '">' + common_2.escape_html(boot_1.AC.getFullName(account_id)) + "</span>"
                }, ChatWorkView.prototype.getChatWorkId = function(account_id) {
                    return boot_1.AC.getChatWorkId(account_id) ? '<span class="cw_cwid' + account_id + '">' + common_2.escape_html(boot_1.AC.getChatWorkId(account_id)) + "</span>" : ""
                }, ChatWorkView.prototype.getChatWorkIdLink = function(account_id) {
                    var self = this,
                        cwid = boot_1.AC.getChatWorkId(account_id);
                    return cwid ? '<a href="' + CHATWORK_MYPAGE_PATH + "/" + cwid + '" rel="noopener noreferrer" target="_blank">' + self.getChatWorkId(account_id) + "</a>" : ""
                }, ChatWorkView.prototype.getContactPanel = function(account_id, option) {
                    return $.log("notice: CW.getContactPanel is deprecated! use AC.view.getContactPanel"), boot_1.AC.view.getContactPanel(boot_1.AC.account_dat[account_id], option)
                }, ChatWorkView.prototype.getFilePanel = function(file_dat, option) {
                    return boot_1.FL.view.getFilePanel(file_dat, option)
                }, ChatWorkView.prototype.getTaskPanel = function(task_dat, option) {
                    return boot_1.TK.view.getTaskPanel(task_dat, option)
                }, ChatWorkView.prototype.showLimitErrorDialog = function(title, message) {
                    var self = this;
                    self.limit_error_dialog || (self.limit_error_dialog = $("#_limitErrorDialog").cwDialog({
                        width: 550,
                        open: function(msg) {
                            $C("#_upgradeMessage").html(msg)
                        }
                    })), self.limit_error_dialog.setOption({
                        title: title
                    }).open(message)
                }, ChatWorkView.prototype.showContactLimitErrorDialog = function(param) {
                    var self = this,
                        title = language_1.Language.getLang("%%%contact_error_cantadd%%%"),
                        msg = language_1.Language.getLang("%%%contact_error_planlimit%%%", param);
                    return self.showLimitErrorDialog(title, msg)
                }, ChatWorkView.prototype.showRoomLimitErrorDialog = function(param) {
                    var self = this,
                        title = language_1.Language.getLang("%%%chatroom_error_cant_add%%%"),
                        msg = language_1.Language.getLang("%%%chatroom_error_planlimit%%%", param);
                    return self.showLimitErrorDialog(title, msg)
                }, ChatWorkView.prototype.showServiceAdmin = function(type) {
                    "upgrade" == type ? window.open(ACCOUNT_SERVER_PATH + "/price.php") : window.open(ACCOUNT_SERVER_PATH + "/service_admin.php")
                }, ChatWorkView.prototype.showOptionPlanPrice = function() {
                    window.open(ACCOUNT_SERVER_PATH + "/subpackages/option/price.php")
                }, ChatWorkView.prototype.showUserAdmin = function() {
                    window.open(ACCOUNT_SERVER_PATH + "/user_list.php")
                }, ChatWorkView.prototype.prepareStorageLimitDialog = function() {
                    var self = this;
                    self.storage_limit_dialog = $("#_storageLimitDialog").cwDialog({
                        width: 550,
                        buttonLabels: [language_1.Language.getLang("%%%button_close%%%")],
                        buttonCancel: 0,
                        open: function(options) {
                            if (options = $.extend({
                                    send_type: null,
                                    body: language_1.Language.getLang("%%%storage_cancel_send_object%%%"),
                                    title: null
                                }, options), self.setLimitDialog(options.body, options.send_type), !options.title) {
                                var limit_title = language_1.Language.getLang("%%%storage_cancel_send_cancel%%%");
                                options.title = language_1.Language.replaceParam(limit_title, {
                                    object: language_1.Language.getLang("%%%" + options.send_type + "%%%")
                                })
                            }
                            this.setOption({
                                title: options.title
                            })
                        }
                    })
                }, ChatWorkView.prototype.showStorageLimitDialog = function(send_type) {
                    var self = this;
                    self.storage_limit_dialog || self.prepareStorageLimitDialog(), $C("#_storageLimitFooter").hide(), self.storage_limit_dialog.open({
                        send_type: send_type
                    })
                }, ChatWorkView.prototype.showStorageCautionDialog = function(options) {
                    var self = this;
                    options = $.extend({
                        title: null,
                        body: null,
                        footer: null
                    }, options), self.storage_limit_dialog || self.prepareStorageLimitDialog();
                    var footer_elem = $C("#_storageLimitFooter");
                    options.footer ? footer_elem.html(options.footer).show() : footer_elem.hide(), self.storage_limit_dialog.open({
                        body: options.body,
                        title: options.title
                    })
                }, ChatWorkView.prototype.showLoginDialog = function(success_callback, recheck_callback) {
                    recheck_callback()
                }, ChatWorkView.prototype.showOfflineDialog = function(success_callback, recheck_callback) {
                    recheck_callback(2e3)
                }, ChatWorkView.prototype.showTimeoutDialog = function(success_callback, recheck_callback) {
                    recheck_callback()
                }, ChatWorkView.prototype.onEndInitLoad = function(func) {
                    var self = this;
                    self.is_end_init_loaded ? func() : self.end_init_func_list.push(func)
                }, ChatWorkView.prototype.endInitLoad = function() {
                    var self = this;
                    self.is_end_init_loaded = !0;
                    for (var i = 0, len = self.end_init_func_list.length; i < len; i++) self.end_init_func_list[i]();
                    self.end_init_func_list = []
                }, ChatWorkView.prototype.buildLayout = function() {
                    var self = this;
                    self.model.is_first_load && ($("#_sideDashboardArea").show(), $("#_chatSendToolbar").show()), self.resizeLayout()
                }, ChatWorkView.prototype.resizeLayout = function() {
                    var self = this;
                    if (!self.is_end_init_loaded) return !1;
                    self.resizeRoomList();
                    var window_height = self.$window.innerHeight();
                    $C("#_wrapper").css("height", window_height);
                    var wrapper_width = $C("#_wrapper").innerWidth();
                    wrapper_width < 540 ? ($C("#_search").removeClass("inputLong"), $C("#_adminNavi").hide(), $C("#_myStatusButton").addClass("headerNameShort"), $C("#_myStatusName").hide(), $C("#_logo").hide(), $C("#_headerSearch").addClass("headerSearchShort")) : wrapper_width < 730 ? ($C("#_search").removeClass("inputLong"), $C("#_adminNavi").hide(), $C("#_myStatusButton").addClass("headerNameShort"), $C("#_myStatusName").hide(), $C("#_logo").show(), $C("#_headerSearch").removeClass("headerSearchShort")) : wrapper_width < 912 ? ($C("#_search").removeClass("inputLong"), $C("#_adminNavi").show(), $C("#_myStatusButton").addClass("headerNameShort"), $C("#_myStatusName").hide(), $C("#_logo").show(), $C("#_headerSearch").removeClass("headerSearchShort")) : wrapper_width < 1124 ? ($C("#_search").removeClass("inputLong"), $C("#_adminNavi").show(), $C("#_myStatusButton").removeClass("headerNameShort"), $C("#_myStatusName").show(), $C("#_logo").show(), $C("#_headerSearch").removeClass("headerSearchShort")) : ($C("#_search").addClass("inputLong"), $C("#_adminNavi").show(), $C("#_myStatusButton").removeClass("headerNameShort"), $C("#_myStatusName").show(), $C("#_logo").show(), $C("#_headerSearch").removeClass("headerSearchShort")), $C("#_searchResult").css("left", $C("#_search").offset().left);
                    var mainContent_inner_height = window_height - globalHeader_outer_height - content_margin_top - mainContent_outer_diff;
                    $C("#_mainContent").height(mainContent_inner_height), $.cwFloatWindow.resize();
                    var sideContent_inner_height = window_height - globalHeader_outer_height - content_margin_top - sideContent_outer_diff;
                    $C("#_sideContent").height(sideContent_inner_height);
                    var chatRoomListArea_inner_height = sideContent_inner_height - sideContentMenu_outer_height - chatFilterMenu_outer_height;
                    $C("#_roomListArea").height(chatRoomListArea_inner_height);
                    var subContent_inner_height = mainContent_inner_height - sideContentMenu_outer_height;
                    if ($C("#_subContent").css({
                            height: subContent_inner_height,
                            top: sideContentMenu_outer_height
                        }), boot_1.RS.view) {
                        var subContentArea_inner_height = subContent_inner_height - chatRoomDescriptionNav_outer_height - subContentArea_padding_top;
                        $C("#_subContentArea").height(subContentArea_inner_height), boot_1.RS.view.resizeRoomInfo(subContentArea_inner_height)
                    }
                    boot_1.CS.view && boot_1.CS.view.resizeChatArea(!0), self.adjustInformationPanelPosition(), self.resize_delay_timer = null
                }, ChatWorkView.prototype.startTutorial = function() {
                    (new TutorialView_1.TutorialView).handleStart()
                }, ChatWorkView.prototype.showFirstPage = function() {}, ChatWorkView.prototype.closeFirstPage = function() {}, ChatWorkView.prototype.resizeRoomList = function() {}, ChatWorkView.prototype.resizeSubInfo = function() {}, ChatWorkView.prototype.setLimitDialog = function(limit_message, send_type) {
                    var self = this,
                        link_label = "";
                    if ("free" == self.model.plan ? (limit_message += language_1.Language.getLang("%%%storage_cancel_send_object_suffix_upgrade%%%"), link_label = language_1.Language.getLang("%%%storage_cancel_upgrade_label%%%")) : self.model.is_business && !self.model.is_admin ? (limit_message += language_1.Language.getLang("%%%storage_cancel_send_object_suffix_tell_admin%%%"), $("#_storageLimitButton").hide()) : (limit_message += language_1.Language.getLang("%%%storage_cancel_send_object_suffix_add_storage%%%"), link_label = language_1.Language.getLang("%%%storage_cancel_add_storage_label%%%")), void 0 != send_type) {
                        var lang = language_1.Language.getLang("%%%" + send_type + "%%%");
                        void 0 != lang && (limit_message = language_1.Language.replaceParam(limit_message, {
                            object: lang
                        }))
                    }
                    $("#_storageLimitBody").html(limit_message), $("#_storageLimitLink").text(link_label)
                }, ChatWorkView.prototype.openPreviewLinkDialog = function(type, url, user_id, content_id) {
                    var self = this;
                    self.previewlink_dialog || self.preparePreviewLinkDialog(), self.previewlink_dialog.open(type, url, user_id, content_id)
                }, ChatWorkView.prototype.preparePreviewLinkDialog = function() {
                    var self = this,
                        previewlink_content = $("#_previewLinkContent");
                    self.previewlink_dialog = $("#_previewLinkDialog").cwDialog({
                        buttonLabels: [language_1.Language.getLang("%%%open_website%%%"), language_1.Language.getLang("%%%button_close%%%")],
                        buttonCancel: 1,
                        buttonClick: function(idx) {
                            switch (idx) {
                                case 0:
                                    window.open(this.data.url)
                            }
                        },
                        open: function(type, url, user_id, content_id) {
                            if (type) {
                                var dialog_options = {
                                        buttonLabels: [language_1.Language.getLang("%%%open_website%%%"), language_1.Language.getLang("%%%button_close%%%")]
                                    },
                                    preview_src = "",
                                    height_margin = boot_1.TM.dialog_header_height + boot_1.TM.dialog_footer_height,
                                    is_sandbox = !0,
                                    keep_ratio = !1,
                                    show_loading = !1,
                                    scrolling = "auto",
                                    get_embed_html = function(src, mwidth, mheight, scrolling) {
                                        "function" == typeof src && (src = src());
                                        var sandbox = "";
                                        return is_sandbox && (sandbox = 'sandbox="allow-scripts allow-same-origin allow-popups allow-forms"'), "<iframe " + sandbox + ' src="' + src + '" width="' + mwidth + '" height="' + mheight + '" style="margin:auto"\n                            frameborder="0" scrolling="' + scrolling + '" seamless webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'
                                    };
                                switch (this.data.url = url, previewlink_content.empty(), null !== self.preview_req && (self.preview_req.abort(), self.preview_req = null), type) {
                                    case "teachme":
                                        keep_ratio = !0, preview_src = "//teachme.jp/contents/" + content_id + "/embed?mb=0", dialog_options.title = "Teachme";
                                        break;
                                    case "speakerdeck":
                                        keep_ratio = !0, show_loading = !0, dialog_options.title = "Speaker Deck", self.preview_req = $.ajax({
                                            type: "GET",
                                            url: "./api_proxy.php?type=speakerdeck&url=" + common_2.urlencode(url),
                                            success: function(response) {
                                                $("#_previewLinkContent").html(get_embed_html(response, mwidth, mheight))
                                            },
                                            error: function() {
                                                $("#_previewLinkContent").html(language_1.Language.getLang("%%%raise_error%%%"))
                                            }
                                        });
                                        break;
                                    case "slideshare":
                                        keep_ratio = !0, show_loading = !0, preview_src = "//www.slideshare.net/slideshow/embed_code/%%slideshow_id%%", dialog_options.title = "slideshare", self.preview_req = $.getJSON("//www.slideshare.net/api/oembed/2?callback=?", {
                                            url: "http://www.slideshare.net/" + content_id + "/" + user_id,
                                            format: "jsonp",
                                            maxwidth: mwidth,
                                            maxheight: mheight
                                        }).done(function(json) {
                                            $("#_previewLinkContent").html(get_embed_html(String(preview_src).replace("%%slideshow_id%%", json.slideshow_id), mwidth, mheight))
                                        }).fail(function() {
                                            $("#_previewLinkContent").html(language_1.Language.getLang("%%%raise_error%%%"))
                                        });
                                        break;
                                    case "prezi":
                                        keep_ratio = !0, is_sandbox = !1, preview_src = "//prezi.com/embed/" + content_id + "/?bgcolor=ffffff&amp;lock_to_path=0&amp;autoplay=0&amp;autohide_ctrls=0&amp;features=undefined&amp;disabled_features=undefined", dialog_options.title = "Prezi";
                                        break;
                                    case "youtube":
                                        keep_ratio = !0, is_sandbox = !1, preview_src = "//www.youtube.com/embed/" + content_id, dialog_options.title = "YouTube";
                                        break;
                                    case "vimeo":
                                        keep_ratio = !0, is_sandbox = !1, preview_src = "//player.vimeo.com/video/" + content_id, dialog_options.title = "vimeo";
                                        break;
                                    case "slid.es":
                                        keep_ratio = !0, preview_src = "//slid.es/" + content_id + "/embed", dialog_options.title = "slid.es";
                                        break;
                                    case "corabbit":
                                        preview_src = "//corabbit.com/embed/" + content_id, dialog_options.title = "Corabbit";
                                        break;
                                    case "googledocs":
                                        is_sandbox = !1, preview_src = url.replace(/(\/file\/.+)\/(edit|view)$/, "$1/preview"),
                                            dialog_options.title = "Google Drive " + language_1.Language.getLang("%%%preview_needlogin%%%");
                                        break;
                                    case "cacoo":
                                        preview_src = function() {
                                            var urls = content_id.split("#"),
                                                id = urls.shift(),
                                                hash = urls.shift();
                                            return hash = hash ? "#" + hash : "", "//cacoo.com/diagrams/" + id + "/view?w=" + (mwidth - 2) + "&h=" + (mheight - 30) + hash
                                        }, scrolling = "no", dialog_options.title = "Cacoo";
                                        break;
                                    case "sharepoint":
                                        preview_src = "https://" + content_id + "&action=interactivepreview&wdSmallView=1", dialog_options.title = "Office 365";
                                        break;
                                    case "chatworkFilePreview":
                                        is_sandbox = !1, dialog_options.title = $("<div></div>").text(content_id).html(), dialog_options.buttonLabels = [language_1.Language.getLang("%%%open_window%%%"), language_1.Language.getLang("%%%button_close%%%")];
                                        var preview_type = filePreview_1.filePreview.getPreviewType(content_id.split(".").pop()),
                                            s3_origin = "https://d2cxqj2w0ktore.cloudfront.net",
                                            s3_iframe = s3_origin + "/preview/iframe/index.html",
                                            postToFix = function($this, message, callback) {
                                                var timeout = setTimeout(function() {
                                                    callback(), callback = function() {}
                                                }, 5e3);
                                                $(window).on("message.previewLinkContent", function(event) {
                                                    if (event.originalEvent.origin === s3_origin) {
                                                        var data = JSON.parse(event.originalEvent.data);
                                                        if ("fixWindowSize" === data.type) {
                                                            var width = Math.min(data.width + boot_1.TM.preview_dialog_width_padding, dialog_options.width),
                                                                height = Math.min(data.height + boot_1.TM.preview_dialog_height_padding + 82, dialog_options.height);
                                                            self.previewlink_dialog.setOption({
                                                                width: width,
                                                                height: height
                                                            }), self.previewlink_dialog.open(), $this.attr({
                                                                width: width,
                                                                height: height - 82
                                                            }), callback(), clearTimeout(timeout), $(window).off("message.previewLinkContent")
                                                        }
                                                    }
                                                }), $this.get(0).contentWindow.postMessage(message, "*"), setTimeout(function() {
                                                    $this.off("load")
                                                })
                                            };
                                        if ("iframe" === preview_type) preview_src = url;
                                        else if ("source" === preview_type) show_loading = !0, self.preview_req = $.ajax({
                                            type: "GET",
                                            url: url,
                                            dataType: "text",
                                            success: function(response) {
                                                is_sandbox = !1, $("#_previewLinkContent").html(get_embed_html(s3_iframe, mwidth, mheight, scrolling)), $("#_previewLinkContent iframe").on("load", function() {
                                                    var message = JSON.stringify({
                                                        type: preview_type,
                                                        body: response,
                                                        fileName: content_id
                                                    });
                                                    postToFix($(this), message, function() {})
                                                })
                                            },
                                            error: function() {
                                                $("#_previewLinkContent").html(language_1.Language.getLang("%%%raise_error%%%"))
                                            }
                                        });
                                        else {
                                            if ("video" !== preview_type) return !1;
                                            preview_src = s3_iframe, $("#_previewLinkDialog").parent().hide(), setTimeout(function() {
                                                $("#_previewLinkContent iframe").on("load", function() {
                                                    var base = $("base").prop("href") || "" + location.origin + location.pathname,
                                                        message = JSON.stringify({
                                                            type: preview_type,
                                                            url: base + url,
                                                            fileName: content_id
                                                        });
                                                    postToFix($(this), message, function() {
                                                        $("#_previewLinkDialog").parent().show()
                                                    })
                                                })
                                            })
                                        }
                                        break;
                                    default:
                                        return !1
                                }
                                var mwidth, mheight, win = $C(window),
                                    wwidth = win.width(),
                                    wheight = win.height();
                                if (keep_ratio) {
                                    for (this.$el.removeClass("previewFullDialog"), height_margin += boot_1.TM.preview_dialog_height_padding, mwidth = 1120, mheight = 840; mwidth > 160 && (wwidth < mwidth + 40 || wheight < mheight + height_margin + 40);) mwidth -= 160, mheight -= 120;
                                    dialog_options.width = mwidth + boot_1.TM.preview_dialog_width_padding, dialog_options.height = mheight + height_margin
                                } else this.$el.addClass("previewFullDialog"), mwidth = wwidth - 40, mheight = wheight - height_margin - 40, dialog_options.width = mwidth, dialog_options.height = mheight + height_margin;
                                type && content_id && (show_loading ? $("#_previewLinkContent").html('<div style="margin:auto"><img src="./imagenew/all/common/loader/img_loader_gray.gif" />' + language_1.Language.getLang("%%%loading%%%") + "</div>") : $("#_previewLinkContent").html(get_embed_html(preview_src, mwidth, mheight, scrolling))), this.setOption(dialog_options)
                            }
                        },
                        close: function() {
                            previewlink_content.empty(), $(window).off("message.previewLinkContent")
                        }
                    }), $("#_previewLinkReload").click(function() {
                        var previewlink_link = self.previewlink_dialog.data.previewlink_link;
                        previewlink_link && self.previewlink_dialog.open(previewlink_link)
                    })
                }, ChatWorkView.prototype.addInformation = function(options) {
                    var self = this;
                    return options = options || {}, self.saveInformation(!1, options)
                }, ChatWorkView.prototype.saveInformation = function(id, options) {
                    var self = this;
                    if (options = $.extend(!0, {
                            linktext: null,
                            subject: null,
                            body: null,
                            buttonLabels: null,
                            buttonClick: null,
                            linkClick: null
                        }, options), !id) {
                        var max_id = 0;
                        $.each(self.announce_infomation_dat, function(_id, _) {
                            var id_to_int = parseInt(_id, 10);
                            id_to_int > max_id && (max_id = id_to_int)
                        }), id = max_id + 1
                    }
                    self.announce_infomation_dat[id] = {
                        linktext: options.linktext,
                        subject: options.subject,
                        body: options.body,
                        buttonLabels: options.buttonLabels,
                        buttonClick: options.buttonClick,
                        linkClick: options.linkClick
                    };
                    var info_icon = $C("#_openInfomation");
                    return info_icon.hasClass("notification") || info_icon.addClass("notification"), id
                }, ChatWorkView.prototype.deleteInformation = function(id, callback) {
                    var self = this;
                    if (delete self.announce_infomation_dat[id], self.renderInformation(), "function" != typeof callback && (callback = function() {}), $.isEmptyObject(self.announce_infomation_dat)) return void $C("#_notificationArea").fadeOut(function() {
                        $C("#_openInfomation").removeClass("notification"), callback()
                    });
                    callback()
                }, ChatWorkView.prototype.renderInformation = function() {
                    var self = this,
                        info_area = $C("#_notificationArea");
                    if ($.isEmptyObject(self.announce_infomation_dat)) return void info_area.hide();
                    var link_list = $C("#_notificationItemList");
                    link_list.quickEmpty(), $.each(self.announce_infomation_dat, function(id, adat) {
                        var html = '<li class="linkStatus" data-id="' + id + '">' + common_2.escape_html(adat.linktext) + "</li>",
                            link = $(html);
                        link_list.append(link);
                        var dialogOpt = {
                                subject: adat.subject,
                                body: adat.body,
                                buttonLabels: adat.buttonLabels,
                                buttonClick: adat.buttonClick
                            },
                            linkClick = adat.linkClick || function() {
                                    self.openAnnounceDialog(dialogOpt)
                                };
                        link.click(function() {
                            linkClick(dialogOpt)
                        })
                    }), info_area.isVisible() || self.showAnnounce()
                }, ChatWorkView.prototype.openInformationPanel = function() {
                    var self = this;
                    $C("#_openInfomation").addClass("helpMenuSelected");
                    var information_panel = $C("#_informationBox");
                    self.adjustInformationPanelPosition(!0), self.renderInformation(), information_panel.slideDown("fast", function() {
                        $.cwFloatBox.open(information_panel, function() {
                            information_panel.slideUp("fast", function() {
                                $C("#_openInfomation").removeClass("helpMenuSelected")
                            })
                        })
                    })
                }, ChatWorkView.prototype.adjustInformationPanelPosition = function(force) {
                    var information_panel = $C("#_informationBox");
                    if (force || information_panel.isVisible()) {
                        var left, btn = $C("#_openInfomation"),
                            btn_width = btn.outerWidth(),
                            panel_width = information_panel.outerWidth(),
                            window_width = $(window).width();
                        left = btn.offset().left + btn_width / 2 + panel_width / 2 > window_width ? window_width - panel_width : btn.offset().left + btn_width / 2 - panel_width / 2, information_panel.css("left", left)
                    }
                }, ChatWorkView.prototype.prepareUserGuideDialog = function() {
                    var self = this;
                    self.user_guide_dialog = $("#_userguideDialog").cwDialog({
                        title: language_1.Language.getLang("%%%userguide_title%%%", {
                            service_name: SERVICE_NAME
                        }),
                        width: 820,
                        height: "full",
                        autoOpen: !1,
                        modal: !0,
                        open: function() {
                            pager_func()
                        }
                    });
                    var navlist = self.user_guide_dialog.$el.find("._navlist"),
                        pager_func = function(move) {
                            var idx = 0;
                            navlist.each(function() {
                                if ($(this).hasClass("_select")) return !1;
                                idx++
                            });
                            var cur_idx = idx;
                            if (move) return cur_idx += move, cur_idx > navlist.length - 1 && (cur_idx = 0), navlist.eq(cur_idx).click(), !1;
                            var buttons = [],
                                buttonClickEvent = [];
                            cur_idx > 0 && (buttons.push(language_1.Language.getLang("%%%pager_prev%%%")), buttonClickEvent.push(function() {
                                pager_func(-1)
                            })), cur_idx < navlist.length - 1 ? (buttons.push(language_1.Language.getLang("%%%pager_next%%%")), buttonClickEvent.push(function() {
                                pager_func(1)
                            })) : cur_idx == navlist.length - 1 && (buttons.push(language_1.Language.getLang("%%%button_close%%%")), buttonClickEvent.push(function() {
                                self.user_guide_dialog.close()
                            })), self.user_guide_dialog.setOption({
                                buttonLabels: buttons,
                                buttonClick: function(idx) {
                                    (0, buttonClickEvent[idx])()
                                }
                            })
                        };
                    navlist.click(function() {
                        var navi = $(this),
                            body = $C("#_userguideBody"),
                            idx = navlist.index(this),
                            content = body.find("._content" + idx);
                        navlist.removeClass("_select"), navi.addClass("_select"), navlist.removeClass("userguideOrderListSelected"), navi.addClass("userguideOrderListSelected"), body.find("._howTo").hide(), content.fadeIn(), content.find("._contentBody").scrollTop(0), pager_func()
                    })
                }, ChatWorkView.prototype.openUserGuideDialog = function() {
                    var self = this;
                    self.user_guide_dialog || self.prepareUserGuideDialog(), self.user_guide_dialog.open()
                }, ChatWorkView.prototype.openAnnounceDialog = function(options) {
                    var self = this;
                    options = $.extend(!0, {
                        subject: null,
                        body: null,
                        buttonLabels: null,
                        buttonClick: null
                    }, options), self.announce_dialog || (self.announce_dialog = $("#_announceDialog").cwDialog({
                        width: 600,
                        height: "auto"
                    }));
                    var labels = [language_1.Language.getLang("%%%button_close%%%")];
                    options.buttonLabels && $.isArray(options.buttonLabels) && (labels = $.merge(options.buttonLabels, labels)), self.announce_dialog.setOption({
                        title: options.subject,
                        buttonLabels: labels,
                        buttonCancel: labels.length - 1,
                        buttonClick: function() {
                            for (var args = [], _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                            "function" == typeof options.buttonClick && options.buttonClick.apply(this, args)
                        }
                    }), $C("#_announceBody").html(options.body), self.announce_dialog.open(), $.cwFloatBox.close($C("#_informationBox"))
                }, ChatWorkView.prototype.openFeedbackCompleteDialog = function() {
                    var self = this;
                    self.feedback_complete_dialog || (self.feedback_complete_dialog = $("#_feedbackCompleteDialog").cwDialog({
                        width: 500,
                        buttonLabels: [language_1.Language.getLang("%%%button_close%%%")],
                        buttonCancel: 0
                    })), self.feedback_complete_dialog.open()
                }, ChatWorkView.prototype.showAnnounce = function() {
                    $C("#_notificationArea").fadeIn(function() {
                        $C("#_openInfomation").addClass("notification")
                    })
                }, ChatWorkView.prototype.hideAnnounce = function() {
                    $C("#_notificationArea").fadeOut(function() {
                        $C("#_openInfomation").removeClass("notification")
                    })
                }, ChatWorkView.prototype.setDrafts = function() {
                    var text = boot_1.messageArea.getValue();
                    text && boot_1.CS.setChatDraft(boot_1.RM.id, text, boot_1.CS.chatedit_id);
                    var task_name = $C("#_taskNameInput").val();
                    if (task_name) {
                        var assign_list = boot_1.RS.view.getTaskAssignList(),
                            limit_date = $C("#_limitButton").cwDatePicker().getVal();
                        boot_1.CS.setTaskDraft(boot_1.RM.id, task_name, assign_list, limit_date)
                    }
                }, ChatWorkView
            }();
        exports.ChatWorkView = ChatWorkView
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/common": 342,
        "../lib/cw-token/renderAstToHtml": 344,
        "../lib/cw-token/renderAstToText": 345,
        "../lib/file-preview/filePreview": 383,
        "../lib/language": 384,
        "../lib/notificationApi/notificationAPI": 391,
        "./TutorialView": 469,
        "js-cookie": 78
    }],
    456: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var boot_1 = require("../controller/boot"),
            CheatSheetView = function() {
                function CheatSheetView() {
                    this.el = $("#_cheatSheetContent"), this.is_mac_os = /\sMac\s/.test(navigator.userAgent), this.char_at_cmd = this.is_mac_os ? "⌘" : "Ctrl"
                }
                return CheatSheetView.prototype.prepare = function() {
                    var _this = this;
                    $("#_closeCheatSheet").on("click", this, function() {
                        _this.close()
                    }), $("._cheatsheetKeyCommand").text(this.char_at_cmd), boot_1.CW.view.registerKeyboardShortcut(191, !1, !0, !1, !1, function() {
                        _this.viewToggle()
                    }), $(document).on("keydown.cheatsheet", function(e) {
                        27 === e.keyCode && _this.el.is(":visible") && _this.close()
                    })
                }, CheatSheetView.prototype.open = function() {
                    this.el.show()
                }, CheatSheetView.prototype.close = function() {
                    this.el.hide()
                }, CheatSheetView.prototype.viewToggle = function() {
                    this.el.toggle()
                }, CheatSheetView
            }();
        exports.CheatSheetView = CheatSheetView
    }, {
        "../controller/boot": 340
    }],
    457: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var FileListView = function() {
            function FileListView(model) {
                this.model = model
            }
            return FileListView.prototype.build = function() {
                this.model.room.file_num ? $C("#_chatFileAll").cwButton().enable() : $C("#_chatFileAll").cwButton().disable()
            }, FileListView
        }();
        exports.FileListView = FileListView
    }, {}],
    458: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var common_1 = require("../lib/common"),
            common_2 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            FileView = function() {
                function FileView(model) {
                    this.model = model, this.filelist_tip = null, this.preview_load_xhr = null, this.preview_cache = {}, this.preview_cache_clear = {}, this.preview_cache_expire = 3e5, this.ext2key = null, this.key2type = null, this.preview_dialog = null, this.file_window = null, this.file_window_search_word = "", this.file_window_allcheck_button = null, this.file_window_pager_num = 0, this.file_window_pager_index = 0, this.file_window_pager_view_num = boot_1.TM.taskwindow_pager_view_num, this.file_window_pager = null, this.checked_file_flag = {}, this.last_storage = {}
                }
                return FileView.prototype.prepare = function() {
                    var self = this;
                    $("#_openFileWindow").click(function() {
                        self.openFileWindow(), boot_1.TREASURE.trackEvent("file_list", "click", {
                            label: "file_list_navigation"
                        })
                    });
                    var disable_delete_button_click = !1;
                    $("#_fileWindow,#_chatFileListTip").on("click", "._downloadFile", function() {
                        $(this).parents("#_fileWindow").length ? boot_1.TREASURE.trackEvent("file_list", "click", {
                            label: "file_list_download"
                        }) : boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "room_detail_download"
                        });
                        var file_id = $(this).attr("data-file-id"),
                            file_dat = boot_1.FL.file_id2file_dat[file_id];
                        return file_dat && $("#_downloadFrame").attr("src", SERVER_PATH + "/gateway.php?cmd=download_file&bin=1&file_id=" + file_dat.id), !1
                    }).on("click", "._editFile", function() {
                        $(this).parents("#_fileWindow").length ? boot_1.TREASURE.trackEvent("file_list", "click", {
                            label: "file_list_edit"
                        }) : boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "room_detail_file_edit"
                        });
                        var file_id = $(this).attr("data-file-id"),
                            file_dat = boot_1.FL.file_id2file_dat[file_id];
                        if (file_dat) {
                            var file = $("#_editFileFile");
                            file.val(file_dat.fn), $("#_editFileDialog").cwDialog({
                                width: 480,
                                height: 150,
                                title: language_1.Language.getLang("%%%file_edit_title%%%"),
                                buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                                buttonSubmit: 0,
                                buttonCancel: 1,
                                buttonClick: function(index) {
                                    switch (index) {
                                        case 0:
                                            var error = [],
                                                filename = file.val();
                                            if (filename || error.push(language_1.Language.getLang("%%%file_error_empty%%%")), self.model.isExecutableExtension(filename) && error.push(language_1.Language.getLang("%%%error_upload_executable%%%")), self.model.containIllegalChar(filename) && error.push(language_1.Language.getLang("%%%error_illegal_filename%%%")), error.length) return void boot_1.CW.alert(error.join("\n"));
                                            self.model.editFile(file_id, filename), this.close()
                                    }
                                },
                                close: function() {
                                    file.val("")
                                }
                            }).open()
                        }
                    }).on("click", "._moveFile", function() {
                        $(this).parents("#_fileWindow").length ? boot_1.TREASURE.trackEvent("file_list", "click", {
                            label: "file_list_message_jump"
                        }) : boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "room_detail_file_message_jump"
                        });
                        var file_id = $(this).attr("data-file-id"),
                            file_dat = boot_1.FL.file_id2file_dat[file_id];
                        file_dat && boot_1.RL.selectRoom(file_dat.rid, file_dat.cid)
                    }).on("click", "._deleteFile", function() {
                        $(this).parents("#_fileWindow").length ? boot_1.TREASURE.trackEvent("file_list", "click", {
                            label: "file_list_delete"
                        }) : boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "room_detail_file_delete"
                        });
                        var file_id = $(this).attr("data-file-id"),
                            file_dat = boot_1.FL.file_id2file_dat[file_id];
                        file_dat && boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%file_confirm_delete%%%", {
                            file_name: file_dat.fn
                        }), function() {
                            disable_delete_button_click || (disable_delete_button_click = setTimeout(function() {
                                disable_delete_button_click = !1
                            }, 5e3), self.model.deleteFile(file_id, function() {
                                disable_delete_button_click = clearTimeout(disable_delete_button_click), self.checked_file_flag = {}
                            }, function() {
                                disable_delete_button_click = clearTimeout(disable_delete_button_click), boot_1.CW.alert(language_1.Language.getLang("%%%file_delete_error_try_again%%%"))
                            }))
                        })
                    }), $("#_subContentFileOpenAll").click(function() {
                        $C("#_subRoomFileList").find("li._fileList").each(function() {
                            var file = $(this);
                            file.hasClass("_fileOpen") || file.click()
                        })
                    }), $("#_subContentFileCloseAll").click(function() {
                        $C("#_subRoomFileList").find("li._fileOpen").click()
                    }), $C("#_wrapper").on("click", "._filePreview", function() {
                        var file_id = $(this).attr("data-file-id");
                        self.openPreviewDialog(file_id)
                    }).on("mouseenter", "._filePreview", function() {
                        $.cwMessageTip.isInit(this) || $(this).cwMessageTip({
                            message: language_1.Language.getLang("%%%file_preview_image_hint%%%"),
                            delay: 0
                        }).open()
                    })
                }, FileView.prototype.prepareFileList = function() {
                    var self = this;
                    self.filelist_tip = $("#_chatFileListTip").cwListTip({
                        direction: "bottom",
                        showPosition: "right",
                        noTriangle: !0,
                        search: !0,
                        placeHolder: language_1.Language.getLang("%%%file_search%%%"),
                        useHtmlLabel: !0,
                        multiSelect: !1,
                        selectable: !1,
                        fixHeight: !1,
                        maxListHeight: 400,
                        open: function(tipFrom, room_id) {
                            this.data.room = boot_1.RL.rooms[room_id]
                        },
                        close: function() {
                            filedetail_tip.close()
                        },
                        list: function() {
                            var room = this.data.room;
                            if (!room) return [];
                            var list = [],
                                file_list = room.filelist.getFileList(),
                                file_length = file_list.length;
                            if (file_length > 0) {
                                boot_1.FL.sortFileList(file_list);
                                for (var i = 0; i < file_length; i++) {
                                    var file_id = file_list[i],
                                        file_dat = boot_1.FL.file_id2file_dat[file_id];
                                    void 0 != file_dat && "deleted" != file_dat.st && list.push({
                                        keys: [file_dat.fn],
                                        value: file_id,
                                        label: boot_1.FL.view.getFilePanel(file_dat, {
                                            type: "filelist"
                                        })
                                    })
                                }
                            }
                            return list
                        },
                        select: function(file_id) {
                            this.ul.find("li.adminDetailSelected").removeClass("adminDetailSelected"), this.findItemByValue(file_id).addClass("adminDetailSelected"), filedetail_tip.open(this.findItemByValue(file_id), file_id)
                        }
                    }), self.filelist_tip.ul.on("mouseenter", "li", function() {
                        var item = $(this),
                            file_id = self.filelist_tip.getValueByItem(item);
                        $.cwMessageTip.isInit(this) || item.cwMessageTip({
                            message: function(tipFrom) {
                                var file_id = self.filelist_tip.getValueByItem(tipFrom);
                                return boot_1.FL.file_id2file_dat[file_id].fn
                            },
                            delayQuickMode: !1,
                            delay: 1e3
                        }).open(), self.filelist_tip.ul.find("li.adminDetailSelected").removeClass("adminDetailSelected"), item.addClass("adminDetailSelected"), filedetail_tip.open(self.filelist_tip.findItemByValue(file_id), file_id)
                    }).on("click", "li", function() {
                        $.cwFloatBox.skip(filedetail_tip.$el)
                    });
                    var filedetail_tip = $("#_chatFileDetailTip").cwToolTip({
                        parentFloatBox: $("#_chatFileListTip"),
                        direction: "left",
                        showPosition: "top",
                        open: function(tipFrom, file_id) {
                            var file_dat = boot_1.FL.file_id2file_dat[file_id];
                            file_dat && self.assignDetailInfo($C("#_chatFileDetailTip"), file_dat)
                        }
                    });
                    $("#_fileDetailDownload").click(function() {
                        var file_id = $C("#_chatFileDetailTip").attr("data-file-id"),
                            file_dat = boot_1.FL.file_id2file_dat[file_id];
                        file_dat && $("#_downloadFrame").attr("src", SERVER_PATH + "/gateway.php?cmd=download_file&bin=1&file_id=" + file_dat.id)
                    }), $("#_fileDetailMove").click(function() {
                        var file_id = $C("#_chatFileDetailTip").attr("data-file-id"),
                            file_dat = boot_1.FL.file_id2file_dat[file_id];
                        file_dat && boot_1.RL.selectRoom(file_dat.rid, file_dat.cid)
                    })
                }, FileView.prototype.buildFileDetail = function(file_id) {
                    var self = this,
                        file_dat = boot_1.FL.file_id2file_dat[file_id];
                    file_dat && ($C("#_fileDetailBlankArea").hide(), $C("#_fileDetailArea").show(), self.assignDetailInfo($C("#_fileDetailArea"), file_dat))
                }, FileView.prototype.assignDetailInfo = function(wrapper, file_dat) {
                    var self = this,
                        download_link = SERVER_PATH + "/gateway.php?cmd=download_file&bin=1&file_id=" + file_dat.id,
                        extension = common_1.get_file_extension(file_dat.fn);
                    if (boot_1.FL.view.isImage(extension)) {
                        var src = download_link + "&preview=1";
                        wrapper.find("._fileDetailPreview").html('<a href="' + src + '" target="_blank"><img src="' + src + '"/></a>')
                    } else boot_1.FL.view.isText(extension) ? (self.preview_load_xhr && self.preview_load_xhr.abort(), file_dat.fz >= 1e6 ? wrapper.find("._fileDetailPreview").html(self.getFileTypeIcon(extension)) : self.preview_cache[file_dat.id] ? (wrapper.find("._fileDetailPreview").html('<div class="_codePreview codePreview">' + self.preview_cache[file_dat.id].data + "</div>").scrollTop(0), self.startPreviewCacheTimer(file_dat.id)) : (self.preview_load_xhr = $.ajax({
                        type: "GET",
                        url: download_link + "&preview=1",
                        success: function(content) {
                            self.preview_cache[file_dat.id] = {
                                data: common_2.escape_html(content)
                            }, self.startPreviewCacheTimer(file_dat.id), wrapper.find("._fileDetailPreview").html('<div class="_codePreview codePreview">' + self.preview_cache[file_dat.id].data + "</div>").scrollTop(0), self.preview_load_xhr = null
                        },
                        error: function() {
                            wrapper.find("._fileDetailPreview").html(language_1.Language.getLang("%%%file_preview_image_cant_read%%%"))
                        }
                    }), wrapper.find("._fileDetailPreview").html('<div class="contentLoading"><img src="./imagenew/all/common/loader/img_loader_gray.gif" />' + language_1.Language.getLang("%%%file_loading%%%") + "</div>"))) : wrapper.find("._fileDetailPreview").html(self.getFileTypeIcon(extension));
                    wrapper.scrollTop(0), wrapper.attr("data-file-id", file_dat.id), wrapper.find("._fileDetailName").text(file_dat.fn).attr("data-file-id", file_dat.id), wrapper.find("._fileDetailSize").text(common_2.bytename(file_dat.fz)), wrapper.find("._fileDetailUploadBy").html(boot_1.CW.getAvatarPanel(file_dat.aid, {
                            size: "tiny"
                        }) + " " + boot_1.CW.getName(file_dat.aid)), wrapper.find("._fileDetailUploadDate").html(boot_1.CW.getDate(file_dat.tm)), wrapper.find("._fileDetailChat").html(boot_1.RL.rooms[file_dat.rid].getIcon("html", "tiny") + boot_1.CW.getRoomName(file_dat.rid)).attr({
                        "data-rid": file_dat.rid,
                        "data-mid": file_dat.cid
                    })
                }, FileView.prototype.startPreviewCacheTimer = function(file_id) {
                    var self = this;
                    self.preview_cache_clear[file_id] && clearTimeout(self.preview_cache_clear[file_id]), self.preview_cache_clear[file_id] = setTimeout(function() {
                        self.preview_cache[file_id] && delete self.preview_cache[file_id], delete self.preview_cache_clear[file_id]
                    }, self.preview_cache_expire)
                }, FileView.prototype.prepareFileType = function() {
                    var self = this;
                    self.ext2key = {}, self.key2type = {};
                    var file_type_map = {
                        spreadsheet: {
                            key: 1,
                            list: ["xls", "xlsx", "ods", "xlsm", "numbers", "xlsb", "xlt", "et", "xltx", "gsheet"]
                        },
                        document: {
                            key: 2,
                            list: ["doc", "docx", "rtf", "pages", "xdw", "odt", "jtd", "epub", "tex", "dot", "dotx", "dotm", "docm", "gdoc", "one", "pub", "lhd", "jlb", "asta", "xps", "ps", "indd"]
                        },
                        presentation: {
                            key: 3,
                            list: ["pptx", "ppt", "key", "odp", "pptm", "ppsx", "potx", "pps", "pot", "gslides", "skitch"]
                        },
                        image: {
                            key: 4,
                            list: ["jpg", "png", "gif", "jpeg", "bmp", "tif", "eps", "ico", "tiff", "xcf", "cdr", "svg", "sai", "tga", "wmf", "emf", "dib", "pic", "snagproj", "cur", "xib"]
                        },
                        ai: {
                            key: 5,
                            list: ["ai"]
                        },
                        psd: {
                            key: 6,
                            list: ["psd", "abr"]
                        },
                        flash: {
                            key: 7,
                            list: ["swf", "fla", "flv", "fxp"]
                        },
                        pdf: {
                            key: 8,
                            list: ["pdf"]
                        },
                        movie: {
                            key: 9,
                            list: ["mp4", "wmv", "mov", "avi", "m4v", "3gp", "mts", "fbr", "mpg", "camrec", "ogg", "wlmp", "camproj", "m4p", "vob", "f4v"]
                        },
                        text: {
                            key: 10,
                            list: ["txt", "log", "strings", "text", "md", "license"]
                        },
                        audio: {
                            key: 11,
                            list: ["mp3", "wav", "m4a", "wma", "mid", "aiff", "m4r"]
                        },
                        font: {
                            key: 12,
                            list: ["ttf", "otf", "ttc"]
                        },
                        web: {
                            key: 13,
                            list: ["html", "css", "htm", "mht", "url", "webarchive", "torrent", "xhtml", "shtml", "less", "scss", "styl", "stylus"]
                        },
                        markup: {
                            key: 14,
                            list: ["xml", "xsl", "wsdl", "kml", "kmz", "opml", "mxml"]
                        },
                        script: {
                            key: 15,
                            list: ["js", "m", "h", "json", "hsp", "rb", "sh", "c", "dll", "h", "cpp", "bat", "py", "cs", "cgi", "crx", "pl", "uws", "atn", "as", "jsx", "erb", "class", "scala", "jsee", "inc", "pm", "asp", "vb", "vbs", "module", "obj", "patch", "lua", "xcodeproj", "vcproj"]
                        },
                        php: {
                            key: 16,
                            list: ["php", "ctp", "twig", "phtml"]
                        },
                        java: {
                            key: 17,
                            list: ["java", "jar", "jsp", "war"]
                        },
                        csv: {
                            key: 18,
                            list: ["csv"]
                        },
                        data: {
                            key: 19,
                            list: ["dat", "sdf", "tsv", "mdb", "fp7", "db", "accdb", "mwb", "tbl", "sqlite", "sql", "idm", "bak", "tab", "dump", "db9", "data", "dic", "cap", "backup", "fwa", "fwb", "kb4", "kb5", "kb6", "kb7", "kb11", "kb12", "enex"]
                        },
                        mindmap: {
                            key: 20,
                            list: ["mmap", "xmind", "mm", "xmmap", "mindnode", "mind"]
                        },
                        android: {
                            key: 21,
                            list: ["apk"]
                        },
                        iosapp: {
                            key: 22,
                            list: ["ipa"]
                        },
                        mail: {
                            key: 23,
                            list: ["eml", "msg", "vcf"]
                        },
                        setting: {
                            key: 24,
                            list: ["mobileprovision", "ini", "htaccess", "conf", "yml", "yaml", "reg", "properties", "plist", "config", "cfg", "cnf", "inf", "mobileconfig", "manifest", "emacs", "ste"]
                        },
                        security: {
                            key: 25,
                            list: ["pem", "p12", "ppk", "cer", "csr", "crt", "certsigningrequest"]
                        },
                        package: {
                            key: 26,
                            list: ["dmg", "air", "msi", "unitypackage", "mxp", "xpi", "iso", "pkg"]
                        },
                        drawing: {
                            key: 27,
                            list: ["vsd", "vdx", "jww", "dxf", "dwg", "atc", "vwx", "mpp", "dwt", "stl", "jwc"]
                        },
                        archive: {
                            key: 28,
                            list: ["zip", "lzh", "rar", "gz", "7z", "tgz", "tar", "cab", "sit", "egg", "alzip"]
                        }
                    };
                    for (var type in file_type_map) {
                        var type_dat = file_type_map[type],
                            key = type_dat.key,
                            list = type_dat.list;
                        self.key2type[key] = type;
                        for (var i = list.length; i--;) self.ext2key[list[i]] = key
                    }
                }, FileView.prototype.openFileList = function(room_id) {
                    var self = this;
                    self.filelist_tip || self.prepareFileList(), self.filelist_tip.open($C("#_chatFileAll"), room_id), room_id && boot_1.TREASURE.trackEvent("room_detail", "open", {
                        label: "room_detail_file_list"
                    })
                }, FileView.prototype.openPreviewDialog = function(file_id) {
                    var self = this;
                    if (!self.model.file_id2file_dat[file_id]) return boot_1.CW.alert(language_1.Language.getLang("%%%file_not_found%%%")), !1;
                    self.preview_dialog || (self.preview_dialog = $("#_filePreviewDialog").cwDialog({
                        autoOpen: !1,
                        width: 700,
                        height: 500,
                        modal: !0,
                        buttonLabels: [language_1.Language.getLang("%%%file_preview_download%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(idx) {
                            switch (idx) {
                                case 0:
                                    $("#_downloadFrame").attr("src", "gateway.php?cmd=download_file&bin=1&file_id=" + this.data.file_id)
                            }
                        },
                        open: function(file_id) {
                            var preview_src = SERVER_PATH + "/gateway.php?cmd=download_file&bin=1&preview=1&file_id=" + file_id;
                            this.data.file_id = file_id, this.$el.html('<div class="filePreviewDialogArea"><div id="_filePreviewLoading" class="contentLoading"><img src="./imagenew/all/common/loader/img_loader_gray.gif" />' + language_1.Language.getLang("%%%file_loading%%%") + '</div><div class="filePreviewImage"><img id="_filePreviewImage" style="visibility:hidden" src="' + preview_src + '"/><div class="filePreviewBlank"><span class="icoFontLinkBlank"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%file_preview_open_newwindow%%%") + "<span></div></div></div>");
                            var pv_image = $("#_filePreviewImage");
                            pv_image.load(function() {
                                $("#_filePreviewLoading").hide();
                                var width = pv_image.width(),
                                    height = pv_image.height(),
                                    new_width = width,
                                    new_height = height,
                                    need_thumbnail = !1;
                                width > 1200 && (new_height *= 1200 / new_width, new_width = 1200, need_thumbnail = !0), new_height > 600 && (new_width *= 600 / new_height, new_height = 600, need_thumbnail = !0);
                                var img_option = {
                                    visibility: "visible"
                                };
                                need_thumbnail && (img_option.width = Math.round(new_width), img_option.height = Math.round(new_height)), pv_image.css(img_option), pv_image.click(function() {
                                    window.open(preview_src)
                                }), pv_image.nextAll(".filePreviewBlank").click(function() {
                                    window.open(preview_src)
                                })
                            })
                        }
                    })), self.preview_dialog.setOption({
                        title: self.model.file_id2file_dat[file_id].fn
                    }), self.preview_dialog.open(file_id)
                }, FileView.prototype.buildByFileId = function(file_id) {
                    var file_id_list, self = this;
                    file_id_list = "object" != typeof file_id ? [file_id] : file_id;
                    var rm_build = !1,
                        allmy_build = !1;
                    for (var i in file_id_list) {
                        var file_dat = boot_1.FL.file_id2file_dat[file_id_list[i]];
                        boot_1.RM && boot_1.RM.id == file_dat.rid && (rm_build = !0), file_dat.aid == boot_1.AC.myid && (allmy_build = !0)
                    }
                    rm_build && boot_1.RM.filelist.build(), allmy_build && (self.buildFileWindow(), self.filelist_tip && self.filelist_tip.isOpen() && self.filelist_tip.build())
                }, FileView.prototype.buildFileWindow = function(user_option) {
                    var self = this;
                    if (self.file_window && self.file_window.isOpen()) {
                        if ($.extend({
                                resetPager: !0
                            }, user_option).resetPager && (self.file_window_pager_index = 0), !self.model.myfile_load_flag.loaded) return $("#_fileWindowList").html('<li class="contentLoading"><img src="./imagenew/all/common/loader/img_loader_gray.gif" alt="Loading" />' + language_1.Language.getLang("%%%file_loading%%%") + "</li>"), boot_1.FL.loadAllMyFile(), !1;
                        self.file_window_allcheck_button.disable();
                        var my_file_list = self.model.getMyFileList(),
                            filtered_file_list = [];
                        if (self.file_window_search_word)
                            for (var sword = self.file_window_search_word.toLowerCase(), i = 0, file_len = my_file_list.length; i < file_len; i++) {
                                var file_id = my_file_list[i],
                                    file_dat = boot_1.FL.file_id2file_dat[file_id];
                                file_dat.fn && file_dat.fn.toLowerCase().includes(sword) && filtered_file_list.push(file_id)
                            } else filtered_file_list = my_file_list;
                        boot_1.FL.sortFileList(filtered_file_list);
                        var disp_file_list = [],
                            filtererd_length = filtered_file_list.length;
                        if (self.file_window_pager_num = parseInt(filtererd_length / self.file_window_pager_view_num, 10), filtererd_length % self.file_window_pager_view_num != 0 && self.file_window_pager_num++, filtererd_length >= self.file_window_pager_view_num) {
                            var idx_start = self.file_window_pager_index * self.file_window_pager_view_num,
                                idx_end = idx_start + self.file_window_pager_view_num;
                            idx_end > filtererd_length && (idx_end = filtererd_length);
                            for (var idx = idx_start; idx < idx_end; idx++) disp_file_list.push(filtered_file_list[idx])
                        } else disp_file_list = filtered_file_list;
                        disp_file_list.length > 0 && self.file_window_allcheck_button.enable();
                        var allcheck = $C("#_fileWindowCheckAll").cwCheckBox(),
                            delete_button = $C("#_fileWindowDeleteButton").cwButton(),
                            check_num = Object.keys(self.checked_file_flag).length;
                        check_num ? (check_num == disp_file_list.length ? allcheck.check() : allcheck.partialCheck(), delete_button.enable()) : (allcheck.unCheck(), delete_button.disable());
                        for (var detail_file_id = $C("#_fileDetailArea").attr("data-file-id"), detail_file_is_found = !1, html = "", i = 0, file_length = disp_file_list.length; i < file_length; i++) {
                            var file_dat = boot_1.FL.file_id2file_dat[disp_file_list[i]];
                            detail_file_id == file_dat.id && (detail_file_is_found = !0), html += self.getFilePanel(file_dat, {
                                type: "filewindow"
                            })
                        }
                        if (!html) {
                            var nothing_str = "";
                            nothing_str = self.file_window_search_word ? language_1.Language.getLang("%%%file_search_not_found%%%") : language_1.Language.getLang("%%%file_nothing%%%"), html = '<li class="emptyAdminContent"><img src="./imagenew/common/empty/img_file_empty.png" alt="" /><p>' + nothing_str + "</p></li>"
                        }
                        $C("#_fileWindowList").html(html), detail_file_is_found || $C("#_fileDetailClose").click(), 0 == disp_file_list.length ? ($C("#_emptyFileContent").show(), $C("#_fileWindowPagerIndex").text("")) : ($C("#_emptyFileContent").hide(), $C("#_fileWindowPagerIndex").text((self.file_window_pager_index + 1).toString() + " / " + self.file_window_pager_num)), self.file_window_pager.enableButtonAll(), 0 == self.file_window_pager_index && self.file_window_pager.disableButton(0).disableButton(1), self.file_window_pager_num - self.file_window_pager_index <= 1 && self.file_window_pager.disableButton(2).disableButton(3), self.buildStorageInfo()
                    }
                }, FileView.prototype.isImage = function(extension) {
                    return "gif" == extension || "jpg" == extension || "jpeg" == extension || "png" == extension
                }, FileView.prototype.isText = function(extension) {
                    switch (extension) {
                        case "txt":
                        case "css":
                        case "html":
                        case "htm":
                        case "shtml":
                        case "asp":
                        case "bashrc":
                        case "c":
                        case "cgi":
                        case "cpp":
                        case "dif":
                        case "h":
                        case "java":
                        case "js":
                        case "less":
                        case "scss":
                        case "styl":
                        case "stylus":
                        case "jsee":
                        case "json":
                        case "jsp":
                        case "m":
                        case "manifest":
                        case "mobileprovision":
                        case "plist":
                        case "mxml":
                        case "php":
                        case "pl":
                        case "pm":
                        case "py":
                        case "rb":
                        case "tpl":
                        case "vbs":
                        case "csv":
                        case "slk":
                        case "sql":
                        case "tsv":
                        case "def":
                        case "inf":
                        case "ini":
                        case "reg":
                        case "log":
                            return !0
                    }
                    return !1
                }, FileView.prototype.prepareFileWindow = function() {
                    var self = this;
                    self.file_window = $("#_fileWindow").cwFloatWindow({
                        width: 920,
                        title: language_1.Language.getLang("%%%menu_file%%%")
                    }), $("#_fileWindowSearch").cwSearchBox({
                        update: function() {
                            self.file_window_search_word = this.getVal(), self.checked_file_flag = {}, self.buildFileWindow()
                        }
                    });
                    var delete_button_jqObj = $C("#_fileWindowDeleteButton");
                    delete_button_jqObj.cwMessageTip({
                        message: language_1.Language.getLang("%%%file_delete_hint%%%"),
                        delay: boot_1.TM.messagetip_delay
                    });
                    var disable_delete_button_click = !1,
                        delete_button = delete_button_jqObj.cwButton({
                            click: function() {
                                var file_list = [];
                                for (var fid in self.checked_file_flag) file_list.push(fid);
                                boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%file_multi_confirm_delete%%%", {
                                    num: file_list.length
                                }), function() {
                                    boot_1.CW.showProgress(language_1.Language.getLang("%%%deleting%%%")), disable_delete_button_click || (disable_delete_button_click = setTimeout(function() {
                                        disable_delete_button_click = !1
                                    }, 5e3), boot_1.FL.deleteFile(file_list, function() {
                                        disable_delete_button_click = clearTimeout(disable_delete_button_click), boot_1.CW.hideProgress(),
                                            self.buildFileWindow(), self.checked_file_flag = {}
                                    }, function(error_message) {
                                        disable_delete_button_click = clearTimeout(disable_delete_button_click), boot_1.CW.hideProgress(), boot_1.CW.alert(error_message), self.buildFileWindow()
                                    }))
                                })
                            },
                            disable: function() {
                                this.$el.cwMessageTip().disable()
                            },
                            enable: function() {
                                this.$el.cwMessageTip().enable()
                            }
                        });
                    $("#_fileWindowList").on("click", "li", function() {
                        $C("#_fileWindowList").find("li").removeClass("adminDetailSelected");
                        var file = $(this);
                        file.addClass("adminDetailSelected");
                        var file_id = file.attr("data-file-id");
                        self.buildFileDetail(file_id), boot_1.TREASURE.trackEvent("file_list", "open", {
                            label: "file_detail"
                        })
                    }).on("mouseenter", "._fileList", function() {
                        $.cwMessageTip.isInit(this) || $(this).cwMessageTip({
                            message: function(tipFrom) {
                                var file_id = tipFrom.attr("data-file-id");
                                return boot_1.FL.file_id2file_dat[file_id].fn
                            },
                            delayQuickMode: !1,
                            delay: 1e3
                        }).open()
                    }).on("cwCheckBox_update", function(event, is_check, file_id) {
                        is_check ? self.checked_file_flag[file_id] = is_check : self.checked_file_flag[file_id] && delete self.checked_file_flag[file_id];
                        var allcheck = $C("#_fileWindowCheckAll").cwCheckBox(),
                            file_num = $C("#_fileWindowList").find("._fileList").length,
                            check_num = Object.keys(self.checked_file_flag).length;
                        check_num ? (check_num == file_num ? allcheck.check() : allcheck.partialCheck(), delete_button.enable()) : (allcheck.unCheck(), delete_button.disable())
                    }), $("#_fileDetailClose").click(function() {
                        $C("#_fileWindowList").find("._fileList").removeClass("taskDetailSelected"), $C("#_fileDetailArea").attr("data-file-id", "").hide(), $C("#_fileDetailBlankArea").show()
                    }), $C("#_fileDetailTitle").click(function() {
                        var file_id = $C("#_fileDetailArea").attr("data-file-id"),
                            file = $C("#_fileWindowList").find("li._fileList[data-file-id=" + file_id + "]");
                        $C("#_fileWindowBox").scrollTo(file, 600)
                    }), self.file_window_allcheck_button = $("#_fileWindowCheckAllButton").cwButton({
                        click: function() {
                            $C("#_fileWindowCheckAll").cwCheckBox().toggle()
                        },
                        disable: function() {
                            $C("#_fileWindowCheckAll").cwCheckBox().disable()
                        },
                        enable: function() {
                            $C("#_fileWindowCheckAll").cwCheckBox().enable()
                        }
                    }), $C("#_fileWindowCheckAll").cwCheckBox({
                        update: function(is_checked, value, is_partial) {
                            var allcheck = this;
                            is_partial || (allcheck.isChecked() ? $C("#_fileWindowList").find("._cwCBUnchecked").each(function() {
                                $(this).cwCheckBox().check()
                            }) : $C("#_fileWindowList").find("._cwCBChecked").each(function() {
                                $(this).cwCheckBox().unCheck()
                            }))
                        }
                    });
                    var filepager_list = ["first", "prev", "next", "last"];
                    self.file_window_pager = $("#_fileWindowPager").cwButtonBar({
                        update: function(idx) {
                            switch (filepager_list[idx]) {
                                case "first":
                                    self.file_window_pager_index = 0;
                                    break;
                                case "prev":
                                    self.file_window_pager_index--, self.file_window_pager_index < 0 && (self.file_window_pager_index = 0);
                                    break;
                                case "next":
                                    self.file_window_pager_index++, self.file_window_pager_index >= self.file_window_pager_num && (self.file_window_pager_index = self.file_window_pager_num - 1);
                                    break;
                                case "last":
                                    self.file_window_pager_index = self.file_window_pager_num - 1
                            }
                            self.checked_file_flag = {}, self.buildFileWindow({
                                resetPager: !1
                            }), $C("#_fileWindowBox").scrollTop(0)
                        }
                    }), $("#_storageAddButton").click(function() {
                        return self.file_window.close(), boot_1.CW.view.showOptionPlanPrice(), !1
                    })
                }, FileView.prototype.openFileWindow = function() {
                    var self = this;
                    self.file_window || self.prepareFileWindow(), self.file_window.open(), self.buildFileWindow()
                }, FileView.prototype.getFilePanel = function(file_dat, option) {
                    var self = this,
                        html = "";
                    if (!1 === file_dat) html = '<div class="_delete">' + language_1.Language.getLang("%%%file_not_found%%%") + "</div>";
                    else if ("deleted" != file_dat.st) {
                        var extension = common_1.get_file_extension(file_dat.fn);
                        if ("filewindow" == option.type) {
                            var checked = !1;
                            self.checked_file_flag[file_dat.id] && (checked = !0), html = '<li class="_fileList" data-file-id="' + file_dat.id + '">' + $.cwCheckBox.create(checked, "", file_dat.id) + self.getFileTypeIcon(extension) + '<p class="fileAllListName">' + common_2.escape_html(file_dat.fn) + '</p><p class="fileAllListSize">' + common_2.bytename(file_dat.fz) + '</p><div class="fileAllListButtonArea btnGroup"><div class="_downloadFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%file_download_hint%%%") + '"><span class="icoFontActionDownload "></span></div><div class="_moveFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%jump_to_addpoint%%%") + '"><span class="icoFontActionMove "></span></div><div class="_editFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%file_rename_hint%%%") + '"><span class="icoFontActionEdit"></span></div><div class="_deleteFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%file_delete_hint%%%") + '"><span class="icoFontActionDelete"></span></div></div></li>'
                        } else if ("filelist" == option.type) {
                            extension = common_1.get_file_extension(file_dat.fn);
                            var cmd_delete = "";
                            file_dat.aid == boot_1.AC.myid && (cmd_delete = '<div class="_editFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%file_rename_hint%%%") + '"><span class="icoFontActionEdit"></span></div><div class="_deleteFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%file_delete_hint%%%") + '"><span class="icoFontActionDelete"></span></div>'), html = '<div class="fileContent">' + self.getFileTypeIcon(extension) + '<p class="_fileName fileName">' + common_2.escape_html(file_dat.fn) + '</p><div class="fileBtnArea btnGroup"><div class="_downloadFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%file_download_hint%%%") + '"><span class="icoFontActionDownload"></span></div><div class="_moveFile _showDescription button" data-file-id="' + file_dat.id + '" aria-label="' + language_1.Language.getLang("%%%jump_to_addpoint%%%") + '"><span class="icoFontActionMove "></span></div>' + cmd_delete + "</div></div>"
                        }
                    }
                    return html
                }, FileView.prototype.getFileTypeIcon = function(extension) {
                    var self = this;
                    null == self.ext2key && self.prepareFileType();
                    var fileclass = "ico35UnknownFile";
                    return void 0 != self.ext2key[extension] && (fileclass = "ico35" + common_2.ucfirst(self.key2type[self.ext2key[extension]])), '<div class="fileIconArea ' + fileclass + '"></div>'
                }, FileView.prototype.enableFileArea = function() {
                    $C("#_file").show(), $("#_chatFileAll").show()
                }, FileView.prototype.disableFileArea = function() {
                    $C("#_file").hide()
                }, FileView.prototype.updateStorageInfo = function(storage, storage_limit, limit_time, is_limit) {
                    var self = this,
                        activity_ratio = Math.floor(storage.total / storage_limit * 100);
                    if (activity_ratio >= 100) {
                        var info_dat = void 0;
                        if (void 0 != is_limit) info_dat = {
                            linktext: language_1.Language.getLang("%%%storage_limit_warning_message%%%"),
                            subject: language_1.Language.getLang("%%%storage_limit_warning_title%%%"),
                            body: language_1.Language.getLang("%%%storage_limit_warning_body%%%"),
                            linkClick: function(options) {
                                var _options = {
                                    title: options.subject,
                                    body: options.body
                                };
                                boot_1.CW.view.showStorageCautionDialog(_options)
                            }
                        };
                        else {
                            var limit_footer_message = language_1.Language.getLang("%%%storage_limit_notice_footer%%%", {
                                date: boot_1.CW.getDate(limit_time, boot_1.ST.data.dateformat)
                            });
                            info_dat = {
                                linktext: language_1.Language.getLang("%%%storage_limit_notice_message%%%"),
                                subject: language_1.Language.getLang("%%%storage_limit_notice_title%%%"),
                                body: language_1.Language.getLang("%%%storage_limit_notice_body%%%"),
                                linkClick: function(options) {
                                    var _options = {
                                        title: options.subject,
                                        body: options.body,
                                        footer: '<span class="textDanger">' + limit_footer_message + "</span>"
                                    };
                                    boot_1.CW.view.showStorageCautionDialog(_options)
                                }
                            }
                        }
                        self.last_storage_info_id = boot_1.CW.view.saveInformation(self.last_storage_info_id, info_dat)
                    } else activity_ratio < 100 && self.latest_storage_info_id && (boot_1.CW.view.deleteInformation(self.latest_storage_info_id), self.latest_storage_info_id = void 0);
                    activity_ratio >= 90 ? ($C("#_myFileNotice").show(), $C("#_storageTotalUsageRatioText").addClass("noticeStorage")) : ($C("#_myFileNotice").hide(), $C("#_storageTotalUsageRatioText").removeClass("noticeStorage")), void 0 != storage_limit && (self.last_storage.storage = storage, self.last_storage.storage_limit = storage_limit, self.last_storage.limit_time = limit_time, self.last_storage.is_limit = is_limit, self.file_window && self.file_window.isOpen() && self.buildStorageInfo())
                }, FileView.prototype.buildStorageInfo = function() {
                    var self = this,
                        storage = self.last_storage.storage,
                        storage_limit = self.last_storage.storage_limit,
                        limit_size = common_2.bytename(storage_limit, 1),
                        limit_storage = limit_size;
                    $("#_storageTotalCapacity").text(limit_storage);
                    var view_total_size = "";
                    void 0 != storage.total && (view_total_size = common_2.bytenameWithUnit(storage.total, (limit_size.match(/\w+$/) || []).pop())), $("#_storageTotalUsage").text(view_total_size);
                    var activity_ratio_sum = 0,
                        file_activity_ratio = 0,
                        view_file_size = "";
                    void 0 != storage.file && (file_activity_ratio = Math.round(storage.file / storage_limit * 100), activity_ratio_sum += file_activity_ratio, view_file_size = common_2.bytename(storage.file)), $("#_storageUsageFileSize").text(view_file_size);
                    var chat_activity_ratio = 0,
                        view_chat_size = "";
                    void 0 != storage.chat && (chat_activity_ratio = Math.round(storage.chat / storage_limit * 100), activity_ratio_sum += chat_activity_ratio, view_chat_size = common_2.bytename(storage.chat)), $("#_storageUsageMessageSize").text(view_chat_size);
                    var other_activity_ratio = 0,
                        view_other_size = "";
                    void 0 != storage.other && (other_activity_ratio = Math.round(storage.other / storage_limit * 100), activity_ratio_sum += other_activity_ratio, view_other_size = common_2.bytename(storage.other)), $("#_storageUsageOtherSize").text(view_other_size), activity_ratio_sum > 100 && (chat_activity_ratio = Math.round(chat_activity_ratio / activity_ratio_sum * 100), file_activity_ratio = Math.round(file_activity_ratio / activity_ratio_sum * 100), other_activity_ratio = Math.round(other_activity_ratio / activity_ratio_sum * 100), activity_ratio_sum = chat_activity_ratio + file_activity_ratio + other_activity_ratio);
                    var real_total_usage = parseInt(storage.file, 10) + parseInt(storage.chat, 10) + parseInt(storage.other, 10),
                        real_total_ratio = Math.floor(real_total_usage / parseInt(storage_limit, 10) * 100);
                    if (real_total_ratio >= 100 && 100 != activity_ratio_sum && real_total_ratio > activity_ratio_sum) {
                        var activity_ratio_label = ["chat", "file", "other"],
                            activity_ratio_list = [chat_activity_ratio, file_activity_ratio, other_activity_ratio];
                        switch (activity_ratio_label[activity_ratio_list.indexOf(Math.max.apply(null, activity_ratio_list))]) {
                            case "chat":
                                chat_activity_ratio++;
                                break;
                            case "file":
                                file_activity_ratio++;
                                break;
                            case "other":
                                other_activity_ratio++
                        }
                    }
                    $("#_storageUsageMessage").css("width", chat_activity_ratio + "%"), $("#_storageUsageFile").css("width", file_activity_ratio + "%"), $("#_storageUsageOther").css("width", other_activity_ratio + "%");
                    var view_activity_ratio_storage = "";
                    void 0 != storage.total && void 0 != storage_limit && (view_activity_ratio_storage = Math.floor(storage.total / storage_limit * 100)), $("#_storageTotalUsageRatio").text(view_activity_ratio_storage), boot_1.CW.is_business && !boot_1.CW.is_admin && $C("#_storageAddButton").hide(), boot_1.CW.is_business && boot_1.CW.is_admin && $("#_storageUserAdminLink").show()
                }, FileView.prototype.buildAllMyFile = function() {
                    this.buildFileWindow()
                }, FileView
            }();
        exports.FileView = FileView
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/common": 342,
        "../lib/language": 384
    }],
    459: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var InviteMailAccountModel_1 = require("../model/InviteMailAccountModel"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            InviteMailAccountView = function() {
                function InviteMailAccountView() {
                    this.tabId = "_contactWindowTabInviteEmail", this.invite_mail_state_type = "individual", this.view_state = "invite", this.selectorOfMessageForm = "#_contentInviteMailNew [name=message]", this.selectorOfIndividualEmailForms = ".contactInviteMailList [type=email]", this.selectorOfBulkEmailForm = "#_addFromEmailContentEmails", this.mailAddressInputForm = "_mailAddressInput", this.mailAddressFormCancelButton = "_mailAddressInputCancel", this.model = new InviteMailAccountModel_1.InviteMailAccountModel
                }
                return InviteMailAccountView.prototype.prepare = function() {
                    var _this = this;
                    $C("#" + this.tabId).show(), $C("#_wrapper").on("click", "#_contactInviteMail", function(e) {
                        return _this.handleClickSendInviteMail(e)
                    }).on("click", "#_contactOtherInviteMail", function(e) {
                        return _this.handleClickOtherInviteMail(e)
                    }).on("click", "#_contactInviteMailAddAddress", function(e) {
                        return _this.handleClickAddMailAddressInputForm(e)
                    }).on("click", "." + this.mailAddressFormCancelButton, function(e) {
                        return _this.handleClickRemoveMailAddressInputForm(e)
                    }).on("keyup", this.selectorOfIndividualEmailForms, function() {
                        return _this.handleKeyUpMailAddressInputForm()
                    }).on("keyup", this.selectorOfBulkEmailForm, function() {
                        return _this.handleKeyUpMailBulkAddressTextArea()
                    }).on("click", ".changeFormBulk", function(e) {
                        return _this.handleClickChangeFormBulk(e)
                    }).on("click", ".changeFormIndividual", function(e) {
                        return _this.handleClickChangeFormIndividual(e)
                    }).on("click", "._contactRequestLink", function() {
                        $("#_contactWindowTabRequest").click()
                    }).on("click", "._contactMyRequestLink", function() {
                        $("#_contactWindowTabMyRequest").click()
                    })
                }, InviteMailAccountView.prototype.handleClickSendInviteMail = function(e) {
                    var _this = this;
                    if (e.preventDefault(), this.applyModelMails(), this.applyModelMessage(), this.model.validate()) {
                        var hasMessage_1 = this.model.hasMessage();
                        boot_1.CW.post("gateway.php", this.callApiParams(this.model.emails(), this.model.message()), function(json) {
                            _this.view_state = "finished", _this.buildFinishedView(json || {}), json.sent_contact_requests.length > 0 && boot_1.AC.view.buildContactWindow(), $C("#_contentInviteMailNew").hide(), $C("#_contentInviteMailFinished").show(), _this.model.clear(), $C(_this.selectorOfMessageForm).val(""), $C(".contactInviteErrorMessage").hide(), $("." + _this.mailAddressInputForm).remove(), _this.addMailAddress(), $C(_this.selectorOfBulkEmailForm).val(""), _this.visibleInputMailFormCancelIcon(), $C("#_contactInviteMail").hide(), $C("#_contactOtherInviteMail").show(), hasMessage_1 ? boot_1.TREASURE.trackEvent("contact_list", "send", {
                                label: "mail_invitation_with_message"
                            }) : boot_1.TREASURE.trackEvent("contact_list", "send", {
                                label: "mail_invitation"
                            })
                        }, function(error_message) {
                            boot_1.CW.alert(error_message)
                        })
                    } else $C(".contactInviteErrorMessage").text(this.model.validateMessage()).show()
                }, InviteMailAccountView.prototype.handleClickOtherInviteMail = function(e) {
                    e.preventDefault(), this.view_state = "invite", this.showInviteMailNew(), this.giveFocus()
                }, InviteMailAccountView.prototype.handleClickAddMailAddressInputForm = function(e) {
                    e.preventDefault(), this.addMailAddress(), this.visibleInputMailFormCancelIcon(), $(this.selectorOfIndividualEmailForms).last().focus()
                }, InviteMailAccountView.prototype.handleClickRemoveMailAddressInputForm = function(e) {
                    e.preventDefault();
                    var email_elem = "." + this.mailAddressInputForm,
                        input_elem = e.target.closest(email_elem);
                    if (input_elem) {
                        $(email_elem).length > 1 ? $(input_elem).remove() : input_elem.querySelector("input[name=email]").value = "", this.visibleInputMailFormCancelIcon(), this.giveFocus()
                    }
                }, InviteMailAccountView.prototype.handleKeyUpMailAddressInputForm = function() {
                    this.visibleInputMailFormCancelIcon(), this.applyModelMails(), this.model.validate() && $C(".contactInviteErrorMessage").hide()
                }, InviteMailAccountView.prototype.handleKeyUpMailBulkAddressTextArea = function() {
                    this.applyModelMails(), this.model.validate() && $C(".contactInviteErrorMessage").hide()
                }, InviteMailAccountView.prototype.handleClickChangeFormBulk = function(e) {
                    e.preventDefault(), this.invite_mail_state_type = "bulk";
                    var $inputMails = $(this.selectorOfIndividualEmailForms),
                        emails = $.makeArray($inputMails).filter(function(elem) {
                            return elem.value
                        }).map(function(elem) {
                            return elem.value
                        });
                    this.model.setEmails(emails), $C(this.selectorOfBulkEmailForm).val(this.model.emails().join("\n")), $C("#_contactInviteMailIndividual").hide(), $C("#_contactInviteMailBulk").show(), this.giveFocus()
                }, InviteMailAccountView.prototype.handleClickChangeFormIndividual = function(e) {
                    var _this = this;
                    e.preventDefault(), this.invite_mail_state_type = "individual";
                    var emailsText = $C(this.selectorOfBulkEmailForm).val();
                    this.model.parseBulkEmails(emailsText), $("." + this.mailAddressInputForm).remove();
                    var emails = this.model.emails();
                    emails.length > 0 ? emails.forEach(function(email) {
                        _this.addMailAddress(email)
                    }) : this.addMailAddress(), this.visibleInputMailFormCancelIcon(), $C("#_contactInviteMailBulk").hide(), $C("#_contactInviteMailIndividual").show(), this.giveFocus()
                }, InviteMailAccountView.prototype.init = function() {
                    this.view_state = "invite"
                }, InviteMailAccountView.prototype.show = function() {
                    $C(".contactInviteErrorMessage").hide(), $C(".contactInviteMailFooter").show(), $C("#_contactInviteMailArea").show(), "invite" == this.view_state && (this.showInviteMailNew(), this.visibleInputMailFormCancelIcon())
                }, InviteMailAccountView.prototype.hide = function() {
                    $C("#_contactInviteMailArea").hide(), $C(".contactInviteMailFooter").hide()
                }, InviteMailAccountView.prototype.giveFocus = function() {
                    "individual" == this.invite_mail_state_type ? $("#_contactInviteMailIndividual [type=email]").last().focus() : $(this.selectorOfBulkEmailForm).focus()
                }, InviteMailAccountView.prototype.buildFinishedView = function(value) {
                    var createEmailOnlyElem = function(text) {
                            return $("<li>").text(text)
                        },
                        sent_emails = (value.sent_invitations || []).concat(value.sent_contact_requests || []);
                    sent_emails = (value.established || []).reduce(function(prev, curr) {
                        return prev.push(curr.email_address), prev
                    }, sent_emails), $C("#_contactInviteMailSentEmails .contactInviteMailResultList").html(sent_emails.map(createEmailOnlyElem)), sent_emails.length > 0 ? ($C("#_contentInviteMailFinished .alertSuccess").show(), $C("#_contentInviteMailFinished .alertDanger").hide(), $C("#_contactInviteMailSentEmails").show()) : ($C("#_contentInviteMailFinished .alertSuccess").hide(), $C("#_contentInviteMailFinished .alertDanger").show(), $C("#_contactInviteMailSentEmails").hide());
                    var unreachable_email_addresses = value.unreachable_email_addresses || [];
                    $C("#_contactInviteMailUnreachableEmailAddresses .contactInviteMailResultList").html(unreachable_email_addresses.map(createEmailOnlyElem)), unreachable_email_addresses.length > 0 ? $C("#_contactInviteMailUnreachableEmailAddresses").show() : $C("#_contactInviteMailUnreachableEmailAddresses").hide();
                    var already_requested = value.already_requested || [];
                    $C("#_contactInviteMailAlreadyRequested .contactInviteMailResultList").html(already_requested.map(function(connect) {
                        var aElem = $("<a>").addClass("_contactMyRequestLink").attr({
                            href: "#"
                        }).text(connect.name);
                        return $("<li>").text(connect.email_address).append([" [", aElem, "]"])
                    })), already_requested.length > 0 ? ($C("#_contactInviteMailAlreadyRequested").show(), $("#_contentInviteMailFinished ._contactMyRequestLink").cwMessageTip({
                        message: language_1.Language.getLang("%%%contact_invite_mail_move_to_your_sent_requests%%%"),
                        delay: 100
                    })) : $C("#_contactInviteMailAlreadyRequested").hide();
                    var already_connected = value.already_connected || [];
                    $C("#_contactInviteMailAlreadyConnected .contactInviteMailResultList").html(already_connected.map(function(connect) {
                        var aElem = $("<a>").addClass("_roomLink").attr({
                            href: "#",
                            "data-rid": connect.direct_chat_id
                        }).text(connect.name);
                        return $("<li>").text(connect.email_address).append([" [", aElem, "]"])
                    })), already_connected.length > 0 ? ($C("#_contactInviteMailAlreadyConnected").show(), $("#_contentInviteMailFinished ._roomLink").cwMessageTip({
                        message: language_1.Language.getLang("%%%contact_invite_mail_move_to_direct_chat%%%"),
                        delay: 100
                    })) : $C("#_contactInviteMailAlreadyConnected").hide();
                    var request_already_received = value.request_already_received || [];
                    $C("#_contactInviteMailRequestAlreadyReceived .contactInviteMailResultList").html(request_already_received.map(function(connect) {
                        var aElem = $("<a>").addClass("_contactRequestLink").attr({
                            href: "#"
                        }).text(connect.name);
                        return $("<li>").text(connect.email_address).append([" [", aElem, "]"])
                    })), request_already_received.length > 0 ? ($C("#_contactInviteMailRequestAlreadyReceived").show(), $("#_contentInviteMailFinished ._contactRequestLink").cwMessageTip({
                        message: language_1.Language.getLang("%%%contact_invite_mail_move_to_incoming_requests%%%"),
                        delay: 100
                    })) : $C("#_contactInviteMailRequestAlreadyReceived").hide();
                    var not_allowed_connecting = value.not_allowed_connecting || [];
                    $C("#_contactInviteMailNotAllowedConnecting .contactInviteMailResultList").html(not_allowed_connecting.map(createEmailOnlyElem)), not_allowed_connecting.length > 0 ? $C("#_contactInviteMailNotAllowedConnecting").show() : $C("#_contactInviteMailNotAllowedConnecting").hide();
                    var contact_request_limit_exceeded = value.contact_request_limit_exceeded || [];
                    $C("#_contactInviteMailContactRequestLimitExceeded .contactInviteMailResultList").html(contact_request_limit_exceeded.map(createEmailOnlyElem)), contact_request_limit_exceeded.length > 0 ? $C("#_contactInviteMailContactRequestLimitExceeded").show() : $C("#_contactInviteMailContactRequestLimitExceeded").hide();
                    var your_email_addresses = void 0 != value.your_email_address ? [value.your_email_address] : [];
                    $C("#_contactInviteMailContactYourEmailAddress .contactInviteMailResultList").html(your_email_addresses.map(createEmailOnlyElem)), your_email_addresses.length > 0 ? $C("#_contactInviteMailContactYourEmailAddress").show() : $C("#_contactInviteMailContactYourEmailAddress").hide()
                }, InviteMailAccountView.prototype.applyModelMails = function() {
                    var $inputMails = $C(this.selectorOfBulkEmailForm);
                    if ("individual" === this.invite_mail_state_type) {
                        $inputMails = $(this.selectorOfIndividualEmailForms);
                        var mails = $.map($inputMails, function(n) {
                            return n.value
                        });
                        this.model.setEmails(mails)
                    } else this.model.parseBulkEmails($inputMails.val())
                }, InviteMailAccountView.prototype.applyModelMessage = function() {
                    var $message = $C(this.selectorOfMessageForm);
                    this.model.setMessage($message.val())
                }, InviteMailAccountView.prototype.callApiParams = function(emails, message) {
                    return {
                        cmd: "invite_contact",
                        e: emails,
                        m: message,
                        nm: boot_1.AC.getName(boot_1.AC.myid),
                        av: boot_1.CW.getAvatarPanel(boot_1.AC.myid, {
                            src: !0
                        })
                    }
                }, InviteMailAccountView.prototype.addMailAddress = function(value) {
                    var inputTag = '<input type="email" name="email" placeholder="' + language_1.Language.getLang("%%%contact_invite_mail_enter_your_email_address%%%") + '"/>',
                        html = '<li class="' + this.mailAddressInputForm + ' contactInviteMailList__item">\n                          <span class="_cwFWButton ' + this.mailAddressFormCancelButton + ' icoFontCancel icoSizeLarge contactInviteMailList__cancelButton"></span>\n                        </li>',
                        input = $(html).prepend($(inputTag).val(value));
                    $("#_contactInviteMailList").append(input)
                }, InviteMailAccountView.prototype.visibleInputMailFormCancelIcon = function() {
                    var $mails = $("." + this.mailAddressInputForm),
                        $cancel_button = $("." + this.mailAddressFormCancelButton);
                    if ($mails.length > 1) $cancel_button.show();
                    else {
                        "" !== $mails.find("[name=email]").val() ? $cancel_button.show() : $cancel_button.hide()
                    }
                }, InviteMailAccountView.prototype.showInviteMailNew = function() {
                    $C("#_contentInviteMailFinished").hide(), $C("#_contentInviteMailNew").show(), $C("#_contactOtherInviteMail").hide(), $C("#_contactInviteMail").show()
                }, InviteMailAccountView
            }();
        exports.InviteMailAccountView = InviteMailAccountView
    }, {
        "../controller/boot": 340,
        "../lib/language": 384,
        "../model/InviteMailAccountModel": 395
    }],
    460: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Clipboard = require("clipboard"),
            Room_1 = require("../../core/model/Room"),
            common_1 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            RoomDialogView = function() {
                function RoomDialogView(model) {
                    this.model = model, this.checked_flag = {}, this.contact_flag = {}, this.member_flag = {}, this.adding_member_list = {}, this.is_valid_link_name = !0, this.is_folded = !1, this.common_role = "", this.room_dat = null, this.link_code_checker = {
                        last_checked_link_name: "",
                        type_timer: null,
                        validate: function(input, target) {
                            var self = this,
                                link_name = input.val();
                            if (link_name != this.last_checked_link_name) {
                                this.last_checked_link_name = link_name, this.type_timer && (clearTimeout(this.type_timer), this.type_timer = null);
                                var btn_clip_copy = target.find(".js_invitationLinkBtnCopy"),
                                    btn_link_code_edited = target.find(".js_invitationLinkBtnEdited"),
                                    link_code_display_input = target.find(".js_invitationLinkDisplayInput"),
                                    loading_img = target.find(".js_invitationLinkCodeLoading"),
                                    alert_message = target.find(".js_invitationLinkCodeUsed");
                                if (btn_link_code_edited.removeClass("btnPrimary").addClass("btnDisable"), !link_name) return loading_img.hide(), alert_message.text(""), btn_clip_copy.attr("data-clipboard-text", ""), void(self.is_valid_link_name = !1);
                                if (link_name.length > 50) return loading_img.hide(), alert_message.text(language_1.Language.getLang("%%%error_maxlength%%%", {
                                    length: 50
                                })).css("color", "red"), void(self.is_valid_link_name = !1);
                                if (!link_name.match(/^[-_a-zA-Z0-9]+$/)) return loading_img.hide(), alert_message.text(language_1.Language.getLang("%%%error_invalidchar%%%")).css("color", "red"), void(self.is_valid_link_name = !1);
                                loading_img.show(), alert_message.text(""), this.type_timer = setTimeout(function() {
                                    loading_img.show(), boot_1.CW.get("gateway.php", {
                                        cmd: "check_chat_link_name",
                                        link_name: link_name,
                                        rid: boot_1.RM.id
                                    }, function(json) {
                                        if (loading_img.hide(), json.used) alert_message.text(language_1.Language.getLang("%%%error_already_used%%%")).css("color", "red"), self.is_valid_link_name = !1;
                                        else {
                                            alert_message.text(language_1.Language.getLang("%%%available%%%")).css("color", "green"), self.is_valid_link_name = !0;
                                            var link_code = CHATWORK_MYPAGE_PATH + "/g/" + input.val();
                                            btn_clip_copy.attr("data-clipboard-text", link_code), link_code_display_input.val(link_code), btn_link_code_edited.removeClass("btnDisable").addClass("btnPrimary")
                                        }
                                    }), this.type_timer = void 0
                                }, 1e3)
                            }
                        }
                    }, this.prepared_roominfo = !1, this.build_member_timer = null, this.addroom_dialog = null, this.descedit_dialog = null, this.infoedit_dialog = null, this.member_dialog = null, this.memberaddition_dialog = null
                }
                return RoomDialogView.prototype.openInvitationLinkSetting = function(room_id) {
                    var self = this;
                    self.room_invitation_link_setting_dialog || self.prepareInvitationLinkSetting(), self.room_invitation_link_setting_dialog.open(room_id)
                }, RoomDialogView.prototype.openRoomPermissionSetting = function(room_id) {
                    var self = this;
                    self.room_permission_setting_dialog || self.prepareRoomPermissionSetting(), self.room_permission_setting_dialog.open(room_id)
                }, RoomDialogView.prototype.prepare = function() {
                    this.prepareMember(), $("#_roomInfoHeaderDelete").click(function() {
                        $(this).prop("checked") ? $("#_roomInfoHeader").prop("disabled", !0) : $("#_roomInfoHeader").prop("disabled", !1)
                    })
                }, RoomDialogView.prototype.linkCodeEditor = function(target) {
                    var btn_clip_copy = target.find(".js_invitationLinkBtnCopy"),
                        btn_link_code_edited = target.find(".js_invitationLinkBtnEdited"),
                        link_code_display = target.find(".js_invitationLinkDisplay"),
                        link_code_display_input = target.find(".js_invitationLinkDisplayInput"),
                        link_code_editor = target.find(".js_invitationLinkEditor"),
                        link_code_editor_input = target.find(".js_invitationLinkEditorInput"),
                        loading_img = target.find(".js_invitationLinkCodeLoading"),
                        alert_message = target.find(".js_invitationLinkCodeUsed");
                    return {
                        open: function() {
                            var current_data = btn_clip_copy.attr("data-clipboard-text");
                            link_code_display.hide(), link_code_editor.show(), loading_img.hide(), alert_message.text(""), btn_clip_copy.attr("data-current", current_data)
                        },
                        cancel: function() {
                            var current_data = btn_clip_copy.attr("data-current"),
                                current_link_name = current_data.replace(/(^https.+\/g\/)(.+$)/, "$2");
                            btn_clip_copy.attr("data-clipboard-text", current_data).removeAttr("data-current"), link_code_display_input.val(current_data), link_code_editor_input.val(current_link_name), this.reset(target)
                        },
                        edit: function() {
                            btn_clip_copy.removeAttr("data-current"), this.reset(target)
                        },
                        reset: function() {
                            link_code_display.show(), link_code_editor.hide(), loading_img.hide(), alert_message.text(""), btn_clip_copy.text(language_1.Language.getLang("%%%invitation_link_code_copy%%%")), btn_link_code_edited.removeClass("btnDisable").addClass("btnPrimary")
                        }
                    }
                }, RoomDialogView.prototype.prepareMember = function() {
                    var self = this;
                    $("#_memberEditMemberBox").on("cwSelectBox_update", "._cwSL", function() {
                        var sl = $(this),
                            aid = sl.attr("data-aid"),
                            slbox = sl.cwSelectBox();
                        self.member_flag[aid] = slbox.getVal()
                    }), $("#_subEditMember").click(function() {
                        self.addRoomMember(boot_1.RM.id)
                    }), $("#_memberEditMemberAdd").click(function() {
                        self.member_dialog.close(), self.addRoomMember(boot_1.RM.id)
                    }), $("#_memberAdditionMemberEdit").click(function() {
                        self.memberaddition_dialog.close(), self.editRoomMember(boot_1.RM.id)
                    })
                }, RoomDialogView.prototype.joinGroupchat = function(link_code) {
                    boot_1.CW.get("gateway.php", {
                        cmd: "get_invitation_link_info",
                        link_code: link_code
                    }, function(result) {
                        if (result) return "already_joined" === result.link_status ? boot_1.RL.selectRoom(result.link_info.room_id) : void boot_1.RL.showJoinPublicChatDialog(result.link_info.room_id)
                    }, function(msg, result) {
                        var message;
                        if ("not_found" === result.link_status) message = language_1.Language.getLang("%%%join_groupchat_not_found%%%");
                        else if ("my_disable_external" === result.link_status) message = language_1.Language.getLang("%%%join_groupchat_my_disable_external%%%");
                        else {
                            if ("other_disable_external" !== result.link_status) return;
                            message = language_1.Language.getLang("%%%join_groupchat_other_disable_external%%%")
                        }
                        return boot_1.CW.alert(message)
                    })
                }, RoomDialogView.prototype.prepareRoomInfo = function() {
                    var self = this;
                    if (!self.prepared_roominfo) {
                        self.prepared_roominfo = !0;
                        var _memberEditMemberFilterInterval;
                        $("#_memberEditMemberFilter").cwSearchBox({
                            update: function() {
                                clearTimeout(_memberEditMemberFilterInterval), _memberEditMemberFilterInterval = setTimeout(function() {
                                    self.buildMember(["member"], $("#_memberEditMemberBox"))
                                }, 200)
                            }
                        }), $("#_memberEditMemberBox").on("click", "._memberDelete", function() {
                            var aid = $(this).attr("data-aid");
                            self.deleteMember(aid)
                        });
                        var _memberAdditionContactFilterInterval;
                        $("#_memberAdditionContactFilter").cwSearchBox({
                            update: function() {
                                clearTimeout(_memberAdditionContactFilterInterval), _memberAdditionContactFilterInterval = setTimeout(function() {
                                    self.buildMember(["contact"], $("#_memberAdditionMemberBox"))
                                }, 200)
                            }
                        }), $("#_memberAdditionOrganizationFilter").on("change", "input", function() {
                            self.buildMember(["contact"], $("#_memberAdditionMemberBox"))
                        }), $("#_memberAdditionSelectRole").on("cwSelectBox_update", "._cwSL", function() {
                            self.common_role = $(this).cwSelectBox().getVal(), self.changeCommonRole($("#_memberAdditionContactTableBox"))
                        });
                        var _roomInfoContactFilterInterval;
                        $("#_roomInfoContactFilter").cwSearchBox({
                            update: function() {
                                clearTimeout(_roomInfoContactFilterInterval), _roomInfoContactFilterInterval = setTimeout(function() {
                                    self.buildMember(["contact"], $("#_roomInfoMemberBox"))
                                }, 200)
                            }
                        }), $("#_roomInfoOrganizationFilter").on("change", "input", function() {
                            self.buildMember(["contact"], $("#_roomInfoMemberBox"))
                        }), $("#_roomInfoSelectRole").on("cwSelectBox_update", "._cwSL", function() {
                            self.common_role = $(this).cwSelectBox().getVal(), self.changeCommonRole($("#_roomInfoContactTableBox"))
                        })
                    }
                }, RoomDialogView.prototype.prepareInvitationLinkSetting = function() {
                    function changeVisibility(state) {
                        var advanced_setting_mask = $(".invitationLinkSettingAdvance__maskLayer");
                        if (link_code_editor.reset(), state) {
                            if ($("#_invitationLinkActive").show(), $("#_invitationLinkDisabled").hide(), $("#_invitationLinkSettingStatus").cwCheckBox().check(), $("#_public").val("1"), !advanced_setting_mask) return;
                            $("#_invitationLinkAdvancedSetting").removeClass("invitationLinkSettingAdvance--disabled"), advanced_setting_mask.remove()
                        } else $("#_invitationLinkActive").hide(), $("#_invitationLinkDisabled").show(), $("#_invitationLinkSettingStatus").cwCheckBox().unCheck(), $("#_invitationLinkAdvancedSetting").append('<div class="invitationLinkSettingAdvance__maskLayer"></div>').addClass("invitationLinkSettingAdvance--disabled"), $("#_public").val("0");
                        self.room_invitation_link_setting_dialog.open()
                    }
                    var self = this;
                    self.room_invitation_link_setting_dialog = $("#_invitationLinkSettingDialog").cwDialog({
                        title: language_1.Language.getLang("%%%invitation_link_setting_title%%%"),
                        width: 750,
                        autoOpen: !1,
                        resizable: !1,
                        modal: !0,
                        hide: "fade",
                        buttonLabels: [language_1.Language.getLang("%%%button_save%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(idx) {
                            if (!idx) {
                                var room_id = this.data.room_id,
                                    error_list = [];
                                if (self.is_valid_link_name || error_list.push(language_1.Language.getLang("%%%invitation_link_setting_error_invalid_link_name%%%")), error_list.length) boot_1.CW.alert(error_list.join("\n"));
                                else {
                                    boot_1.CW.showProgress(language_1.Language.getLang("%%%saving%%%"));
                                    var form = new FormData($("#_invitationLinkSettingForm").get(0));
                                    form.append("__cwform_rid", room_id), boot_1.CW.fileUpload("update_invitation_link_setting", form), this.close()
                                }
                            }
                        },
                        open: function(room_id) {
                            if (room_id) {
                                this.data.room_id = room_id;
                                var room_dat = boot_1.RL.rooms[room_id];
                                self.is_valid_link_name = !0, changeVisibility(room_dat.public), room_dat.join_need_accept ? $("#_invitationLinkJoinNeedAccept").cwCheckBox().check() : $("#_invitationLinkJoinNeedAccept").cwCheckBox().unCheck(), $("#_publicDescription").val(room_dat.public_description), $("#_invitationLinkSettingHeaderDelete").cwCheckBox().unCheck(), $("#_invitationLinkSettingHeader").prop("disabled", !1), $("#_invitationLinkEditor").hide();
                                var link_name, chatwork_path_code = CHATWORK_MYPAGE_PATH + "/g/";
                                link_name = room_dat.link_name ? room_dat.link_name : room_dat.id;
                                var link_code = chatwork_path_code + link_name,
                                    link_code_controller = $("#_invitationLinkActive"),
                                    btn_copy_link_url = link_code_controller.find(".js_invitationLinkBtnCopy"),
                                    chatwork_path = link_code_controller.find(".js_invitationLinkURL"),
                                    display_input = link_code_controller.find(".js_invitationLinkDisplayInput"),
                                    editor_input = link_code_controller.find(".js_invitationLinkEditorInput");
                                chatwork_path.text(chatwork_path_code), display_input.val(link_code), editor_input.val(link_name), btn_copy_link_url.attr("data-clipboard-text", link_code).text(language_1.Language.getLang("%%%invitation_link_code_copy%%%"));
                                new Clipboard(".js_invitationLinkBtnCopy").on("success", function() {
                                    btn_copy_link_url.text(language_1.Language.getLang("%%%text_copied%%%"))
                                }), room_dat.header ? ($("#_invitationLinkSettingHeaderCurrent").html('<img src="' + CF_PATH + "/header/" + room_dat.header + '" width="30" height="30" style="border:1px solid #999"/>'), $("#_invitationLinkSettingHeaderDeleteBox").show()) : ($("#_invitationLinkSettingHeaderCurrent").empty(), $("#_invitationLinkSettingHeaderDeleteBox").hide()), $("#_invitationLinkSettingHeader").val("")
                            }
                        }
                    });
                    var link_code_editor = self.linkCodeEditor($("#_invitationLinkActive"));
                    link_code_editor.reset(), $("#_invitationLinkSettingStatus").cwCheckBox({
                        update: function() {
                            changeVisibility(!!this.isChecked()), self.room_invitation_link_setting_dialog.open()
                        }
                    }), $("#_invitationLinkActive").on("click", ".js_invitationLinkOpenEditor", function() {
                        link_code_editor.open(), self.room_invitation_link_setting_dialog.open()
                    }).on("click", ".js_invitationLinkCloseEditor", function() {
                        link_code_editor.cancel(), self.room_invitation_link_setting_dialog.open()
                    }).on("click", ".js_invitationLinkBtnEdited", function() {
                        self.is_valid_link_name && (link_code_editor.edit(), self.room_invitation_link_setting_dialog.open())
                    }).on("keyup blur", ".js_invitationLinkEditorInput", function() {
                        var input = $(this);
                        self.link_code_checker.validate(input, $("#_invitationLinkActive"))
                    })
                }, RoomDialogView.prototype.prepareRoomPermissionSetting = function() {
                    var self = this;
                    self.room_permission_setting_dialog = $("#_roomPermissionsettingDialog").cwDialog({
                        title: language_1.Language.getLang("%%%room_permission_setting_title%%%"),
                        width: 750,
                        autoOpen: !1,
                        resizable: !1,
                        modal: !0,
                        hide: "fade",
                        buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(idx) {
                            var _this = this;
                            if (!idx) {
                                boot_1.CW.showProgress(language_1.Language.getLang("%%%saving%%%"));
                                var form = $("#_roomPermissionsettingForm").serializeArray().reduce(function(base, cur) {
                                    return base[cur.name] = cur.value, base
                                }, {});
                                boot_1.CW.post("gateway.php", Object.assign(form, {
                                    cmd: "update_room_priv_setting",
                                    rid: this.data.room_id
                                }), function() {
                                    boot_1.CW.hideProgress(), boot_1.CW.watch(), _this.close()
                                })
                            }
                        },
                        open: function(room_id) {
                            this.data.room_id = room_id;
                            var checkbox_dat = {
                                    _allowSeeMember: "allow_see_member",
                                    _allowUploadFile: "allow_upload_file",
                                    _allowAddTask: "allow_add_task",
                                    _allowSendMessage: "allow_send_message"
                                },
                                room_dat = boot_1.RL.rooms[room_id];
                            self.is_valid_link_name = !0;
                            for (var id in checkbox_dat) {
                                room_dat[checkbox_dat[id]] ? $("#" + id).cwCheckBox().check() : $("#" + id).cwCheckBox().unCheck()
                            }
                        }
                    })
                }, RoomDialogView.prototype.checkSameMember = function(member_dat) {
                    var self = this;
                    $("#_roomInfoContact").find("._selectableContactRow").each(function() {
                        var cb_elem = $(this).find("._cwCB"),
                            cb = cb_elem.cwCheckBox(),
                            sl = $(this).find("._cwSL").cwSelectBox(),
                            aid = cb_elem.find("input").val();
                        member_dat[aid] && (cb.check(), sl.select(member_dat[aid]))
                    });
                    for (var aid in member_dat) aid !== MYID && boot_1.AC.isContact(aid) && (self.adding_member_list[aid] = member_dat[aid], self.checked_flag[aid] = !0)
                }, RoomDialogView.prototype.deleteMember = function(aid) {
                    var self = this;
                    $("#_memberRowAid" + aid).remove(), self.contact_flag[aid] = !0, delete self.checked_flag[aid], delete self.member_flag[aid], self.build_member_timer || (self.build_member_timer = setTimeout(function() {
                        self.buildMember(["member", "contact"], $("#_memberEditMemberBox")), self.build_member_timer = null
                    }, 100))
                }, RoomDialogView.prototype.updateCheckBoxAll = function(target_element) {
                    var contact_table = target_element.find(".memberTable"),
                        cb_all = target_element.find(".memberTableCheckAll ._cwCB").cwCheckBox(),
                        contacts_num = contact_table.find("tr").length,
                        checked_contacts = contact_table.find("._cwCBChecked").length;
                    checked_contacts ? checked_contacts === contacts_num ? cb_all.check() : checked_contacts < contacts_num && cb_all.partialCheck() : cb_all.unCheck()
                }, RoomDialogView.prototype.getCommonRole = function(target_element) {
                    return target_element.find(".memberTableSelectRole ._cwSL").cwSelectBox().getVal()
                }, RoomDialogView.prototype.changeCommonRole = function(target_element) {
                    var self = this;
                    target_element.find("._memberTableContact").find("._cwSL").each(function() {
                        var sl = $(this),
                            aid = sl.attr("data-aid"),
                            sl_box = sl.cwSelectBox(),
                            common_role = self.getCommonRole(target_element);
                        if ("default" === common_role) return void(self.common_role = "member");
                        self.adding_member_list[aid] && (self.adding_member_list[aid] = common_role), sl_box.select(common_role, {
                            silent: !0
                        })
                    })
                }, RoomDialogView.prototype.updateContactCheckBox = function(cb_element, target_element) {
                    var self = this,
                        selected_id = cb_element.getVal();
                    self.checked_flag[selected_id] = !self.checked_flag[selected_id];
                    var sl = target_element.find(".roleSelect [data-aid=" + selected_id + "]"),
                        role = sl.cwSelectBox().getVal();
                    self.checked_flag[selected_id] ? ($(sl).removeClass("isHide"), self.adding_member_list[selected_id] = role) : ($(sl).addClass("isHide"), delete self.adding_member_list[selected_id])
                }, RoomDialogView.prototype.checkAllContact = function(cb_element, is_partial, target_element) {
                    var self = this,
                        contact_list_allcheck = cb_element;
                    is_partial || (contact_list_allcheck.isChecked() ? target_element.find("._cwCBUnchecked").each(function() {
                        var role_element = $(this).parents("._selectableContactRow").find("._cwSL"),
                            role = role_element.cwSelectBox();
                        $(this).cwCheckBox().check(), role.select(self.common_role)
                    }) : target_element.find("._cwCBChecked").each(function() {
                        $(this).cwCheckBox().unCheck()
                    }))
                }, RoomDialogView.prototype.buildMember = function(type_list, target_element) {
                    var self = this,
                        group_filter = !1;
                    "organized" === target_element.find('.organizationFilter input[type="radio"]:checked').val() && (group_filter = !0);
                    var group_id = boot_1.AC.getGroupId(boot_1.AC.myid),
                        role_list = {
                            admin: {
                                name: language_1.Language.getLang("%%%admin%%%"),
                                tooltip: language_1.Language.getLang("%%%chatroom_member_role_admin_desc%%%")
                            },
                            member: {
                                name: language_1.Language.getLang("%%%member%%%"),
                                tooltip: language_1.Language.getLang("%%%chatroom_member_role_member_desc%%%")
                            },
                            readonly: {
                                name: language_1.Language.getLang("%%%readonly%%%"),
                                tooltip: language_1.Language.getLang("%%%chatroom_member_role_readonly_desc%%%")
                            }
                        },
                        member_num = 0,
                        contact_num = 0,
                        type_flag = {
                            member: self.member_flag,
                            contact: self.contact_flag
                        },
                        filter_word_list = [],
                        filter_input = target_element.find("._searchBox").cwSearchBox().getVal();
                    filter_input && (filter_word_list = boot_1.CW.splitWithSpace(filter_input), filter_word_list = filter_word_list.map(function(word) {
                        return word.toLowerCase()
                    }));
                    for (var i = 0; i < type_list.length; i++) {
                        var type = type_list[i],
                            idx_list = [];
                        if (Object.keys) idx_list = Object.keys(type_flag[type]);
                        else
                            for (var aid in type_flag[type]) idx_list.push(aid);
                        Room_1.Room.prototype.sortMember(idx_list);
                        var list_table = target_element.find("._memberTable" + common_1.ucfirst(type));
                        list_table.quickEmpty();
                        var rows = "",
                            total_user_num = idx_list.length;
                        200 < total_user_num && $("#_roomInfoShowLimitNum" + common_1.ucfirst(type)).text(language_1.Language.getLang("%%%chatroom_show_limit_member_num%%%", {
                            num: 200
                        }));
                        for (var idx = 0; idx < total_user_num; idx++) {
                            var id = idx_list[idx];
                            if ("member" == type) {
                                if (filter_word_list.length > 0 && !boot_1.AC.isMatchedWithKeyList(filter_word_list, id)) continue;
                                if (++member_num > 200) break;
                                rows += '<tr id="_memberRowAid' + id + '" class="selectableRow"><td>' + boot_1.CW.getAvatarPanel(id, {
                                        size: "small",
                                        hovertip: !1,
                                        clicktip: !1
                                    }) + '</td><td><p class="roomInfoContactListName autotrim">' + boot_1.CW.getName(id) + '</p><p class="roomInfoContactListOrgName autotrim">' + boot_1.CW.getOrgTitle(id) + "</p></td><td>", rows += $.cwSelectBox.create([{
                                    label: role_list.admin.name,
                                    value: "admin",
                                    tooltip: role_list.admin.tooltip
                                }, {
                                    label: role_list.member.name,
                                    value: "member",
                                    tooltip: role_list.member.tooltip
                                }, {
                                    label: role_list.readonly.name,
                                    value: "readonly",
                                    tooltip: role_list.readonly.tooltip
                                }], "", self.member_flag[id], {
                                    class: "_memberEditRole",
                                    "data-aid": id
                                }), rows += '</td><td class="_memberDelete" data-aid="' + id + '"><span class="icoFontCancel verticalMiddle"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_delete%%%") + "</span></td></tr>"
                            } else {
                                if (group_filter && boot_1.AC.getGroupId(id) !== group_id) continue;
                                if (filter_word_list.length > 0 && !boot_1.AC.isMatchedWithKeyList(filter_word_list, id)) continue;
                                if (++contact_num > 200) break;
                                var sl_class, checked = Boolean(self.checked_flag[id]);
                                sl_class = checked ? "_memberTableIndividualRole" : "_memberTableIndividualRole isHide";
                                var role = self.common_role;
                                self.adding_member_list[id] && (role = self.adding_member_list[id]), rows += '<tr class="_cwTextUnselectable _selectableContactRow selectableRow"><td>' + $.cwCheckBox.create(checked, !1, id) + "</td>", rows += "<td>" + boot_1.CW.getAvatarPanel(id, {
                                        size: "small",
                                        hovertip: !1,
                                        clicktip: !1
                                    }) + "</td>", rows += '<td><p class="roomInfoContactListName autotrim">' + boot_1.CW.getName(id) + '</p><p class="roomInfoContactListOrgName autotrim">' + boot_1.CW.getOrgTitle(id) + '</p></td><td class="roleSelect" data-aid="' + id + '">', rows += $.cwSelectBox.create([{
                                    label: role_list.admin.name,
                                    value: "admin",
                                    tooltip: role_list.admin.tooltip
                                }, {
                                    label: role_list.member.name,
                                    value: "member",
                                    tooltip: role_list.member.tooltip
                                }, {
                                    label: role_list.readonly.name,
                                    value: "readonly",
                                    tooltip: role_list.readonly.tooltip
                                }], "", role, {
                                    class: sl_class,
                                    "data-aid": id
                                }), rows += "</td></tr>"
                            }
                        }
                    /\sMSIE\s*([89]|10)\./i.test(navigator.userAgent) ? list_table.html(rows) : list_table.get(0).innerHTML = rows, "contact" === type && self.updateCheckBoxAll(target_element)
                    }
                    $("._selectableContactRow").on("click", function() {
                        var target_element = $(this).parents("._contactTableBox"),
                            target_element_id = "#" + target_element.attr("id"),
                            check_box = $(this).find("._cwCB").cwCheckBox(),
                            role_sl = $(this).find("._cwSL");
                        role_sl.hasClass("isActive") || ("default" !== self.getCommonRole($(target_element_id)) && role_sl.cwSelectBox().select(self.common_role), check_box.toggle())
                    }).on("click", "._cwCB", function() {
                        $(this).cwCheckBox().toggle()
                    }), $(".roleSelect").each(function() {
                        var sl = $(this).find("._cwSL");
                        $(this).find("._cwSLBox, ._cwSLList").on({
                            mouseenter: function() {
                                $(sl).addClass("isActive")
                            },
                            mouseleave: function() {
                                $(sl).removeClass("isActive")
                            }
                        })
                    }).on("cwSelectBox_update", "._cwSL", function() {
                        var sl = $(this),
                            aid = sl.attr("data-aid"),
                            sl_box = sl.cwSelectBox(),
                            role = sl_box.getVal();
                        self.adding_member_list[aid] = role
                    });
                    var cb_roominfo = $("#_roomInfoContact ._cwCB");
                    cb_roominfo.length && cb_roominfo.cwCheckBox({
                        update: function() {
                            self.updateContactCheckBox(this, $("#_roomInfoContact")), self.updateCheckBoxAll($("#_roomInfoMemberBox"))
                        }
                    });
                    var cb_memberaddition = $("#_memberAdditionContact ._cwCB");
                    cb_memberaddition.length && cb_memberaddition.cwCheckBox({
                        update: function() {
                            self.updateContactCheckBox(this, $("#_memberAdditionContact")), self.updateCheckBoxAll($("#_memberAdditionMemberBox"))
                        }
                    }), $("#_roomInfoSelectAllContact").cwCheckBox({
                        update: function(is_checked, value, is_partial) {
                            self.checkAllContact(this, is_partial, $("#_roomInfoContact"))
                        }
                    }), $("#_roominfoSelectAllBtn").cwButton({
                        click: function() {
                            $("#_roomInfoSelectAllContact").cwCheckBox().toggle()
                        }
                    }), $("#_memberAdditionSelectAllContact").cwCheckBox({
                        update: function(is_checked, value, is_partial) {
                            self.checkAllContact(this, is_partial, $("#_memberAdditionContact"))
                        }
                    }), $("#_memberAdditionSelectAllBtn").cwButton({
                        click: function() {
                            $("#_memberAdditionSelectAllContact").cwCheckBox().toggle()
                        }
                    })
                }, RoomDialogView.prototype.buildChatInfo = function() {
                    var self = this;
                    $("#_roomInfoName").val(self.room_dat.name), $("#_roomInfoIcon").val(""), $("#_roomInfoIconSelectedValue").val(""), self.room_dat.icon_preset ? ($("#_roomInfoIconTypePreset").click(), $("#_roomInfoIconPreset").find("[data-pt=" + self.room_dat.icon + "]").click()) : ($("#_roomInfoIconTypeGroup").click(), $("#_roomInfoIconTypeUpload").click(), $("#_roomInfoIconSelected").prop("src", boot_1.RL.rooms[self.room_dat.id].getIcon("src"))), $("#_roomInfoIconSelected").show(), $("#_roomInfoIconFileUpload").hide(), $("#_roomInfoDescription").show().val(boot_1.CS.convertToEdit(self.room_dat.description)).blur(), $("#_roomInfoHeader").val("")
                }, RoomDialogView.prototype.prepareRoomDat = function(room_id) {
                    var self = this;
                    if (self.prepareRoomInfo(), self.checked_flag = {}, self.contact_flag = {}, self.member_flag = {}, self.adding_member_list = {}, self.room_dat = {
                            id: 0,
                            icon: "group",
                            icon_preset: !0,
                            description: "",
                            member_dat: {},
                            public: 0,
                            link_name: "",
                            join_need_accept: 0,
                            public_description: "",
                            header: "",
                            allow_see_member: 1,
                            allow_upload_file: 1,
                            allow_add_task: 1,
                            allow_send_message: 1
                        }, room_id) {
                        var room = boot_1.RL.rooms[room_id];
                        if (!room) return !1;
                        for (var key in self.room_dat) self.room_dat[key] = room[key];
                        self.room_dat.name = room.getName()
                    } else self.room_dat.member_dat[boot_1.AC.myid] = "admin";
                    var member_dat = self.room_dat.member_dat;
                    for (var aid in member_dat) self.member_flag[aid] = member_dat[aid];
                    for (var idx in boot_1.AC.contact_list) {
                        var aid = boot_1.AC.contact_list[idx];
                        void 0 == self.member_flag[aid] && (self.contact_flag[aid] = !0, self.checked_flag[aid] = !1)
                    }
                    self.common_role = "member"
                }, RoomDialogView.prototype.prepareRoomIconTooltip = function() {
                    var self = this;
                    self.room_icon_tip || (self.room_icon_tip = $("#_roomIconSelector").cwToolTip({
                        direction: "bottom"
                    }), $("#_roomIconSelectorBtn").click(function() {
                        self.room_icon_tip.open($(this))
                    }), self.room_icon_tip.$el.on("click", "._iconType", function() {
                        switch ($(this).val()) {
                            case "preset":
                                $("#_roomInfoIconDefault").show(), $("#_roomInfoIconUpload").hide();
                                break;
                            case "upload":
                                $("#_roomInfoIconUpload").show(), $("#_roomInfoIconDefault").hide()
                        }
                    }), $("#_roomInfoIconPreset").on("click", "li", function() {
                        $("#_roomInfoIconSelected").show(), $("#_roomInfoIconFileUpload").hide(), $("#_roomInfoIconPreset").find("li.roomInfoIconActive").removeClass("roomInfoIconActive");
                        var li = $(this),
                            img = li.find("img");
                        li.addClass("roomInfoIconActive"), $("#_roomInfoIconSelected").prop("src", img.prop("src")), $("#_roomInfoIconSelectedValue").val(img.attr("data-pt")), self.room_icon_tip.close()
                    }), $("#_roomInfoIcon").on("change", function() {
                        self.room_icon_tip.close(), $("#_roomInfoIconSelected").hide(), $("#_roomInfoIconFileUpload").show();
                        var upload_fullpath = this.value;
                        $("#_roomInfoIconFileUpload").find("p").text(upload_fullpath.split("\\").pop())
                    }))
                }, RoomDialogView.prototype.openAddRoomDialog = function() {
                    function getLinkName(callback) {
                        function checkLink(retry, callback) {
                            var link_name = getRand(linkNameLength);
                            if (!retry--) return void callback(link_name);
                            boot_1.CW.get("gateway.php", {
                                cmd: "check_chat_link_name",
                                link_name: link_name,
                                rid: boot_1.RM.id
                            }, function(json) {
                                json.used ? checkLink(retry, callback) : callback(link_name)
                            })
                        }

                        function getRand(num) {
                            for (var result = "", base = linkNameString, i = 0; i < num; i++) result += base.charAt(Math.random() * base.length | 0);
                            return result
                        }
                        var linkNameLength = 14,
                            linkNameString = "abcdefghijklmnopqrstuvwxyz0123456789";
                        checkLink(3, callback)
                    }

                    function changeVisibility(state) {
                        add_room_link_editor.reset(), state ? ($("#_addRoomInvitationLinkActive").show(), $("#_addRoomInvitationLinkDisabled").hide(), $("#_addRoomInvitationLinkSettingStatus").cwCheckBox().check(), $("#_roomInfoPublic").val("1")) : ($("#_addRoomInvitationLinkActive").hide(), $("#_addRoomInvitationLinkDisabled").show(), $("#_addRoomInvitationLinkSettingStatus").cwCheckBox().unCheck(), $("#_roomInfoPublic").val("0")), self.addroom_dialog.open("resize")
                    }
                    var self = this;
                    self.addroom_dialog || (self.prepareRoomIconTooltip(), self.addroom_dialog = $("#_addRoom").cwDialog({
                        parentFloatBox: self.room_icon_tip.$el,
                        title: language_1.Language.getLang("%%%chatroom_create_title%%%"),
                        width: 750,
                        buttonLabels: [language_1.Language.getLang("%%%button_create%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        open: function(resize_flag) {
                            resize_flag || (self.buildChatInfo(), $("#_roomInfoContactFilter").cwSearchBox().$el.val(""), $("[name=__roominfo_org_filter]").eq(0).prop("checked", !0), self.buildMember(["contact"], $("#_roomInfoMemberBox")), $("#_addRoomChatInfoArea").append($("#_roomInfoChatInfoBox").show()), $("#_addRoomMemberArea").append($("#_roomInfoMemberBox").show()), $("#_roomInfoSelectAllContact").cwCheckBox().unCheck(), $("#_roomInfoSelectRole").html($.cwSelectBox.create([{
                                label: language_1.Language.getLang("%%%common_role_select_list_default%%%"),
                                value: "default"
                            }, {
                                label: language_1.Language.getLang("%%%admin%%%"),
                                value: "admin",
                                tooltip: language_1.Language.getLang("%%%chatroom_member_role_admin_desc%%%")
                            }, {
                                label: language_1.Language.getLang("%%%member%%%"),
                                value: "member",
                                tooltip: language_1.Language.getLang("%%%chatroom_member_role_member_desc%%%")
                            }, {
                                label: language_1.Language.getLang("%%%readonly%%%"),
                                value: "readonly",
                                tooltip: language_1.Language.getLang("%%%chatroom_member_role_readonly_desc%%%")
                            }], "", "default", {
                                class: "_showDescription",
                                "aria-label": language_1.Language.getLang("%%%common_role_select_list_default_tooltip%%%")
                            })), boot_1.CW.is_business || $("#_roomInfoOrganizationFilter").hide(), $("#_addRoomInvitationLinkEditor").hide(), $("#_addRoomInvitationLinkSettingStatus").cwCheckBox().check(), $("#_addRoomInvitationLinkJoinNeedAccept").cwCheckBox().check(), getLinkName(function(link_name) {
                                var link_code_controller = $("#_addRoomInvitationLinkActive"),
                                    btn_copy_link_code = link_code_controller.find(".js_invitationLinkBtnCopy"),
                                    display_input = link_code_controller.find(".js_invitationLinkDisplayInput"),
                                    editor_input = link_code_controller.find(".js_invitationLinkEditorInput"),
                                    chatwork_path = link_code_controller.find(".js_invitationLinkURL"),
                                    chatwork_path_code = CHATWORK_MYPAGE_PATH + "/g/",
                                    link_code = chatwork_path_code + link_name;
                                display_input.val(link_code), editor_input.val(link_name), chatwork_path.text(chatwork_path_code), btn_copy_link_code.attr("data-clipboard-text", link_code).text(language_1.Language.getLang("%%%invitation_link_code_copy%%%")), new Clipboard(".js_invitationLinkBtnCopy").on("success", function() {
                                    btn_copy_link_code.text(language_1.Language.getLang("%%%text_copied%%%"))
                                })
                            }))
                        },
                        postOpen: function() {
                            $("#_addRoom").scrollTop(0), $("#_roomInfoName").focus()
                        },
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(idx) {
                            switch (idx) {
                                case 0:
                                    var room_name = $("#_roomInfoName").val();
                                    if (!room_name) {
                                        for (var aid in self.member_flag)
                                            if (room_name && (room_name += ","), room_name += boot_1.AC.getName(aid), room_name.length > 100) {
                                                room_name += "...";
                                                break
                                            }
                                        $("#_roomInfoName").val(room_name)
                                    }
                                    Object.assign(self.member_flag, self.adding_member_list);
                                    var error = self.validateRoomInfo({
                                        member_dat: self.member_flag
                                    });
                                    if (self.member_flag[boot_1.AC.myid] || error.push(language_1.Language.getLang("%%%chatroom_error_noself%%%")), error.length) return boot_1.CW.alert(error.join("\n")), !1;
                                    var join_need_accept = $("#_addRoomInvitationLinkJoinNeedAccept").cwCheckBox().isChecked() ? "1" : "0";
                                    $('input[name="__cwform_join_need_accept"]').val(join_need_accept);
                                    var form_1 = new FormData($("#_roomInfoForm").get(0));
                                    form_1.append("__cwform_add_room_version", "2"), form_1.append("__cwform_role[" + boot_1.AC.myid + "]", "admin"), Object.keys(self.adding_member_list).filter(function(key) {
                                        return key
                                    }).forEach(function(key) {
                                        return form_1.append("__cwform_role[" + key + "]", self.adding_member_list[key])
                                    }), boot_1.CW.fileUpload("add_room", form_1).then(function(json) {
                                        if (void 0 != json.message && boot_1.CW.alert(json.message), void 0 == json.add) {
                                            var room = boot_1.RL.rooms[json.id];
                                            void 0 != json.name && room.setName(json.name), void 0 != json.description && (room.description = json.description), void 0 != json.member_dat && (room.member_dat = json.member_dat), room.build()
                                        } else void 0 != json.error ? boot_1.CW.view.showRoomLimitErrorDialog(json.error) : boot_1.RL.added_room_ids.push(json.room_id);
                                        boot_1.CW.watch()
                                    }), boot_1.CW.showProgress(language_1.Language.getLang("%%%adding%%%")), self.addroom_dialog.close()
                            }
                        }
                    }));
                    var add_room_link_editor = self.linkCodeEditor($("#_addRoomInvitationLinkActive"));
                    if (add_room_link_editor.reset(), self.prepareRoomDat(), boot_1.CW.group_limit_num) {
                        var room_num = 0;
                        for (var room_id in boot_1.RL.rooms) "group" === boot_1.RL.rooms[room_id].type && room_num++;
                        if (room_num >= boot_1.CW.group_limit_num) return void boot_1.CW.view.showRoomLimitErrorDialog({
                            plan_name: PLAN_NAME,
                            limit_num: boot_1.CW.group_limit_num
                        })
                    }
                    $("#_addRoomInvitationLinkSettingStatus").cwCheckBox({
                        update: function() {
                            changeVisibility(!!this.isChecked())
                        }
                    }), $("#_addRoomInvitationLinkActive").on("click", ".js_invitationLinkOpenEditor", function() {
                        add_room_link_editor.open(), self.addroom_dialog.open("resize")
                    }).on("click", ".js_invitationLinkCloseEditor", function() {
                        add_room_link_editor.cancel(), self.addroom_dialog.open("resize")
                    }).on("click", ".js_invitationLinkBtnEdited", function() {
                        self.is_valid_link_name && (add_room_link_editor.edit(), self.addroom_dialog.open("resize"))
                    }).on("keyup blur", ".js_invitationLinkEditorInput", function() {
                        var input = $(this);
                        self.link_code_checker.validate(input, $("#_addRoomInvitationLinkActive"))
                    }), self.addroom_dialog.open()
                }, RoomDialogView.prototype.editRoomDescription = function(room_id) {
                    var self = this;
                    self.prepareRoomDat(room_id), self.descedit_dialog || (self.descedit_dialog = $("#_roomDescEditDialog").cwDialog({
                        title: language_1.Language.getLang("%%%chatroom_edit_desc_title%%%"),
                        width: 500,
                        height: "auto",
                        buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(index) {
                            var dialog = this;
                            switch (index) {
                                case 0:
                                    var params = {};
                                    params.desc = $("#_roomDescEditContent").val();
                                    var error = self.validateRoomInfo(params);
                                    if (error.length > 0) return boot_1.CW.alert(error.join("\n")), !1;
                                    boot_1.CW.post("gateway.php", {
                                        cmd: "update_room",
                                        room_id: dialog.data.room_id,
                                        description: params.desc
                                    }, function() {
                                        boot_1.RL.rooms[dialog.data.room_id].description = params.desc, boot_1.CW.watch()
                                    }), dialog.close()
                            }
                        },
                        open: function(room_id) {
                            this.data.room_id = room_id, $("#_roomDescEditContent").val(boot_1.CS.convertToEdit(boot_1.RL.rooms[this.data.room_id].description)).focus()
                        },
                        postOpen: function() {
                            $("#_roomDescEditContent").focus()
                        }
                    })), self.descedit_dialog.open(room_id)
                }, RoomDialogView.prototype.editRoomInfo = function(room_id) {
                    var self = this;
                    self.infoedit_dialog || (self.prepareRoomIconTooltip(), self.infoedit_dialog = $("#_roomInfoEditDialog").cwDialog({
                        parentFloatBox: self.room_icon_tip.$el,
                        title: language_1.Language.getLang("%%%chatroom_info_edit%%%"),
                        width: 750,
                        height: "auto",
                        buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(index) {
                            switch (index) {
                                case 0:
                                    var params = {};
                                    params.name = $("#_roomInfoName").val().trim(), params.desc = $("#_roomInfoDescription").val(), $("#_roomInfoIconTypePreset")[0].checked ? (params.icon_type = "preset", params.preset = $("#_roomInfoIconSelectedValue").val()) : (params.icon_type = "upload", params.icon = $("#_roomInfoIcon").val());
                                    var error = self.validateRoomInfo(params);
                                    if (error.length > 0) return boot_1.CW.alert(error.join("\n")), !1;
                                    $("#_roomInfoIcon").val() && boot_1.CW.showProgress(language_1.Language.getLang("%%%saving%%%"));
                                    var form = new FormData($("#_roomInfoEditForm").get(0));
                                    form.append("__cwform_room_id", self.room_dat.id), boot_1.CW.fileUpload("update_room", form), this.close()
                            }
                        },
                        open: function(room_id) {
                            this.data.room_id = room_id, self.prepareRoomDat(this.data.room_id), self.buildChatInfo(), $("#_roomInfoEditContent").append($("#_roomInfoChatInfoBox").show())
                        },
                        postOpen: function() {
                            $("#_roomInfoName").focus()
                        }
                    })), self.infoedit_dialog.open(room_id)
                }, RoomDialogView.prototype.editRoomMember = function(room_id) {
                    var self = this;
                    self.member_dialog || (self.member_dialog = $("#_roomMemberEditDialog").cwDialog({
                        title: language_1.Language.getLang("%%%member_edit_dialog_title%%%"),
                        width: 750,
                        height: "auto",
                        buttonLabels: [language_1.Language.getLang("%%%button_save%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(index) {
                            switch (index) {
                                case 0:
                                    var params = {};
                                    params.member_dat = self.member_flag;
                                    var error = self.validateRoomInfo(params);
                                    if (error.length > 0) return boot_1.CW.alert(error.join("\n")), !1;
                                    var room_id = this.data.room_id;
                                    boot_1.CW.post("gateway.php", {
                                        cmd: "update_room",
                                        room_id: room_id,
                                        role: self.member_flag
                                    }, function(res) {
                                        if (res.message) return void boot_1.CW.alert(res.message);
                                        boot_1.RL.rooms[room_id].member_dat = self.member_flag, boot_1.CW.watch()
                                    }), this.close()
                            }
                        },
                        open: function(room_id) {
                            this.data.room_id = room_id, $("#_roomMemberEditDialog").append($("#_memberEditMemberBox").show()), $("#_memberEditMemberTableBox").scrollTop(0), $("#_memberEditMemberFilter").cwSearchBox().$el.val(""), self.prepareRoomDat(room_id), self.buildMember(["member"], $("#_memberEditMemberBox"))
                        }
                    })), self.member_dialog.open(room_id)
                }, RoomDialogView.prototype.addRoomMember = function(room_id) {
                    function changeVisibility(state) {
                        member_addition_link_editor.reset(), state ? ($("#_memberAdditionInvitationLinkActive").show(), $("#_memberAdditionInvitationLinkDisabled").hide(), $("#_memberAdditionInvitationLinkSettingStatus").cwCheckBox().check(), $("#_memberAdditionPublic").val("1")) : ($("#_memberAdditionInvitationLinkActive").hide(), $("#_memberAdditionInvitationLinkDisabled").show(), $("#_memberAdditionInvitationLinkSettingStatus").cwCheckBox().unCheck(), $("#_memberAdditionPublic").val("0")), self.memberaddition_dialog.open()
                    }
                    var self = this;
                    self.memberaddition_dialog || (self.memberaddition_dialog = $("#_roomMemberAdditionDialog").cwDialog({
                        title: language_1.Language.getLang("%%%member_addition_dialog_title%%%"),
                        width: 750,
                        height: "auto",
                        buttonLabels: [language_1.Language.getLang("%%%button_save%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(index) {
                            var room_id = this.data.room_id;
                            switch (index) {
                                case 0:
                                    var params = {},
                                        error_list = [];
                                    for (var aid in self.adding_member_list) self.member_flag[aid] = self.adding_member_list[aid];
                                    var room_dat = boot_1.RL.rooms[room_id];
                                    if (Object.keys(room_dat.member_dat).forEach(function(aid) {
                                            aid in self.member_flag || (self.member_flag[aid] = room_dat.member_dat[aid])
                                        }), params.member_dat = self.member_flag, error_list = self.validateRoomInfo(params), self.is_valid_link_name || error_list.push(language_1.Language.getLang("%%%invitation_link_setting_error_invalid_link_name%%%")), error_list.length > 0) return boot_1.CW.alert(error_list.join("\n")), !1;
                                    var public_setting = $("#_memberAdditionPublic").val(),
                                        link_code = $("#_memberAdditionInvitationLinkActive").find(".js_invitationLinkEditorInput").val(),
                                        join_need_accept = $("#_memberAdditionInvitationLinkJoinNeedAccept").cwCheckBox().isChecked() ? 1 : 0;
                                    boot_1.CW.showProgress(language_1.Language.getLang("%%%saving%%%")), boot_1.CW.post("gateway.php", {
                                        cmd: "update_room",
                                        room_id: room_id,
                                        public: public_setting,
                                        link_code: link_code,
                                        join_need_accept: join_need_accept,
                                        role: self.member_flag,
                                        update_room_version: "2"
                                    }, function(res) {
                                        if (res.message) return void boot_1.CW.alert(res.message);
                                        boot_1.RL.rooms[room_id].member_dat = self.member_flag, boot_1.CW.watch()
                                    }), boot_1.CW.hideProgress(), this.close()
                            }
                        },
                        open: function(room_id) {
                            if (room_id) {
                                this.data.room_id = room_id;
                                var room_dat = boot_1.RL.rooms[room_id];
                                self.is_valid_link_name = !0, $("#_roomMemberAdditionDialog").append($("#_memberAdditionMemberBox").show()), $("#_memberAdditionContactFilter").cwSearchBox().$el.val(""), $("#_memberAdditionContactTableBox").scrollTop(0), $("#_memberAdditionSelectAllContact").cwCheckBox().unCheck(), $("[name=__memberAddition_org_filter]").eq(0).prop("checked", !0), $("#_memberAdditionSelectRole").html($.cwSelectBox.create([{
                                    label: language_1.Language.getLang("%%%common_role_select_list_default%%%"),
                                    value: "default"
                                }, {
                                    label: language_1.Language.getLang("%%%admin%%%"),
                                    value: "admin",
                                    tooltip: language_1.Language.getLang("%%%chatroom_member_role_admin_desc%%%")
                                }, {
                                    label: language_1.Language.getLang("%%%member%%%"),
                                    value: "member",
                                    tooltip: language_1.Language.getLang("%%%chatroom_member_role_member_desc%%%")
                                }, {
                                    label: language_1.Language.getLang("%%%readonly%%%"),
                                    value: "readonly",
                                    tooltip: language_1.Language.getLang("%%%chatroom_member_role_readonly_desc%%%")
                                }], "", "default", {
                                    class: "_showDescription",
                                    "aria-label": language_1.Language.getLang("%%%common_role_select_list_default_tooltip%%%")
                                })), boot_1.CW.is_business || $("#_memberAdditionOrganizationFilter").hide(), self.prepareRoomDat(room_id);
                                var link_name, link_code_controller = $("#_memberAdditionInvitationLinkActive"),
                                    btn_copy_link_url = link_code_controller.find(".js_invitationLinkBtnCopy"),
                                    chatwork_path = link_code_controller.find(".js_invitationLinkURL"),
                                    display_input = link_code_controller.find(".js_invitationLinkDisplayInput"),
                                    editor_input = link_code_controller.find(".js_invitationLinkEditorInput"),
                                    chatwork_path_code = CHATWORK_MYPAGE_PATH + "/g/";
                                link_name = room_dat.link_name ? room_dat.link_name : room_dat.id;
                                var link_code = chatwork_path_code + link_name;
                                chatwork_path.text(chatwork_path_code), display_input.val(link_code), editor_input.val(link_name), btn_copy_link_url.attr("data-clipboard-text", link_code).text(language_1.Language.getLang("%%%invitation_link_code_copy%%%"));
                                new Clipboard(".js_invitationLinkBtnCopy").on("success", function() {
                                    btn_copy_link_url.text(language_1.Language.getLang("%%%text_copied%%%"))
                                }), changeVisibility(room_dat.public), room_dat.join_need_accept ? $("#_memberAdditionInvitationLinkJoinNeedAccept").cwCheckBox().check() : $("#_memberAdditionInvitationLinkJoinNeedAccept").cwCheckBox().unCheck(), self.room_dat.public ? ($("#_memberAdditionInvitationLinkSettingStatus").cwCheckBox().check(), $("#_memberAdditionInvitationLinkActive").show()) : ($("#_memberAdditionInvitationLinkSettingStatus").cwCheckBox().unCheck(), $("#_memberAdditionInvitationLinkActive").hide()), self.buildMember(["contact"], $("#_memberAdditionMemberBox"))
                            }
                        }
                    }));
                    var member_addition_link_editor = self.linkCodeEditor($("#_memberAdditionInvitationLinkActive"));
                    member_addition_link_editor.reset(), $("#_memberAdditionInvitationLinkSettingStatus").cwCheckBox({
                        update: function() {
                            changeVisibility(!!this.isChecked())
                        }
                    }), $("#_memberAdditionInvitationLinkActive").on("click", ".js_invitationLinkOpenEditor", function() {
                        member_addition_link_editor.open(), self.memberaddition_dialog.open()
                    }).on("click", ".js_invitationLinkCloseEditor", function() {
                        member_addition_link_editor.cancel(), self.memberaddition_dialog.open()
                    }).on("click", ".js_invitationLinkBtnEdited", function() {
                        self.is_valid_link_name && (member_addition_link_editor.edit(), self.memberaddition_dialog.open())
                    }).on("keyup blur", ".js_invitationLinkEditorInput", function() {
                        var input = $(this);
                        self.link_code_checker.validate(input, $("#_memberAdditionInvitationLinkActive"))
                    }),
                        self.memberaddition_dialog.open(room_id)
                }, RoomDialogView.prototype.validateRoomInfo = function(params) {
                    var self = this,
                        error = [];
                    if (void 0 != params.name && "" == params.name && error.push(language_1.Language.getLang("%%%chatroom_error_no_name%%%")), void 0 != params.member_dat) {
                        var has_admin = !1;
                        for (var aid in self.member_flag)
                            if ("admin" == self.member_flag[aid]) {
                                has_admin = !0;
                                break
                            }
                        has_admin || error.push(language_1.Language.getLang("%%%chatroom_error_noadmin%%%"))
                    }
                    return error
                }, RoomDialogView
            }();
        exports.RoomDialogView = RoomDialogView
    }, {
        "../../core/lib/common": 308,
        "../../core/model/Room": 315,
        "../controller/boot": 340,
        "../lib/language": 384,
        clipboard: 21
    }],
    461: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Cookies = require("js-cookie"),
            common_1 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            RoomListView = function() {
                function RoomListView(model) {
                    this.model = model, this.last_sumnum_key = "", this.is_folded = !1, this.room_show_limit = 80, this.unread_status = null, this.mention_status = null, this.mytask_status = null, this.is_expanding = !1, this.room_default_option = {
                        showOrg: !1,
                        showPin: !0,
                        showSelected: !0,
                        showRequest: !0,
                        noTrim: !1
                    }
                }
                return RoomListView.prototype.prepare = function() {
                    var self = this,
                        side_content_init_width = Cookies.get("ui_chatlist_width");
                    void 0 !== side_content_init_width && self.resizeWidth(side_content_init_width);
                    var left_pane_width = 0;
                    $.cwResize.setHandle($("#_subContentHandle"), {
                        type: "col",
                        start: function() {
                            left_pane_width = $C("#_sideContent").width()
                        },
                        move: function(move_x) {
                            self.resizeWidth(left_pane_width + move_x)
                        }
                    }), $C("#_roomTitle").on("click", "._roomTitleText", function() {
                        self.scrollToRoom(boot_1.RM.id, 600)
                    }), $C("#_wrapper").on("click", "._pin", function() {
                        var match = this.className.match(/_pinRid([0-9]+)/);
                        if (!match) return !1;
                        var stick_on, room_id = match[1],
                            pin_obj = $(this);
                        return pin_obj.hasClass("ico19PinOff") ? (pin_obj.removeClass("ico19PinOff"), pin_obj.addClass("ico19PinOn"), stick_on = 1) : (pin_obj.addClass("ico19PinOff"), pin_obj.removeClass("ico19PinOn"), stick_on = 0), self.model.rooms[room_id].sticky = stick_on, boot_1.CW.post("gateway.php", {
                            cmd: "stick_room",
                            room_id: room_id,
                            stick: stick_on
                        }, function() {
                            Boolean(pin_obj.parents("._roomLink").length) ? boot_1.TREASURE.trackEvent("room_list", "click", {
                                label: "room_list_pin"
                            }) : boot_1.TREASURE.trackEvent("timeline", "click", {
                                label: "timeline_pin"
                            })
                        }), self.model.build(), boot_1.RM.build(), !1
                    }).on("mouseover", "._pin", function() {
                        var pin_obj = $(this);
                        pin_obj.hasClass("ico19PinOn") || pin_obj.addClass("ico19PinHover")
                    }).on("mouseout", "._pin", function() {
                        $(this).removeClass("ico19PinHover")
                    }), $("#_sideContentTitleText").click(function() {
                        boot_1.RL.selectCategory("all"), filter_tabbar.deselectAll(), boot_1.RL.build()
                    }), $("#_sideChatMoveMyChat").click(function() {
                        boot_1.RL.selectRoom(boot_1.AC.getRoomId(boot_1.AC.myid)), boot_1.TREASURE.trackEvent("room_list", "click", {
                            label: "my_chat"
                        })
                    }).cwMessageTip({
                        message: language_1.Language.getLang("%%%menu_mychat_hint%%%"),
                        delay: boot_1.TM.messagetip_delay
                    });
                    var filter_tabbar = $("#_chatFilterList").cwTabbedBar({
                        toggleMode: !0,
                        update: function(idx, is_select) {
                            if (is_select) switch (idx) {
                                case 0:
                                    Cookies.set("ui_roomfilter", "0", {
                                        expires: 3650
                                    }), boot_1.RL.setReadOnly(!0), boot_1.RL.setToOnly(!1), boot_1.RL.setTaskOnly(!1), boot_1.TREASURE.trackEvent("room_list", "click", {
                                        label: "unread_filter"
                                    });
                                    break;
                                case 1:
                                    Cookies.set("ui_roomfilter", "1", {
                                        expires: 3650
                                    }), boot_1.RL.setReadOnly(!1), boot_1.RL.setToOnly(!0), boot_1.RL.setTaskOnly(!1), boot_1.TREASURE.trackEvent("room_list", "click", {
                                        label: "to_filter"
                                    });
                                    break;
                                case 2:
                                    Cookies.set("ui_roomfilter", "2", {
                                        expires: 3650
                                    }), boot_1.RL.setReadOnly(!1), boot_1.RL.setToOnly(!1), boot_1.RL.setTaskOnly(!0), $C("#_chatTabTask").click(), boot_1.TREASURE.trackEvent("room_list", "click", {
                                        label: "task_filter"
                                    })
                            } else Cookies.remove("ui_roomfilter"), boot_1.RL.setReadOnly(!1), boot_1.RL.setToOnly(!1), boot_1.RL.setTaskOnly(!1);
                            boot_1.RL.build()
                        }
                    });
                    filter_tabbar.$el.show(), self.unread_status = $("#_chatUnreadStatus"), self.mention_status = $("#_chatToUnreadStatus"), self.mytask_status = $("#_chatTaskStatus"), $C("#_wrapper").on("click", "._roomLink", function() {
                        var beforeRoomId = boot_1.RM.id,
                            timeBeforeChangeRoom = Date.now(),
                            roomLink = $(this),
                            room_id = 0,
                            message_id = 0;
                        if ("a" == this.tagName.toLowerCase()) {
                            var match = roomLink.prop("href").match(/#(?:!|%21)rid(\d+)(?:-(\d+))?$/);
                            match && (room_id = match[1], match[2] && (message_id = match[2]))
                        }
                        if (!room_id) {
                            var rid = roomLink.attr("data-rid");
                            rid && (room_id = rid);
                            var mid = roomLink.attr("data-mid");
                            mid && (message_id = mid)
                        }
                        boot_1.RL.selectRoom(room_id, message_id), boot_1.TREASURE.trackEvent("room_list", "click", {
                            label: "change_room",
                            time: Date.now() - timeBeforeChangeRoom,
                            before_room_id: parseInt(beforeRoomId, 10),
                            after_room_id: parseInt(room_id, 10)
                        })
                    }), $C("#_wrapper").on("click", "a._groupchatLink", function() {
                        var link_code = $(this).attr("data-linkcode");
                        link_code && boot_1.RD.view.joinGroupchat(link_code)
                    }), $C("#_roomListItems").on("click", "#_roomMore", function() {
                        self.room_show_limit += 80, self.model.build()
                    }), self.prepareCategory(), "1" === Cookies.get("ui_fold_roomlist") && self.toggleFold(), void 0 != Cookies.get("ui_roomfilter") && filter_tabbar.select(Cookies.get("ui_roomfilter")), boot_1.CW.view.onPostLoad(function() {
                        void 0 != Cookies.get("ui_category") && self.model.selectCategory(Cookies.get("ui_category"))
                    }),
                        function() {
                            var get_focused_room_id = function() {
                                    var focused_room_id = Number(boot_1.RL.getFocusedRoomId());
                                    return focused_room_id && -1 == $.inArray(focused_room_id.toString(), boot_1.RL.filtered_room_list) && (focused_room_id = 0), focused_room_id
                                },
                                move_up = function(focused_room_id) {
                                    if (0 == focused_room_id) self.model.focusRoom(self.model.filtered_room_list[0]);
                                    else {
                                        var idx = $.inArray(focused_room_id.toString(), self.model.filtered_room_list);
                                        idx > 0 ? self.model.focusRoom(self.model.filtered_room_list[idx - 1]) : self.model.focusRoom(self.model.filtered_room_list[0])
                                    }
                                },
                                move_down = function(focused_room_id) {
                                    if (0 == focused_room_id) self.model.focusRoom(self.model.filtered_room_list[0]);
                                    else {
                                        var cnt = self.model.filtered_room_list.length,
                                            idx = $.inArray(focused_room_id.toString(), self.model.filtered_room_list);
                                        idx + 1 == cnt ? self.model.focusRoom(self.model.filtered_room_list[idx]) : self.model.focusRoom(self.model.filtered_room_list[idx + 1])
                                    }
                                };
                            boot_1.CW.view.registerKeyboardShortcut(75, !1, !1, !1, !1, function() {
                                move_up(get_focused_room_id())
                            }).registerKeyboardShortcut(38, !1, !1, !1, !1, function() {
                                move_up(get_focused_room_id())
                            }).registerKeyboardShortcut(40, !1, !1, !1, !1, function() {
                                move_down(get_focused_room_id())
                            }).registerKeyboardShortcut(74, !1, !1, !1, !1, function() {
                                move_down(get_focused_room_id())
                            }).registerKeyboardShortcut(79, !1, !1, !1, !1, function() {
                                self.model.selectRoom(get_focused_room_id())
                            }).registerKeyboardShortcut(13, !1, !1, !1, !1, function() {
                                self.model.selectRoom(get_focused_room_id())
                            })
                        }(), $("#_roomRequestArea").click(function() {
                        boot_1.RM.view.showRequestDialog()
                    })
                }, RoomListView.prototype.prepareCategory = function() {
                    var self = this,
                        newcat_filter_word = [],
                        newcat_selected_room_dat = {},
                        newcat_current_room_list = [],
                        newcat_room_table = $("#_newcatRoomlist"),
                        category_tooltip = $("#_chatCategoryList").cwToolTip({
                            fixHeight: !0
                        });
                    $("#_chatCategory").click(function() {
                        category_tooltip.open($(this))
                    }).cwMessageTip({
                        message: language_1.Language.getLang("%%%chat_category_select%%%"),
                        delay: boot_1.TM.messagetip_delay
                    }), $("#_chatCategoryList").on("click", "li._chatCategoryItem", function() {
                        var cat_id = $(this).attr("data-cat-id");
                        self.model.selectCategory(cat_id), boot_1.TREASURE.trackEvent("room_list", "click", {
                            label: "category_item"
                        }), category_tooltip.close()
                    }).on("mouseover", ".chatCategoryList li", function() {
                        $(this).find("._categoryAction").show()
                    }).on("mouseout", ".chatCategoryList li", function() {
                        $(this).find("._categoryAction").hide()
                    }), $("#_categoryDisplayCancel").click(function() {
                        self.model.selectCategory("all")
                    });
                    var chat_searchbox = $("#_newcatRoomfilter").cwSearchBox({
                            placeholder: language_1.Language.getLang("%%%chat_search%%%"),
                            update: function() {
                                var room_list = boot_1.RL.getSortedRoomList("name"),
                                    html = "",
                                    max_display_chat_num = TASK_MAX_RESULTS;
                                newcat_filter_word = this.getVal().toLowerCase(), newcat_current_room_list = [];
                                for (var i = 0, len = room_list.length; i < len; i++) {
                                    var room = boot_1.RL.rooms[room_list[i]],
                                        name = room.getName();
                                    if (!newcat_filter_word || name.toLowerCase().includes(newcat_filter_word)) {
                                        if (newcat_current_room_list.push(room.id), newcat_current_room_list.length >= max_display_chat_num) break;
                                        var selected_flg = Boolean(newcat_selected_room_dat[room.id]);
                                        html += '<tr class="_newcatRoom _cwSelectableRow"><td class="check">' + $.cwCheckBox.create(selected_flg, "", room.id, {
                                                id: "_newcatCheck" + room.id,
                                                class: "_newcatCheck"
                                            }) + '</td><td class="_newcatRoom_name"><span class="ui_room_icon">' + room.getIcon() + "</span></td><td>" + boot_1.CW.getRoomName(room.id) + "</td></tr>"
                                    }
                                }
                                newcat_room_table.html(html)
                            }
                        }),
                        chatcategoryedit_window = $("#_chatCategoryAddContent").cwDialog({
                            width: 650,
                            open: function(cat_id) {
                                if (this.data.cat_id = cat_id, cat_id) {
                                    for (var category_dat = self.model.category_dat[cat_id], cat_name = category_dat.name, roomlist = category_dat.list, i = 0, len = roomlist.length; i < len; i++) {
                                        var rid = roomlist[i];
                                        newcat_selected_room_dat[rid] = !0
                                    }
                                    this.setOption({
                                        title: language_1.Language.getLang("%%%chat_category_edit%%%") + ": " + common_1.escape_html(cat_name),
                                        buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")]
                                    })
                                } else this.setOption({
                                    title: language_1.Language.getLang("%%%chat_category_create%%%"),
                                    buttonLabels: [language_1.Language.getLang("%%%button_create_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")]
                                });
                                $("#_categoryName").val(""), $("#_newcatSelectNum").empty(), chat_searchbox.setVal("")
                            },
                            close: function() {
                                newcat_filter_word = [], newcat_selected_room_dat = {}, newcat_current_room_list = []
                            },
                            buttonLabels: [language_1.Language.getLang("%%%button_create_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                            buttonSubmit: 0,
                            buttonCancel: 1,
                            buttonClick: function(idx) {
                                if (0 === idx) {
                                    var error = [],
                                        cat_name = $("#_categoryName").val();
                                    cat_name || error.push(language_1.Language.getLang("%%%chat_category_error_no_name%%%"));
                                    var room_list = [];
                                    for (var room_id in newcat_selected_room_dat) newcat_selected_room_dat[room_id] && room_list.push(room_id);
                                    if (room_list.length || error.push(language_1.Language.getLang("%%%chat_category_error_no_chats%%%")), error.length) return void boot_1.CW.alert(error.join("\n"));
                                    var params = {
                                        name: cat_name,
                                        r: room_list
                                    };
                                    this.data.cat_id ? (params.cmd = "edit_category", params.cat_id = this.data.cat_id) : params.cmd = "add_category";
                                    var dialog = this;
                                    boot_1.CW.post("gateway.php", params, function(json) {
                                        var cat_id;
                                        for (cat_id in json.cat_dat) self.model.category_dat[cat_id] = json.cat_dat[cat_id];
                                        self.model.buildCategory(), self.model.selectCategory(cat_id), dialog.close()
                                    })
                                }
                            }
                        });
                    $("#_chatCategoryAdd").click(function() {
                        chatcategoryedit_window.open(), category_tooltip.close()
                    });
                    var set_check = function(room_id, check) {
                        var room_id_list;
                        room_id_list = $.isArray(room_id) ? room_id : [room_id];
                        for (var i = 0, len = room_id_list.length; i < len; i++) {
                            var rid = room_id_list[i],
                                checkbox = $("#_newcatCheck" + rid);
                            if (checkbox.length) {
                                var cw_checkbox = checkbox.cwCheckBox();
                                check ? cw_checkbox.check() : cw_checkbox.unCheck()
                            }
                            newcat_selected_room_dat[rid] = Boolean(check)
                        }
                        var length = 0;
                        for (var i in newcat_selected_room_dat) newcat_selected_room_dat[i] && length++;
                        length ? $("#_newcatSelectNum").html(length + language_1.Language.getLang("%%%multiselect_label%%%")) : $("#_newcatSelectNum").empty()
                    };
                    $("#_newcatRoomlist").on("cwCheckBox_update", function(event, is_check, room_id) {
                        return set_check(room_id, is_check), !1
                    }), $("#_newcatCheckAll").cwCheckBox({
                        update: function() {
                            set_check(newcat_current_room_list, this.isChecked())
                        }
                    }), $("#_chatCategoryList").on("click", "._categoryEdit", function() {
                        var cat_id = $(this).closest("li._chatCategoryItem").attr("data-cat-id"),
                            cat_name = self.model.category_dat[cat_id].name;
                        chatcategoryedit_window.open(cat_id), $("#_categoryName").val(cat_name);
                        var room_id_list = self.model.category_dat[cat_id].list;
                        set_check(room_id_list, !0)
                    }).on("click", "._categoryDelete", function() {
                        var cat_item = $(this).parents("li._chatCategoryItem"),
                            cat_id = cat_item.data("cat-id"),
                            title = cat_item.find("._categoryName").text();
                        boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%chat_category_confirm_delete%%%", {
                            category_name: title
                        }), function() {
                            boot_1.CW.post("gateway.php", {
                                cmd: "delete_category",
                                cat_id: cat_id
                            }, function() {
                                void 0 != self.model.category_dat[cat_id] && delete self.model.category_dat[cat_id], self.model.buildCategory()
                            })
                        })
                    })
                }, RoomListView.prototype.isFolded = function() {
                    return this.is_folded
                }, RoomListView.prototype.toggleFold = function() {
                    var self = this;
                    if (!self.is_expanding) {
                        boot_1.TREASURE.trackEvent("message_input", "click", {
                            label: "toggle_fold_room_list"
                        });
                        var mainContent = $("#_mainContent"),
                            current = mainContent.css("left"),
                            expand_left = $("#_mainContentExpandLeft");
                        if (mainContent.addClass("foldAnimLeft"), self.is_expanding = !0, "0px" == current) {
                            self.is_folded = !1, mainContent.removeClass("mainContent--foldLeft"), mainContent.css("left", $("#_sideContent").outerWidth() + "px");
                            var arrow_1 = expand_left.find(".icoFontTriangleRight").addClass("rotate180");
                            setTimeout(function() {
                                Cookies.remove("ui_fold_roomlist"), arrow_1.removeClass("rotate180 icoFontTriangleRight").addClass("icoFontTriangleLeft"), expand_left.addClass("_showDescription"), mainContent.removeClass("foldAnimLeft"), boot_1.CW.view.resizeLayout()
                            }, 300)
                        } else {
                            self.is_folded = !0, mainContent.addClass("mainContent--foldLeft"), mainContent.css("left", "0px");
                            var arrow_2 = expand_left.find(".icoFontTriangleLeft").addClass("rotate180");
                            setTimeout(function() {
                                Cookies.set("ui_fold_roomlist", "1", {
                                    expires: 3650
                                }), arrow_2.removeClass("rotate180 icoFontTriangleLeft").addClass("icoFontTriangleRight"), expand_left.removeClass("_showDescription"), mainContent.removeClass("foldAnimLeft"), boot_1.CW.view.resizeLayout()
                            }, 300)
                        }
                        setTimeout(function() {
                            self.is_expanding = !1
                        }, 200)
                    }
                }, RoomListView.prototype.resizeWidth = function(width) {
                    var self = this;
                    width < boot_1.TM.chatlist_min_width && (width = boot_1.TM.chatlist_min_width), width > boot_1.TM.chatlist_max_width && (width = boot_1.TM.chatlist_max_width);
                    var current_width = $C("#_sideContent").width();
                    return !($C("#_timeLine").width() < boot_1.TM.timeline_min_width && current_width < width) && ($C("#_mainContent").css("left", width + "px"), $C("#_sideContent").width(width), Cookies.set("ui_chatlist_width", width, {
                            expires: 3650
                        }), boot_1.CW.view.resizeLayout(), self)
                }, RoomListView.prototype.deleteRoom = function() {
                    boot_1.RM || boot_1.CS.initChatText()
                }, RoomListView.prototype.scrollToRoom = function(room_id, time) {
                    var menubox = $C("#_roomListArea"),
                        room_menu = menubox.find("[data-rid=" + room_id + "]");
                    if (room_menu.length > 0) {
                        var top_head = parseInt(menubox.offset().top, 10),
                            top_bottom = top_head + menubox.height(),
                            top_room = parseInt(room_menu.offset().top, 10),
                            bottom_room = top_room + room_menu.height();
                        (top_room < top_head || bottom_room > top_bottom) && menubox.scrollTo(room_menu, time)
                    }
                }, RoomListView.prototype.focusRoom = function(room_id) {
                    var self = this;
                    self.clearFocusRoom(), boot_1.RM.id != room_id && ($C("#_roomListItems").find("[data-rid=" + room_id + "]").addClass("roomListItem--focused"), self.scrollToRoom(room_id, 100))
                }, RoomListView.prototype.clearFocusRoom = function() {
                    $C("#_roomListItems").find(".roomListItem--focused").removeClass("roomListItem--focused")
                }, RoomListView.prototype.selectRoom = function(room_id) {
                    var self = this;
                    if (boot_1.CW.view.closeFirstPage(), $.cwFloatWindow.close(), !boot_1.RM || boot_1.RM.id != room_id) {
                        var ritems = $C("#_roomListItems");
                        ritems.find("._roomSelected").removeClass("_roomSelected roomListItem--selected"), ritems.find("[data-rid=" + room_id + "]").addClass("_roomSelected roomListItem--selected"), $C("#_subContentArea").scrollTop(0), self.scrollToRoom(room_id, 600), self.updateTitle(room_id)
                    }
                }, RoomListView.prototype.selectCategory = function() {
                    var self = this;
                    self.model.build();
                    var category_display = $("#_categoryDisplay");
                    if ("all" != self.model.filter_category) {
                        var title = $C("#_chatCategoryList").find("[data-cat-id=" + self.model.filter_category + "]").find("span._categoryName").text();
                        $("#_categoryDisplayTitle").text(title), category_display.isVisible() || (Cookies.set("ui_category", self.model.filter_category, {
                            expires: 3650
                        }), category_display.show())
                    } else category_display.isVisible() && (Cookies.remove("ui_category"), category_display.hide())
                }, RoomListView.prototype.setReadOnly = function() {}, RoomListView.prototype.setToOnly = function() {}, RoomListView.prototype.setTaskOnly = function() {}, RoomListView.prototype.build = function(room_list) {
                    var self = this;
                    self.model.prepareRM();
                    var html = "",
                        room_num = room_list.length,
                        show_room_num = room_num;
                    if (!room_num) return $C("#_roomListItems").quickEmpty(), $C("#_chatListEmptyArea ._chatListEmpty").hide(), self.model.filter_readonly ? $C("#_chatListUnreadEmpty").show() : self.model.filter_toonly ? $C("#_chatListToEmpty").show() : self.model.filter_taskonly && $C("#_chatListTaskEmpty").show(), void $C("#_chatListEmptyArea").show();
                    $C("#_chatListEmptyArea").hide(), room_num > self.room_show_limit && (show_room_num = self.room_show_limit);
                    for (var idx = 0; idx < show_room_num; idx++) void 0 != room_list[idx] && (html += self.getRoomItemPanel(room_list[idx]));
                    room_num > show_room_num && (html += '<div class="roomLimitOver">\n                       <div>' + language_1.Language.getLang("%%%chat_rest_roomtip%%%") + (room_num - self.room_show_limit) + '</div>\n                       <div id="_roomMore" class="button">' + language_1.Language.getLang("%%%chat_show_more%%%") + "</div>\n                     </div>"), $C("#_roomListItems").html(html);
                    var focused_room_id = boot_1.RL.getFocusedRoomId();
                    focused_room_id > 0 && self.model.focusRoom(focused_room_id)
                }, RoomListView.prototype.getRoomItemPanel = function(room_id, show_option) {
                    var option, self = this,
                        room = self.model.rooms[room_id];
                    if (void 0 == show_option) option = self.room_default_option;
                    else {
                        option = {};
                        for (var key in self.room_default_option) option[key] = self.room_default_option[key];
                        for (var key in show_option) option[key] = show_option[key]
                    }
                    var unread_num = room.getUnreadNum(),
                        mention_num = 0;
                    unread_num > 0 && (mention_num = room.getMentionNum());
                    var list_item_class_label = "_room",
                        room_name_class_label = "roomListItem__roomName",
                        unread_label = "",
                        mention_label = "",
                        mytask_num_label = "";
                    option.showSelected && boot_1.RM && boot_1.RM.id == room_id && (list_item_class_label += " roomListItem--selected _roomSelected"), unread_num > 0 && (room_name_class_label += " roomListItem__roomName--unread", unread_label = '\n              <li role="listitem" class="roomListBadges__unreadBadge _unreadBadge">\n                <span class="roomListBadges__unreadBadgeIcon icoFontActionUnread"></span>' + unread_num + "\n              </li>\n            ", mention_num && (mention_label = '\n                  <li class="roomListBadges__mentionBadge _mentionLabel _unreadBadge">\n                    <span class="roomListBadges__mentionBadgeIcon icoFontSideTo"></span>' + mention_num + "\n                  </li>\n                ")), room.mytask_num > 0 && (mytask_num_label = '\n              <li class="roomListBadges__taskBadge">\n                <span class="roomListBadges__taskBadgeIcon icoFontActionTask"></span>' + Math.min(room.mytask_num, TASK_MAX_RESULTS) + "\n              </li>\n            ");
                    var pin_icon = "";
                    option.showPin && (pin_icon = room.sticky ? '\n                  <div class="roomListItem__pinContainer">\n                    <span class="roomListItem__pin roomListItem__pin--checked _pin _pinRid' + room.id + ' ico19PinOn"></span>\n                  </div>\n                ' : '\n                  <div class="roomListItem__pinContainer chatListPinOff">\n                    <span class="roomListItem__pin _pin _pinRid' + room.id + ' ico19PinOff"></span>\n                  </div>\n                ');
                    var request_notice = "";
                    option.showRequest && room.public && room.member_request.length > 0 && (request_notice = '\n                  <div class="roomListItem__memberRequest">\n                    <p class="roomListItem__memberRequestText">\n                      <span class="icoFontInfo roomListItem__memberRequestIcon"></span>' + language_1.Language.getLang("%%%chatroom_member_requests_notice%%%", {
                            request_num: room.member_request.length
                        }) + "\n                    </p>\n                  </div>");
                    var orgtitle = "";
                    if (option.showOrg && "contact" == room.type) {
                        var aid = room.getAccountId(),
                            orgname = boot_1.CW.getOrgTitle(aid);
                        orgname && (orgtitle = '<p class="chatListOrgName">' + orgname + "</p>")
                    }
                    var additional_room_name_class = "",
                        label_area = "";
                    unread_label || mention_label || mytask_num_label ? (option.noTrim || (additional_room_name_class = " autotrim"), label_area = '<ul class="roomListBadges">' + unread_label + mention_label + mytask_num_label + "</ul>") : option.noTrim || (additional_room_name_class = " roomListItem__roomName--noBadge");
                    var external_label = "";
                    return boot_1.CW.is_business && boot_1.ST.data.show_external && (room.isInternal() || (external_label = '<div class="_externalMark roomListItem__hasOthers ico19Others"></div>')), '\n          <li role="listitem" aria-label="' + common_1.escape_html(room.getName()) + '" class="roomListItem _roomLink ' + list_item_class_label + '" data-rid="' + room.id + '">\n            <div class="roomListItem__roomInfoContainer">\n              <div class="roomListItem__iconContainer roomIcon">\n                ' + room.getIcon("html", "medium") + '\n              </div>\n              <div class="roomListItem__roomInfo">\n                <p class="' + room_name_class_label + " " + additional_room_name_class + '">' + boot_1.CW.getRoomName(room.id) + "</p>\n                " + orgtitle + "\n                " + label_area + "\n              </div>\n            </div>\n            " + external_label + "\n            " + pin_icon + "\n            " + request_notice + "\n          </li>\n        "
                }, RoomListView.prototype.updateRoomData = function() {}, RoomListView.prototype.updateTitle = function(room_id) {
                    var self = this;
                    if ("" == MOBILE) {
                        var title = "";
                        if (self.model.unread_room_sum > 0) {
                            var unread_sum_label = self.model.unread_room_sum;
                            self.model.mention_room_sum > 0 && (unread_sum_label += "(" + self.model.mention_room_sum + ")"), title = "[" + unread_sum_label + "]"
                        }
                        if (title += SERVICE_NAME, room_id && (title += " - " + boot_1.RL.rooms[room_id].getName()), document.title = title, boot_1.ST.data.faviconstat) {
                            var href = "";
                            href = 0 == self.model.unread_room_sum ? "./image/favicon/favicon00.ico" : self.model.unread_room_sum < 10 ? "./image/favicon/favicon0" + self.model.unread_room_sum.toString() + ".ico" : "./image/favicon/favicon09+.ico", boot_1.CW.view.changeFavicon(href)
                        } else boot_1.CW.view.changeFavicon("./image/favicon/favicon00.ico")
                    }
                }, RoomListView.prototype.updateSumNumbers = function() {
                    var self = this,
                        sumnum_key = self.model.mytask_total + ":" + self.model.unread_room_sum + ":" + self.model.mention_room_sum + ":" + self.model.mytask_room_sum;
                    if (self.last_sumnum_key != sumnum_key) {
                        if (self.last_sumnum_key = sumnum_key, self.model.mytask_total > 0 ? $C("#_myAllTaskNum").text(self.model.mytask_total).show() : $C("#_myAllTaskNum").hide(), self.model.unread_room_sum > 0) {
                            var unread_num = self.model.unread_room_sum;
                            if (unread_num > 1e3 && (unread_num = "999+"), self.unread_status.html(unread_num).show(), self.model.mention_room_sum > 0) {
                                var mention_num = self.model.mention_room_sum;
                                mention_num > 1e3 && (mention_num = "999+"), self.mention_status.text(mention_num).show()
                            } else self.mention_status.fadeOut()
                        } else self.unread_status.fadeOut(), self.mention_status.fadeOut();
                        self.model.mytask_room_sum > 0 ? self.mytask_status.text(self.model.mytask_room_sum).show() : self.mytask_status.fadeOut(), boot_1.RM && self.updateTitle(boot_1.RM.id)
                    }
                }, RoomListView.prototype.buildCategory = function() {
                    var self = this,
                        html = "",
                        cat_list = self.model.getSortedCategoryList();
                    for (var i in cat_list) {
                        var cat_id = cat_list[i],
                            list_tag = '<li class="_chatCategoryItem" data-cat-id="' + cat_id + '">';
                        cat_id == self.model.filter_category && (list_tag = '<li class="_chatCategoryItem listSelected" data-cat-id="' + cat_id + '">'), html += list_tag + '<span class="_categoryName categoryName autotrim">' + common_1.escape_html(self.model.category_dat[cat_id].name) + '</span><div class="_categoryAction chatCategoryAction linkIconStatus"><span class="icoFontActionEdit _categoryEdit"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_edit%%%") + '</span><span class="icoFontActionDelete _categoryDelete"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_delete%%%") + "</span></li>", Number("</div>")
                    }
                    $("#_chatCagegoryUserList").html(html)
                }, RoomListView.prototype.updateUnreadNum = function(room_id) {
                    this.buildRoomItem(room_id)
                }, RoomListView.prototype.buildRoomItem = function(room_id) {
                    var self = this;
                    $C("#_roomListItems").find("[data-rid=" + room_id + "]").replaceWith(self.getRoomItemPanel(room_id))
                }, RoomListView.prototype.showJoinPublicChatDialog = function(room_dat) {
                    var desc = common_1.escape_html(room_dat.public_description).replace(/(https?:\/\/[-_.!~*\'()a-zA-Z0-9;?:\@&=+\$,%#\{\}\[\]]+[-_.!~*\'()a-zA-Z0-9;\/?:\@&=+\$,%#\{\}\[\]]+)/gi, '<a href="$1" target="_blank">$1</a>');
                    $("#_joinpublicchatDescription").html(desc);
                    var show_dialog = function() {
                        var label_btn_submit = parseInt(room_dat.join_need_accept, 10) ? language_1.Language.getLang("%%%join_groupchat_btn_send_join_request_label%%%") : language_1.Language.getLang("%%%join_groupchat_btn_join_groupchat_label%%%");
                        $("#_joinpublicchatDialog").cwDialog({
                            title: language_1.Language.getLang("%%%joinpublicchat_title%%%"),
                            width: 640,
                            height: "auto",
                            autoOpen: !0,
                            hide: "fade",
                            buttonLabels: [label_btn_submit, language_1.Language.getLang("%%%button_cancel%%%")],
                            buttonSubmit: 0,
                            buttonCancel: 1,
                            buttonClick: function(idx) {
                                0 === idx && (boot_1.RL.joinPublicChat(room_dat.id), this.close())
                            },
                            open: function() {
                                $("#_joinpublicchatIcon").html('<img class="ui_avatar ui_chatworkid_avatar avatar" src="' + room_dat.icon + '" />'), $("#_joinpublicchatName").text(room_dat.name), "1" == room_dat.join_need_accept ? $("#_joinpublicchatNeedAccept").show() : $("#_joinpublicchatNeedAccept").hide()
                            }
                        })
                    };
                    room_dat.header ? ($("#_joinpublicchatHeader").remove(), $("#_joinpublicchatDialog").find("._overflow").prepend('<div id="_joinpublicchatHeader" class="joinpublicCover"></div>'), $("#_joinpublicchatHeader").html('<img id="_joinpublicchatHeaderImage" src="' + CF_PATH + "/header/" + room_dat.header + '" />'), $("#_joinpublicchatHeaderImage").bind("load", function() {
                        show_dialog()
                    })) : ($("#_joinpublicchatHeader").remove(), show_dialog())
                }, RoomListView
            }();
        exports.RoomListView = RoomListView
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/language": 384,
        "js-cookie": 78
    }],
    462: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var S = require("string"),
            Cookies = require("js-cookie"),
            common_1 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            memberSearch_1 = require("../../domain/member/memberSearch"),
            RoomSubView = function() {
                function RoomSubView(model) {
                    this.model = model, this.current_room_id = null, this.current_promotion_size = "hide", this.latest_task = "", this.assign_tip = null, this.task_input = null, this.is_folded = !1, this.is_expanding = !1, this.group_call_dialog = null, this.member_detail_html = "", this.sub_content_height = 0
                }
                return RoomSubView.prototype.prepare = function() {
                    var self = this,
                        sub_content_init_width = Cookies.get("ui_subcontent_width");
                    void 0 !== sub_content_init_width && self.resizeWidth(sub_content_init_width);
                    var right_pane_width = 0;
                    $.cwResize.setHandle($("#_subContentAreaHandle"), {
                        type: "col",
                        start: function() {
                            right_pane_width = $C("#_subContent").width()
                        },
                        move: function(move_x) {
                            self.resizeWidth(right_pane_width - move_x)
                        }
                    });
                    var scroll_width = null;
                    $C("#_subRoomDescriptionWrapper").on("mouseenter", function() {
                        if ($(this).data("is_overflow") && $C("#_subContentArea").height() < $C("#_subContentAreaContent").height()) {
                            if (null === scroll_width) {
                                $C("#_subContentArea").css({
                                    overflow: "hidden",
                                    width: "100%",
                                    "padding-right": 0
                                });
                                var title_width = $("#_subRoomInfoTitle").width();
                                $C("#_subContentArea").css({
                                    overflow: "auto"
                                }), scroll_width = title_width - $("#_subRoomInfoTitle").width()
                            }
                            $C("#_subContentArea").css({
                                overflow: "hidden",
                                width: ($C("#_subContentArea").width() - scroll_width).toString() + "px",
                                "padding-right": scroll_width + "px"
                            })
                        }
                    }).on("mouseleave", function() {
                        $(this).data("is_overflow") && $C("#_subContentArea").css({
                            overflow: "auto",
                            width: "100%",
                            "padding-right": 0
                        })
                    }), $("#_closeChatInfo").click(function() {
                        var chatinfo = $("#_subRoomChatInfo");
                        chatinfo.isVisible() ? chatinfo.stop().slideUp() : chatinfo.stop().slideDown()
                    }), $("#_groupCall").click(function() {
                        self.openGroupCall(boot_1.RM.id), boot_1.TREASURE.trackEvent("message_input", "open", {
                            label: "chatwork_live_dialog"
                        })
                    }), $C("#_chatFileAll").cwButton({
                        size: "large",
                        click: function() {
                            boot_1.FL.view.openFileList(boot_1.RM.id)
                        }
                    }), self.prepareNavigation(), self.prepareMember(), $("#_subEditRoomInfo").click(function() {
                        "group" == boot_1.RM.type ? boot_1.RD.view.editRoomInfo(boot_1.RM.id) : boot_1.RD.view.editRoomDescription(boot_1.RM.id)
                    });
                    var list_order = ["invitation_link_setting", "room_permission_setting", "same_member_addchat", "hr", "leave_room", "delete_contact", "delete_room"];
                    $C("#_chatRoomSetting").cwButton({
                        size: "large"
                    }).$el.cwDropDown({
                        list: function() {
                            for (var drop_list = [], list_flag = {}, i = 0, list_len = list_order.length; i < list_len; i++) {
                                var key = list_order[i];
                                list_flag[key] = !1
                            }
                            switch (boot_1.RM.type) {
                                case "group":
                                    list_flag.leave_room = !0;
                                    break;
                                case "contact":
                                    list_flag.delete_contact = !0
                            }
                            if ("contact" !== boot_1.RM.type) switch (boot_1.RM.member_dat[boot_1.AC.myid]) {
                                case "admin":
                                    list_flag.invitation_link_setting = !0, list_flag.room_permission_setting = !0, list_flag.same_member_addchat = !0, list_flag.hr = !0, list_flag.delete_room = !0
                            }
                            for (var i = 0, list_len = list_order.length; i < list_len; i++) {
                                var key = list_order[i];
                                if (list_flag[key]) switch (key) {
                                    case "invitation_link_setting":
                                        drop_list.push({
                                            value: "invitation_link_setting",
                                            label: language_1.Language.getLang("%%%chatroom_invitation_link_setting%%%")
                                        });
                                        break;
                                    case "room_permission_setting":
                                        drop_list.push({
                                            value: "room_permission_setting",
                                            label: language_1.Language.getLang("%%%chatroom_room_permission_setting%%%")
                                        });
                                        break;
                                    case "same_member_addchat":
                                        drop_list.push({
                                            value: "same_member_addchat",
                                            label: language_1.Language.getLang("%%%chatroom_createchat_same_members%%%")
                                        });
                                        break;
                                    case "hr":
                                        drop_list.push("hr");
                                        break;
                                    case "leave_room":
                                        drop_list.push({
                                            value: "leave_room",
                                            label: language_1.Language.getLang("%%%chatroom_leave%%%")
                                        });
                                        break;
                                    case "delete_contact":
                                        drop_list.push({
                                            value: "delete_contact",
                                            label: language_1.Language.getLang("%%%contact_delete%%%")
                                        });
                                        break;
                                    case "delete_room":
                                        drop_list.push({
                                            value: "delete_room",
                                            label: language_1.Language.getLang("%%%chatroom_delete%%%")
                                        })
                                }
                            }
                            return drop_list
                        },
                        select: function(value) {
                            if (!boot_1.RM || !boot_1.RM.id) return void boot_1.CW.alert(language_1.Language.getLang("%%%error_no_select%%%"));
                            var room_id = boot_1.RM.id;
                            switch (value) {
                                case "invitation_link_setting":
                                    boot_1.RD.view.openInvitationLinkSetting(room_id);
                                    break;
                                case "room_permission_setting":
                                    boot_1.RD.view.openRoomPermissionSetting(room_id);
                                    break;
                                case "same_member_addchat":
                                    for (var open_groupchat_same_members_dialog = function() {
                                        boot_1.RD.view.openAddRoomDialog();
                                        var member_dat = boot_1.RM.member_dat;
                                        boot_1.RD.view.checkSameMember(member_dat)
                                    }, mem_list = boot_1.RM.getSortedMemberList(), exist_nocontact = !1, idx = 0; idx < mem_list.length; idx++) boot_1.AC.myid != mem_list[idx] && (boot_1.AC.isContact(mem_list[idx]) || (exist_nocontact = !0));
                                    exist_nocontact ? boot_1.CW.confirm(language_1.Language.getLang("%%%chatroom_createchat_same_members_confirm%%%"), function() {
                                        setTimeout(function() {
                                            open_groupchat_same_members_dialog()
                                        })
                                    }) : open_groupchat_same_members_dialog();
                                    break;
                                case "delete_contact":
                                    var aid = boot_1.RM.getAccountId();
                                    boot_1.AC.view.deleteContact(aid);
                                    break;
                                case "leave_room":
                                    boot_1.CW.confirm(language_1.Language.getLang("%%%chatroom_confirm_leave%%%", {
                                        room_name: boot_1.RM.getName()
                                    }), function() {
                                        boot_1.CW.post("gateway.php", {
                                            cmd: "leave_room",
                                            room_id: room_id
                                        }, function() {
                                            boot_1.CW.watch()
                                        })
                                    });
                                    break;
                                case "delete_room":
                                    var message = "";
                                    message += language_1.Language.getLang("%%%_chatroom_confirm_delete_alert%%%", {
                                            room_name: common_1.escape_html(boot_1.RM.getName())
                                        }) + "\n\n", message += language_1.Language.getLang("%%%_chatroom_confirm_delete_content%%%") + "\n\n", message += "<ul>", message += '<li class="_cwSelectableRow"><label><input type="checkbox" class="_cwDGAgreeCheckbox" /> ' + language_1.Language.getLang("%%%_chatroom_confirm_delete_note_1%%%") + "</label></li>",
                                        message += '<li class="_cwSelectableRow"><label><input type="checkbox" class="_cwDGAgreeCheckbox" /> ' + language_1.Language.getLang("%%%_chatroom_confirm_delete_note_2%%%") + "</label></li>", message += '<li class="_cwSelectableRow"><label><input type="checkbox" class="_cwDGAgreeCheckbox" /> ' + language_1.Language.getLang("%%%_chatroom_confirm_delete_note_3%%%") + "</label></li>", message += "</ul>", boot_1.CW.view.confirmDelete(message, function() {
                                        boot_1.CW.post("gateway.php", {
                                            cmd: "delete_room",
                                            room_id: room_id
                                        }, function() {
                                            boot_1.CW.watch()
                                        })
                                    }, null, !0, language_1.Language.getLang("%%%_button_delete_with_agreement%%%"))
                            }
                        }
                    }), "free" !== SERVICE_PLAN && "1" === Cookies.get("ui_fold_roomsub") && self.toggleFold(), boot_1.CW.view.registerKeyboardShortcut(71, !1, !1, !1, !1, function() {
                        boot_1.RD.view.openAddRoomDialog()
                    }).registerKeyboardShortcut(84, !1, !1, !1, !1, function() {
                        $C("#_taskNameInput").focus()
                    })
                }, RoomSubView.prototype.getCurrentPromotionSize = function() {
                    return this.current_promotion_size
                }, RoomSubView.prototype.nextStateForPromotion = function() {
                    if (boot_1.RM.tasklist.view.task_num > 0) return "hide";
                    if ($C("#_taskNameInput").val().length > 0) return "hide";
                    if ((window.innerHeight || document.documentElement.clientHeight) < 920) return "single";
                    var room_description = boot_1.RM.description;
                    return !1 === room_description ? null : "" === room_description ? "double" : "single"
                }, RoomSubView.prototype.showPromotion = function() {
                    var self = this,
                        next_size = this.nextStateForPromotion();
                    if ("hide" === next_size) return void self.hidePromotion();
                    if (null !== next_size)
                        if (next_size === self.current_promotion_size) {
                            var room_id = boot_1.RM.id;
                            room_id == self.current_room_id || (self.current_room_id = room_id, self.refreshPromotion())
                        } else "double" === next_size ? self.showDoubleSizePromotion() : "single" === next_size && self.showSingleSizePromotion()
                }, RoomSubView.prototype.hidePromotion = function() {
                    this.current_promotion_size = "hide", $(".promotionArea").css({
                        height: "0",
                        display: "none"
                    }), googletag.destroySlots()
                }, RoomSubView.prototype.createDoubleSizeSlot = function() {
                    googletag.pubads().display("/21528008/ChatWorkRDAd", [300, 600], "div-gpt-ad-1415949969404-1")
                }, RoomSubView.prototype.createSingleSizeSlot = function() {
                    googletag.pubads().display("/21528008/ChatWorkRDAd", [300, 250], "div-gpt-ad-1415949969404-1")
                }, RoomSubView.prototype.showPromotionBase = function(next_slot_creator) {
                    googletag.cmd.push(function() {
                        googletag.destroySlots(), next_slot_creator()
                    }), $(".promotionArea").css({
                        height: "",
                        display: ""
                    })
                }, RoomSubView.prototype.showDoubleSizePromotion = function() {
                    var self = this;
                    self.current_promotion_size = "double", self.showPromotionBase(self.createDoubleSizeSlot)
                }, RoomSubView.prototype.showSingleSizePromotion = function() {
                    var self = this;
                    self.current_promotion_size = "single", self.showPromotionBase(self.createSingleSizeSlot)
                }, RoomSubView.prototype.refreshPromotion = function() {
                    googletag.cmd.push(function() {
                        googletag.pubads().refresh()
                    })
                }, RoomSubView.prototype.prepareTask = function() {
                    var self = this;
                    self.task_input = $C("#_taskNameInput").focus(function() {
                        self.expandTaskArea(!0), self.openFold(), $(".promotionArea").animate({
                            height: 0
                        }, function() {
                            $(this).css("display", "none"), self.current_promotion_size = "hide"
                        })
                    }).cwElasticTextArea({
                        maxHeight: function() {
                            var cancel_button = $C("#_taskCancelButton");
                            return $C("body").height() - cancel_button.offset().top - cancel_button.height()
                        },
                        minHeight: function() {
                            var max_height = this.option.maxHeight();
                            return max_height >= boot_1.TM.taskinput_init_height ? boot_1.TM.taskinput_init_height : max_height > boot_1.TM.taskinput_min_height ? max_height : boot_1.TM.taskinput_min_height
                        }
                    });
                    var assign_view_update = null;
                    self.assign_tip = $("#_taskAssignList").cwListTip({
                        search: !0,
                        multiSelect: !0,
                        placeHolder: language_1.Language.getLang("%%%chatroom_search_member%%%"),
                        useHtmlLabel: !0,
                        list: function() {
                            return self.getTaskMemberList(this.data.room_id)
                        },
                        open: function(tipFrom, room_id) {
                            this.data.room_id = room_id
                        },
                        update: function() {
                            null === assign_view_update && (assign_view_update = setTimeout(function() {
                                for (var assign_list = self.assign_tip.getVal(), value = "", assign_length = assign_list.length, i = 0; i < assign_length; i++) {
                                    var aid = assign_list[i];
                                    value += '<div class="addTaskAssignPiece">\n                                        <span class="_taskAssignMemberLabel addTaskAssignPiece__nameText" data-aid="' + aid + '">\n                                          ' + boot_1.CW.getName(aid) + '\n                                        </span>\n                                        <span class="_taskAssignCancel addTaskAssignPiece__removeButton" data-aid="' + aid + '">\n                                          <span class="icoFontCancel addTaskAssignPiece__removeButtonIcon"></span>\n                                          <span class="icoTextHide">' + language_1.Language.getLang("%%%button_delete%%%") + "</span>\n                                        </span>\n                                      </div>"
                                }
                                value ? ($C("#_assignBox").html(value), $C("#_inchargeEmpty").hide()) : ($C("#_assignBox").quickEmpty(), $C("#_inchargeEmpty").show()), self.task_input.resize(), assign_view_update = null
                            }, 100))
                        }
                    }), $C("#_assignButton").click(function() {
                        self.assign_tip.open($(this), boot_1.RM.id)
                    }), $("#_assignBox").on("click", "._taskAssignCancel", function() {
                        var aid = $(this).attr("data-aid");
                        self.assign_tip.select(aid)
                    }).on("mouseover", "._taskAssignMemberLabel", function() {
                        var label = $(this),
                            aid = label.attr("data-aid");
                        $.cwMessageTip.isInit(label[0]) || label.cwMessageTip({
                            message: function() {
                                return boot_1.AC.getName(aid)
                            },
                            delay: boot_1.TM.messagetip_delay
                        }).open()
                    }).on("click", "._taskAssignMemberLabel", function() {
                        return $C("#_assignButton").click(), !1
                    }), $C("#_inchargeEmpty").click(function() {
                        $C("#_assignButton").click()
                    });
                    var quick_assign_tip = $("#_taskAssignQuickList").cwToolTip({
                        offsetTop: 7,
                        open: function() {
                            for (var mem_list = boot_1.RM.getSortedMemberList(), mem_length = mem_list.length, html = "", idx = 0; idx < mem_length; idx++) {
                                var account_id = mem_list[idx];
                                if (html += boot_1.CW.getAvatarPanel(account_id, {
                                        size: "small",
                                        clicktip: !1
                                    }), idx > 7) {
                                    html += '<span class="_taskAssignMore taskAssignMore icoFontActionMore"></span>';
                                    break
                                }
                            }
                            $C("#_assignQuickBox").html(html)
                        },
                        close: function() {}
                    });
                    quick_assign_tip.$el.on("click", "._avatar", function() {
                        var aid = $(this).attr("data-aid");
                        self.assign_tip.select(aid)
                    }).on("click", "._taskAssignMore", function() {
                        quick_assign_tip.close(), $C("#_assignButton").click()
                    }), $("#_taskQuickWrapper").on("mouseenter", function() {
                        quick_assign_tip.isOpen() || self.assign_tip.isOpen() || quick_assign_tip.open($C("#_taskAssignAddArea"))
                    }), $("#_taskLimitAddArea").on("mouseenter", function() {
                        quick_assign_tip.isOpen() && quick_assign_tip.close()
                    }), $("#_chatContent,#_subRoomMemberArea,#_assignButton").on("mouseenter", function() {
                        quick_assign_tip.close()
                    }), $C("#_limitButton").cwDatePicker({
                        dateLabel: $("#_limit"),
                        update: function() {
                            this.getVal() ? $C("#_limitEmpty").hide() : $C("#_limitEmpty").show()
                        }
                    }), $C("#_limitEmpty").click(function() {
                        $C("#_limitButton").click()
                    }), $("#_taskAddButton").click(function() {
                        if (!boot_1.RM.id) return void boot_1.CW.alert(language_1.Language.getLang("%%%error_no_select%%%"));
                        if (!boot_1.RM.view.disabled_send) {
                            var task_name = S(self.task_input.getVal()).trimRight().s;
                            if (0 != task_name.length) {
                                var room_id = boot_1.RM.id,
                                    datepicker = $C("#_limitButton").cwDatePicker(),
                                    task_limit = datepicker.getVal(),
                                    assign_list = self.getTaskAssignList();
                                if (!assign_list.length) return void boot_1.CW.alert(language_1.Language.getLang("%%%chatsend_error_no_incharge%%%"));
                                var task_data = task_name + "|" + assign_list.join(",") + "|" + task_limit;
                                self.latest_task != task_data && (self.latest_task = task_data, self.task_input.setVal(""), self.clearTaskAssign(), datepicker.setVal(""), task_name = boot_1.CS.convertToSend(task_name), boot_1.TREASURE.trackEvent("room_detail", "click", {
                                    label: "add_task_button"
                                }), self.model.addTask(room_id, task_name, task_limit, assign_list, function() {
                                    self.initTaskArea(), self.latest_task = ""
                                }, function(error) {
                                    error ? boot_1.CW.alert(error) : boot_1.CW.alert(language_1.Language.getLang("%%%chatsend_error_send_task%%%")), self.latest_task = "", boot_1.RL.selectRoom(room_id), self.task_input.setVal(task_name), self.setTaskAssign(assign_list), datepicker.setVal(task_limit)
                                }))
                            }
                        }
                    }).keydown(function(e) {
                        9 != e.keyCode && 13 == e.keyCode && $(this).click()
                    }), $("#_taskCancelButton").click(function() {
                        self.initTaskArea(), boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "task_add_cancel"
                        })
                    }).keydown(function(e) {
                        9 != e.keyCode && 13 == e.keyCode && $(this).click()
                    })
                }, RoomSubView.prototype.initTaskArea = function() {
                    return $C("#_taskNameInput").cwElasticTextArea().setVal("").clearFocused(), $C("#_taskAddArea").addClass("_taskAddAreaClose"), $C("#_taskAddMeta").hide(), $C("#_limitButton").cwDatePicker().today(), boot_1.RM && 1 == Object.keys(boot_1.RM.member_dat).length && void 0 != boot_1.RM.member_dat[boot_1.AC.myid] ? boot_1.RS.view.setTaskAssign([boot_1.AC.myid]) : boot_1.RS.view.clearTaskAssign(), this
                }, RoomSubView.prototype.prepareNavigation = function() {
                    return $("#_chatTabRoomInfo").click(function() {
                        $("#_chatRoomDescriptionNav").find("li").removeClass("descriptionNavSelected"), $("#_chatTabRoomInfo").addClass("descriptionNavSelected"), $("#_subRoomInfoTabContent").show(), $("#_subRoomTaskTabContent").hide()
                    }), $("#_chatTabTask").click(function() {
                        $("#_chatRoomDescriptionNav").find("li").removeClass("descriptionNavSelected"), $("#_chatTabTask").addClass("descriptionNavSelected"), $("#_subRoomInfoTabContent").hide(), $("#_subRoomTaskTabContent").show()
                    }), this
                }, RoomSubView.prototype.prepareMember = function() {
                    var self = this;
                    $C("#_subRoomMemberArea").on("click", "#_openMemberDetail", function() {
                        self.openMemberDetailDialog(boot_1.RM.id)
                    });
                    var member_moretip_role = "",
                        member_moretip = $("#_showMoreMemberTip").cwListTip({
                            search: !0,
                            useHtmlLabel: !0,
                            placeHolder: language_1.Language.getLang("%%%chatroom_search_member%%%"),
                            multiSelect: !1,
                            selectable: !1,
                            list: function() {
                                if (!boot_1.RM) return [];
                                var mem_list = [];
                                for (var aid in boot_1.RM.member_dat) "nocontact" == member_moretip_role ? boot_1.AC.isContact(aid) || mem_list.push(aid) : boot_1.RM.member_dat[aid] == member_moretip_role && mem_list.push(aid);
                                boot_1.RM.sortMember(mem_list);
                                for (var list = [], mem_length = mem_list.length, idx = 0; idx < mem_length; idx++) {
                                    var account_id = mem_list[idx];
                                    if (account_id != boot_1.AC.myid) {
                                        var name = boot_1.AC.getName(account_id);
                                        list.push({
                                            keys: boot_1.AC.getSearchKeys(account_id),
                                            value: account_id,
                                            label: boot_1.CW.getAvatarPanel(account_id, {
                                                clicktip: !1,
                                                size: "small"
                                            }) + '<p class="autotrim">' + common_1.escape_html(name) + "</p>"
                                        })
                                    }
                                }
                                return list
                            },
                            select: function(account_id) {
                                boot_1.AC.view.openProfileWindow(account_id), this.close()
                            }
                        });
                    $("#_memberDetailDialog").on("click", "._showMoreMember", function() {
                        var link = $(this);
                        member_moretip_role = link.attr("data-role"), member_moretip.open(link)
                    })
                }, RoomSubView.prototype.isFolded = function() {
                    return this.is_folded
                }, RoomSubView.prototype.openFold = function() {
                    var self = this;
                    self.isFolded() && self.toggleFold()
                }, RoomSubView.prototype.toggleFold = function() {
                    var self = this;
                    if (!self.is_expanding) {
                        boot_1.TREASURE.trackEvent("message_input", "click", {
                            label: "toggle_fold_room_sub"
                        });
                        var chatContent = $("#_chatContent"),
                            current = chatContent.css("right"),
                            expand_right = $("#_mainContentExpandRight");
                        if (chatContent.addClass("foldAnimRight"), self.is_expanding = !0, "0px" == current) {
                            self.is_folded = !1, chatContent.css("right", $("#_subContent").outerWidth() + "px");
                            var arrow_1 = expand_right.find(".icoFontTriangleLeft").addClass("rotate180");
                            setTimeout(function() {
                                Cookies.remove("ui_fold_roomsub"), arrow_1.removeClass("rotate180 icoFontTriangleLeft").addClass("icoFontTriangleRight"), expand_right.addClass("_showDescription"), chatContent.removeClass("foldAnimRight"), boot_1.CW.view.resizeLayout()
                            }, 300)
                        } else {
                            self.is_folded = !0, chatContent.css("right", "0px");
                            var arrow_2 = expand_right.find(".icoFontTriangleRight").addClass("rotate180");
                            setTimeout(function() {
                                Cookies.set("ui_fold_roomsub", "1", {
                                    expires: 3650
                                }), arrow_2.removeClass("rotate180 icoFontTriangleRight").addClass("icoFontTriangleLeft"), expand_right.removeClass("_showDescription"), chatContent.removeClass("foldAnimRight"), boot_1.CW.view.resizeLayout()
                            }, 300)
                        }
                        setTimeout(function() {
                            self.is_expanding = !1
                        }, 200)
                    }
                }, RoomSubView.prototype.resizeWidth = function(width) {
                    var self = this;
                    width < boot_1.TM.subcontent_min_width && (width = boot_1.TM.subcontent_min_width);
                    var current_width = $C("#_subContent").width();
                    return !($C("#_timeLine").width() < boot_1.TM.timeline_min_width && current_width < width) && ($C("#_chatContent").css("right", width + "px"), $C("#_subContent").width(width), $C("#_subContentArea").width(width), Cookies.set("ui_subcontent_width", width, {
                            expires: 3650
                        }), boot_1.CW.view.resizeLayout(), self)
                }, RoomSubView.prototype.prepareGroupCall = function() {
                    var self = this;
                    self.group_call_dialog = $("#_groupCallDialog").cwDialog({
                        title: "ChatWork Live",
                        width: "auto",
                        height: "auto",
                        open: function(room_id) {
                            $("#_groupCallDialog .chatroomTitle").find(".avatarGroup").attr("src", boot_1.RM.getIcon("src")).end().find(".chatroomTitleMeta").text(boot_1.RM.getName({
                                nameonly: !0
                            })).end(), this.data.room_id = room_id, this.data.select_flag = {}, $C("#_videoChatContactFilter").cwSearchBox().setVal("");
                            var member_aid_list = [],
                                room = boot_1.RL.rooms[room_id];
                            for (var aid in room.member_dat) aid != boot_1.AC.myid && member_aid_list.push(aid);
                            if (member_aid_list.length > 0) {
                                room.sortMember(member_aid_list), $C("#_groupCallMember").quickEmpty();
                                for (var html = "", idx = 0; idx < member_aid_list.length; idx++) {
                                    var aid = member_aid_list[idx];
                                    html += '<div class="_groupCallMember _cwSelectableRow groupCallMember" data-aid="' + aid + '"><div class="groupCallAvatar">' + $.cwCheckBox.create(!1, "", aid, {
                                            "data-theme": "green"
                                        }) + boot_1.CW.getAvatarPanel(aid, {
                                            size: "medium",
                                            clicktip: !1
                                        }) + "</div><p>" + boot_1.CW.getName(aid) + "</p></div>"
                                }
                                $C("#_groupCallMember").html(html)
                            } else $C("#_groupCallMember").html('<div class="groupcallNoMembers">' + language_1.Language.getLang("%%%live_member_not_found%%%") + "</div>")
                        },
                        postOpen: function() {
                            $C("#_videoChatContactFilter").focus()
                        },
                        buttonLabels: [language_1.Language.getLang("%%%live_video%%%"), language_1.Language.getLang("%%%live_voice%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 2,
                        buttonClick: function(index) {
                            switch (index) {
                                case 0:
                                case 1:
                                    var aid_list = [boot_1.AC.myid];
                                    for (var aid in this.data.select_flag) aid_list.push(aid);
                                    var type = "voice";
                                    0 == index && (type = "video");
                                    var url = boot_1.CW.getLiveUrl(this.data.room_id, aid_list, type);
                                    window.open(url, "cwlive", "menubar=0,toolbar=0,titlebar=0,status=0,scrollbars=0,resizable=1"), this.close()
                            }
                        }
                    }), $("#_groupCallCheckAll").click(function() {
                        $C("#_groupCallMember").find("._cwCBUnchecked").each(function() {
                            var checkbox = $(this);
                            checkbox.isVisible() && checkbox.cwCheckBox().check()
                        })
                    }), $("#_groupCallUnCheckAll").click(function() {
                        $C("#_groupCallMember").find("._cwCBChecked").each(function() {
                            var checkbox = $(this);
                            checkbox.isVisible() && checkbox.cwCheckBox().unCheck()
                        })
                    }), $C("#_groupCallMember").on("cwCheckBox_update", function(event, is_check, account_id) {
                        is_check ? self.group_call_dialog.data.select_flag[account_id] = is_check : self.group_call_dialog.data.select_flag[account_id] && delete self.group_call_dialog.data.select_flag[account_id]
                    }), $("#_videoChatContactFilter").cwSearchBox({
                        update: function() {
                            var room_id = self.group_call_dialog.data.room_id,
                                select_flag = self.group_call_dialog.data.select_flag,
                                room = boot_1.RL.rooms[room_id],
                                html = "",
                                search_key_list = {};
                            Object.keys(room.member_dat).filter(function(account_id) {
                                return account_id !== String(boot_1.AC.myid)
                            }).map(function(account_id) {
                                search_key_list[parseInt(account_id, 10)] = boot_1.AC.getSearchKeys(account_id)
                            });
                            var filter_query = this.getVal(),
                                member_aid_list = memberSearch_1.memberSearch(search_key_list, filter_query);
                            if ($C("#_groupCallMember").quickEmpty(), 0 === member_aid_list.length) return html = '<div class="groupcallNoMembers">' + language_1.Language.getLang("%%%live_member_not_found%%%") + "</div>", void $C("#_groupCallMember").html(html);
                            room.sortMember(member_aid_list);
                            for (var idx = 0; idx < member_aid_list.length; idx++) {
                                var aid = member_aid_list[idx],
                                    checked = Boolean(select_flag[aid]);
                                html += '<div class="_groupCallMember _cwSelectableRow groupCallMember" data-aid="' + aid + '"><div class="groupCallAvatar">' + $.cwCheckBox.create(checked, "", aid, {
                                        "data-theme": "green"
                                    }) + boot_1.CW.getAvatarPanel(aid, {
                                        size: "medium",
                                        clicktip: !1
                                    }) + "</div><p>" + boot_1.CW.getName(aid) + "</p></div>"
                            }
                            $C("#_groupCallMember").html(html)
                        }
                    })
                }, RoomSubView.prototype.openGroupCall = function(room_id) {
                    var self = this;
                    if (!boot_1.RL.rooms[room_id]) return !1;
                    self.group_call_dialog || self.prepareGroupCall(), self.group_call_dialog.open(room_id)
                }, RoomSubView.prototype.openMemberDetailDialog = function(room_id) {
                    var self = this,
                        member_detail_dialog = $("#_memberDetailDialog").cwDialog({
                            title: language_1.Language.getLang("%%%chatroom_member_detail%%%"),
                            width: 600,
                            autoOpen: !0,
                            buttonLabels: [language_1.Language.getLang("%%%button_close%%%")],
                            buttonCancel: 0,
                            buttonClick: function(index) {
                                switch (index) {
                                    case 0:
                                        this.close()
                                }
                            },
                            open: function() {
                                self.buildMember(room_id), $("#_memberDetailContent").html(self.member_detail_html)
                            }
                        });
                    $("#_memberDetailEditMember").on("click", this, function() {
                        member_detail_dialog.close(), boot_1.RD.view.editRoomMember(boot_1.RM.id)
                    })
                }, RoomSubView.prototype.buildMember = function(room_id) {
                    var self = this,
                        room = boot_1.RL.rooms[room_id];
                    if (!room) return this;
                    for (var mem_list = room.getSortedMemberList(), mem_length = mem_list.length, member_prev_show_max = boot_1.TM.member_preview_show_max, html_prev = "", member_show_max = boot_1.TM.member_detail_show_max, html_member = {
                        admin: "",
                        member: "",
                        readonly: "",
                        nocontact: "",
                        requested: ""
                    }, member_count = {
                        admin: 0,
                        member: 0,
                        readonly: 0,
                        nocontact: 0,
                        requested: 0
                    }, room_type = room.type, idx = 0; idx < mem_length; idx++) {
                        var account_id = mem_list[idx],
                            role = room.member_dat[account_id];
                        member_count[role] < member_show_max && (html_member[role] += boot_1.CW.getAvatarPanel(account_id, {
                            size: "small"
                        })), idx < member_prev_show_max && (html_prev += '<li class="chatRoomHeaderMemberList__item" role="listitem" aria-label="' + common_1.escape_html(boot_1.AC.getName(account_id)) + '">' + boot_1.CW.getAvatarPanel(account_id) + "</li>"), member_count[role]++, "group" == room_type && (boot_1.AC.isContact(account_id) || (boot_1.AC.myrequest_dat[account_id] ? (member_count.requested < member_show_max && (html_member.requested += boot_1.CW.getAvatarPanel(account_id, {
                            size: "small"
                        })), member_count.requested++) : (member_count.nocontact < member_show_max && (html_member.nocontact += boot_1.CW.getAvatarPanel(account_id, {
                            size: "small"
                        })), member_count.nocontact++)))
                    }
                    mem_length > member_prev_show_max ? $("#_openMemberDetail").find("._memberDetailLabel").show().text(function() {
                        var show_member = mem_length - member_prev_show_max,
                            member = Math.min(show_member, 99);
                        return member === show_member ? "+" + member : member + "+"
                    }).end().find("._memberDetailIcon").hide().end() : $("#_openMemberDetail").find("._memberDetailLabel").hide().end().find("._memberDetailIcon").show().end();
                    for (var member_box = [{
                        key: "admin",
                        label: language_1.Language.getLang("%%%admin%%%")
                    }, {
                        key: "member",
                        label: language_1.Language.getLang("%%%member%%%")
                    }, {
                        key: "readonly",
                        label: language_1.Language.getLang("%%%readonly%%%")
                    }, {
                        key: "nocontact",
                        label: language_1.Language.getLang("%%%chatroom_member_nocontact%%%"),
                        boxClass: "noContact",
                        after: '<div class="addAllContactBtnArea"><div id="_addNoContactMember" data-rid="' + room_id + '" class="button">' + language_1.Language.getLang("%%%chatroom_member_add_contact%%%") + "</div></div>"
                    }, {
                        key: "requested",
                        label: language_1.Language.getLang("%%%contact_menu_myrequest%%%"),
                        boxClass: "noContact"
                    }], html = "", i = 0, mbox_len = member_box.length; i < mbox_len; i++) {
                        var mitem = member_box[i],
                            key = mitem.key;
                        if (html_member[key]) {
                            var box_class = "subContentMemberGroup";
                            void 0 != mitem.boxClass && (box_class += " " + mitem.boxClass), html += '<div class="' + box_class + '">', mitem.label && (html += '<div class="subContentGroupInner"><div class="memberListLabel">' + mitem.label + "：</div><div>" + html_member[key]), member_count[key] > member_show_max && (html += '<a class="_showMoreMember showMoreMember" data-role="' + key + '">' + language_1.Language.getLang("%%%chatroom_member_rest_number%%%", {
                                    rest_number: (member_count[key] - member_show_max).toLocaleString()
                                }) + "</a>"), mitem.label && (html += "</div></div>"), mitem.after && (html += mitem.after), html += "</div>"
                        }
                    }
                    return "contact" === room_type ? ($C("#_subRoomMemberNum").hide(), $C("#_subRoomMemberList").hide(), self.member_detail_html = "") : ($C("#_subRoomMemberNum").show().text(" (" + mem_length.toLocaleString() + ")"), $C("#_subRoomMemberList").html(html_prev).show(), self.member_detail_html = html), "admin" === boot_1.RM.member_dat[boot_1.AC.myid] && (self.member_detail_html += '<div><a id="_memberDetailEditMember">' + language_1.Language.getLang("%%%member_detail_edit_member_label%%%") + "</a></div>"), this
                }, RoomSubView.prototype.setTask = function(task_name, assign_list, limit_date, is_add, is_focus) {
                    var self = this;
                    return task_name ? (self.expandTaskArea(!1), is_add ? self.task_input.setVal(self.task_input.getVal() + task_name) : self.task_input.setVal(task_name)) : self.task_input.setVal(task_name), is_focus && self.task_input.focus(), assign_list && assign_list.length > 0 && self.setTaskAssign(assign_list), limit_date && $C("#_limitButton").cwDatePicker().setVal(limit_date), this
                }, RoomSubView.prototype.expandTaskArea = function(is_animate) {
                    return $C("#_taskAddArea").hasClass("_taskAddAreaClose") && ($C("#_taskAddArea").removeClass("_taskAddAreaClose"), is_animate ? $C("#_taskAddMeta").slideDown("fast") : $C("#_taskAddMeta").show()), this
                }, RoomSubView.prototype.getTaskAssignList = function() {
                    return this.assign_tip.getVal()
                }, RoomSubView.prototype.setTaskAssign = function(assign_list) {
                    return this.assign_tip.setVal(assign_list), this
                }, RoomSubView.prototype.clearTaskAssign = function() {
                    return this.assign_tip.clear(), this
                }, RoomSubView.prototype.getTaskMemberList = function(room_id) {
                    for (var mem_list = boot_1.RL.rooms[room_id].getSortedMemberList(), mem_length = mem_list.length, assign_list = [], idx = 0; idx < mem_length; idx++) {
                        var account_id = mem_list[idx],
                            name = boot_1.AC.getName(account_id);
                        assign_list.push({
                            keys: boot_1.AC.getSearchKeys(account_id),
                            value: account_id,
                            label: boot_1.CW.getAvatarPanel(account_id, {
                                clicktip: !1,
                                size: "small"
                            }) + '<p class="autotrim">' + common_1.escape_html(name) + "</p>"
                        })
                    }
                    return assign_list
                }, RoomSubView.prototype.showSetting = function() {
                    $C("#_chatRoomSetting").show()
                }, RoomSubView.prototype.hideSetting = function() {
                    $C("#_chatRoomSetting").hide()
                }, RoomSubView.prototype.resizeRoomInfo = function(subContentArea_inner_height) {
                    var self = this;
                    subContentArea_inner_height && (self.sub_content_height = subContentArea_inner_height);
                    var desc_content_height = $C("#_subRoomDescription").outerHeight(),
                        roominfo_title_height = $C("#_subRoomInfoTitle").outerHeight(),
                        max_desc_height = self.sub_content_height - boot_1.TM.tasklist_min_height - roominfo_title_height;
                    if (desc_content_height < max_desc_height) $C("#_subRoomDescriptionWrapper").removeClass("subRoomInformation__description--overflow").css({
                        height: ""
                    }).data("is_overflow", !1);
                    else {
                        var desc_height = max_desc_height,
                            description_max_height = Math.max(boot_1.TM.description_max_height, max_desc_height);
                        desc_height > description_max_height && (desc_height = description_max_height), desc_height < boot_1.TM.description_min_height && (desc_height = boot_1.TM.description_min_height), $C("#_subRoomDescriptionWrapper").addClass("subRoomInformation__description--overflow").css({
                            height: desc_height
                        }).data("is_overflow", !0)
                    }
                }, RoomSubView
            }();
        exports.RoomSubView = RoomSubView
    }, {
        "../../core/lib/common": 308,
        "../../domain/member/memberSearch": 323,
        "../controller/boot": 340,
        "../lib/language": 384,
        "js-cookie": 78,
        string: 290
    }],
    463: [function(require, module, exports) {
        "use strict";

        function RoomView(model) {
            var self = this;
            self.model = model, self.disabled_send = !1, self.dialog_resized = !1
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var boot_1 = require("../controller/boot"),
            common_1 = require("../../core/lib/common"),
            language_1 = require("../lib/language");
        exports.RoomView = RoomView, window.RoomView = RoomView,
            function() {
                var room_request_dialog, last_build = 0;
                RoomView.prototype = {
                    getIcon: function(type, size) {
                        var aid = this.model.getAccountId();
                        void 0 == type && (type = "html");
                        var src = "";
                        switch (src = this.model.icon_preset ? CF_PATH + "/icon/ico_" + this.model.icon + ".png" : CF_PATH + "/icon/" + this.model.icon, type) {
                            case "html":
                                ;
                                return aid > 0 ? boot_1.CW.getAvatarPanel(aid, {
                                    clicktip: !1,
                                    hovertip: !1,
                                    size: size
                                }) : '<img class="avatarGroup ' + boot_1.CW.view.getAvatarClass(size) + '" src="' + src + '"/>';
                            case "src":
                                return aid > 0 ? boot_1.CW.getAvatarPanel(aid, {
                                    src: !0
                                }) : src
                        }
                    },
                    getViewStat: function() {
                        var view_stat = {},
                            timeline_bottom = $C("#_chatSendArea").position().top;
                        view_stat.last_read_id = 0, view_stat.noview_num = 0;
                        for (var chat_list = this.model.timeline.getChatList(), length = chat_list.length - 1, i = length; i >= 0; i--) {
                            var id = chat_list[i].id,
                                chat = $("#_messageId" + id);
                            if (chat.length > 0) {
                                if (timeline_bottom > chat.position().top) {
                                    view_stat.last_read_id = id;
                                    break
                                }
                                view_stat.noview_num++
                            }
                        }
                        return view_stat
                    },
                    addSendingChat: function(sending_id) {
                        return this.model.timeline.build({
                            smoothScroll: !0,
                            sendingId: sending_id
                        }), this
                    },
                    build: function(user_option) {
                        var self = this,
                            move_room = !1,
                            option = $.extend({
                                messageHashUpdate: !0,
                                readLock: !1
                            }, user_option),
                            room = this.model;
                        if (boot_1.RM && last_build || (boot_1.RMUpdate(room), last_build = boot_1.RM.id, boot_1.CS.initChatText(), this.bindBeforeUnload()), boot_1.RM.id != room.id) {
                            boot_1.CW.read(0), boot_1.RM.reading && $C("#_roomListItems").find("[data-rid=" + boot_1.RM.id + "]").find("._unreadBadge").css("opacity", "0.5"), boot_1.messageArea.isEmpty() ? boot_1.CS.deleteChatDraft(boot_1.RM.id) : (boot_1.CS.setChatDraft(boot_1.RM.id, boot_1.messageArea.getValue(), boot_1.CS.chatedit_id), boot_1.CS.view.clearChatText()), boot_1.CS.clearChatEdit();
                            var task_name = $C("#_taskNameInput").val();
                            task_name ? boot_1.CS.setTaskDraft(boot_1.RM.id, task_name, boot_1.RS.view.getTaskAssignList(), $C("#_limitButton").cwDatePicker().getVal()) : boot_1.CS.deleteTaskDraft(boot_1.RM.id), boot_1.RMUpdate(room), boot_1.CS.initChatText(), $C("#_subRoomDescriptionWrapper").scrollTop(0), move_room = !0
                        }
                        var hash = "!rid" + boot_1.RM.id;
                        option.messageHashUpdate && option.jumpTo && (hash += "-" + option.jumpTo), $(window).unbind("hashchange", $.hashchangeHandler), document.location.hash = hash, setTimeout(function() {
                            $(window).bind("hashchange", $.hashchangeHandler)
                        });
                        var pin_html = "";
                        pin_html = boot_1.RL.rooms[boot_1.RM.id].sticky ? '<span class="_pin _pinRid' + boot_1.RM.id + ' ico19PinOn"></span>' : '<span class="_pin _pinRid' + boot_1.RM.id + ' ico19PinOff"></span>';
                        var room_name = boot_1.CW.getRoomName(room.id);
                        $C("#_roomTitle").html('<span class="_roomTitleText chatRoomHeader__roomTitle">' + room_name + "</span>" + pin_html), $C("#_subRoomName").html(room_name), $C("#_subRoomIcon").prop("src", self.model.getIcon("src")), "group" === self.model.type ? ($C("#_subRoomIcon").removeClass("subRoomInformation__avatar--user"), $C("#_subRoomIcon").addClass("subRoomInformation__avatar--group")) : ($C("#_subRoomIcon").removeClass("subRoomInformation__avatar--group"), $C("#_subRoomIcon").addClass("subRoomInformation__avatar--user")), "" == room.description ? (0 == room.buildtime ? $C("#_subRoomDescription").html('<div class="subRoomInformation__descriptionLoadding"><img src="./imagenew/all/common/loader/img_loader_gray.gif" alt="Loading" />' + language_1.Language.getLang("%%%loading%%%") + "</div>") : $C("#_subRoomDescription").html('<span class="subRoomInformation__emptyText">' + language_1.Language.getLang("%%%chatroom_desc_none%%%") + "</span>"), boot_1.RS.view.resizeRoomInfo()) : ($C("#_subRoomDescription").html('<div class="subRoomInformation__descriptionLoadding"><img src="./imagenew/all/common/loader/img_loader_gray.gif" alt="Loading" />' + language_1.Language.getLang("%%%loading%%%") + "</div>"), $C("#_subRoomDescription").html("<pre>" + boot_1.CW.renderMessage(room.description) + "</pre>"), setTimeout(function() {
                            boot_1.RS.view.resizeRoomInfo()
                        })), room.member_dat[boot_1.AC.myid] ? this.buildMemberList() : self.model.refreshMember();
                        var scroll_to = null;
                        if (option.jumpTo ? scroll_to = option.jumpTo : option.scrollTo && (scroll_to = option.scrollTo), !scroll_to && move_room) {
                            var unread_num = room.getUnreadNum(),
                                chat_list = 0 == boot_1.ST.data.show_delmessage ? this.model.timeline.getChatListWithoutDeleted() : this.model.timeline.getChatList(),
                                unread_chat_index = chat_list.length - unread_num,
                                unread_chat = chat_list[unread_chat_index];
                            scroll_to = unread_num && unread_chat ? unread_chat.id : "End"
                        }
                        if (!this.disabled_send) {
                            var chat_draft = boot_1.CS.getChatDraft(boot_1.RM.id);
                            this.restoreChatDraft(chat_draft);
                            var task_draft = boot_1.CS.getTaskDraft(boot_1.RM.id);
                            this.restoreTaskDraft(task_draft)
                        }
                        option.scrollTo = scroll_to, room.timeline.build(option), room.rswitch = !1, boot_1.CW.is_business && boot_1.ST.data.show_external && (room.isInternal() ? (boot_1.messageArea.clearExternalClass(), $C("#_externalInfo").hide()) : (boot_1.messageArea.setExternalClass(), $C("#_externalInfo").show())), boot_1.CS.view.resizeChatArea(!0), room.filelist.build(), room.tasklist.build(), !1 === option.readLock && boot_1.wfocus && room.getUnreadNum() > 0 && boot_1.CW.read(), room.buildtime = Date.now()
                    },
                    buildHome: function() {},
                    buildMemberList: function() {
                        $C("#_subRoomDescriptionArea").show(), $C("#_roomRequestArea").hide(), $C("#_subEditRoomInfo").hide(), $C("#_subRoomProfileLinkArea").hide(), $C("#_subRoomJoinLinkArea").hide(), $C("#_subEditMember").hide(), $C("#_groupCall").hide(), $C("#_directCall").hide(), $C("#_showOnlyAdmin").hide(), $C("#_subRoomMemberArea").hide(), $C("#_chatNavMember").hide(), $C("#_chatSendTabTask").hide(), $C("#_file").hide(), $C("#_to").hide(), boot_1.RS.view.hideSetting();
                        var setLiveCallBtn = function(live_type, account_id) {
                            if ("ipad" !== MOBILE) {
                                var show_btn = $C("#_" + live_type).show();
                                return "groupCall" === live_type ? show_btn : show_btn.attr("data-aid", account_id)
                            }
                        };
                        switch (this.model.type) {
                            case "group":
                                switch (boot_1.RS.view.showSetting(), $C("#_chatNavMember").show(), this.model.allow_see_member || $C("#_showOnlyAdmin").show(), this.model.member_dat[boot_1.AC.myid]) {
                                    case "admin":
                                        if (boot_1.CS.view.enableChatArea(), boot_1.TK.view.enableTaskArea(), boot_1.FL.view.enableFileArea(), this.disabled_send = !1, $C("#_subEditRoomInfo").show(), $C("#_to").show(), $C("#_subRoomMemberArea").show(), $C("#_subEditMember").show(), setLiveCallBtn("groupCall"), this.model.public) {
                                            var request_num = this.model.member_request.length;
                                            request_num > 0 && $C("#_roomRequestArea").html('<span class="icoFontInfo marginRight"></span>' + language_1.Language.getLang("%%%chatroom_member_requests_notice%%%", {
                                                    request_num: request_num
                                                })).show()
                                        }
                                        break;
                                    case "member":
                                        this.model.allow_see_member && ($C("#_to").show(), $C("#_subRoomMemberArea").show(), setLiveCallBtn("groupCall")), this.model.allow_send_message ? (boot_1.CS.view.enableChatArea(), this.disabled_send = !1, this.model.allow_upload_file ? boot_1.FL.view.enableFileArea() : boot_1.FL.view.disableFileArea(), this.model.allow_add_task ? boot_1.TK.view.enableTaskArea() : boot_1.TK.view.disableTaskArea()) : (boot_1.CS.view.disableChatArea(), this.disabled_send = !0);
                                        break;
                                    case "readonly":
                                        this.model.allow_see_member && ($C("#_to").show(), $C("#_subRoomMemberArea").show(), setLiveCallBtn("groupCall")), boot_1.TK.view.disableTaskArea(), boot_1.CS.view.disableChatArea(), boot_1.FL.view.disableFileArea(), this.disabled_send = !0
                                }
                                var join_link = this.model.getJoinLink();
                                join_link && ($C("#_subRoomJoinLink").attr("href", join_link), $C("#_subRoomJoinLinkArea").show());
                                break;
                            case "contact":
                                boot_1.RS.view.showSetting(), $C("#_subEditRoomInfo").show(), $C("#_subRoomProfileLinkArea").show(), boot_1.CS.view.enableChatArea(), boot_1.TK.view.enableTaskArea(), boot_1.FL.view.enableFileArea(), this.disabled_send = !1;
                                var account_id = 0;
                                for (var aid in this.model.member_dat) boot_1.AC.myid != aid && (account_id = aid);
                                account_id && $C("#_subRoomProfileLink").attr("data-aid", account_id), $C("#_to").show(), setLiveCallBtn("directCall", account_id);
                                break;
                            case "my":
                                $C("#_subEditRoomInfo").show(), boot_1.CS.view.enableChatArea(), boot_1.TK.view.enableTaskArea(), boot_1.FL.view.enableFileArea(), this.disabled_send = !1
                        }
                        boot_1.RS.view.buildMember(this.model.id)
                    },
                    prepareRequestDialog: function() {
                        var room_req_list = $("#_roomRequestList");
                        room_request_dialog = $("#_roomRequestDialog").cwDialog({
                            title: language_1.Language.getLang("%%%room_request_title%%%"),
                            width: 650,
                            buttonLabels: [language_1.Language.getLang("%%%button_cancel%%%")],
                            buttonCancel: 0,
                            open: function(room_id) {
                                var html_request = "";
                                room_req_list.empty(), this.data.room_id = room_id;
                                var member_list = boot_1.RL.rooms[room_id].member_request;
                                if (member_list.length > 0) {
                                    for (var i = 0, len = member_list.length; i < len; i++) {
                                        var member_dat = member_list[i];
                                        html_request += '<div class="_roomRequestRow roomRequestRow">\n                                    <div class="roomRequestRow__avatar">' + boot_1.CW.getAvatarPanel(member_dat.aid, {
                                                hovertip: !1,
                                                clicktip: !1,
                                                size: "medium"
                                            }) + '</div>\n                                    <div class="roomRequestRow__name">\n                                        <p class="autotrim">' + common_1.escape_html(member_dat.nm) + '</p>\n                                    </div>\n                                    <div class="roomRequestRow__actionContainer">\n                                        <div class="roomRequestRow__roleSelect">\n                                            ( ' + language_1.Language.getLang("%%%role%%%") + ": " + $.cwSelectBox.create([{
                                                value: "admin",
                                                label: language_1.Language.getLang("%%%admin%%%")
                                            }, {
                                                value: "member",
                                                label: language_1.Language.getLang("%%%member%%%")
                                            }, {
                                                value: "readonly",
                                                label: language_1.Language.getLang("%%%readonly%%%")
                                            }], "", "member", {
                                                class: "_roomRoleSelect"
                                            }) + ' )\n                                        </div>\x3c!--\n                                        --\x3e<div class="_roomRequestReject roomRequestRow__rejectButton button buttonGray">\n                                            ' + language_1.Language.getLang("%%%button_reject_long%%%") + '\n                                        </div>\x3c!--\n                                        --\x3e<div class="_roomRequestAccept roomRequestRow__acceptButton button btnPrimary">\n                                            ' + language_1.Language.getLang("%%%button_accept_long%%%") + '\n                                        </div>\n                                    </div>\n                                    <div style="display:none;">\n                                        <input type="hidden" value="' + member_dat.aid + '" class="_roomRequestAid" />\n                                    </div>\n                                </div>'
                                    }
                                    room_req_list.html(html_request)
                                }
                            },
                            postOpen: function() {
                                if (!this.dialog_resized) {
                                    this.dialog_resized = !0;
                                    var select_box = room_req_list.find("._roomRequestRow:last .selectboxContent"),
                                        select_box_height = select_box.height();
                                    select_box_height += parseInt(select_box.css("padding-top"), 10), select_box_height += parseInt(select_box.css("padding-bottom"), 10), select_box_height += parseInt(select_box.css("border-top-width"), 10), select_box_height += parseInt(select_box.css("border-bottom-width"), 10);
                                    var max_height = room_request_dialog.getMaxHeight(),
                                        dialog = room_req_list.parents("#_roomRequestDialog"),
                                        dialog_content = dialog.parent("._cwDGWrapper"),
                                        dialog_content_height = dialog_content.height();
                                    dialog_content_height += parseInt(dialog_content.css("border-top-width"), 10), dialog_content_height += parseInt(dialog_content.css("border-bottom-width"), 10);
                                    var dialog_height_diff = max_height - dialog_content_height;
                                    dialog_height_diff > select_box_height && (dialog_height_diff = select_box_height);
                                    var room_request = dialog.children(".roomRequest"),
                                        room_request_height = room_request.height(),
                                        room_request_max = parseInt(room_request.css("max-height"), 10),
                                        room_request_diff = room_request_max - room_request_height;
                                    dialog_height_diff > room_request_diff && (dialog_height_diff = room_request_diff), dialog_content.height(dialog_content_height + dialog_height_diff);
                                    var dialog_content_margin = parseInt(dialog_content.css("margin-top"), 10);
                                    dialog_content.css("margin-top", dialog_content_margin - dialog_height_diff / 2 + "px"), dialog.height(dialog.height() + dialog_height_diff), room_request.height(room_request.height() + dialog_height_diff);
                                    room_request.children("._overflow").css("padding-bottom", select_box_height + "px")
                                }
                            }
                        });
                        var update_room_request = function(idx, approval) {
                            var row = room_req_list.find("._roomRequestRow").eq(idx),
                                role_box = row.find("._roomRoleSelect");
                            row.find("button").button("disable"), role_box.prop("disabled", !0);
                            var aid = row.find("._roomRequestAid").val(),
                                role = role_box.cwSelectBox().getVal(),
                                param = {
                                    rid: room_request_dialog.data.room_id,
                                    aid: aid,
                                    role: role
                                };
                            param.cmd = approval ? "accept_join_room" : "reject_join_room", boot_1.CW.post("gateway.php", param, function(json) {
                                json.error ? (void 0 != json.message && boot_1.CW.alert(json.message), row.find("button").button("enable"), role_box.prop("disabled", !1)) : (row.fadeOut(function() {
                                    room_req_list.find("._roomRequestRow:visible").length || room_request_dialog.close()
                                }), boot_1.CW.watch())
                            })
                        };
                        room_req_list.on("click", "._roomRequestAccept", function() {
                            var idx = room_req_list.find("._roomRequestAccept").index(this);
                            update_room_request(idx, !0)
                        }).on("click", "._roomRequestReject", function() {
                            var idx = room_req_list.find("._roomRequestReject").index(this);
                            update_room_request(idx, !1)
                        })
                    },
                    showRequestDialog: function() {
                        room_request_dialog || this.prepareRequestDialog(), room_request_dialog.open(this.model.id)
                    },
                    bindBeforeUnload: function() {
                        $(window).bind("beforeunload", function() {
                            boot_1.CW.view.setDrafts()
                        })
                    },
                    restoreChatDraft: function(draft) {
                        draft.text && (boot_1.CS.view.restoreChatDraft(draft.text), draft.edit_id && boot_1.CS.setChatEdit(draft.edit_id, self.model))
                    },
                    restoreTaskDraft: function(draft) {
                        draft.task_name && boot_1.RS.view.setTask(draft.task_name, draft.assign_list, draft.limit_date)
                    }
                }
            }()
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/language": 384
    }],
    464: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var TimeLineView_1 = require("./TimeLineView"),
            common_1 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            trimControlCharacter_1 = require("../../utils/trimControlCharacter"),
            SearchView = function() {
                function SearchView(model) {
                    this.model = model, this.msg_dat = [], this.ms_result_timeline_list = [], this.ms_result_byroom_dat = {}, this.ms_result_byroom_idx_list = [], this.ms_result_byuser_dat = {}, this.ms_result_byuser_idx_list = [], this.ms_result_type = "timeline", this.ms_result_timeline_order = "new", this.ms_result_not_found = !1, this.search_type = "chat", this.search_focus_idx = 0, this.search_groupby = null, this.search_expand = null, this.search_query_error = !1, this.messagesearch_window = null, this.room_show_limit = 50
                }
                return SearchView.prototype.prepare = function() {
                    var self = this;
                    self.prepareGlobalSearch(), $("#_messageSearch").click(function() {
                        self.openMessageSearchWindow(), self.executeSearchMessage($C("#_search").val()), self.search_query_error || $C("#_messageSearchQuery").focus().caretPos("last")
                    })
                }, SearchView.prototype.prepareGlobalSearch = function() {
                    var self = this;
                    boot_1.CW.view.registerKeyboardShortcut(70, !1, !1, !1, !1, function() {
                        $C("#_search").focus()
                    });
                    var result = $("#_searchResult"),
                        result_showed = !1,
                        search = $("#_search").cwSearchBox({
                            update: function() {
                                refresh_result()
                            }
                        }),
                        move_up = function() {
                            var room_list = $C("#_searchResultChatList").find("._room");
                            if (0 == room_list.length) return void(self.search_focus_idx = 0);
                            if (room_list.removeClass("searchResultChatListFocus"), self.search_focus_idx--, self.search_focus_idx < 0 && (self.search_focus_idx = 0), self.search_focus_idx > 0) {
                                var focus = $(room_list[self.search_focus_idx - 1]);
                                focus.addClass("searchResultChatListFocus");
                                var search_box_top = $("#_searchResultChatList").offset().top;
                                focus.offset().top < search_box_top && $C("#_searchResultChatList").scrollTo(focus)
                            }
                        },
                        move_down = function() {
                            var room_list = $C("#_searchResultChatList").find("._room"),
                                room_length = room_list.length;
                            if (0 == room_length) return void(self.search_focus_idx = 0);
                            room_list.removeClass("searchResultChatListFocus"), self.search_focus_idx++, room_length < self.search_focus_idx && (self.search_focus_idx = room_length);
                            var focus = $(room_list[self.search_focus_idx - 1]);
                            focus.addClass("searchResultChatListFocus");
                            var search_button_top = $("#_messageSearch").offset().top;
                            focus.offset().top + focus.height() > search_button_top && $C("#_searchResultChatList").scrollTo(focus)
                        };
                    $C("#_search").keydown(function(e) {
                        var press_key = e.keyCode,
                            show_result = !0;
                        switch (press_key) {
                            case 13:
                                if (show_result = !1, self.search_focus_idx > 0) {
                                    var room_list = $C("#_searchResultChatList").find("._room");
                                    $(room_list[self.search_focus_idx - 1]).click()
                                } else $C("#_messageSearch").click();
                                break;
                            case 38:
                                move_up();
                                break;
                            case 40:
                                move_down();
                                break;
                            case 27:
                                self.search_focus_idx = 0, show_result = !1
                        }
                        show_result ? refresh_result() : ($(this).blur(), $.cwFloatBox.close())
                    }).click(function() {
                        $.cwFloatBox.skip(result)
                    }).focus(function() {
                        refresh_result()
                    }).blur(function() {
                        self.search_focus_idx = 0
                    }).keyup(function(e) {
                        13 === e.keyCode && refresh_result(!0)
                    });
                    var latest_word = "",
                        refresh_result = function(force_show) {
                            var word = search.getVal();
                            word.length > 0 || force_show ? (latest_word != word && self.buildResult(word), latest_word = word, result_showed || ($C("#_searchResultChatList").find("._room").removeClass("searchResultChatListFocus"), $.cwFloatBox.close(), $.cwFloatBox.open(result, function() {
                                result_showed = !1, self.search_focus_idx = 0
                            }), result_showed = !0, $C("#_searchResultChatList").scrollTop(0))) : $.cwFloatBox.close()
                        };
                    $C("#_searchResultChatList").on("click", "li._room", function() {
                        $.cwFloatBox.close()
                    })
                }, SearchView.prototype.prepareMessageSearch = function() {
                    function isDoubleClick(button) {
                        return button.data("_searchMessage_doubleClick")
                    }

                    function disableDoubleClick(button) {
                        button.data("_searchMessage_doubleClick", setTimeout(function() {
                            button.removeData("_searchMessage_doubleClick")
                        }, 3e3))
                    }

                    function removeDoubleClick(button) {
                        button.removeData("_searchMessage_doubleClick")
                    }
                    var self = this;
                    self.messagesearch_window = $("#_messageSearchContent").cwFloatWindow({
                        title: language_1.Language.getLang("%%%search_title%%%"),
                        open: function() {
                            $C("#_messageSearchExceptWord").val(""), speaker_tip.clear(), $C("#_messageSearchTerm").cwSelectBox().select("all"), $C("#_messageSearchDateFrom").val(""), $C("#_messageSearchDateTo").val(""), $C("#_messageSearchOptionArea").hide(), $C("#_messageSearchOption ._iconRotate").removeClass("rotate180")
                        }
                    }), $("#_messageSearchOption").click(function() {
                        var area = $C("#_messageSearchOptionArea");
                        area.isVisible() ? (boot_1.TREASURE.trackEvent("message_search", "click", {
                            label: "message_search_option"
                        }), area.slideUp("fast", function() {
                            self.messagesearch_window.resize()
                        }), $C("#_messageSearchOption ._iconRotate").removeClass("rotate180")) : (area.slideDown("fast", function() {
                            self.messagesearch_window.resize()
                        }), $C("#_messageSearchOption ._iconRotate").addClass("rotate180"))
                    });
                    var speaker_tip = $("#_speakerTip").cwListTip({
                        search: !0,
                        multiSelect: !0,
                        useHtmlLabel: !0,
                        placeHolder: language_1.Language.getLang("%%%chatroom_search_member%%%"),
                        list: function() {
                            var speaker_list = [],
                                mem_list = boot_1.AC.getSortedMemberList();
                            mem_list.unshift(boot_1.AC.myid);
                            for (var mem_length = mem_list.length, i = 0; i < mem_length; i++) {
                                var account_id = mem_list[i],
                                    name = boot_1.AC.getName(account_id);
                                speaker_list.push({
                                    keys: boot_1.AC.getSearchKeys(account_id),
                                    value: account_id,
                                    label: boot_1.CW.getAvatarPanel(account_id, {
                                        clicktip: !1,
                                        size: "small"
                                    }) + '<p class="autotrim">' + common_1.escape_html(name) + "</p>"
                                })
                            }
                            return speaker_list
                        },
                        update: function() {
                            for (var speaker_list = this.getVal(), value = "", speaker_length = speaker_list.length, i = 0; i < speaker_length; i++) {
                                var aid = speaker_list[i];
                                value += '<span class="assignContent assignMember"><span class="_taskAssignMemberLabel assignContentText" data-aid="' + aid + '">' + boot_1.CW.getName(aid) + '</span><span class="_taskAssignCancel assignContentCancel" data-aid="' + aid + '"><span class="icoFontCancel"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%button_delete%%%") + "</span></span></span>"
                            }
                            $("#_messageSearchSpeakerBox").html(value)
                        }
                    });
                    $("#_messageSearchSpeaker").click(function() {
                        speaker_tip.open($(this))
                    }), $("#_messageSearchSpeakerBox").on("click", "._taskAssignCancel", function() {
                        var aid = $(this).attr("data-aid");
                        speaker_tip.select(aid)
                    }).on("mouseover", "._taskAssignMemberLabel", function() {
                        var label = $(this),
                            aid = label.attr("data-aid");
                        $.cwMessageTip.isInit(label[0]) || label.cwMessageTip({
                            message: function() {
                                return boot_1.AC.getName(aid)
                            }
                        }).open()
                    }).on("click", "._taskAssignMemberLabel", function() {
                        return $("#_messageSearchSpeaker").click(), !1
                    });
                    var press_key = 0;
                    $("#_messageSearchQuery").keydown(function(e) {
                        press_key = e.keyCode
                    }).keyup(function(e) {
                        press_key == e.keyCode && 13 == e.keyCode && ($C("#_messageSearchSend").click(), $.cwFloatBox.close())
                    }), $C("#_messageSearchSend").click(function() {
                        var q = $C("#_messageSearchQuery").cwSearchBox().getVal(),
                            $this = $(this);
                        if (!isDoubleClick($this)) {
                            disableDoubleClick($this), boot_1.SC.cancelSearch(), $C("#_messageSearchLoading").hide(), $C("#_messageSearchResult").empty();
                            var opt = {};
                            if (opt.q = trimControlCharacter_1.trimControlCharacter(q), $("#_messageSearchOptionArea").isVisible())
                                if (opt.exq = $C("#_messageSearchExceptWord").val(), opt.aid = speaker_tip.getVal(), opt.term = $("#_messageSearchTerm").cwSelectBox().getVal(), "specify" == opt.term) {
                                    var date_from = $C("#_messageSearchDateFrom").val(),
                                        date_to = $C("#_messageSearchDateTo").val();
                                    "" != date_from && (opt.term_from = common_1.strtotime_format(date_from, boot_1.ST.data.dateformat, "00:00:00")), "" != date_to && (opt.term_to = common_1.strtotime_format(date_to, boot_1.ST.data.dateformat, "23:59:59"))
                                } else if ("all" != opt.term) {
                                    var today_time = common_1.strtotime_format(boot_1.CW.getDate(common_1.time(), "Y-m-d"), "Y-m-d");
                                    opt.term_from = today_time - 3600 * parseInt(opt.term, 10) * 24, opt.term_to = today_time
                                }
                            $C("#_messageSearchResultHead").hide(), $C("#_messageSearchLoading").show(), boot_1.SC.search(opt, function(msg_dat) {
                                removeDoubleClick($this), self.msg_dat = msg_dat, self.ms_result_timeline_list = [], self.ms_result_byroom_dat = {}, self.ms_result_byroom_idx_list = [], self.ms_result_byuser_dat = {}, self.ms_result_byuser_idx_list = [];
                                for (var i in self.msg_dat) self.ms_result_timeline_list.push(parseInt(self.msg_dat[i].id, 10));
                                self.ms_result_timeline_list.sort(function(a, b) {
                                    return b - a
                                });
                                for (var i = 0, tl_len = self.ms_result_timeline_list.length; i < tl_len; i++) {
                                    var chat_dat = self.msg_dat[self.ms_result_timeline_list[i]];
                                    void 0 == self.ms_result_byroom_dat[chat_dat.rid] && (self.ms_result_byroom_idx_list.push(chat_dat.rid), self.ms_result_byroom_dat[chat_dat.rid] = []), self.ms_result_byroom_dat[chat_dat.rid].push(chat_dat.id), void 0 == self.ms_result_byuser_dat[chat_dat.aid] && (self.ms_result_byuser_idx_list.push(chat_dat.aid), self.ms_result_byuser_dat[chat_dat.aid] = []), self.ms_result_byuser_dat[chat_dat.aid].push(chat_dat.id)
                                }
                                0 == self.ms_result_timeline_list.length ? self.ms_result_not_found = !0 : self.ms_result_not_found = !1, $C("#_messageSearchLoading").hide(), self.buildMSResult()
                            }, function() {
                                removeDoubleClick($this), boot_1.CW.alert(language_1.Language.getLang("%%%chat_server_error_try_again%%%")), $C("#_messageSearchLoading").hide()
                            })
                        }
                    }), $C("#_messageSearchTerm").cwSelectBox({
                        update: function() {
                            "specify" == this.getVal() ? $C("#_messageSearchTerm_specify").show() : $C("#_messageSearchTerm_specify").hide()
                        }
                    }), $C("#_messageSearchDateFrom").val(""), $C("#_messageSearchDateTo").val(""), $C("#_messageSearchResult").on("click", "._messageSearchChatGroup", function() {
                        var group_header = $(this),
                            room_id = group_header.attr("data-gid"),
                            content = $("#_searchResultGroupId" + room_id),
                            arrow_object = group_header.find("._messageSearchArrow");
                        content.isVisible() ? (content.slideUp("normal"), group_header.removeClass("_messageSearchOpen"), arrow_object.removeClass("rotate180")) : (content.slideDown("normal"), group_header.addClass("_messageSearchOpen"), arrow_object.addClass("rotate180"))
                    }), self.search_expand = $("#_messageSearchExpand").cwButtonBar({
                        update: function(idx) {
                            switch (idx) {
                                case 0:
                                    $C("#_messageSearchResult").find("._messageSearchChatGroup").each(function() {
                                        var group_header = $(this);
                                        group_header.hasClass("_messageSearchOpen") || group_header.click()
                                    });
                                    break;
                                case 1:
                                    $C("#_messageSearchResult").find("._messageSearchChatGroup").each(function() {
                                        var group_header = $(this);
                                        group_header.hasClass("_messageSearchOpen") && group_header.click()
                                    })
                            }
                        }
                    }), self.search_groupby = $("#_messageSearchGrouping").cwTabbedBar({
                        update: function(idx) {
                            switch (idx) {
                                case 0:
                                    self.ms_result_type = "timeline";
                                    break;
                                case 1:
                                    self.ms_result_type = "byroom";
                                    break;
                                case 2:
                                    self.ms_result_type = "byuser"
                            }
                            self.buildMSResult()
                        }
                    })
                }, SearchView.prototype.openMessageSearchWindow = function() {
                    var self = this;
                    self.messagesearch_window || self.prepareMessageSearch(), boot_1.TREASURE.trackEvent("message_search", "open", {
                        label: "message_search_window"
                    }), self.messagesearch_window.open()
                }, SearchView.prototype.closeMessageSearchWindow = function() {
                    var self = this;
                    self.messagesearch_window.isOpen() && self.messagesearch_window.close()
                }, SearchView.prototype.buildSpeaker = function() {}, SearchView.prototype.buildMSResult = function() {
                    var self = this;
                    if (self.messagesearch_window.isOpen()) {
                        var q = $C("#_messageSearchQuery").cwSearchBox().getVal();
                        if ($C("#_messageSearchOverflow").hide(), self.ms_result_timeline_list.length > 0) {
                            var html = "",
                                last_group_id = 0,
                                order_list = [];
                            switch (self.search_groupby.enableButtonAll(), self.ms_result_type) {
                                case "byroom":
                                    self.search_expand.enableButtonAll();
                                    for (var i = 0, idx_len = self.ms_result_byroom_idx_list.length; i < idx_len; i++)
                                        for (var rid = self.ms_result_byroom_idx_list[i], j = 0, dat_len = self.ms_result_byroom_dat[rid].length; j < dat_len; j++) order_list.push(self.ms_result_byroom_dat[rid][j]);
                                    break;
                                case "byuser":
                                    self.search_expand.enableButtonAll();
                                    for (var i = 0, idx_len = self.ms_result_byuser_idx_list.length; i < idx_len; i++)
                                        for (var aid = self.ms_result_byuser_idx_list[i], j = 0, dat_len = self.ms_result_byuser_dat[aid].length; j < dat_len; j++) order_list.push(self.ms_result_byuser_dat[aid][j]);
                                    break;
                                default:
                                    self.search_expand.disableButtonAll(), order_list = self.ms_result_timeline_list
                            }
                            for (var result_num = order_list.length, moption = {
                                idPrefix: "_search"
                            }, i = 0; i < result_num; i++) {
                                var chat_dat = self.msg_dat[order_list[i]];
                                switch (self.ms_result_type) {
                                    case "byroom":
                                        last_group_id != chat_dat.rid && (last_group_id = chat_dat.rid, i > 0 && (html += "</div>"), html += '<div class="searchResultTitle _messageSearchChatGroup" data-gid="' + chat_dat.rid + '">' + boot_1.RL.rooms[chat_dat.rid].getIcon() + " " + common_1.escape_html(boot_1.RL.rooms[chat_dat.rid].getName()) + " <span>(" + self.ms_result_byroom_dat[chat_dat.rid].length.toLocaleString() + language_1.Language.getLang("%%%search_result_unit%%%") + ')</span><span class="_messageSearchArrow transitionAll03sLinear icoFontTriangleDown"></span></div><div id="_searchResultGroupId' + chat_dat.rid + '" style="display:none">');
                                        break;
                                    case "byuser":
                                        last_group_id != chat_dat.aid && (last_group_id = chat_dat.aid, i > 0 && (html += "</div>"), html += '<div class="searchResultTitle _messageSearchChatGroup" data-gid="' + chat_dat.aid + '">' + boot_1.CW.getAvatarPanel(chat_dat.aid, {
                                                clicktip: !1,
                                                hovertip: !1,
                                                size: "small"
                                            }) + " " + boot_1.CW.getName(chat_dat.aid) + " <span>(" + self.ms_result_byuser_dat[chat_dat.aid].length.toLocaleString() + language_1.Language.getLang("%%%search_result_unit%%%") + ')</span><span class="_messageSearchArrow transitionAll03sLinear icoFontTriangleDown"></span></div><div id="_searchResultGroupId' + chat_dat.aid + '" style="display:none">')
                                }
                                moption.topView = 0 === i, html += TimeLineView_1.TimeLineView.prototype.getMessagePanel(chat_dat, moption)
                            }
                            switch (self.ms_result_type) {
                                case "byroom":
                                case "byuser":
                                    result_num > 0 && (html += "</div>")
                            }
                            $C("#_messageSearchResultHead").show(), $C("#_messageSearchResultNum").text(order_list.length.toLocaleString()), order_list.length == SEARCH_MAX_RESULTS && $C("#_messageSearchOverflow").show(), $C("#_messageSearchResult").html(html);
                            var splitted_q = q.replace(/\u3000|,|、|・/g, " ").split(" ");
                            for (var i in splitted_q) {
                                var word = splitted_q[i];
                                "+" == word.charAt(0) && (word = word.substr(1)), word = word.trim(), word.length > 0 && $("#_messageSearchResult pre").markText(word, "searchEm")
                            }
                        } else self.search_groupby.disableButtonAll(), self.search_expand.disableButtonAll(), $C("#_messageSearchResultNum").text("0"), self.ms_result_not_found ? ($C("#_messageSearchResultHead").show(), $C("#_messageSearchResult").html('<div class="searchNotFound alert alertWarning">' + language_1.Language.getLang("%%%search_result_not_found%%%", {
                                keyword: common_1.escape_html(q)
                            }) + "</div>")) : ($C("#_messageSearchResultHead").show(), $C("#_messageSearchResult").quickEmpty());
                        self.messagesearch_window.resize()
                    }
                }, SearchView.prototype.buildResult = function(search_word) {
                    var self = this;
                    if (void 0 == search_word || "" == search_word) return $C("#_searchResultChatList").quickEmpty(), $C("#_messageSearchHint").text(""), void $C("#_messageSearchIcon").hide();
                    $C("#_messageSearchHint").text(language_1.Language.getLang("%%%search_suggest%%%", {
                        keyword: search_word
                    })), $C("#_messageSearchIcon").show();
                    var room_list = boot_1.RL.getSortedRoomList(),
                        html = "",
                        room = null,
                        room_num = room_list.length;
                    if (!room_num) return void $C("#_searchResultChatList").quickEmpty();
                    var search_word_list = [];
                    search_word_list = boot_1.CW.splitWithSpace(trimControlCharacter_1.trimControlCharacter(search_word).toLowerCase());
                    for (var show_room_count = 0, idx = 0; idx < room_num; idx++)
                        if (void 0 != room_list[idx]) {
                            var room_id = room_list[idx];
                            if (room = boot_1.RL.rooms[room_id], "contact" == self.search_type && "contact" != room.type) continue;
                            if ("contact" == room.type) {
                                if (!boot_1.AC.isMatchedWithKeyList(search_word_list, room.getAccountId())) continue
                            } else if (!boot_1.CW.isMatchedWithKeyList(search_word_list, room.getName())) continue;
                            if (html += boot_1.RL.view.getRoomItemPanel(room_id, {
                                    showOrg: !0,
                                    showPin: !1,
                                    showSelected: !1,
                                    showRequest: !1,
                                    noTrim: !0
                                }), ++show_room_count >= self.room_show_limit) break
                        }
                    $C("#_searchResultChatList").html(html).find("p").markText(search_word, "searchEm"), show_room_count ? $C("#_searchResultChatList").show() : $C("#_searchResultChatList").hide()
                }, SearchView.prototype.executeSearchMessage = function(search_word) {
                    $C("#_messageSearchQuery").cwSearchBox().setVal(trimControlCharacter_1.trimControlCharacter(search_word)), $C("#_messageSearchSend").click()
                }, SearchView
            }();
        exports.SearchView = SearchView
    }, {
        "../../core/lib/common": 308,
        "../../utils/trimControlCharacter": 339,
        "../controller/boot": 340,
        "../lib/language": 384,
        "./TimeLineView": 468
    }],
    465: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Clipboard = require("clipboard"),
            common_1 = require("../lib/common"),
            common_2 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            notificationAPI_1 = require("../lib/notificationApi/notificationAPI"),
            SUPPORTED_DATEFORMAT = {
                default: ["m/d/Y", "d/m/Y", "Y/m/d", "m-d-Y", "d-m-Y", "Y-m-d", "m.d.Y", "d.m.Y", "Y.m.d", "m/d-Y"],
                ja: ["Y年m月d日"],
                "zh-cn": ["Y年m月d日"]
            },
            CHECKBOX_DAT = {
                _popupSound: "popup_sound",
                _notifierShow: "desktop_alert",
                _notifierMessage: "notifier_message",
                _notifierOnlyto: "notifier_onlyto",
                _faviconstat: "faviconstat",
                _showDelmessage: "show_delmessage",
                _showExternal: "show_external",
                _privateNickname: "private_nickname",
                _shortenUrl: "shorten_url"
            },
            SELECTBOX_DAT = {
                _notifierDuration: "notifier_duration",
                _soundVolume: "sound_volume",
                _soundType: "sound_type",
                _notifyTerm: "notify_term",
                _langType: null,
                _langDateformat: null
            },
            AUDIO_LIST = [{
                name: "ashvoice",
                is_multi: !1
            }, {
                name: "Ac_Guitar02",
                is_multi: !1
            }, {
                name: "Brass",
                is_multi: !1
            }, {
                name: "Crisis01",
                is_multi: !1
            }, {
                name: "Crisis02",
                is_multi: !1
            }, {
                name: "Cymbal",
                is_multi: !1
            }, {
                name: "Dora",
                is_multi: !1
            }, {
                name: "Sitar",
                is_multi: !1
            }, {
                name: "Tambourine",
                is_multi: !1
            }, {
                name: "Conga_c",
                is_multi: !1
            }, {
                name: "EP_c",
                is_multi: !1
            }, {
                name: "EP_d",
                is_multi: !1
            }, {
                name: "Piano_c",
                is_multi: !1
            }, {
                name: "Piano_d",
                is_multi: !1
            }, {
                name: "Piano_e",
                is_multi: !1
            }, {
                name: "Kalimba_c",
                is_multi: !1
            }, {
                name: "Kalimba_d",
                is_multi: !1
            }, {
                name: "mallet",
                is_multi: !0
            }, {
                name: "agogo",
                is_multi: !0
            }, {
                name: "chime",
                is_multi: !0
            }, {
                name: "cowbell",
                is_multi: !0
            }, {
                name: "cuica",
                is_multi: !0
            }, {
                name: "drip",
                is_multi: !0
            }, {
                name: "kiai",
                is_multi: !0
            }, {
                name: "marimba",
                is_multi: !0
            }, {
                name: "percussimba",
                is_multi: !0
            }, {
                name: "steampipe",
                is_multi: !0
            }, {
                name: "whistle",
                is_multi: !0
            }, {
                name: "8-bit",
                is_multi: !0
            }, {
                name: "Ac_Guitar",
                is_multi: !0
            }, {
                name: "Conga02",
                is_multi: !0
            }, {
                name: "Conga",
                is_multi: !0
            }, {
                name: "Crap",
                is_multi: !0
            }, {
                name: "EP02",
                is_multi: !0
            }, {
                name: "EP",
                is_multi: !0
            }, {
                name: "GuitarCutting",
                is_multi: !0
            }, {
                name: "Kalimba",
                is_multi: !0
            }, {
                name: "Piano",
                is_multi: !0
            }, {
                name: "Shooting",
                is_multi: !0
            }, {
                name: "Snare",
                is_multi: !0
            }, {
                name: "SynthBell02",
                is_multi: !0
            }, {
                name: "SynthBell03",
                is_multi: !0
            }, {
                name: "SynthBell",
                is_multi: !0
            }],
            SettingView = function() {
                function SettingView(model) {
                    this.is_valid_cwid = !1, this.model = model, this.model.sound_default = "Kalimba"
                }
                return SettingView.prototype.plotUserSetting = function() {
                    this.is_valid_cwid = !0;
                    for (var id in CHECKBOX_DAT) {
                        var param = CHECKBOX_DAT[id],
                            checkbox = $("#" + id);
                        1 == this.model.data[param] ? checkbox.cwCheckBox().check() : checkbox.cwCheckBox().unCheck()
                    }
                    boot_1.CW.localStorage.getItem("HideMessageBoxTags") ? $("#_hideMessageBoxTags").cwCheckBox().check() : $("#_hideMessageBoxTags").cwCheckBox().unCheck();
                    for (var id in SELECTBOX_DAT) {
                        var param = SELECTBOX_DAT[id],
                            selectbox = $("#" + id),
                            cw_select_box_obj = selectbox.cwSelectBox({
                                parentFloatBox: SettingView.setting_dialog
                            });
                        if (null !== param && void 0 !== this.model.data[param]) {
                            var select_box_value = this.model.data[param];
                            cw_select_box_obj.findItemByValue(select_box_value) && cw_select_box_obj.select(select_box_value)
                        }
                    }
                    if ($("#_langType").cwSelectBox().select(LANGUAGE), $("#_langDateformat").cwSelectBox().select(boot_1.ST.data.dateformat), $("#_soundVolume").cwSelectBox().select(boot_1.ST.data.sound_volume), !boot_1.CW.is_business) {
                        var check_show_external = $("#_showExternal");
                        check_show_external.parent().find("label").css("color", "#888"), check_show_external.cwCheckBox().disable();
                        var check_private_nickname = $("#_privateNickname");
                        check_private_nickname.parent().find("label").css("color", "#888"), check_private_nickname.cwCheckBox().disable()
                    }
                    this.changeNotificationSettingStatus(), this.changePopupSoundSettingStatus()
                }, SettingView.isMultiSound = function(audio_name) {
                    var audios = AUDIO_LIST.filter(function(audio) {
                        return audio.name === audio_name
                    });
                    return !(audios.length > 1) && (0 !== audios.length && audios[0].is_multi)
                }, SettingView.prototype.prepareSetting = function() {
                    var _this = this,
                        chat_setting = $("#_chatSetting"),
                        setting_tab_list = chat_setting.find("._cwFWHeader").find("li");
                    notificationAPI_1.NotificationAPI.isSupported ? (common_1._is_chrome && $("#_notifierDurationBox").hide(), $("#_notifierNotSupported").hide(), $("#_notifierSupported").show()) : ($("#_notifierNotSupported").show(), $("#_notifierSupported").hide());
                    var submit_setting = function() {
                        var lang = $("#_langType").cwSelectBox().getVal(),
                            dateformat = $("#_langDateformat").cwSelectBox().getVal(),
                            param_dat = {
                                cmd: "send_setting"
                            },
                            data = {};
                        boot_1.CW.showProgress(language_1.Language.getLang("%%%saving%%%"));
                        for (var id in CHECKBOX_DAT) {
                            var param = CHECKBOX_DAT[id];
                            $("#" + id).cwCheckBox().isChecked() ? data[param] = "1" : data[param] = "0"
                        }
                        for (var id in SELECTBOX_DAT) {
                            var param = SELECTBOX_DAT[id],
                                selectbox = $("#" + id);
                            data[param] = selectbox.cwSelectBox().getVal()
                        }
                        if (void 0 !== data.notify_term && (data.ai_notify_term = data.notify_term), lang != LANGUAGE || boot_1.ST.data.dateformat != dateformat) {
                            var language_setting = {};
                            language_setting.lang = lang, language_setting.dateformat = dateformat, param_dat.language = language_setting
                        }
                        param_dat.data = data, boot_1.CW.post("gateway.php", param_dat, function(response) {
                            if (response.setting_data && boot_1.ST.updateSetting(response.setting_data), response.lang) {
                                var bf_ok = language_1.Language.getLang("%%%button_ok%%%"),
                                    bf_cancel = language_1.Language.getLang("%%%button_cancel%%%");
                                language_1.Language.updateLang("%%%button_ok%%%", language_1.Language.getLang("%%%lang_" + response.lang + "_button_ok%%%")), language_1.Language.updateLang("%%%button_cancel%%%", language_1.Language.getLang("%%%lang_" + response.lang + "_button_cancel%%%")), boot_1.CW.confirm(language_1.Language.getLang("%%%lang_" + response.lang + "_change_confirm%%%"), function() {
                                    location.reload()
                                }), language_1.Language.updateLang("%%%button_ok%%%", bf_ok), language_1.Language.updateLang("%%%button_cancel%%%", bf_cancel)
                            }
                            var oldHideMessageBoxTags = Boolean(boot_1.CW.localStorage.getItem("HideMessageBoxTags")),
                                newHideMessageBoxTags = $("#_hideMessageBoxTags").cwCheckBox().isChecked();
                            newHideMessageBoxTags ? boot_1.CW.localStorage.setItem("HideMessageBoxTags", "1") : boot_1.CW.localStorage.removeItem("HideMessageBoxTags"), oldHideMessageBoxTags !== newHideMessageBoxTags && boot_1.CW.confirm(language_1.Language.getLang("%%%chatsetting_hide_message_box_tags_change_confirm%%%"), function() {
                                location.reload()
                            }), boot_1.CW.hideProgress(), SettingView.setting_dialog.close(), boot_1.CW.watch()
                        })
                    };
                    SettingView.setting_dialog = chat_setting.cwDialog({
                        width: 700,
                        height: "max_of_contents",
                        title: language_1.Language.getLang("%%%menu_personal_setting%%%"),
                        open: function() {
                            setting_tab_list.eq(0).click(), _this.plotUserSetting()
                        },
                        buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                        buttonSubmit: 0,
                        buttonCancel: 1,
                        buttonClick: function(idx) {
                            0 === idx && submit_setting()
                        }
                    });
                    var contents_list = SettingView.setting_dialog.$el.find("._cwSettingContents");
                    setting_tab_list.click(function() {
                        SettingView.api_token_panel && SettingView.api_token_panel.isActive() && SettingView.api_token_panel.close();
                        var select_class = "chatSettingDialog__headerTabItem--selected",
                            idx = setting_tab_list.index(this),
                            contents = contents_list.eq(idx);
                        setting_tab_list.removeClass(select_class), $(this).addClass(select_class), contents_list.hide(), contents.show()
                    }), $("#_langType").cwSelectBox().setOption({
                        update: function() {
                            for (var lang_date_format = $("#_langDateformat"), lang = $("#_langType").cwSelectBox().getVal(), dateformat_list = (SUPPORTED_DATEFORMAT[lang] || []).concat(SUPPORTED_DATEFORMAT.default), option_list = [], i = 0, len = dateformat_list.length; i < len; i++) option_list.push({
                                label: boot_1.CW.getDate(new Date((new Date).getFullYear(), 11, 31).getTime() / 1e3, dateformat_list[i]),
                                value: dateformat_list[i]
                            });
                            lang_date_format.cwSelectBox().setList(option_list).select(option_list[0].value)
                        }
                    })
                }, SettingView.prototype.openSettingDialog = function() {
                    SettingView.setting_dialog || this.prepareSetting(), SettingView.setting_dialog.open()
                }, SettingView.prototype.prepare = function() {
                    var _this = this;
                    $("#_setting").click(function() {
                        _this.openSettingDialog()
                    }), $("#_soundPlay").click(function() {
                        return boot_1.CW.playSound($("#_soundType").cwSelectBox().getVal(), $("#_soundVolume").cwSelectBox().getVal()), !1
                    });
                    var notifier_checkbox = $("#_notifierShow").cwCheckBox();
                    notifier_checkbox.$el.click(function(e) {
                        return e.preventDefault(), _this.requestNotificationPermission(function(permission) {
                            permission && (notifier_checkbox.toggle(), _this.changeNotificationSettingStatus())
                        }), !1
                    }), notifier_checkbox.$el.next("label").click(function(e) {
                        return e.preventDefault(), notifier_checkbox.$el.click(), !1
                    });
                    var popup_sound_master = $("#_popupSound").cwCheckBox();
                    popup_sound_master.$el.click(function(e) {
                        return e.preventDefault(), popup_sound_master.toggle(), _this.changePopupSoundSettingStatus(), !1
                    }), popup_sound_master.$el.next("label").click(function(e) {
                        return e.preventDefault(), popup_sound_master.$el.click(), !1
                    });
                    var mystatus_box = $("#_myStatusBox"),
                        mystatus_button = $("#_myStatusButton");
                    mystatus_button.hover(function() {
                        mystatus_button.hasClass("myStatusButtonSelected") || (mystatus_button.addClass("myStatusButtonHover"), mystatus_button.find(".icoSystem").addClass("icoFontTriangleDown"))
                    }, function() {
                        mystatus_button.removeClass("myStatusButtonHover"), mystatus_button.find(".icoSystem").removeClass("icoFontTriangleDown")
                    }), boot_1.CW.view.onEndInitLoad(function() {
                        "free" == boot_1.CW.plan ? $("#_upgradePlan").show().click(function() {
                            boot_1.CW.view.showServiceAdmin("upgrade")
                        }) : $("#_upgradePlan").hide(), boot_1.CW.is_admin ? $("#_openAdminMenu").show() : ($("#_openAdminMenu").hide(), boot_1.CW.is_admin_user && $C("#_userAdminMenu").show())
                    }), mystatus_button.click(function() {
                        if (!mystatus_box.isVisible()) {
                            mystatus_button.addClass("myStatusButtonSelected"), mystatus_button.removeClass("myStatusButtonHover");
                            var box_width = mystatus_button.outerWidth();
                            box_width < boot_1.TM.mymenu_min_width && (box_width = boot_1.TM.mymenu_min_width), mystatus_box.width(box_width), mystatus_box.slideDown("fast", function() {
                                $.cwFloatBox.open(mystatus_box, function() {
                                    mystatus_box.slideUp("fast", function() {
                                        mystatus_button.removeClass("myStatusButtonSelected")
                                    })
                                })
                            })
                        }
                    }).mousedown(function() {
                        return !1
                    }), mystatus_box.on("click", "li", function() {
                        $.cwFloatBox.close(mystatus_box)
                    });
                    var password_1, input_pass_1 = $("#_inputApiTokenPass"),
                        input_token_1 = $("#_inputApiToken"),
                        pass_panel_1 = $("#_settingApi"),
                        token_panel_1 = $("#_settingApiAfter"),
                        regenerate_token_btn_1 = $("#_regenerateTokenBtn"),
                        copy_token_btn_1 = $("#_copyTokenBtn"),
                        events_1 = {
                            getApiToken: function(params) {
                                boot_1.CW.post("gateway.php", {
                                    cmd: "get_api_token",
                                    password: params.password,
                                    regenerate: params.regenerate ? 1 : 0
                                }, function(response) {
                                    response.api_token && events_1.displayTokenPanel(response.api_token)
                                }, function(response) {
                                    return response && response[0] ? boot_1.CW.alert(response[0]) : boot_1.CW.alert(language_1.Language.getLang("%%%_chatwork_apitoken_invalid_password%%%"))
                                })
                            },
                            displayPasswordPanel: function() {
                                this.clear(), token_panel_1.hide(), pass_panel_1.show()
                            },
                            displayTokenPanel: function(token) {
                                this.clear(), input_token_1.val(token), copy_token_btn_1.attr("data-clipboard-target", "#_inputApiToken"), pass_panel_1.hide(), token_panel_1.show()
                            },
                            clear: function() {
                                input_pass_1.val(""), input_token_1.val("")
                            }
                        };
                    SettingView.api_token_panel = {
                        init: function() {
                            pass_panel_1.find("._displayApiToken").click(function() {
                                if (password_1 = input_pass_1.val(), 0 === password_1.length) return void boot_1.CW.alert(language_1.Language.getLang("%%%_chatwork_apitoken_empty_password%%%"));
                                events_1.getApiToken({
                                    password: password_1
                                })
                            }), regenerate_token_btn_1.click(function() {
                                boot_1.CW.confirm(language_1.Language.getLang("%%%_chatwork_apitoken_confirm_regenerate%%%"), function() {
                                    events_1.getApiToken({
                                        password: password_1,
                                        regenerate: !0
                                    })
                                })
                            }), new Clipboard("#_copyTokenBtn")
                        },
                        isActive: function() {
                            return pass_panel_1.is(":visible") || token_panel_1.is(":visible")
                        },
                        close: function() {
                            events_1.displayPasswordPanel()
                        }
                    }, SettingView.api_token_panel.init()
                }, SettingView.prototype.initializeStepGuide = function() {
                    var _this = this;
                    SettingView.welcome_dialog || SettingView.show_userguide_welcome || this.model.data.userguide_welcome || (SettingView.show_userguide_welcome = !0, setTimeout(function() {
                        _this.openWelcomeDialog(!1)
                    }, 500))
                }, SettingView.prototype.openWelcomeDialog = function(use_bob_phase1) {
                    var is_bob_phase1 = use_bob_phase1 || "ja" === LANGUAGE;
                    if (!SettingView.welcome_dialog) {
                        var dose_play_tutorial_1 = !0;
                        SettingView.welcome_dialog = $("#_userguideWelcomeDialog").cwDialog({
                            closeOnEscape: !is_bob_phase1,
                            title: is_bob_phase1 ? void 0 : language_1.Language.getLang("%%%welcome_title%%%", {
                                service_name: SERVICE_NAME
                            }),
                            width: 820,
                            close: function() {
                                dose_play_tutorial_1 && boot_1.CW.view.startTutorial(), boot_1.CW.post("gateway.php", {
                                    cmd: "send_chat_setting",
                                    data: {
                                        userguide_welcome: "1"
                                    }
                                })
                            }
                        }), $("#_userguideWelcomeOpen").click(function() {
                            SettingView.welcome_dialog.close(), boot_1.TREASURE.trackEvent("onboarding", "click", {
                                label: "onboarding_wel_s"
                            })
                        }), $("#_userguideSkipTutorial").click(function() {
                            dose_play_tutorial_1 = !1, SettingView.welcome_dialog.close(), boot_1.TREASURE.trackEvent("onboarding", "click", {
                                label: "onboarding_wel_t"
                            })
                        })
                    }
                    SettingView.welcome_dialog.open()
                }, SettingView.prototype.updateSetting = function() {
                    if (this.refreshNotificationStatus(), $.cwDatePicker.setDefaultOption({
                            dateFormat: boot_1.ST.data.dateformat
                        }), SettingView.first_setting && ($("._datePicker").cwDatePicker(), boot_1.RS.view.prepareTask()), SettingView.first_setting = !1, "send" == boot_1.ST.data.enter_action ? $C("#_sendEnterAction").cwCheckBox().check() : $C("#_sendEnterAction").cwCheckBox().unCheck(), boot_1.canPlayOgg || boot_1.canPlayMp3) {
                        var sound_type = this.model.data.sound_type;
                        $("#_audio_" + sound_type).length || boot_1.CW.view.embedAudio(sound_type)
                    }
                    this.initializeStepGuide()
                }, SettingView.prototype.updateAnnounce = function() {
                    if (this.model.announce_dat.id) {
                        var now = common_2.time(),
                            announce_dat = this.model.announce_dat,
                            from = parseInt(announce_dat.from, 10),
                            to = parseInt(announce_dat.to, 10),
                            self_1 = this;
                        if (from < now && now < to) return announce_dat = boot_1.ST.announce_dat, SettingView.announce_id = boot_1.CW.view.saveInformation(SettingView.announce_id, {
                            linktext: announce_dat.linktext,
                            subject: announce_dat.subject,
                            body: announce_dat.body,
                            buttonLabels: [language_1.Language.getLang("%%%announce_button_close%%%")],
                            buttonClick: function(idx) {
                                if (0 === idx) {
                                    var cwdialog_1 = this;
                                    SettingView.deleteAnnounce(SettingView.announce_id, function() {
                                        self_1.model.closeAnnounce(), cwdialog_1.close()
                                    })
                                }
                            }
                        }), void boot_1.CW.view.renderInformation()
                    }
                    SettingView.announce_id && SettingView.deleteAnnounce(SettingView.announce_id)
                }, SettingView.deleteAnnounce = function(id, callback) {
                    id && (boot_1.CW.view.deleteInformation(id, callback), SettingView.announce_id = void 0)
                }, SettingView.prototype.changeNotificationSettingStatus = function() {
                    var notifier_checkbox = $("#_notifierShow").cwCheckBox(),
                        notifier_message = $("#_notifierMessage").cwCheckBox(),
                        notifier_only_to = $("#_notifierOnlyto").cwCheckBox(),
                        duration_select_box = $("#_notifierDuration").cwSelectBox(),
                        duration_box = $("#_notifierDurationBox");
                    notifier_checkbox.isChecked() ? (1 === this.model.data.notifier_message ? notifier_message.check(!0).enable() : notifier_message.unCheck(!0).enable(), 1 === this.model.data.notifier_onlyto ? notifier_only_to.check(!0).enable() : notifier_only_to.unCheck(!0).enable(), duration_select_box.enable(), duration_box.removeClass("disabled")) : (notifier_message.unCheck(!0).disable(), notifier_only_to.unCheck(!0).disable(), duration_select_box.close().disable(), duration_box.addClass("disabled"))
                }, SettingView.prototype.changePopupSoundSettingStatus = function() {
                    var SETTING_ITEMS = [$("#_popupSoundType"), $("#_popupSoundVolume")],
                        SELECTBOXES = [$("#_soundType").cwSelectBox(), $("#_soundVolume").cwSelectBox()],
                        SOUND_PLAY_BUTTON = $("#_soundPlay"),
                        execute = function(setting_item_impl, selectbox_impl, button_state) {
                            SETTING_ITEMS.forEach(function(item) {
                                setting_item_impl(item)
                            }), SELECTBOXES.forEach(function(selectbox) {
                                selectbox_impl(selectbox)
                            }), SOUND_PLAY_BUTTON.prop("disabled", button_state)
                        };
                    $("#_popupSound").cwCheckBox().isChecked() ? execute(function(item) {
                        item.removeClass("disabled")
                    }, function(selectbox) {
                        selectbox.enable()
                    }, !1) : execute(function(item) {
                        item.addClass("disabled")
                    }, function(selectbox) {
                        selectbox.disable()
                    }, !0)
                }, SettingView.prototype.requestNotificationPermission = function(callback) {
                    notificationAPI_1.NotificationAPI.isSupported ? notificationAPI_1.NotificationAPI.requestPermission(function() {
                        callback(0 == notificationAPI_1.NotificationAPI.checkPermission() ? !0 : !1)
                    }) : boot_1.CW.alert(language_1.Language.getLang("%%%desktopalert_no_support%%%"))
                }, SettingView.prototype.refreshNotificationStatus = function(update) {
                    var active = !1;
                    update && boot_1.CW.post("gateway.php", {
                        cmd: "send_chat_setting",
                        data: {
                            desktop_alert: this.model.data.desktop_alert
                        }
                    }), "1" == this.model.data.desktop_alert && notificationAPI_1.NotificationAPI.isSupported && 0 == notificationAPI_1.NotificationAPI.checkPermission() && (active = !0), active ? ($("#cw_notification_icon").removeClass("ui_sp_icon_footer_notification_off").addClass("ui_sp_icon_footer_notification_on").css("visibility", "visible"), $("#cw_notification").prop("title", language_1.Language.getLang("%%%menu_desktopalert%%%") + "(" + language_1.Language.getLang("%%%menu_current%%%") + "ON)"), boot_1.CW.enable_popup = !0) : ($("#cw_notification_icon").removeClass("ui_sp_icon_footer_notification_on").addClass("ui_sp_icon_footer_notification_off").css("visibility", "visible"), $("#cw_notification").prop("title", language_1.Language.getLang("%%%menu_desktopalert%%%") + "(" + language_1.Language.getLang("%%%menu_current%%%") + "OFF)"), boot_1.CW.enable_popup = !1)
                }, SettingView
            }();
        SettingView.show_userguide_welcome = !1, SettingView.first_setting = !0, exports.SettingView = SettingView
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/common": 342,
        "../lib/language": 384,
        "../lib/notificationApi/notificationAPI": 391,
        clipboard: 21
    }],
    466: [function(require, module, exports) {
        "use strict";

        function TaskListView(model) {
            var self = this;
            self.model = model, self.task_num = 0, self.view_limit = TASK_MAX_RESULTS
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language");
        exports.TaskListView = TaskListView,
            function() {
                var mytask_check = null;
                TaskListView.prototype = {
                    build: function() {
                        if (this.model.room.id != boot_1.RM.id) return !1;
                        null === mytask_check && (mytask_check = $("#_subRoomMyTaskListShow").show().cwCheckBox({
                            label: language_1.Language.getLang("%%%chatroom_tasklist_mytaskonly%%%"),
                            update: function() {
                                boot_1.RM && boot_1.RM.tasklist.build()
                            }
                        }));
                        var buildkey, is_mine = mytask_check.isChecked(),
                            task_list_html = "",
                            task_list = this.model.getTaskList("open"),
                            task_len = task_list.length;
                        if (this.task_num = 0, task_len > 0) {
                            boot_1.TK.sortTaskList(task_list);
                            for (var i = 0; i < task_len; i++) {
                                var task_dat = boot_1.TK.task_id2task_dat[task_list[i]];
                                is_mine && task_dat.aid != boot_1.AC.myid || ++this.task_num <= this.view_limit && (task_list_html += boot_1.TK.view.getTaskPanel(task_dat, {
                                    type: "tasklist"
                                }))
                            }
                            buildkey = task_list_html
                        }
                        "" != task_list_html || boot_1.RS.show_promotion || (task_list_html = '<div class="emptyAdminContent"><img src="./imagenew/common/empty/img_task_empty.png"><p>' + language_1.Language.getLang("%%%task_nothing%%%") + "</p></div>", buildkey = "empty"), buildkey != boot_1.CW.last_tasklist_buildkey && (boot_1.CW.last_tasklist_buildkey = buildkey, $C("#_subRoomTaskList").html(task_list_html)), this.task_num > 0 ? (this.view_limit <= this.task_num ? $C("#_roomTaskNum").show().text(language_1.Language.getLang("%%%task_num%%%", {
                            num: this.view_limit.toLocaleString()
                        })) : $C("#_roomTaskNum").show().text(" (" + this.task_num.toLocaleString() + ")"), $C("#_roomTaskAll").show()) : ($C("#_roomTaskNum").hide(), $C("#_roomTaskAll").hide()), boot_1.RS.showPromotion()
                    }
                }
            }()
    }, {
        "../controller/boot": 340,
        "../lib/language": 384
    }],
    467: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var common_1 = require("../../core/lib/common"),
            boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            TaskView = function() {
                function TaskView(model) {
                    this.model = model, this.alltask_status = "open", this.alltask_type = "my", this.alltask_filter = "all", this.task_window = null, this.task_window_pager_num = 0, this.task_window_pager_index = 0, this.task_window_pager_view_num = boot_1.TM.taskwindow_pager_view_num, this.task_window_pager = null, this.task_timeline_span = 30, this.chatname_opton_default = {
                        withIcon: !1
                    }, this.assign_option_default = {
                        withName: !1
                    }, this.max_assign_show_num = boot_1.TM.timeline_assign_member_show_max
                }
                return TaskView.prototype.sendViewpageInfoToAnalytics = function() {
                    var self = this;
                    "my" === self.alltask_type && "open" === self.alltask_status ? boot_1.TREASURE.trackEvent("task_list", "open", {
                        label: "my_open_task"
                    }) : "my" === self.alltask_type && "done" === self.alltask_status ? boot_1.TREASURE.trackEvent("task_list", "open", {
                        label: "my_done_task"
                    }) : "assign" === self.alltask_type && "open" === self.alltask_status ? boot_1.TREASURE.trackEvent("task_list", "open", {
                        label: "assign_open_task"
                    }) : "assign" === self.alltask_type && "done" === self.alltask_status && boot_1.TREASURE.trackEvent("task_list", "open", {
                        label: "assign_done_task"
                    })
                }, TaskView.prototype.prepare = function() {
                    var self = this;
                    $("#_openTaskWindow").click(function() {
                        self.openTaskWindow(), boot_1.TREASURE.trackEvent("task_list", "click", {
                            label: "task_list_navigation"
                        })
                    });
                    var taskedit_assign_tip = null,
                        taskedit_dialog = null;
                    $C("#_wrapper").on("mouseenter", "._moveTask", function() {
                        if (!$.cwMessageTip.isInit(this)) {
                            $(this).cwMessageTip({
                                message: language_1.Language.getLang("%%%jump_to_addpoint%%%"),
                                delay: boot_1.TM.messagetip_delay
                            }).open()
                        }
                    }).on("click", "._moveTask", function() {
                        var task_id = $(this).closest("._taskList").attr("data-task-id"),
                            task_dat = self.model.task_id2task_dat[task_id];
                        boot_1.RL.selectRoom(task_dat.rid, task_dat.cid), boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "task_message_jump"
                        })
                    }).on("mouseenter", "._editTask", function() {
                        if (!$.cwMessageTip.isInit(this)) {
                            $(this).cwMessageTip({
                                message: language_1.Language.getLang("%%%task_edit_hint%%%"),
                                delay: boot_1.TM.messagetip_delay
                            }).open()
                        }
                    }).on("click", "._editTask", function() {
                        var task_id = $(this).closest("._taskList").attr("data-task-id"),
                            task = $("#_taskEditContent"),
                            task_limit = $("#_taskEditLimit").cwDatePicker(),
                            task_dat = self.model.task_id2task_dat[task_id];
                        if (void 0 == task_dat) return boot_1.CW.alert(language_1.Language.getLang("%%%task_not_found%%%")), !1;
                        null == taskedit_assign_tip && (task_limit.setOption({
                            dateLabel: $("#_taskEditLimitLabel"),
                            open: function() {
                                boot_1.TREASURE.trackEvent("room_detail", "click", {
                                    label: "task_change_limit_date"
                                })
                            }
                        }), taskedit_assign_tip = $C("#_taskEditList").cwListTip({
                            search: !0,
                            placeHolder: language_1.Language.getLang("%%%chatroom_search_member%%%"),
                            useHtmlLabel: !0,
                            multiSelect: !1,
                            select: function() {
                                this.close()
                            },
                            update: function() {
                                var aid = this.getVal(),
                                    html = '<div class="assignContent assignMember"><span class="_taskAssignMemberLabel assignContentText assignContentTextEdit" data-aid="' + aid + '">' + boot_1.CW.getName(aid) + "</span></div>";
                                $C("#_taskEditIncharge").html(html)
                            }
                        }), $C("#_taskEditIncharge").on("click", "._taskAssignMemberLabel", function() {
                            boot_1.TREASURE.trackEvent("room_detail", "click", {
                                label: "task_change_assignee"
                            }), taskedit_assign_tip.open($(this))
                        }), taskedit_dialog = $("#_taskEditDialog").cwDialog({
                            title: language_1.Language.getLang("%%%task_edit_title%%%"),
                            width: 480,
                            height: "auto",
                            buttonLabels: [language_1.Language.getLang("%%%button_save_long%%%"), language_1.Language.getLang("%%%button_cancel%%%")],
                            buttonSubmit: 0,
                            buttonCancel: 1,
                            buttonClick: function(index) {
                                switch (index) {
                                    case 0:
                                        var error = [],
                                            task_name = task.val();
                                        if (task_name || error.push(language_1.Language.getLang("%%%task_error_empty%%%")), error.length) return void boot_1.CW.alert(error.join("\n"));
                                        var task_limit_val = task_limit.getVal();
                                        boot_1.CS.editTask(this.data.task_id, taskedit_assign_tip.getVal(), task_name, task_limit_val), this.close(), boot_1.TREASURE.trackEvent("room_detail", "click", {
                                            label: "task_update"
                                        })
                                }
                            },
                            open: function(task_id) {
                                this.data.task_id = task_id
                            }
                        })), taskedit_assign_tip.setOption({
                            list: boot_1.RS.view.getTaskMemberList(task_dat.rid)
                        }).select(task_dat.aid), task.val(task_dat.tn), task_limit.setVal(task_dat.lt ? boot_1.CW.getDate(task_dat.lt, boot_1.ST.data.dateformat) : ""), taskedit_dialog.open(task_id)
                    }).on("mouseenter", "._deleteTask", function() {
                        if (!$.cwMessageTip.isInit(this)) {
                            $(this).cwMessageTip({
                                message: language_1.Language.getLang("%%%task_delete_hint%%%"),
                                delay: boot_1.TM.messagetip_delay
                            }).open()
                        }
                    }).on("click", "._deleteTask", function() {
                        var task_id = $(this).closest("._taskList").attr("data-task-id");
                        boot_1.CW.view.confirmDelete(language_1.Language.getLang("%%%task_confirm_delete%%%"), function() {
                            self.model.deleteTask(task_id)
                        }), boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "task_delete"
                        })
                    }).on("click", "._taskCheck", function() {
                        if (!boot_1.CW.isLogin()) return boot_1.CW.alert(language_1.Language.getLang("%%%error_no_login_action%%%")), !1;
                        var button = $(this),
                            status = button.attr("data-task-status");
                        return self.submitTask(button.closest("._taskList"), status), boot_1.TREASURE.trackEvent("room_detail", "click", {
                            label: "task_done"
                        }), !1
                    })
                }, TaskView.prototype.submitTask = function(task_jqObj, status) {
                    var task_checked, self = this,
                        task_id = task_jqObj.attr("data-task-id");
                    switch (status) {
                        case "open":
                            task_checked = 0;
                            break;
                        case "done":
                            task_checked = 1;
                            break;
                        default:
                            return
                    }
                    "TR" == task_jqObj[0].tagName ? (task_jqObj.children().fadeOut(500), setTimeout(function() {
                        self.model.checkTask(task_id, task_checked)
                    }, 500)) : task_jqObj.removeClass("subContentShadow").fadeOut(500, function() {
                        self.model.checkTask(task_id, task_checked)
                    })
                }, TaskView.prototype.prepareTaskWindow = function() {
                    var self = this;
                    $("#_taskWindowTabOpen").click(function() {
                        "open" != self.alltask_status && ($("#_taskWindowTabDone").removeClass("floatTabSelect"), $(this).addClass("floatTabSelect"), self.alltask_status = "open", self.buildTaskWindow(), self.sendViewpageInfoToAnalytics())
                    }), $("#_taskWindowTabDone").click(function() {
                        "done" != self.alltask_status && ($("#_taskWindowTabOpen").removeClass("floatTabSelect"), $(this).addClass("floatTabSelect"), self.alltask_status = "done", self.buildTaskWindow(), self.sendViewpageInfoToAnalytics())
                    }), $C("#_taskWindowList").on("click", "._taskList", function() {
                        $C("#_taskWindowList").find("._taskList").removeClass("adminDetailSelected");
                        var task = $(this);
                        task.addClass("adminDetailSelected"), self.buildTaskDetail(task.attr("data-task-id")), boot_1.TREASURE.trackEvent("task_list", "open", {
                            label: "task_detail"
                        })
                    }), $("#_taskDetailClose").click(function() {
                        $C("#_taskWindowList").find("._taskList").removeClass("adminDetailSelected"), $C("#_taskDetailArea").attr("data-task-id", "").hide(), $C("#_taskDetailBlankArea").show()
                    });
                    var taskview_list = ["my", "assign"];
                    $("#_taskWindowViewType").cwTabbedBar({
                        descriptionDelay: 0,
                        update: function(idx) {
                            self.alltask_type = taskview_list[idx], self.buildTaskWindow(), self.sendViewpageInfoToAnalytics()
                        }
                    }), self.task_window = $("#_taskWindow").cwFloatWindow({
                        width: 920,
                        title: language_1.Language.getLang("%%%menu_mytask%%%")
                    }), $C("#_taskDetailTitle").click(function() {
                        var task_id = $C("#_taskDetailArea").attr("data-task-id"),
                            task = $C("#_taskWindowList").find("li._taskList[data-task-id=" + task_id + "]");
                        $C("#_taskWindowBox").scrollTo(task, 600)
                    });
                    var taskfilter_list = ["all", "limitover", "today", "inweek", "nolimit"];
                    $("#_taskWindowFilter").cwTabbedBar({
                        update: function(idx) {
                            self.alltask_filter = taskfilter_list[idx], self.task_window_pager_num = 0, self.task_window_pager_index = 0, self.buildTaskWindow()
                        }
                    });
                    var taskpager_list = ["first", "prev", "next", "last"];
                    self.task_window_pager = $("#_taskWindowPager").cwButtonBar({
                        update: function(idx) {
                            switch (taskpager_list[idx]) {
                                case "first":
                                    self.task_window_pager_index = 0;
                                    break;
                                case "prev":
                                    self.task_window_pager_index--, self.task_window_pager_index < 0 && (self.task_window_pager_index = 0);
                                    break;
                                case "next":
                                    self.task_window_pager_index++, self.task_window_pager_index >= self.task_window_pager_num && (self.task_window_pager_index = self.task_window_pager_num - 1);
                                    break;
                                case "last":
                                    self.task_window_pager_index = self.task_window_pager_num - 1
                            }
                            self.buildTaskWindow({
                                resetPager: !1
                            }), $C("#_taskWindowBox").scrollTop(0)
                        }
                    })
                }, TaskView.prototype.openTaskWindow = function() {
                    var self = this;
                    self.task_window || self.prepareTaskWindow(), self.task_window.open(), self.buildTaskWindow()
                }, TaskView.prototype.enableTaskArea = function() {
                    $C("#_subRoomTaskAddArea").show()
                }, TaskView.prototype.disableTaskArea = function() {
                    $C("#_subRoomTaskAddArea").hide()
                }, TaskView.prototype.buildByTaskId = function(task_id, tasknum_refresh) {
                    var task_id_list, self = this;
                    task_id_list = "object" != typeof task_id ? [task_id] : task_id, void 0 == tasknum_refresh && (tasknum_refresh = !1);
                    var rm_build = !1,
                        allmy_build = !1,
                        rid_flag = {};
                    for (var i in task_id_list) {
                        var task_dat = boot_1.TK.task_id2task_dat[task_id_list[i]];
                        rid_flag[task_dat.rid] = !0, boot_1.RM && boot_1.RM.id == task_dat.rid && (rm_build = !0), task_dat.aid != boot_1.AC.myid && task_dat.bid != boot_1.AC.myid || (allmy_build = !0)
                    }
                    if (tasknum_refresh) {
                        for (var rid in rid_flag) boot_1.RL.rooms[rid].refreshTaskNum();
                        boot_1.RL.build()
                    }
                    rm_build && boot_1.RM.tasklist.build(), allmy_build && self.buildTaskWindow()
                }, TaskView.prototype.buildTaskWindow = function(user_option) {
                    var self = this;
                    if (self.task_window && self.task_window.isOpen()) {
                        $.extend({
                            resetPager: !0
                        }, user_option).resetPager && (self.task_window_pager_index = 0);
                        var status = self.alltask_status,
                            type = self.alltask_type,
                            stkey = status + type;
                        if ($C("#_emptyTaskContent").hide(), !self.model.mytask_load_flag.loaded[stkey]) return $C("#_taskWindowList").html('<li class="contentLoading"><img src="./imagenew/all/common/loader/img_loader_gray.gif" />' + language_1.Language.getLang("%%%task_loading%%%") + "</li>"), !self.model.mytask_load_flag.loading[stkey] && (self.model.mytask_load_flag.loading[stkey] = !0, boot_1.CW.get("gateway.php", {
                            cmd: "load_my_task",
                            type: type,
                            status: status
                        }, function(json) {
                            if (json.task_dat) {
                                for (var task_id in json.task_dat) json.task_dat[task_id].cid = parseInt(json.task_dat[task_id].cid, 10), self.model.setTask(json.task_dat[task_id]);
                                self.model.mytask_load_flag.loading[stkey] = !1, self.model.mytask_load_flag.loaded[stkey] = common_1.time(), self.buildTaskWindow()
                            }
                        }), !1);
                        var task_list = self.model.getMyTaskList(status, type),
                            filtered_task_list = [];
                        if ("open" == status) {
                            $C("#_taskWindowFilter").show();
                            for (var now = common_1.time(), term_today_start = now, term_today_end = term_today_start + 86400, term_week_end = term_today_start + 604800, num_all = task_list.length, num_limitover = 0, num_limittoday = 0, num_limitweek = 0, num_limitnone = 0, i = num_all; i--;) {
                                var task_id = task_list[i],
                                    task_dat = boot_1.TK.task_id2task_dat[task_list[i]];
                                0 != task_dat.lt && task_dat.lt <= now && (num_limitover++, "limitover" == self.alltask_filter && filtered_task_list.push(task_id)), term_today_start < task_dat.lt && term_today_end > task_dat.lt && (num_limittoday++, "today" == self.alltask_filter && filtered_task_list.push(task_id)), term_today_start < task_dat.lt && term_week_end > task_dat.lt && (num_limitweek++, "inweek" == self.alltask_filter && filtered_task_list.push(task_id)), 0 == task_dat.lt && (num_limitnone++, "nolimit" == self.alltask_filter && filtered_task_list.push(task_id)), "all" == self.alltask_filter && filtered_task_list.push(task_id)
                            }
                            boot_1.RL.mytask_total > 0 ? $C("#_taskWindowNumAll").text(num_all).css("display", "inline-block") : $C("#_taskWindowNumAll").hide(), num_limitover > 0 ? $C("#_taskWindowNumLimitOver").text(num_limitover).css("display", "inline-block") : $C("#_taskWindowNumLimitOver").hide(), num_limittoday > 0 ? $C("#_taskWindowNumLimitToday").text(num_limittoday).css("display", "inline-block") : $C("#_taskWindowNumLimitToday").hide(), num_limitweek > 0 ? $C("#_taskWindowNumLimitWeek").text(num_limitweek).css("display", "inline-block") : $C("#_taskWindowNumLimitWeek").hide(), num_limitnone > 0 ? $C("#_taskWindowNumLimitNone").text(num_limitnone).css("display", "inline-block") : $C("#_taskWindowNumLimitNone").hide()
                        } else $C("#_taskWindowFilter").hide(), filtered_task_list = task_list;
                        boot_1.TK.sortTaskList(filtered_task_list);
                        var disp_task_list = [],
                            filtererd_length = filtered_task_list.length;
                        if (self.task_window_pager_num = parseInt(filtererd_length / self.task_window_pager_view_num, 10), filtererd_length % self.task_window_pager_view_num != 0 && self.task_window_pager_num++, filtererd_length >= self.task_window_pager_view_num) {
                            var idx_start = self.task_window_pager_index * self.task_window_pager_view_num,
                                idx_end = idx_start + self.task_window_pager_view_num;
                            idx_end > filtererd_length && (idx_end = filtererd_length);
                            for (var idx = idx_start; idx < idx_end; idx++) disp_task_list.push(filtered_task_list[idx])
                        } else disp_task_list = filtered_task_list;
                        for (var detail_task_id = $C("#_taskDetailArea").attr("data-task-id"), detail_task_is_found = !1, html = "", task_length = disp_task_list.length, i = 0; i < task_length; i++) {
                            var task_dat = boot_1.TK.task_id2task_dat[disp_task_list[i]],
                                room = boot_1.RL.rooms[task_dat.rid];
                            room || (room = {
                                getIcon: function() {
                                    return ""
                                },
                                getName: function() {
                                    return language_1.Language.getLang("%%%chatroom_error_not_found%%%")
                                }
                            }), detail_task_id == task_dat.id && (detail_task_is_found = !0), html += self.getTaskPanel(task_dat, {
                                type: "taskwindow"
                            })
                        }
                        $C("#_taskWindowList").html(html), detail_task_is_found || $C("#_taskDetailClose").click(), 0 == task_length && $C("#_emptyTaskContent").show(), task_length ? $C("#_taskWindowPagerIndex").text((self.task_window_pager_index + 1).toString() + " / " + self.task_window_pager_num) : $C("#_taskWindowPagerIndex").text(""), self.task_window_pager.enableButtonAll(), 0 == self.task_window_pager_index && self.task_window_pager.disableButton(0).disableButton(1), self.task_window_pager_num - self.task_window_pager_index <= 1 && self.task_window_pager.disableButton(2).disableButton(3), self.task_window.resize()
                    }
                }, TaskView.prototype.buildTaskDetail = function(task_id, loaded) {
                    var self = this,
                        task_dat = self.model.task_id2task_dat[task_id];
                    if (task_dat.st == self.alltask_status) {
                        switch (self.alltask_type) {
                            case "my":
                                if (task_dat.aid != boot_1.AC.myid) return;
                                break;
                            case "assign":
                                if (task_dat.bid != boot_1.AC.myid) return
                        }
                        var task_name_text = $C("#_taskWindowList").find('[data-task-id="' + task_id + '"]').find("._taskNameContent").text();
                        $C("#_taskDetailTitle").text(task_name_text), $C("#_taskDetailLimit").html(self.getTaskLimit(task_dat, {
                            withLabel: !1
                        })), $C("#_taskDetailAssign").html(self.getTaskAssign(task_dat, {
                            withName: !0
                        })), $C("#_taskDetailAssignBy").html(self.getTaskAssignBy(task_dat, {
                            withName: !0
                        })), $C("#_taskDetailChatName").html(self.getTaskChatName(task_dat, {
                            withIcon: !0
                        })), $C("#_taskDetailBlankArea").hide();
                        var room, room_id = task_dat.rid,
                            message_id = task_dat.cid,
                            is_timeline_built = !1,
                            html = "";
                        if (boot_1.RL.rooms[room_id]) {
                            room = boot_1.RL.rooms[room_id];
                            var need_load = !1,
                                load_old_only = !1;
                            if (!loaded)
                                if (room.timeline)
                                    if (room.timeline.chat_id2chat_dat[message_id]) {
                                        var i = void 0,
                                            msg_len = void 0;
                                        for (i = 0, msg_len = room.timeline.chat_list.length; i < msg_len; i++) {
                                            var chat_dat = room.timeline.chat_list[i];
                                            if (chat_dat.id == message_id) break
                                        }
                                        self.task_timeline_span > i && room.timeline.has_old && (need_load = !0, load_old_only = !0)
                                    } else need_load = !0;
                                else need_load = !0;
                            if (need_load) loaded ? html = "<div>" + language_1.Language.getLang("%%%jump_to_addpoint_not_found%%%") + "</div>" : (html = '<div class="timeLineLoading"><img src="./imagenew/all/common/loader/img_loader_white.gif" />' + language_1.Language.getLang("%%%chat_loading%%%") + "</div>", load_old_only ? room.timeline.loadOld(function() {
                                self.buildTaskDetail(task_id, !0)
                            }) : room.load({
                                jumpTo: message_id
                            }, function() {
                                room.timeline.loadOld(function() {
                                    self.buildTaskDetail(task_id, !0)
                                })
                            }));
                            else {
                                var target_idx = 0,
                                    i = void 0,
                                    msg_len = void 0;
                                for (i = 0, msg_len = room.timeline.chat_list.length; i < msg_len; i++) {
                                    var chat_dat = room.timeline.chat_list[i];
                                    if (chat_dat.id == message_id) {
                                        target_idx = i;
                                        break
                                    }
                                }
                                if (target_idx) {
                                    var start_idx = 0;
                                    target_idx > self.task_timeline_span && (start_idx = target_idx - self.task_timeline_span);
                                    for (var end_idx = target_idx + self.task_timeline_span, chat_list = [], i_1 = start_idx; i_1 <= end_idx && i_1 < msg_len; i_1++) chat_list.push(room.timeline.chat_list[i_1]);
                                    html = room.timeline.view.getTimeLine(chat_list, {
                                        idPrefix: "taskWindow",
                                        selectId: message_id
                                    }), is_timeline_built = !0
                                } else;
                            }
                        } else html = "<div>" + language_1.Language.getLang("%%%jump_to_addpoint_not_found%%%") + "</div>";
                        if (room.timeline.view.renderTimeLine($C("#_taskDetailTimeLine"), html), $C("#_taskDetailArea").attr("data-task-id", task_id).show(), is_timeline_built) {
                            var target_msg = $("#taskWindow_messageId" + message_id);
                            target_msg.length > 0 && $C("#_taskDetailTimeLine").scrollTo(target_msg, 0)
                        }
                    }
                }, TaskView.prototype.getTaskPanel = function(task_dat, option) {
                    var self = this,
                        html = "";
                    if ("deleted" != task_dat.st) {
                        var task_class = "_task",
                            date = "";
                        if (self.isMyTask(task_dat) && (task_class += " taskMine"), "done" == task_dat.st && (task_class += " taskComplete"), "tasklist" == option.type) {
                            var task_cmd_button = '<div class="_moveTask button"><span class="icoFontActionMove"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%jump_to_addpoint%%%") + "</span></div>";
                            task_dat.aid != boot_1.AC.myid && task_dat.bid != boot_1.AC.myid || (task_cmd_button += '<div class="_editTask button"><span class="icoFontActionEdit"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%task_edit_hint%%%") + '</span></div><div class="_deleteTask button"><span class="icoFontActionDelete"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%task_delete_hint%%%") + "</span></div>"), html = '<li class="_taskList subContentSection subContentShadow ' + task_class + '" data-task-id="' + task_dat.id + '" data-type="list"><div id="_taskContent" class="subContentAreaInner"><div class="clearfix"><div class="completeCheckboxArea">' + self.getTaskButton(task_dat) + "</div>" + self.getTaskName(task_dat) + '</div><div class="taskMetaArea">' + self.getTaskAssign(task_dat) + self.getTaskLimit(task_dat) + '</div></div><div class="btnGroup">' + task_cmd_button + "</div></li>"
                        } else if ("preview" == option.type) html = '<div class="deleteTask ' + task_class + '">' + self.getTaskName(task_dat) + '<div class="deleteTaskMeta">' + self.getTaskAssign(task_dat) + self.getTaskLimit(task_dat) + "</div></div>";
                        else if ("taskwindow" == option.type) {
                            var task_cmd_button = '<div class="_moveTask button"><span class="icoFontActionMove"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%jump_to_addpoint%%%") + "</span></div>";
                            task_dat.aid != boot_1.AC.myid && task_dat.bid != boot_1.AC.myid || (task_cmd_button += '<div class="_editTask button"><span class="icoFontActionEdit"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%task_edit_hint%%%") + '</span></div><div class="_deleteTask button"><span class="icoFontActionDelete"></span><span class="icoTextHide">' + language_1.Language.getLang("%%%task_delete_hint%%%") + "</span></div>"), html = '<li class="_taskList subContentSection subContentShadow" data-task-id="' + task_dat.id + '"><div class="subContentAreaInner"><div class="clearfix"><div class="completeCheckboxArea">' + self.getTaskButton(task_dat) + "</div>" + self.getTaskName(task_dat) + '</div><div class="taskMetaArea">' + self.getTaskAssign(task_dat) + self.getTaskLimit(task_dat) + '</div></div><div class="btnGroup">' + task_cmd_button + "</div></li>"
                        } else if ("timeline" == option.type) {
                            task_dat.lt && (date = "<span>" + self.getTaskLimit(task_dat, {
                                    icon: !0
                                }) + "</span>");
                            var task_body_class = "";
                            "done" == task_dat.st && (boot_1.RM.timeline.view.task_showmore_flag[option.mid] || (task_class += " _taskCompleteHide", task_body_class += " _taskBody taskBodyHide")), html = '<div class="chatInfoTaskArea ' + task_class + '"><div class="chatInfoTaskMetaArea ' + task_class + '"><div>' + self.getTaskAssign(task_dat) + date + '</div></div><div class="chatInfoTaskContentArea' + task_body_class + '">'
                        }
                    } else html = '<div class="_delete chatInfoTaskArea">' + language_1.Language.getLang("%%%task_deleted%%%") + "</div>";
                    return html
                }, TaskView.prototype.isMyTask = function(task_dat) {
                    if (task_dat.aid && task_dat.aid.includes && task_dat.aid.includes(",")) {
                        task_dat.aid = task_dat.aid.split(",");
                        for (var idx in task_dat.aid)
                            if (task_dat.aid[idx] == boot_1.AC.myid) return !0
                    } else if (task_dat.aid == boot_1.AC.myid) return !0;
                    return !1
                }, TaskView.prototype.getTaskName = function(task_dat) {
                    return '<pre class="_taskName taskName"><div class="_taskNameContent">' + boot_1.CW.renderMessage(task_dat.tn) + "</div></pre>"
                }, TaskView.prototype.getTaskChatName = function(task_dat, option) {
                    var self = this;
                    void 0 == option && (option = self.chatname_opton_default);
                    var icon = "";
                    return option.withIcon && (icon = boot_1.RL.rooms[task_dat.rid].getIcon()), icon + boot_1.CW.getRoomName(task_dat.rid)
                }, TaskView.prototype.getTaskAssign = function(task_dat, option) {
                    var self = this;
                    void 0 == option && (option = self.assign_option_default);
                    var account_panel = "",
                        more_aid_list = [];
                    if ($.isArray(task_dat.aid)) {
                        boot_1.RM.sortMember(task_dat.aid);
                        for (var i = 0, mem_len = task_dat.aid.length; i < mem_len; i++) {
                            var aid = task_dat.aid[i];
                            i < self.max_assign_show_num ? account_panel += boot_1.CW.getAvatarPanel(aid, {
                                size: "tiny"
                            }) : more_aid_list.push(aid)
                        }
                    } else account_panel += boot_1.CW.getAvatarPanel(task_dat.aid, {
                        size: "tiny"
                    });
                    return option.withName && (account_panel += boot_1.CW.getName(task_dat.aid)), more_aid_list.length > 0 && (account_panel += '<a class="_showMoreMemberTask showMoreMember" data-aid-list="' + task_dat.aid.join(",") + '">' + language_1.Language.getLang("%%%chatroom_member_rest_number%%%", {
                            rest_number: more_aid_list.length
                        }) + "</a>"), account_panel
                }, TaskView.prototype.getTaskAssignBy = function(task_dat, option) {
                    var self = this;
                    void 0 == option && (option = self.assign_option_default);
                    var account_panel = "";
                    if ("object" == typeof task_dat.bid)
                        for (var idx in task_dat.bid) account_panel += boot_1.CW.getAvatarPanel(task_dat.bid[idx], {
                            size: "tiny"
                        });
                    else account_panel += boot_1.CW.getAvatarPanel(task_dat.bid, {
                        size: "tiny",
                        clicktip: !1,
                        hovertip: !1
                    });
                    return option.withName && (account_panel += boot_1.CW.getName(task_dat.bid)), account_panel
                }, TaskView.prototype.getTaskLimit = function(task_dat, option) {
                    var html, now = common_1.time(),
                        limit_over = !1,
                        date = "";
                    return option = $.extend(!0, {
                        withLabel: !0
                    }, option), html = '<div class="taskDateLimit">', task_dat.lt && (option.withLabel && (html += language_1.Language.getLang("%%%task_limittip%%%")), date = boot_1.CW.getDate(task_dat.lt, boot_1.ST.data.dateformat), "open" == task_dat.st && (task_dat.lt <= now || date == boot_1.CW.getDate(now, boot_1.ST.data.dateformat)) && (limit_over = !0)), limit_over ? html + '<time class="limitedOver">' + date + "</time></div>" : html + "<time>" + date + "</time></div>"
                }, TaskView.prototype.getTaskButton = function(task_dat) {
                    return task_dat.aid == boot_1.AC.myid || task_dat.bid == boot_1.AC.myid ? "done" == task_dat.st ? '<div class="_taskCheck button" data-task-id="' + task_dat.id + '" data-task-status="open"><span class="_checkTaskLabel completeText">' + language_1.Language.getLang("%%%button_incomplete%%%") + "</span></div>" : '<div class="_taskCheck button btnPrimary" data-task-id="' + task_dat.id + '" data-task-status="done"><span class="_checkTaskLabel completeText">' + language_1.Language.getLang("%%%button_complete%%%") + "</span></div>" : ""
                }, TaskView
            }();
        exports.TaskView = TaskView
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/language": 384
    }],
    468: [function(require, module, exports) {
        "use strict";

        function TimeLineView(model) {
            var self = this;
            self.model = model, self.task_showmore_flag = {}, self.start_index = 0, self.has_new = !1
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var range = require("lodash.range"),
            boot_1 = require("../controller/boot"),
            common_1 = require("../../core/lib/common"),
            language_1 = require("../lib/language"),
            lifeCycleEvent_1 = require("../lib/lifeCycleEvent");
        exports.TimeLineView = TimeLineView, window.TimeLineView = TimeLineView,
            function() {
                var message_select_id = 0,
                    latest_build_rid = 0,
                    last_aid = 0;
                TimeLineView.prototype = {
                    read: function(before_unread_num) {
                        var unread_num = this.model.room.getUnreadNum();
                        if (0 == unread_num) $C("#_timeLine").find("._unreadMark").fadeOut("slow", function() {
                            $(this).remove()
                        });
                        else {
                            var chat_list_1 = 0 == boot_1.ST.data.show_delmessage ? this.model.getChatListWithoutDeleted() : this.model.getChatList(),
                                max_index = chat_list_1.length - unread_num;
                            range(max_index - (before_unread_num - unread_num), max_index, 1).map(function(index) {
                                void 0 !== chat_list_1[index] && $("#_messageId" + chat_list_1[index].id + " ._unreadMark").fadeOut("slow", function() {
                                    $(this).remove()
                                })
                            })
                        }
                    },
                    build: function(user_option) {
                        var timeline_obj = $C("#_timeLine"),
                            option = $.extend({
                                smoothScroll: !1,
                                scrollTo: null,
                                everScroll: !1,
                                highlight: !1,
                                jumpToCallback: function() {},
                                sendingId: null
                            }, user_option),
                            scroll_to = option.scrollTo,
                            cend = $("#_messageIdEnd"),
                            cend_top = 0;
                        cend.length > 0 && (cend_top = cend.offset().top);
                        var disabled_send = this.model.room.view.disabled_send,
                            html = "",
                            timeline_build_key = [],
                            t_idx = 0;
                        timeline_build_key[t_idx++] = "d:" + disabled_send + ":", this.model.chat_list.length < this.model.room.chat_num ? (timeline_build_key[t_idx++] = "l:1", html += '<div class="timeLineLoading"><img src="./imagenew/all/common/loader/img_loader_white.gif" />' + language_1.Language.getLang("%%%chat_loading%%%") + "</div>", this.model.room.buildtime ? this.model.has_old = !0 : this.model.has_old = !1) : this.model.has_old = !1;
                        var model = this.model,
                            chat_list = [],
                            target_idx = null,
                            start_idx = 0,
                            msg_len = model.chat_list.length;
                        if (latest_build_rid != model.room.id && (this.start_index = 0), scroll_to && "End" != scroll_to)
                            for (var i = 0; i < msg_len; i++) {
                                var chat_dat = model.chat_list[i];
                                if (scroll_to == chat_dat.id) {
                                    target_idx = i, this.start_index = target_idx - 100;
                                    break
                                }
                            }
                        if (latest_build_rid == model.room.id)
                            if (option.everScroll) {
                                var tl_top = $C("#_timeLine").offset().top,
                                    temp_idx_except_deletemessage = [];
                                if (!target_idx)
                                    for (var i = 0; i < msg_len; i++) {
                                        var chat_dat_1 = model.chat_list[i];
                                        "[deleted]" !== chat_dat_1.msg && (temp_idx_except_deletemessage.push(i), 100 < temp_idx_except_deletemessage.length && temp_idx_except_deletemessage.shift());
                                        var chat_obj = $("#_messageId" + chat_dat_1.id);
                                        if (chat_obj.length && tl_top < chat_obj.offset().top) {
                                            if (!model.has_new_message && !scroll_to) {
                                                if (!model.has_old && 0 == i) return !1;
                                                scroll_to = chat_dat_1.id
                                            }
                                            target_idx = i;
                                            break
                                        }
                                    }
                                start_idx = "number" == typeof temp_idx_except_deletemessage[0] ? temp_idx_except_deletemessage[0] : target_idx - 100
                            } else start_idx = this.start_index;
                        else start_idx = null !== target_idx ? target_idx - 100 : msg_len - 200;
                        start_idx < 0 && (start_idx = 0);
                        for (var num = 0, i = start_idx; i < msg_len && (0 == boot_1.ST.data.show_delmessage && "[deleted]" == model.chat_list[i].msg || (model.chat_list[i] && (chat_list.push(model.chat_list[i]), num++), !(num >= 200))); i++);
                        this.start_index = start_idx, chat_list.length > 100 && chat_list[chat_list.length - 1].id != model.chat_list[msg_len - 1].id ? ("End" == scroll_to && (scroll_to = !1), this.has_new = !0) : this.has_new = !1;
                        var sending_chat_list = model.sending_chat_list;
                        if (sending_chat_list.length)
                            for (var i = 0; i < sending_chat_list.length; i++) {
                                var chat_dat_2 = sending_chat_list[i];
                                chat_dat_2 && chat_list.push(chat_dat_2)
                            }
                        var chat_list_for_view = 0 == boot_1.ST.data.show_delmessage ? this.model.getChatListWithoutDeleted() : this.model.getChatList(),
                            chat_list_length = chat_list_for_view.length,
                            unread_num = this.model.room.getUnreadNum(),
                            last_read_message_id = 0,
                            last_read_message_index = chat_list_length - unread_num - 1,
                            last_read_message = chat_list_for_view[last_read_message_index];
                        last_read_message && (last_read_message_id = last_read_message.id), html += this.getTimeLine(chat_list, {
                            lastReadMessageId: last_read_message_id,
                            unreadFrom: chat_list_length - unread_num,
                            readLock: model.room.read_lock,
                            editId: boot_1.CS.chatedit_id,
                            selectId: message_select_id
                        }), html += '<div id="_messageIdEnd" class="actionBarSpacer"></div>';
                        var scroll_time = 0;
                        option.smoothScroll && (scroll_time = option.sendingId ? 70 : 200);
                        var scroll_move = !1,
                            buildkey = html;
                        if (boot_1.CW.last_timeline_buildkey != buildkey) {
                            if (this.renderTimeLine(timeline_obj, html), latest_build_rid != model.room.id && (latest_build_rid = model.room.id, message_select_id = 0), model.has_new_message = !1, option.sendingId && $C("#_timeLine").find("._sendingMessage img:last").hide().fadeIn(3e3), boot_1.CW.last_timeline_buildkey = buildkey, scroll_to || cend_top < $C("#_chatSendArea").offset().top + 50 && (scroll_to = "End"), (this.model.room.rswitch || scroll_to) && scroll_to) {
                                var self_1 = this,
                                    obj_1 = $("#_messageId" + scroll_to);
                                obj_1.length && (option.highlight && (message_select_id = scroll_to), scroll_move = !0, function() {
                                    var exec_scroll = !1,
                                        scroll_handler = function() {
                                            exec_scroll = !0
                                        },
                                        _timeLine = $C("#_timeLine");
                                    _timeLine.one("scroll", scroll_handler).scrollTo(obj_1, scroll_time, function() {
                                        option.highlight && self_1.highlight(obj_1), option.jumpToCallback()
                                    }), setTimeout(function() {
                                        exec_scroll || (_timeLine.unbind("scroll", scroll_handler), _timeLine.trigger("scroll"))
                                    }, 0)
                                }())
                            }
                            boot_1.AC.hasUnknown() && boot_1.AC.getUnknown(function(account_dat) {
                                for (var account_id in account_dat) $("._nameAid" + account_id).text(account_dat[account_id].name)
                            })
                        } else if (scroll_to) {
                            var self_2 = this,
                                obj_2 = $("#_messageId" + scroll_to);
                            obj_2.length && (scroll_move = !0, $C("#_timeLine").scrollTo(obj_2, scroll_time, function() {
                                option.highlight && self_2.highlight(obj_2), option.jumpToCallback()
                            }))
                        }
                        model.has_old && !scroll_move && setTimeout(function() {
                            $C("#_timeLine").trigger("scroll")
                        }, 100), this.model.chat_list.length < this.model.room.chat_num || lifeCycleEvent_1.LifeCycleEvent.emit("renderTimeLine")
                    },
                    getTimeLine: function(chat_list, user_option) {
                        for (var option = $.extend({
                            lastReadMessageId: !1,
                            unreadFrom: !1,
                            readLock: !1,
                            editId: !1,
                            selectId: !1,
                            idPrefix: ""
                        }, user_option), html = "", before_date = "", i = 0, chat_len = chat_list.length; i < chat_len; i++) {
                            var moption = {
                                    idPrefix: option.idPrefix
                                },
                                chat_dat = chat_list[i];
                            if (0 != boot_1.ST.data.show_delmessage || "[deleted]" != chat_dat.msg) {
                                var chat_dat_date = boot_1.CW.getDate(chat_dat.tm, boot_1.ST.data.dateformat);
                                before_date != chat_dat_date && (before_date = chat_dat_date, last_aid = 0, moption.topView = !0, html += '<div class="dateHead"><div class="dateContent"><span class="icoFontClock"></span><span class="dateText">' + chat_dat_date + "</span></div></div>"), last_aid == chat_dat.aid ? moption.showSender = !1 : last_aid = chat_dat.aid, !1 !== option.lastReadMessageId && chat_dat.id > option.lastReadMessageId && (moption.showUnreadMark = !0), option.readLock && (moption.readLock = !0), option.editId && option.editId == chat_dat.id && (moption.editView = !0), option.selectId || (option.selectId = message_select_id), option.selectId && option.selectId == chat_dat.id && (moption.selectView = !0), html += this.getMessagePanel(chat_dat, moption)
                            } else html += '<div id="_messageId' + chat_dat.id + '"></div>'
                        }
                        return html
                    },
                    renderTimeLine: function(timeline_obj, html) {
                        timeline_obj.html(html).find("._taskCompleteHide").each(function() {
                            var task_box = $(this);
                            task_box.find("._taskBody").height() >= 38 && task_box.append('<p class="_showMore showMore showMoreComplete">' + language_1.Language.getLang("%%%read_more%%%") + "</p>")
                        })
                    },
                    getMessagePanel: function(chat_dat, user_option) {
                        var option = $.extend({
                                showSender: !0,
                                topView: !1,
                                showUnreadMark: !1,
                                readLock: !1,
                                editView: !1,
                                selectView: !1,
                                idPrefix: ""
                            }, user_option),
                            avatar = "",
                            name = "",
                            org_name_html = "",
                            chat_class = "_message chatTimeLineMessage chatTimeLineMessageAnim clearfix",
                            chat_attr = "";
                        option.showSender && (avatar = '<div class="_speaker avatarSpeaker">' + boot_1.CW.getAvatarPanel(chat_dat.aid, {
                                size: "medium"
                            }) + "</div>", name = boot_1.CW.getName(chat_dat.aid), org_name_html = '<p class="chatNameOrgname">' + boot_1.CW.getOrgName(chat_dat.aid) + "</p>", option.topView || (chat_class += " chatTimeLineBorder"));
                        var read_stat = "";
                        chat_dat.sid && (read_stat = '<span class="_sendingMessage"><img src="./imagenew/all/common/loader/img_loader_white.gif" ald="Loading"/></span>'), option.showUnreadMark && (read_stat = option.readLock ? '<span class="_unreadMark unreadTimeLine unreadTimeLineLock"></span>' : '<span class="_unreadMark unreadTimeLine"></span>');
                        var message = "";
                        chat_dat.aid == boot_1.AC.myid && (chat_class += " chatTimeLineMessageMine");
                        var is_deleted = 0;
                        "[deleted]" == chat_dat.msg ? (is_deleted = 1, message = '<div class="_delete messegeDelete">' + language_1.Language.getLang("%%%chat_deleted%%%") + "</div>") : "[deleted_by_admin]" == chat_dat.msg ? (is_deleted = 1, message = '<div class="_delete messegeDelete">' + language_1.Language.getLang("%%%chat_deleted_by_admin%%%") + "</div>") : message = boot_1.CW.renderMessage(chat_dat.msg, {
                            mid: chat_dat.id
                        }), is_deleted && (chat_attr += ' data-deleted="1"');
                        var message_date = boot_1.CW.getDate(chat_dat.tm, "H:i");
                        if (option.showSender) {
                            var dateFormat = common_1.is_this_year(chat_dat.tm) ? boot_1.ST.data.dateformat_short : boot_1.ST.data.dateformat;
                            message_date = boot_1.CW.getDate(chat_dat.tm, dateFormat + " H:i")
                        }
                        var dlabel = message_date;
                        chat_dat.utm > 0 && (dlabel += ' <span class="icoFontActionEdit icoSizeSmall"></span>'), chat_dat.mn && (chat_class += " chatTimeLineMessageMention");
                        var edit_label = "";
                        option.editView && (chat_class += " chatTimeLineMessageEdit", edit_label = '<div class="chatTimeLineMessageEditText">' + language_1.Language.getLang("%%%chat_editing_label_on_message%%%") + '<span class="_editCancel closeAction icoFontCancel massageEditCancel"></span></div>');
                        var move_label = "";
                        option.selectView && (chat_class += " _messageSelected chatTimeLineMessageMove", move_label = '<span class="icoFontMessegeMoveArrow icoSizeLarge"></span><span class="icoTextHide">移動したチャット</span>');
                        var room_id = 0;
                        chat_dat.rid ? room_id = chat_dat.rid : this.model && (room_id = this.model.room.id);
                        var timestamp_data = ' data-deleted="' + is_deleted + '" data-tm="' + chat_dat.tm + '"';
                        return chat_dat.utm && (timestamp_data += ' data-utm="' + chat_dat.utm + '"'), '<div id="' + option.idPrefix + "_messageId" + chat_dat.id + '" data-rid="' + room_id + '" data-mid="' + chat_dat.id + '" class="' + chat_class + '"' + chat_attr + '><div class="_chatTimeLineMessageBox chatTimeLineMessageInner">' + avatar + '<div class="chatTimeLineMessageArea clearfix"><div class="chatTimeLineItemHeader autotrim"><p class="_speakerName chatName">' + name + "</p>" + org_name_html + "</div><pre>" + message + '</pre></div><div class="_timeStamp timeStamp"' + timestamp_data + ">" + read_stat + dlabel + "</div>" + edit_label + '</div><div class="_moveArrow chatTimeLineMoveArrow selected">' + move_label + "</div></div>"
                    },
                    highlight: function(message_jqObj) {
                        return this.clearHighlightAll(), message_jqObj.addClass("chatTimeLineMessageMove _messageSelected").find("._moveArrow").html('<span class="icoFontMessegeMoveArrow icoSizeLarge"></span><span class="icoTextHide">移動したチャット</span>'), this
                    },
                    clearHighlight: function(message_jqObj) {
                        return message_jqObj.removeClass("chatTimeLineMessageMove _messageSelected").find("._moveArrow").quickEmpty(), this
                    },
                    clearHighlightAll: function() {
                        return $C("#_timeLine").find("._messageSelected").removeClass("chatTimeLineMessageMove _messageSelected").find("._moveArrow").quickEmpty(), this
                    }
                }
            }()
    }, {
        "../../core/lib/common": 308,
        "../controller/boot": 340,
        "../lib/language": 384,
        "../lib/lifeCycleEvent": 385,
        "lodash.range": 123
    }],
    469: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var addDropDown, headerSearch, subRoomTaskAddArea, chatSendToolbar, chatTextArea, step_header, step_message, next_button, openContact, step_tip, boot_1 = require("../controller/boot"),
            language_1 = require("../lib/language"),
            TutorialView = function() {
                function TutorialView(use_bob_phase1) {
                    this.is_bob_phase1 = "ja" === LANGUAGE, this.step_index = 0, this.tutorial_scenario = [], this.zindex_avoid = {
                        "#_content": "",
                        "#_globalHeader": "",
                        "#_subContent": "",
                        "#_mainContent": "",
                        "#_chatContent": "",
                        "#_addDropDown": "",
                        "#_headerSearch": "",
                        "#_subRoomTaskAddArea": "",
                        "#_chatSendToolbar": "",
                        "#_chatSendArea": "",
                        "#_sideContent": ""
                    }, this.room_create_step = {
                        video_id: "#tutorialMovieChat",
                        start: function() {
                            addDropDown.css("z-index", boot_1.TM.expose_zindex), step_header.text("グループチャットの作成はここからできます"), step_message.text(language_1.Language.getLang("%%%tutorial_addbutton%%%")), step_tip.isOpen() || step_tip.open(addDropDown)
                        },
                        finish: function() {
                            addDropDown.css("z-index", "auto")
                        }
                    }, this.search_step = {
                        start: function() {
                            headerSearch.css("z-index", boot_1.TM.expose_zindex), step_message.text(language_1.Language.getLang("%%%tutorial_globalsearch%%%")), step_tip.move(headerSearch)
                        },
                        finish: function() {
                            headerSearch.css("z-index", "auto")
                        }
                    }, this.message_input_step = {
                        video_id: "#tutorialMovieMessage",
                        start: function() {
                            boot_1.CS.view.expandChatArea(!0), chatSendToolbar.css("z-index", boot_1.TM.expose_zindex), chatTextArea.css("z-index", boot_1.TM.expose_zindex), step_header.text("メッセージの送信はここからできます"), step_message.text(language_1.Language.getLang("%%%tutorial_send_message%%%")), step_tip.move(chatSendToolbar)
                        },
                        finish: function() {
                            chatSendToolbar.css("z-index", "auto"), chatTextArea.css("z-index", "auto")
                        }
                    }, this.task_step = {
                        video_id: "#tutorialMovieTask",
                        start: function() {
                            subRoomTaskAddArea.css("z-index", boot_1.TM.expose_zindex), step_header.text("タスクの作成はここからできます"), step_message.text(language_1.Language.getLang("%%%tutorial_add_task%%%")), step_tip.move(subRoomTaskAddArea)
                        },
                        finish: function() {
                            subRoomTaskAddArea.css("z-index", "auto")
                        }
                    }, this.contact_step = {
                        video_id: "#tutorialMovieContact",
                        start: function() {
                            openContact.css("z-index", boot_1.TM.expose_zindex), step_header.text("ここからコンタクトを追加できます"), step_message.text("知り合い・取引先のメールアドレスで招待してみてください。チャットワークを利用中の方にはコンタクト申請、未利用の方には新規ユーザーとして招待することができます。"), step_tip.move(openContact)
                        },
                        finish: function() {
                            openContact.css("z-index", "auto")
                        }
                    }, use_bob_phase1 && (this.is_bob_phase1 = use_bob_phase1), addDropDown = $("#_addDropDown"), headerSearch = $("#_headerSearch"), subRoomTaskAddArea = $("#_subRoomTaskAddArea"), chatSendToolbar = $("#_chatSendToolbar"), chatTextArea = $("#_chatTextArea"), step_header = $("#_tutorialHeader"), step_message = $("#_tutorialMessage"), next_button = $("#_tutorialNextButton"), openContact = $("#_openContactWindow"), step_tip = $("#_tutorialStep").cwToolTip({
                        useFloatBox: !1
                    })
                }
                return TutorialView.prototype.handleStart = function() {
                    var self = this;
                    self.tutorial_scenario = self.is_bob_phase1 ? self.bobPhose1Scenario() : self.defaultScenario(), $('<script src="//fast.wistia.com/assets/external/E-v1.js" async><\/script>').appendTo("body"), self.prepareZindex(), self.prepareShowMovieButton(), self.prepareNextButton(), self.prepareStepIndicator(), $("#_expose").fadeIn("slow", function() {
                        self.play()
                    })
                }, TutorialView.prototype.handleNextStep = function() {
                    var self = this;
                    self.getCurrentStep().finish(), self.step_index++, self.play(), boot_1.TREASURE.trackEvent("onboarding", "click", {
                        label: "onboarding_t" + self.step_index + "_2"
                    })
                }, TutorialView.prototype.handleFinish = function() {
                    var self = this;
                    self.getCurrentStep().finish(), step_tip.close(), subRoomTaskAddArea.css("z-index", "auto"), self.resumeZindex(), $("#_expose").fadeOut("slow"), boot_1.TREASURE.trackEvent("onboarding", "click", {
                        label: "onboarding_t4_2"
                    })
                }, TutorialView.prototype.defaultScenario = function() {
                    var self = this;
                    return [self.room_create_step, self.search_step, self.message_input_step, self.task_step]
                }, TutorialView.prototype.bobPhose1Scenario = function() {
                    var self = this;
                    return [self.room_create_step, self.message_input_step, self.task_step, self.contact_step]
                }, TutorialView.prototype.play = function() {
                    var self = this;
                    self.getCurrentStep().start(), $(".tutorialStepIndicator .circle").removeClass("active"), $(".tutorialStepIndicator .circle").eq(self.step_index).addClass("active"), self.tutorial_scenario.length === self.step_index + 1 && (self.is_bob_phase1 ? (next_button.find(".label").text("使いはじめる"), next_button.off("click"), next_button.on("click", self.handleFinish)) : next_button.cwButton().setOption({
                        type: "success",
                        text: language_1.Language.getLang("%%%button_complete%%%"),
                        click: self.handleFinish
                    }))
                }, TutorialView.prototype.getCurrentStep = function() {
                    var self = this;
                    return self.tutorial_scenario[self.step_index]
                }, TutorialView.prototype.prepareNextButton = function() {
                    var self = this;
                    self.is_bob_phase1 ? next_button.on("click", self.handleNextStep) : next_button.cwButton({
                        type: "primary",
                        click: self.handleNextStep
                    })
                }, TutorialView.prototype.prepareZindex = function() {
                    var self = this;
                    for (var id in self.zindex_avoid) {
                        var area = $C(id);
                        self.zindex_avoid[id] = area.css("z-index"), area.css("z-index", "auto")
                    }
                }, TutorialView.prototype.resumeZindex = function() {
                    var self = this;
                    for (var id in self.zindex_avoid) $C(id).css("z-index", self.zindex_avoid[id])
                }, TutorialView.prototype.prepareShowMovieButton = function() {
                    var self = this,
                        show_movie = function() {
                            var i = self.step_index + 1;
                            boot_1.TREASURE.trackEvent("onboarding", "click", {
                                label: "onboarding_t" + i + "_1"
                            });
                            var step = self.getCurrentStep();
                            $(step.video_id).children().click()
                        },
                        show_movie_button = $("#_tutorialShowMovieButton");
                    show_movie_button.length > 0 && show_movie_button.cwButton({
                        type: "primary",
                        click: show_movie
                    })
                }, TutorialView.prototype.prepareStepIndicator = function() {
                    var self = this;
                    $(".tutorialStepIndicator").html("").append(self.tutorial_scenario.map(function() {
                        return $("<span>").addClass("circle")
                    }))
                }, TutorialView
            }();
        exports.TutorialView = TutorialView
    }, {
        "../controller/boot": 340,
        "../lib/language": 384
    }]
}, {}, [324]);